  I0513 18:47:05.310532      19 e2e.go:109] Starting e2e run "1efc8422-a312-4f5d-a85f-65948e7420c3" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1715626024 - will randomize all specs

Will run 402 of 7197 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0513 18:47:05.686451 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 18:47:05.687804 19 helper.go:48] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0513 18:47:06.465377 19 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0513 18:47:06.470853 19 e2e.go:153] 4 / 4 pods ready in namespace 'kube-system' in daemonset 'svclb-traefik-d628025f' (0 seconds elapsed)
  I0513 18:47:06.470976 19 e2e.go:245] e2e test version: v1.30.0
  I0513 18:47:06.472340 19 e2e.go:254] kube-apiserver version: v1.30.0+k3s1
  I0513 18:47:06.472477 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 18:47:06.477423 19 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.791 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 05/13/24 18:47:06.769
  I0513 18:47:06.769777 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename container-runtime @ 05/13/24 18:47:06.77
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:47:07.313
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:47:07.318
  STEP: create the container @ 05/13/24 18:47:07.323
  W0513 18:47:07.364466      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 05/13/24 18:47:07.364
  STEP: get the container status @ 05/13/24 18:47:32.4
  STEP: the container should be terminated @ 05/13/24 18:47:32.404
  STEP: the termination message should be set @ 05/13/24 18:47:32.404
  I0513 18:47:32.404583 19 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 05/13/24 18:47:32.404
  I0513 18:47:32.464256 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6743" for this suite. @ 05/13/24 18:47:32.485
• [25.727 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 05/13/24 18:47:32.496
  I0513 18:47:32.496716 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename webhook @ 05/13/24 18:47:32.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:47:32.525
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:47:32.529
  STEP: Setting up server cert @ 05/13/24 18:47:32.588
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/13/24 18:47:33.298
  STEP: Deploying the webhook pod @ 05/13/24 18:47:33.319
  STEP: Wait for the deployment to be ready @ 05/13/24 18:47:33.351
  I0513 18:47:33.395351 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0513 18:47:35.417199 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 18, 47, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 18, 47, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 18, 47, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 18, 47, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 18:47:37.424056 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 18, 47, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 18, 47, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 18, 47, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 18, 47, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 05/13/24 18:47:39.421
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 18:47:39.445
  I0513 18:47:40.446956 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0513 18:47:40.455217 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 05/13/24 18:47:40.979
  STEP: Creating a custom resource that should be denied by the webhook @ 05/13/24 18:47:41.013
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 05/13/24 18:47:43.056
  STEP: Updating the custom resource with disallowed data should be denied @ 05/13/24 18:47:43.073
  STEP: Deleting the custom resource should be denied @ 05/13/24 18:47:43.083
  STEP: Remove the offending key and value from the custom resource data @ 05/13/24 18:47:43.091
  STEP: Deleting the updated custom resource should be successful @ 05/13/24 18:47:43.106
  I0513 18:47:43.757840 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6365" for this suite. @ 05/13/24 18:47:43.762
  STEP: Destroying namespace "webhook-markers-4772" for this suite. @ 05/13/24 18:47:43.78
• [11.298 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:103
  STEP: Creating a kubernetes client @ 05/13/24 18:47:43.795
  I0513 18:47:43.795279 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename resourcequota @ 05/13/24 18:47:43.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:47:44.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:47:44.301
  STEP: Counting existing ResourceQuota @ 05/13/24 18:47:44.307
  STEP: Creating a ResourceQuota @ 05/13/24 18:47:49.674
  STEP: Ensuring resource quota status is calculated @ 05/13/24 18:47:49.685
  STEP: Creating a Service @ 05/13/24 18:47:51.693
  STEP: Creating a NodePort Service @ 05/13/24 18:47:51.748
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 05/13/24 18:47:51.807
  STEP: Ensuring resource quota status captures service creation @ 05/13/24 18:47:51.863
  STEP: Deleting Services @ 05/13/24 18:47:53.868
  STEP: Ensuring resource quota status released usage @ 05/13/24 18:47:53.976
  I0513 18:47:55.983459 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2005" for this suite. @ 05/13/24 18:47:55.991
• [12.210 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 05/13/24 18:47:56.007
  I0513 18:47:56.007174 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename emptydir @ 05/13/24 18:47:56.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:47:56.05
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:47:56.056
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 05/13/24 18:47:56.071
  STEP: Saw pod success @ 05/13/24 18:48:00.148
  I0513 18:48:00.152882 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod pod-4e58d2ea-34a1-4490-8e5d-dad6e8d3bba3 container test-container: <nil>
  STEP: delete the pod @ 05/13/24 18:48:00.168
  I0513 18:48:00.208845 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-74" for this suite. @ 05/13/24 18:48:00.213
• [4.220 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 05/13/24 18:48:00.229
  I0513 18:48:00.229615 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename subpath @ 05/13/24 18:48:00.23
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:48:00.27
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:48:00.275
  STEP: Setting up data @ 05/13/24 18:48:00.28
  STEP: Creating pod pod-subpath-test-downwardapi-gnbn @ 05/13/24 18:48:00.309
  STEP: Creating a pod to test atomic-volume-subpath @ 05/13/24 18:48:00.309
  STEP: Saw pod success @ 05/13/24 18:48:24.413
  I0513 18:48:24.418009 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod pod-subpath-test-downwardapi-gnbn container test-container-subpath-downwardapi-gnbn: <nil>
  STEP: delete the pod @ 05/13/24 18:48:24.429
  STEP: Deleting pod pod-subpath-test-downwardapi-gnbn @ 05/13/24 18:48:24.476
  I0513 18:48:24.477059 19 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-gnbn" in namespace "subpath-6282"
  I0513 18:48:24.480782 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6282" for this suite. @ 05/13/24 18:48:24.486
• [24.270 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 05/13/24 18:48:24.499
  I0513 18:48:24.499835 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename downward-api @ 05/13/24 18:48:24.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:48:24.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:48:24.545
  STEP: Creating a pod to test downward API volume plugin @ 05/13/24 18:48:24.55
  STEP: Saw pod success @ 05/13/24 18:48:28.601
  I0513 18:48:28.607228 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod downwardapi-volume-28cd32ec-f370-49c9-958f-4fdb8ffffdcb container client-container: <nil>
  STEP: delete the pod @ 05/13/24 18:48:28.614
  I0513 18:48:28.651607 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8828" for this suite. @ 05/13/24 18:48:28.657
• [4.181 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 05/13/24 18:48:28.683
  I0513 18:48:28.683705 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename proxy @ 05/13/24 18:48:28.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:48:28.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:48:28.737
  I0513 18:48:28.741523 19 proxy.go:293] Creating pod...
  I0513 18:48:30.772258 19 proxy.go:317] Creating service...
  I0513 18:48:30.796873 19 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4219/pods/agnhost/proxy/some/path/with/DELETE
  I0513 18:48:30.805820 19 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0513 18:48:30.806069 19 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4219/pods/agnhost/proxy/some/path/with/GET
  I0513 18:48:30.833788 19 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0513 18:48:30.834187 19 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4219/pods/agnhost/proxy/some/path/with/HEAD
  I0513 18:48:30.840377 19 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0513 18:48:30.840433 19 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4219/pods/agnhost/proxy/some/path/with/OPTIONS
  I0513 18:48:30.845393 19 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0513 18:48:30.845440 19 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4219/pods/agnhost/proxy/some/path/with/PATCH
  I0513 18:48:30.850257 19 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0513 18:48:30.851178 19 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4219/pods/agnhost/proxy/some/path/with/POST
  I0513 18:48:30.866932 19 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0513 18:48:30.866994 19 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4219/pods/agnhost/proxy/some/path/with/PUT
  I0513 18:48:30.870873 19 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0513 18:48:30.870929 19 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4219/services/test-service/proxy/some/path/with/DELETE
  I0513 18:48:30.876331 19 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0513 18:48:30.876384 19 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4219/services/test-service/proxy/some/path/with/GET
  I0513 18:48:30.881378 19 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0513 18:48:30.881429 19 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4219/services/test-service/proxy/some/path/with/HEAD
  I0513 18:48:30.887008 19 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0513 18:48:30.887062 19 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4219/services/test-service/proxy/some/path/with/OPTIONS
  I0513 18:48:30.892697 19 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0513 18:48:30.892756 19 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4219/services/test-service/proxy/some/path/with/PATCH
  I0513 18:48:30.899397 19 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0513 18:48:30.899456 19 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4219/services/test-service/proxy/some/path/with/POST
  I0513 18:48:30.905710 19 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0513 18:48:30.905768 19 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4219/services/test-service/proxy/some/path/with/PUT
  I0513 18:48:30.912036 19 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0513 18:48:30.912196 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-4219" for this suite. @ 05/13/24 18:48:30.916
• [2.246 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 05/13/24 18:48:30.93
  I0513 18:48:30.930692 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename apf @ 05/13/24 18:48:30.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:48:31.023
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:48:31.027
  STEP: getting /apis @ 05/13/24 18:48:31.031
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 05/13/24 18:48:31.039
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 05/13/24 18:48:31.04
  STEP: creating @ 05/13/24 18:48:31.043
  STEP: getting @ 05/13/24 18:48:31.09
  STEP: listing @ 05/13/24 18:48:31.094
  STEP: watching @ 05/13/24 18:48:31.098
  I0513 18:48:31.098768 19 flowcontrol.go:620] starting watch
  STEP: patching @ 05/13/24 18:48:31.1
  STEP: updating @ 05/13/24 18:48:31.116
  I0513 18:48:31.132158 19 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 05/13/24 18:48:31.132
  STEP: patching /status @ 05/13/24 18:48:31.136
  STEP: updating /status @ 05/13/24 18:48:31.152
  STEP: deleting @ 05/13/24 18:48:31.165
  STEP: deleting a collection @ 05/13/24 18:48:31.188
  I0513 18:48:31.229197 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-6619" for this suite. @ 05/13/24 18:48:31.233
• [0.314 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 05/13/24 18:48:31.244
  I0513 18:48:31.244802 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename emptydir @ 05/13/24 18:48:31.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:48:31.293
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:48:31.298
  STEP: Creating Pod @ 05/13/24 18:48:31.303
  STEP: Reading file content from the nginx-container @ 05/13/24 18:48:35.351
  I0513 18:48:35.351977 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-4185 PodName:pod-sharedvolume-e8869a9d-19c5-4cbc-8c4e-8b08534f9c3c ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 18:48:35.352004 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 18:48:35.352653 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 18:48:35.352735 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/emptydir-4185/pods/pod-sharedvolume-e8869a9d-19c5-4cbc-8c4e-8b08534f9c3c/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  I0513 18:48:35.412904 19 exec_util.go:106] Exec stderr: ""
  I0513 18:48:35.413030 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4185" for this suite. @ 05/13/24 18:48:35.418
• [4.184 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:78
  STEP: Creating a kubernetes client @ 05/13/24 18:48:35.429
  I0513 18:48:35.429285 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename resourcequota @ 05/13/24 18:48:35.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:48:35.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:48:35.475
  STEP: Counting existing ResourceQuota @ 05/13/24 18:48:35.478
  STEP: Creating a ResourceQuota @ 05/13/24 18:48:40.483
  STEP: Ensuring resource quota status is calculated @ 05/13/24 18:48:40.494
  I0513 18:48:42.507186 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5841" for this suite. @ 05/13/24 18:48:42.514
• [7.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 05/13/24 18:48:42.54
  I0513 18:48:42.540439 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/13/24 18:48:42.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:48:42.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:48:42.592
  I0513 18:48:42.596941 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 18:48:43.192102 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9323" for this suite. @ 05/13/24 18:48:43.23
• [0.714 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 05/13/24 18:48:43.255
  I0513 18:48:43.255431 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename replication-controller @ 05/13/24 18:48:43.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:48:43.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:48:43.313
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 05/13/24 18:48:43.32
  STEP: When a replication controller with a matching selector is created @ 05/13/24 18:48:51.376
  STEP: Then the orphan pod is adopted @ 05/13/24 18:48:51.389
  I0513 18:48:52.398841 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4244" for this suite. @ 05/13/24 18:48:52.408
• [9.168 seconds]
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 05/13/24 18:48:52.423
  I0513 18:48:52.423292 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename init-container @ 05/13/24 18:48:52.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:48:52.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:48:52.485
  STEP: creating the pod @ 05/13/24 18:48:52.49
  I0513 18:48:52.491299 19 init_container.go:499] PodSpec: initContainers in spec.initContainers
  I0513 18:48:56.463009 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-463" for this suite. @ 05/13/24 18:48:56.468
• [4.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 05/13/24 18:48:56.486
  I0513 18:48:56.486756 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename dns @ 05/13/24 18:48:56.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:48:56.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:48:56.53
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 05/13/24 18:48:56.533
  I0513 18:48:56.565034 19 dns.go:419] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-2207  1aab73a4-54fa-4c0b-a07d-1d852968d5d4 36303 0 2024-05-13 18:48:56 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-05-13 18:48:56 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-2vgv2,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.47,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-2vgv2,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 05/13/24 18:48:58.599
  I0513 18:48:58.599542 19 exec_util.go:55] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-2207 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 18:48:58.599567 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 18:48:58.600203 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 18:48:58.600374 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/dns-2207/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 05/13/24 18:48:59.17
  I0513 18:48:59.170440 19 exec_util.go:55] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-2207 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 18:48:59.170479 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 18:48:59.171167 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 18:48:59.171247 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/dns-2207/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0513 18:48:59.441584 19 dns.go:421] Deleting pod test-dns-nameservers...
  I0513 18:48:59.468501 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2207" for this suite. @ 05/13/24 18:48:59.475
• [3.007 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:673
  STEP: Creating a kubernetes client @ 05/13/24 18:48:59.493
  I0513 18:48:59.493585 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename validating-admission-policy @ 05/13/24 18:48:59.494
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:48:59.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:48:59.709
  STEP: getting /apis @ 05/13/24 18:48:59.743
  STEP: getting /apis/admissionregistration.k8s.io @ 05/13/24 18:48:59.752
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 05/13/24 18:48:59.754
  STEP: creating @ 05/13/24 18:48:59.756
  STEP: getting @ 05/13/24 18:48:59.791
  STEP: listing @ 05/13/24 18:48:59.795
  STEP: watching @ 05/13/24 18:48:59.798
  I0513 18:48:59.798614 19 validatingadmissionpolicy.go:768] starting watch
  STEP: patching @ 05/13/24 18:48:59.799
  STEP: updating @ 05/13/24 18:48:59.811
  I0513 18:48:59.841662 19 validatingadmissionpolicy.go:796] waiting for watch events with expected annotations
  STEP: deleting @ 05/13/24 18:48:59.841
  STEP: deleting a collection @ 05/13/24 18:48:59.864
  I0513 18:48:59.895138 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-7774" for this suite. @ 05/13/24 18:48:59.899
• [0.419 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 05/13/24 18:48:59.912
  I0513 18:48:59.912747 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename proxy @ 05/13/24 18:48:59.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:49:00.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:49:00.33
  I0513 18:49:00.333769 19 proxy.go:387] Creating pod...
  I0513 18:49:06.373954 19 proxy.go:411] Creating service...
  I0513 18:49:06.429507 19 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4591/pods/agnhost/proxy?method=DELETE
  I0513 18:49:06.456665 19 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0513 18:49:06.456926 19 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4591/pods/agnhost/proxy?method=OPTIONS
  I0513 18:49:06.462012 19 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0513 18:49:06.462256 19 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4591/pods/agnhost/proxy?method=PATCH
  I0513 18:49:06.466164 19 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0513 18:49:06.466390 19 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4591/pods/agnhost/proxy?method=POST
  I0513 18:49:06.514566 19 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0513 18:49:06.514625 19 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4591/pods/agnhost/proxy?method=PUT
  I0513 18:49:06.519102 19 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0513 18:49:06.519156 19 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4591/services/e2e-proxy-test-service/proxy?method=DELETE
  I0513 18:49:06.534578 19 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0513 18:49:06.534632 19 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4591/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0513 18:49:06.540809 19 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0513 18:49:06.540872 19 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4591/services/e2e-proxy-test-service/proxy?method=PATCH
  I0513 18:49:06.546424 19 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0513 18:49:06.546499 19 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4591/services/e2e-proxy-test-service/proxy?method=POST
  I0513 18:49:06.551775 19 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0513 18:49:06.552178 19 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4591/services/e2e-proxy-test-service/proxy?method=PUT
  I0513 18:49:06.557569 19 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0513 18:49:06.557836 19 proxy.go:479] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4591/pods/agnhost/proxy?method=GET
  I0513 18:49:06.562113 19 proxy.go:487] http.Client request:GET StatusCode:301
  I0513 18:49:06.562158 19 proxy.go:479] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4591/services/e2e-proxy-test-service/proxy?method=GET
  I0513 18:49:06.567895 19 proxy.go:487] http.Client request:GET StatusCode:301
  I0513 18:49:06.567946 19 proxy.go:479] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4591/pods/agnhost/proxy?method=HEAD
  I0513 18:49:06.572276 19 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0513 18:49:06.572338 19 proxy.go:479] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-4591/services/e2e-proxy-test-service/proxy?method=HEAD
  I0513 18:49:06.578398 19 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0513 18:49:06.578638 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-4591" for this suite. @ 05/13/24 18:49:06.585
• [6.686 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 05/13/24 18:49:06.599
  I0513 18:49:06.599556 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename webhook @ 05/13/24 18:49:06.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:49:06.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:49:06.655
  STEP: Setting up server cert @ 05/13/24 18:49:06.709
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/13/24 18:49:07.753
  STEP: Deploying the webhook pod @ 05/13/24 18:49:07.765
  STEP: Wait for the deployment to be ready @ 05/13/24 18:49:07.807
  I0513 18:49:07.814757 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/13/24 18:49:09.826
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 18:49:09.852
  I0513 18:49:10.852787 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0513 18:49:10.869523 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4565-crds.webhook.example.com via the AdmissionRegistration API @ 05/13/24 18:49:11.395
  STEP: Creating a custom resource that should be mutated by the webhook @ 05/13/24 18:49:11.427
  I0513 18:49:14.133399 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-767" for this suite. @ 05/13/24 18:49:14.138
  STEP: Destroying namespace "webhook-markers-5832" for this suite. @ 05/13/24 18:49:14.149
• [7.561 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 05/13/24 18:49:14.16
  I0513 18:49:14.160937 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename projected @ 05/13/24 18:49:14.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:49:14.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:49:14.213
  STEP: Creating a pod to test downward API volume plugin @ 05/13/24 18:49:14.217
  STEP: Saw pod success @ 05/13/24 18:49:18.264
  I0513 18:49:18.267777 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod downwardapi-volume-a41c2174-3af7-41e5-b678-1cae4cc370eb container client-container: <nil>
  STEP: delete the pod @ 05/13/24 18:49:18.275
  I0513 18:49:18.319573 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2721" for this suite. @ 05/13/24 18:49:18.326
• [4.179 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:695
  STEP: Creating a kubernetes client @ 05/13/24 18:49:18.34
  I0513 18:49:18.340189 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename resourcequota @ 05/13/24 18:49:18.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:49:18.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:49:18.763
  STEP: Creating a ResourceQuota with terminating scope @ 05/13/24 18:49:18.766
  STEP: Ensuring ResourceQuota status is calculated @ 05/13/24 18:49:18.777
  STEP: Creating a ResourceQuota with not terminating scope @ 05/13/24 18:49:20.786
  STEP: Ensuring ResourceQuota status is calculated @ 05/13/24 18:49:20.803
  STEP: Creating a long running pod @ 05/13/24 18:49:22.824
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 05/13/24 18:49:22.863
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 05/13/24 18:49:24.876
  STEP: Deleting the pod @ 05/13/24 18:49:26.883
  STEP: Ensuring resource quota status released the pod usage @ 05/13/24 18:49:26.947
  STEP: Creating a terminating pod @ 05/13/24 18:49:28.952
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 05/13/24 18:49:28.978
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 05/13/24 18:49:30.985
  STEP: Deleting the pod @ 05/13/24 18:49:33.001
  STEP: Ensuring resource quota status released the pod usage @ 05/13/24 18:49:33.055
  I0513 18:49:35.061572 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8762" for this suite. @ 05/13/24 18:49:35.067
• [16.743 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 05/13/24 18:49:35.083
  I0513 18:49:35.084047 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/13/24 18:49:35.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:49:35.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:49:35.141
  I0513 18:49:35.146596 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 18:49:38.313521 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6306" for this suite. @ 05/13/24 18:49:38.318
• [3.245 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 05/13/24 18:49:38.328
  I0513 18:49:38.328584 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename secrets @ 05/13/24 18:49:38.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:49:38.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:49:38.364
  STEP: Creating secret with name secret-test-c291ca76-c3f7-4001-aef4-161594f34fdf @ 05/13/24 18:49:38.368
  STEP: Creating a pod to test consume secrets @ 05/13/24 18:49:38.378
  STEP: Saw pod success @ 05/13/24 18:49:42.444
  I0513 18:49:42.451476 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod pod-secrets-cf14d9c9-b7b4-4005-ba77-3329c1e4ab5b container secret-env-test: <nil>
  STEP: delete the pod @ 05/13/24 18:49:42.462
  I0513 18:49:42.509919 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1970" for this suite. @ 05/13/24 18:49:42.518
• [4.211 seconds]
------------------------------
S
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 05/13/24 18:49:42.54
  I0513 18:49:42.540103 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename endpointslice @ 05/13/24 18:49:42.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:49:42.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:49:42.598
  STEP: referencing a single matching pod @ 05/13/24 18:49:46.833
  STEP: referencing matching pods with named port @ 05/13/24 18:49:46.843
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 05/13/24 18:49:46.854
  STEP: recreating EndpointSlices after they've been deleted @ 05/13/24 18:49:46.864
  I0513 18:49:46.903076 19 endpointslice.go:938] EndpointSlice for Service endpointslice-2668/example-named-port not found
  I0513 18:49:48.908024 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-2668" for this suite. @ 05/13/24 18:49:48.913
• [6.389 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 05/13/24 18:49:48.93
  I0513 18:49:48.930548 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename downward-api @ 05/13/24 18:49:48.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:49:48.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:49:48.982
  STEP: Creating a pod to test downward api env vars @ 05/13/24 18:49:48.987
  STEP: Saw pod success @ 05/13/24 18:49:53.051
  I0513 18:49:53.065710 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod downward-api-b9d456d1-2045-4e47-b8db-0a4f6b0e202d container dapi-container: <nil>
  STEP: delete the pod @ 05/13/24 18:49:53.079
  I0513 18:49:53.125248 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4623" for this suite. @ 05/13/24 18:49:53.13
• [4.223 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 05/13/24 18:49:53.153
  I0513 18:49:53.153827 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename secrets @ 05/13/24 18:49:53.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:49:53.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:49:53.193
  STEP: Creating secret with name secret-test-map-2b2b4abb-e9b2-4a94-a481-1dac2333de5d @ 05/13/24 18:49:53.199
  STEP: Creating a pod to test consume secrets @ 05/13/24 18:49:53.215
  STEP: Saw pod success @ 05/13/24 18:49:57.279
  I0513 18:49:57.282995 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod pod-secrets-2e7018ec-2cc2-48a5-8371-d2881b3ca1fb container secret-volume-test: <nil>
  STEP: delete the pod @ 05/13/24 18:49:57.291
  I0513 18:49:57.330933 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7637" for this suite. @ 05/13/24 18:49:57.335
• [4.193 seconds]
------------------------------
S
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 05/13/24 18:49:57.346
  I0513 18:49:57.346699 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename subpath @ 05/13/24 18:49:57.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:49:57.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:49:57.389
  STEP: Setting up data @ 05/13/24 18:49:57.393
  STEP: Creating pod pod-subpath-test-secret-5nq5 @ 05/13/24 18:49:57.419
  STEP: Creating a pod to test atomic-volume-subpath @ 05/13/24 18:49:57.419
  STEP: Saw pod success @ 05/13/24 18:50:21.504
  I0513 18:50:21.509076 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod pod-subpath-test-secret-5nq5 container test-container-subpath-secret-5nq5: <nil>
  STEP: delete the pod @ 05/13/24 18:50:21.521
  STEP: Deleting pod pod-subpath-test-secret-5nq5 @ 05/13/24 18:50:21.557
  I0513 18:50:21.557241 19 delete.go:62] Deleting pod "pod-subpath-test-secret-5nq5" in namespace "subpath-7338"
  I0513 18:50:21.561829 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7338" for this suite. @ 05/13/24 18:50:21.567
• [24.250 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 05/13/24 18:50:21.598
  I0513 18:50:21.598298 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename taint-multiple-pods @ 05/13/24 18:50:21.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:50:21.648
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:50:21.655
  I0513 18:50:21.662168 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0513 18:51:21.663040 19 util.go:400] Waiting for terminating namespaces to be deleted...
  I0513 18:51:21.668187 19 taints.go:150] Starting informer...
  STEP: Starting pods... @ 05/13/24 18:51:21.668
  I0513 18:51:21.909016 19 taints.go:469] Pod1 is running on ip-172-31-11-14.us-east-2.compute.internal. Tainting Node
  I0513 18:51:26.150486 19 taints.go:477] Pod2 is running on ip-172-31-11-14.us-east-2.compute.internal. Tainting Node
  STEP: Trying to apply a taint on the Node @ 05/13/24 18:51:26.15
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/13/24 18:51:26.395
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 05/13/24 18:51:26.477
  I0513 18:51:32.405933 19 taints.go:498] Noticed Pod "taint-eviction-b1" gets evicted.
  I0513 18:51:52.465049 19 taints.go:498] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/13/24 18:51:52.492
  I0513 18:51:52.496486 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-8114" for this suite. @ 05/13/24 18:51:52.503
• [90.953 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 05/13/24 18:51:52.552
  I0513 18:51:52.552645 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename validating-admission-policy @ 05/13/24 18:51:52.554
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:51:52.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:51:52.67
  STEP: creating the policy @ 05/13/24 18:51:52.69
  STEP: waiting until the marker is denied @ 05/13/24 18:51:52.721
  STEP: testing a replicated Deployment to be allowed @ 05/13/24 18:51:53.645
  STEP: testing a non-replicated ReplicaSet not to be denied @ 05/13/24 18:51:53.712
  I0513 18:51:53.928462 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-3681" for this suite. @ 05/13/24 18:51:53.932
• [1.392 seconds]
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 05/13/24 18:51:53.944
  I0513 18:51:53.944716 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename configmap @ 05/13/24 18:51:53.945
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:51:54.027
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:51:54.031
  STEP: Creating configMap with name configmap-test-upd-0536da0c-8d57-4306-8d23-9880ce17a7e2 @ 05/13/24 18:51:54.039
  STEP: Creating the pod @ 05/13/24 18:51:54.049
  STEP: Waiting for pod with text data @ 05/13/24 18:51:56.082
  STEP: Waiting for pod with binary data @ 05/13/24 18:51:56.1
  I0513 18:51:56.115000 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7410" for this suite. @ 05/13/24 18:51:56.128
• [2.197 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 05/13/24 18:51:56.145
  I0513 18:51:56.145551 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename svc-latency @ 05/13/24 18:51:56.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:51:56.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:51:56.208
  I0513 18:51:56.219313 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-4953 @ 05/13/24 18:51:56.22
  I0513 18:51:56.246945      19 runners.go:198] Created replication controller with name: svc-latency-rc, namespace: svc-latency-4953, replica count: 1
  I0513 18:51:57.298622      19 runners.go:198] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0513 18:51:58.299686      19 runners.go:198] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0513 18:51:59.300320      19 runners.go:198] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0513 18:51:59.428789 19 service_latency.go:356] Created: latency-svc-wlnmc
  I0513 18:51:59.463899 19 service_latency.go:363] Got endpoints: latency-svc-wlnmc [62.665615ms]
  I0513 18:51:59.520487 19 service_latency.go:356] Created: latency-svc-8rgjg
  I0513 18:51:59.525424 19 service_latency.go:363] Got endpoints: latency-svc-8rgjg [61.297048ms]
  I0513 18:51:59.603594 19 service_latency.go:356] Created: latency-svc-7rqlz
  I0513 18:51:59.636298 19 service_latency.go:356] Created: latency-svc-lshpp
  I0513 18:51:59.639401 19 service_latency.go:363] Got endpoints: latency-svc-7rqlz [174.969593ms]
  I0513 18:51:59.650736 19 service_latency.go:363] Got endpoints: latency-svc-lshpp [186.057663ms]
  I0513 18:51:59.672644 19 service_latency.go:356] Created: latency-svc-24zqr
  I0513 18:51:59.694582 19 service_latency.go:363] Got endpoints: latency-svc-24zqr [229.68016ms]
  I0513 18:51:59.707044 19 service_latency.go:356] Created: latency-svc-q9d62
  I0513 18:51:59.726127 19 service_latency.go:356] Created: latency-svc-gxdgt
  I0513 18:51:59.742257 19 service_latency.go:363] Got endpoints: latency-svc-q9d62 [277.002935ms]
  I0513 18:51:59.756215 19 service_latency.go:356] Created: latency-svc-fnn86
  I0513 18:51:59.762339 19 service_latency.go:363] Got endpoints: latency-svc-gxdgt [296.862533ms]
  I0513 18:51:59.799732 19 service_latency.go:363] Got endpoints: latency-svc-fnn86 [334.086053ms]
  I0513 18:51:59.800358 19 service_latency.go:356] Created: latency-svc-2bk4v
  I0513 18:51:59.818315 19 service_latency.go:363] Got endpoints: latency-svc-2bk4v [352.499353ms]
  I0513 18:51:59.841039 19 service_latency.go:356] Created: latency-svc-mgc6s
  I0513 18:51:59.844202 19 service_latency.go:363] Got endpoints: latency-svc-mgc6s [378.201114ms]
  I0513 18:51:59.870675 19 service_latency.go:356] Created: latency-svc-7sqz8
  I0513 18:51:59.888967 19 service_latency.go:363] Got endpoints: latency-svc-7sqz8 [422.801537ms]
  I0513 18:51:59.913257 19 service_latency.go:356] Created: latency-svc-pc8f9
  I0513 18:51:59.925493 19 service_latency.go:363] Got endpoints: latency-svc-pc8f9 [459.168276ms]
  I0513 18:51:59.935241 19 service_latency.go:356] Created: latency-svc-ck97m
  I0513 18:51:59.962881 19 service_latency.go:363] Got endpoints: latency-svc-ck97m [496.382086ms]
  I0513 18:51:59.980436 19 service_latency.go:356] Created: latency-svc-bzhts
  I0513 18:52:00.010857 19 service_latency.go:363] Got endpoints: latency-svc-bzhts [544.179003ms]
  I0513 18:52:00.031754 19 service_latency.go:356] Created: latency-svc-5wb6w
  I0513 18:52:00.074199 19 service_latency.go:363] Got endpoints: latency-svc-5wb6w [607.322469ms]
  I0513 18:52:00.079013 19 service_latency.go:356] Created: latency-svc-c2dww
  I0513 18:52:00.100375 19 service_latency.go:363] Got endpoints: latency-svc-c2dww [633.291677ms]
  I0513 18:52:00.137663 19 service_latency.go:356] Created: latency-svc-jfs9v
  I0513 18:52:00.187377 19 service_latency.go:363] Got endpoints: latency-svc-jfs9v [661.674247ms]
  I0513 18:52:00.195918 19 service_latency.go:356] Created: latency-svc-zvcmj
  I0513 18:52:00.213166 19 service_latency.go:363] Got endpoints: latency-svc-zvcmj [573.551999ms]
  I0513 18:52:00.227850 19 service_latency.go:356] Created: latency-svc-t4cn6
  I0513 18:52:00.250871 19 service_latency.go:363] Got endpoints: latency-svc-t4cn6 [600.066991ms]
  I0513 18:52:00.266749 19 service_latency.go:356] Created: latency-svc-czqp2
  I0513 18:52:00.290338 19 service_latency.go:363] Got endpoints: latency-svc-czqp2 [595.687647ms]
  I0513 18:52:00.299597 19 service_latency.go:356] Created: latency-svc-j2cvm
  I0513 18:52:00.333295 19 service_latency.go:356] Created: latency-svc-wqf9s
  I0513 18:52:00.338697 19 service_latency.go:363] Got endpoints: latency-svc-j2cvm [596.378665ms]
  I0513 18:52:00.362485 19 service_latency.go:363] Got endpoints: latency-svc-wqf9s [600.05962ms]
  I0513 18:52:00.380008 19 service_latency.go:356] Created: latency-svc-vdr9j
  I0513 18:52:00.402098 19 service_latency.go:363] Got endpoints: latency-svc-vdr9j [602.31118ms]
  I0513 18:52:00.411478 19 service_latency.go:356] Created: latency-svc-xn4sr
  I0513 18:52:00.440424 19 service_latency.go:363] Got endpoints: latency-svc-xn4sr [622.040944ms]
  I0513 18:52:00.459022 19 service_latency.go:356] Created: latency-svc-c69rc
  I0513 18:52:00.476158 19 service_latency.go:363] Got endpoints: latency-svc-c69rc [631.900881ms]
  I0513 18:52:00.488302 19 service_latency.go:356] Created: latency-svc-nkltx
  I0513 18:52:00.505927 19 service_latency.go:363] Got endpoints: latency-svc-nkltx [616.862018ms]
  I0513 18:52:00.523009 19 service_latency.go:356] Created: latency-svc-6zr4p
  I0513 18:52:00.544238 19 service_latency.go:363] Got endpoints: latency-svc-6zr4p [617.350392ms]
  I0513 18:52:00.561374 19 service_latency.go:356] Created: latency-svc-zqg24
  I0513 18:52:00.588121 19 service_latency.go:363] Got endpoints: latency-svc-zqg24 [625.148915ms]
  I0513 18:52:00.601579 19 service_latency.go:356] Created: latency-svc-lfm9x
  I0513 18:52:00.626207 19 service_latency.go:363] Got endpoints: latency-svc-lfm9x [615.043342ms]
  I0513 18:52:00.635065 19 service_latency.go:356] Created: latency-svc-tpm8d
  I0513 18:52:00.659257 19 service_latency.go:363] Got endpoints: latency-svc-tpm8d [584.880314ms]
  I0513 18:52:00.672837 19 service_latency.go:356] Created: latency-svc-2fsf7
  I0513 18:52:00.699685 19 service_latency.go:363] Got endpoints: latency-svc-2fsf7 [599.148707ms]
  I0513 18:52:00.718488 19 service_latency.go:356] Created: latency-svc-qhm67
  I0513 18:52:00.748518 19 service_latency.go:363] Got endpoints: latency-svc-qhm67 [560.890279ms]
  I0513 18:52:00.758826 19 service_latency.go:356] Created: latency-svc-rzppc
  I0513 18:52:00.788960 19 service_latency.go:363] Got endpoints: latency-svc-rzppc [575.728986ms]
  I0513 18:52:00.800077 19 service_latency.go:356] Created: latency-svc-f8rh5
  I0513 18:52:00.819595 19 service_latency.go:363] Got endpoints: latency-svc-f8rh5 [568.640712ms]
  I0513 18:52:00.842386 19 service_latency.go:356] Created: latency-svc-d6m56
  I0513 18:52:00.855630 19 service_latency.go:363] Got endpoints: latency-svc-d6m56 [565.217001ms]
  I0513 18:52:00.877007 19 service_latency.go:356] Created: latency-svc-hwm9d
  I0513 18:52:00.897565 19 service_latency.go:363] Got endpoints: latency-svc-hwm9d [558.815285ms]
  I0513 18:52:00.904525 19 service_latency.go:356] Created: latency-svc-rrp64
  I0513 18:52:00.925604 19 service_latency.go:363] Got endpoints: latency-svc-rrp64 [562.913741ms]
  I0513 18:52:00.958573 19 service_latency.go:356] Created: latency-svc-qhcjk
  I0513 18:52:00.975454 19 service_latency.go:363] Got endpoints: latency-svc-qhcjk [573.290802ms]
  I0513 18:52:00.992900 19 service_latency.go:356] Created: latency-svc-jf5nj
  I0513 18:52:01.020575 19 service_latency.go:363] Got endpoints: latency-svc-jf5nj [579.639997ms]
  I0513 18:52:01.041394 19 service_latency.go:356] Created: latency-svc-dxw42
  I0513 18:52:01.062299 19 service_latency.go:363] Got endpoints: latency-svc-dxw42 [586.077015ms]
  I0513 18:52:01.076129 19 service_latency.go:356] Created: latency-svc-6dpqx
  I0513 18:52:01.091640 19 service_latency.go:363] Got endpoints: latency-svc-6dpqx [585.643865ms]
  I0513 18:52:01.113259 19 service_latency.go:356] Created: latency-svc-zc42s
  I0513 18:52:01.139211 19 service_latency.go:363] Got endpoints: latency-svc-zc42s [594.906296ms]
  I0513 18:52:01.152140 19 service_latency.go:356] Created: latency-svc-8whbm
  I0513 18:52:01.181248 19 service_latency.go:363] Got endpoints: latency-svc-8whbm [593.052188ms]
  I0513 18:52:01.194186 19 service_latency.go:356] Created: latency-svc-fr4ww
  I0513 18:52:01.227898 19 service_latency.go:363] Got endpoints: latency-svc-fr4ww [601.628422ms]
  I0513 18:52:01.232612 19 service_latency.go:356] Created: latency-svc-5rfq9
  I0513 18:52:01.265459 19 service_latency.go:363] Got endpoints: latency-svc-5rfq9 [605.285158ms]
  I0513 18:52:01.277277 19 service_latency.go:356] Created: latency-svc-fxsc9
  I0513 18:52:01.298643 19 service_latency.go:363] Got endpoints: latency-svc-fxsc9 [598.88993ms]
  I0513 18:52:01.305946 19 service_latency.go:356] Created: latency-svc-lg7sr
  I0513 18:52:01.334867 19 service_latency.go:363] Got endpoints: latency-svc-lg7sr [586.169219ms]
  I0513 18:52:01.348537 19 service_latency.go:356] Created: latency-svc-pzzn8
  I0513 18:52:01.413694 19 service_latency.go:363] Got endpoints: latency-svc-pzzn8 [624.490988ms]
  I0513 18:52:01.427530 19 service_latency.go:356] Created: latency-svc-xdj6x
  I0513 18:52:01.452158 19 service_latency.go:363] Got endpoints: latency-svc-xdj6x [632.490516ms]
  I0513 18:52:01.492689 19 service_latency.go:356] Created: latency-svc-tch69
  I0513 18:52:01.525350 19 service_latency.go:363] Got endpoints: latency-svc-tch69 [669.481031ms]
  I0513 18:52:01.550299 19 service_latency.go:356] Created: latency-svc-7wzdh
  I0513 18:52:01.566588 19 service_latency.go:363] Got endpoints: latency-svc-7wzdh [668.853414ms]
  I0513 18:52:01.582853 19 service_latency.go:356] Created: latency-svc-j9n5x
  I0513 18:52:01.609711 19 service_latency.go:363] Got endpoints: latency-svc-j9n5x [684.045381ms]
  I0513 18:52:01.627571 19 service_latency.go:356] Created: latency-svc-w4z4r
  I0513 18:52:01.645740 19 service_latency.go:363] Got endpoints: latency-svc-w4z4r [669.990315ms]
  I0513 18:52:01.659656 19 service_latency.go:356] Created: latency-svc-4czr6
  I0513 18:52:01.692908 19 service_latency.go:363] Got endpoints: latency-svc-4czr6 [672.262874ms]
  I0513 18:52:01.701260 19 service_latency.go:356] Created: latency-svc-dts68
  I0513 18:52:01.725688 19 service_latency.go:363] Got endpoints: latency-svc-dts68 [663.173637ms]
  I0513 18:52:01.737234 19 service_latency.go:356] Created: latency-svc-9dkq7
  I0513 18:52:01.756817 19 service_latency.go:363] Got endpoints: latency-svc-9dkq7 [665.107048ms]
  I0513 18:52:01.774406 19 service_latency.go:356] Created: latency-svc-vs4gp
  I0513 18:52:01.799129 19 service_latency.go:363] Got endpoints: latency-svc-vs4gp [659.844391ms]
  I0513 18:52:01.810991 19 service_latency.go:356] Created: latency-svc-kzwnj
  I0513 18:52:01.829291 19 service_latency.go:363] Got endpoints: latency-svc-kzwnj [647.849638ms]
  I0513 18:52:01.850577 19 service_latency.go:356] Created: latency-svc-zvrhl
  I0513 18:52:01.876864 19 service_latency.go:363] Got endpoints: latency-svc-zvrhl [648.748641ms]
  I0513 18:52:01.886756 19 service_latency.go:356] Created: latency-svc-b6m6r
  I0513 18:52:01.894038 19 service_latency.go:363] Got endpoints: latency-svc-b6m6r [628.334208ms]
  I0513 18:52:01.923851 19 service_latency.go:356] Created: latency-svc-b59pg
  I0513 18:52:01.949362 19 service_latency.go:363] Got endpoints: latency-svc-b59pg [650.657411ms]
  I0513 18:52:01.961142 19 service_latency.go:356] Created: latency-svc-f76zg
  I0513 18:52:01.982613 19 service_latency.go:363] Got endpoints: latency-svc-f76zg [647.634981ms]
  I0513 18:52:01.995674 19 service_latency.go:356] Created: latency-svc-9z6qc
  I0513 18:52:02.025701 19 service_latency.go:363] Got endpoints: latency-svc-9z6qc [611.938841ms]
  I0513 18:52:02.034046 19 service_latency.go:356] Created: latency-svc-7xhxm
  I0513 18:52:02.078056 19 service_latency.go:356] Created: latency-svc-mvx7x
  I0513 18:52:02.083407 19 service_latency.go:363] Got endpoints: latency-svc-7xhxm [631.181142ms]
  I0513 18:52:02.112462 19 service_latency.go:363] Got endpoints: latency-svc-mvx7x [587.041021ms]
  I0513 18:52:02.137924 19 service_latency.go:356] Created: latency-svc-6dc7s
  I0513 18:52:02.171783 19 service_latency.go:363] Got endpoints: latency-svc-6dc7s [604.768943ms]
  I0513 18:52:02.174514 19 service_latency.go:356] Created: latency-svc-sgh5x
  I0513 18:52:02.205566 19 service_latency.go:363] Got endpoints: latency-svc-sgh5x [595.78503ms]
  I0513 18:52:02.216134 19 service_latency.go:356] Created: latency-svc-m8cqp
  I0513 18:52:02.232934 19 service_latency.go:363] Got endpoints: latency-svc-m8cqp [587.0095ms]
  I0513 18:52:02.255481 19 service_latency.go:356] Created: latency-svc-g55cg
  I0513 18:52:02.291407 19 service_latency.go:363] Got endpoints: latency-svc-g55cg [598.426699ms]
  I0513 18:52:02.309859 19 service_latency.go:356] Created: latency-svc-kkppt
  I0513 18:52:02.329440 19 service_latency.go:363] Got endpoints: latency-svc-kkppt [603.539971ms]
  I0513 18:52:02.343776 19 service_latency.go:356] Created: latency-svc-sgdcb
  I0513 18:52:02.375441 19 service_latency.go:363] Got endpoints: latency-svc-sgdcb [618.413219ms]
  I0513 18:52:02.388986 19 service_latency.go:356] Created: latency-svc-frj59
  I0513 18:52:02.418701 19 service_latency.go:363] Got endpoints: latency-svc-frj59 [619.510948ms]
  I0513 18:52:02.432208 19 service_latency.go:356] Created: latency-svc-prrmg
  I0513 18:52:02.463642 19 service_latency.go:363] Got endpoints: latency-svc-prrmg [634.151449ms]
  I0513 18:52:02.489508 19 service_latency.go:356] Created: latency-svc-rlnld
  I0513 18:52:02.527087 19 service_latency.go:363] Got endpoints: latency-svc-rlnld [650.144817ms]
  I0513 18:52:02.557693 19 service_latency.go:356] Created: latency-svc-vxtm2
  I0513 18:52:02.587131 19 service_latency.go:363] Got endpoints: latency-svc-vxtm2 [693.026625ms]
  I0513 18:52:02.600825 19 service_latency.go:356] Created: latency-svc-gq6s2
  I0513 18:52:02.617643 19 service_latency.go:363] Got endpoints: latency-svc-gq6s2 [668.217278ms]
  I0513 18:52:02.656418 19 service_latency.go:356] Created: latency-svc-6nbwz
  I0513 18:52:02.675711 19 service_latency.go:363] Got endpoints: latency-svc-6nbwz [693.037066ms]
  I0513 18:52:02.693017 19 service_latency.go:356] Created: latency-svc-jgtjf
  I0513 18:52:02.715140 19 service_latency.go:363] Got endpoints: latency-svc-jgtjf [689.226026ms]
  I0513 18:52:02.765279 19 service_latency.go:356] Created: latency-svc-jl6qb
  I0513 18:52:02.793873 19 service_latency.go:363] Got endpoints: latency-svc-jl6qb [710.399899ms]
  I0513 18:52:02.801220 19 service_latency.go:356] Created: latency-svc-vfpzd
  I0513 18:52:02.834399 19 service_latency.go:356] Created: latency-svc-w58h9
  I0513 18:52:02.844647 19 service_latency.go:363] Got endpoints: latency-svc-vfpzd [731.818117ms]
  I0513 18:52:02.856311 19 service_latency.go:363] Got endpoints: latency-svc-w58h9 [684.339069ms]
  I0513 18:52:02.880157 19 service_latency.go:356] Created: latency-svc-wnksq
  I0513 18:52:02.898432 19 service_latency.go:363] Got endpoints: latency-svc-wnksq [692.79618ms]
  I0513 18:52:02.919960 19 service_latency.go:356] Created: latency-svc-rnt4r
  I0513 18:52:02.943041 19 service_latency.go:363] Got endpoints: latency-svc-rnt4r [709.840094ms]
  I0513 18:52:02.950542 19 service_latency.go:356] Created: latency-svc-tp9pr
  I0513 18:52:02.999121 19 service_latency.go:363] Got endpoints: latency-svc-tp9pr [707.652767ms]
  I0513 18:52:03.013843 19 service_latency.go:356] Created: latency-svc-cdfbd
  I0513 18:52:03.049440 19 service_latency.go:363] Got endpoints: latency-svc-cdfbd [719.844916ms]
  I0513 18:52:03.064903 19 service_latency.go:356] Created: latency-svc-t8phb
  I0513 18:52:03.118135 19 service_latency.go:363] Got endpoints: latency-svc-t8phb [742.532687ms]
  I0513 18:52:03.118451 19 service_latency.go:356] Created: latency-svc-6fdt2
  I0513 18:52:03.145194 19 service_latency.go:363] Got endpoints: latency-svc-6fdt2 [726.342495ms]
  I0513 18:52:03.157338 19 service_latency.go:356] Created: latency-svc-mjwnm
  I0513 18:52:03.195931 19 service_latency.go:363] Got endpoints: latency-svc-mjwnm [732.052783ms]
  I0513 18:52:03.234589 19 service_latency.go:356] Created: latency-svc-lc6gs
  I0513 18:52:03.258063 19 service_latency.go:363] Got endpoints: latency-svc-lc6gs [730.904374ms]
  I0513 18:52:03.271610 19 service_latency.go:356] Created: latency-svc-pckmc
  I0513 18:52:03.297838 19 service_latency.go:363] Got endpoints: latency-svc-pckmc [710.623494ms]
  I0513 18:52:03.311283 19 service_latency.go:356] Created: latency-svc-svmhv
  I0513 18:52:03.350996 19 service_latency.go:363] Got endpoints: latency-svc-svmhv [733.282395ms]
  I0513 18:52:03.352447 19 service_latency.go:356] Created: latency-svc-mltcx
  I0513 18:52:03.371852 19 service_latency.go:363] Got endpoints: latency-svc-mltcx [695.927621ms]
  I0513 18:52:03.381767 19 service_latency.go:356] Created: latency-svc-7fzgz
  I0513 18:52:03.410254 19 service_latency.go:356] Created: latency-svc-tbqd6
  I0513 18:52:03.425253 19 service_latency.go:363] Got endpoints: latency-svc-7fzgz [709.891325ms]
  I0513 18:52:03.500292 19 service_latency.go:363] Got endpoints: latency-svc-tbqd6 [706.329012ms]
  I0513 18:52:03.532217 19 service_latency.go:356] Created: latency-svc-pxtpf
  I0513 18:52:03.551167 19 service_latency.go:363] Got endpoints: latency-svc-pxtpf [706.412894ms]
  I0513 18:52:03.586231 19 service_latency.go:356] Created: latency-svc-7q87q
  I0513 18:52:03.613492 19 service_latency.go:363] Got endpoints: latency-svc-7q87q [757.115247ms]
  I0513 18:52:03.630612 19 service_latency.go:356] Created: latency-svc-c2ncp
  I0513 18:52:03.639122 19 service_latency.go:363] Got endpoints: latency-svc-c2ncp [740.481503ms]
  I0513 18:52:03.671735 19 service_latency.go:356] Created: latency-svc-svrjx
  I0513 18:52:03.709072 19 service_latency.go:363] Got endpoints: latency-svc-svrjx [765.962868ms]
  I0513 18:52:03.734884 19 service_latency.go:356] Created: latency-svc-llf8k
  I0513 18:52:03.760242 19 service_latency.go:356] Created: latency-svc-465m5
  I0513 18:52:03.781723 19 service_latency.go:363] Got endpoints: latency-svc-llf8k [782.53347ms]
  I0513 18:52:03.796781 19 service_latency.go:356] Created: latency-svc-bjfxk
  I0513 18:52:03.801842 19 service_latency.go:363] Got endpoints: latency-svc-465m5 [752.331253ms]
  I0513 18:52:03.846785 19 service_latency.go:363] Got endpoints: latency-svc-bjfxk [728.196383ms]
  I0513 18:52:03.857809 19 service_latency.go:356] Created: latency-svc-67khf
  I0513 18:52:03.879600 19 service_latency.go:356] Created: latency-svc-x9d2g
  I0513 18:52:03.897837 19 service_latency.go:363] Got endpoints: latency-svc-67khf [752.438116ms]
  I0513 18:52:03.922451 19 service_latency.go:356] Created: latency-svc-lhsdg
  I0513 18:52:03.951312 19 service_latency.go:363] Got endpoints: latency-svc-x9d2g [755.213168ms]
  I0513 18:52:03.961858 19 service_latency.go:363] Got endpoints: latency-svc-lhsdg [703.729404ms]
  I0513 18:52:03.983226 19 service_latency.go:356] Created: latency-svc-fmxcm
  I0513 18:52:04.013319 19 service_latency.go:363] Got endpoints: latency-svc-fmxcm [715.241546ms]
  I0513 18:52:04.038230 19 service_latency.go:356] Created: latency-svc-qksvr
  I0513 18:52:04.083535 19 service_latency.go:363] Got endpoints: latency-svc-qksvr [732.356292ms]
  I0513 18:52:04.086760 19 service_latency.go:356] Created: latency-svc-86qts
  I0513 18:52:04.108420 19 service_latency.go:363] Got endpoints: latency-svc-86qts [736.50059ms]
  I0513 18:52:04.123240 19 service_latency.go:356] Created: latency-svc-hvgdk
  I0513 18:52:04.144409 19 service_latency.go:363] Got endpoints: latency-svc-hvgdk [719.091156ms]
  I0513 18:52:04.156318 19 service_latency.go:356] Created: latency-svc-cx9w5
  I0513 18:52:04.186075 19 service_latency.go:363] Got endpoints: latency-svc-cx9w5 [685.507879ms]
  I0513 18:52:04.193858 19 service_latency.go:356] Created: latency-svc-rzr5s
  I0513 18:52:04.235729 19 service_latency.go:356] Created: latency-svc-w9q79
  I0513 18:52:04.236614 19 service_latency.go:363] Got endpoints: latency-svc-rzr5s [685.379577ms]
  I0513 18:52:04.247436 19 service_latency.go:363] Got endpoints: latency-svc-w9q79 [633.875543ms]
  I0513 18:52:04.273319 19 service_latency.go:356] Created: latency-svc-mzhlh
  I0513 18:52:04.276835 19 service_latency.go:363] Got endpoints: latency-svc-mzhlh [637.513708ms]
  I0513 18:52:04.329717 19 service_latency.go:356] Created: latency-svc-p6n7t
  I0513 18:52:04.357349 19 service_latency.go:363] Got endpoints: latency-svc-p6n7t [648.183756ms]
  I0513 18:52:04.371790 19 service_latency.go:356] Created: latency-svc-t6s46
  I0513 18:52:04.386210 19 service_latency.go:363] Got endpoints: latency-svc-t6s46 [604.422664ms]
  I0513 18:52:04.429628 19 service_latency.go:356] Created: latency-svc-rm5pk
  I0513 18:52:04.448274 19 service_latency.go:363] Got endpoints: latency-svc-rm5pk [646.380839ms]
  I0513 18:52:04.460381 19 service_latency.go:356] Created: latency-svc-4c8c6
  I0513 18:52:04.502126 19 service_latency.go:363] Got endpoints: latency-svc-4c8c6 [655.273811ms]
  I0513 18:52:04.502749 19 service_latency.go:356] Created: latency-svc-5r7mp
  I0513 18:52:04.528386 19 service_latency.go:363] Got endpoints: latency-svc-5r7mp [630.487854ms]
  I0513 18:52:04.578362 19 service_latency.go:356] Created: latency-svc-xdbtd
  I0513 18:52:04.585580 19 service_latency.go:363] Got endpoints: latency-svc-xdbtd [634.202381ms]
  I0513 18:52:04.622185 19 service_latency.go:356] Created: latency-svc-cbdpl
  I0513 18:52:04.628515 19 service_latency.go:363] Got endpoints: latency-svc-cbdpl [666.590626ms]
  I0513 18:52:04.674432 19 service_latency.go:356] Created: latency-svc-w2wg8
  I0513 18:52:04.680951 19 service_latency.go:363] Got endpoints: latency-svc-w2wg8 [666.661398ms]
  I0513 18:52:04.709616 19 service_latency.go:356] Created: latency-svc-6p2rw
  I0513 18:52:05.256664 19 service_latency.go:363] Got endpoints: latency-svc-6p2rw [1.173074847s]
  I0513 18:52:05.285686 19 service_latency.go:356] Created: latency-svc-w6mjx
  I0513 18:52:05.309944 19 service_latency.go:363] Got endpoints: latency-svc-w6mjx [1.201317613s]
  I0513 18:52:05.322427 19 service_latency.go:356] Created: latency-svc-nc6cs
  I0513 18:52:05.338342 19 service_latency.go:363] Got endpoints: latency-svc-nc6cs [1.193794597s]
  I0513 18:52:05.347983 19 service_latency.go:356] Created: latency-svc-tjqb5
  I0513 18:52:05.371620 19 service_latency.go:363] Got endpoints: latency-svc-tjqb5 [1.18549599s]
  I0513 18:52:05.379911 19 service_latency.go:356] Created: latency-svc-xmrx9
  I0513 18:52:05.426800 19 service_latency.go:363] Got endpoints: latency-svc-xmrx9 [1.190134931s]
  I0513 18:52:05.427747 19 service_latency.go:356] Created: latency-svc-xmllz
  I0513 18:52:05.446625 19 service_latency.go:363] Got endpoints: latency-svc-xmllz [1.198970432s]
  I0513 18:52:05.468800 19 service_latency.go:356] Created: latency-svc-tpqmd
  I0513 18:52:05.490322 19 service_latency.go:363] Got endpoints: latency-svc-tpqmd [1.213173242s]
  I0513 18:52:05.507580 19 service_latency.go:356] Created: latency-svc-mmm2t
  I0513 18:52:05.521893 19 service_latency.go:363] Got endpoints: latency-svc-mmm2t [1.164475902s]
  I0513 18:52:05.543378 19 service_latency.go:356] Created: latency-svc-l5plr
  I0513 18:52:05.580643 19 service_latency.go:363] Got endpoints: latency-svc-l5plr [1.19434377s]
  I0513 18:52:05.597447 19 service_latency.go:356] Created: latency-svc-8l2hs
  I0513 18:52:05.618512 19 service_latency.go:356] Created: latency-svc-9x56h
  I0513 18:52:05.640258 19 service_latency.go:356] Created: latency-svc-zh44k
  I0513 18:52:05.677927 19 service_latency.go:363] Got endpoints: latency-svc-8l2hs [1.22959637s]
  I0513 18:52:05.678060 19 service_latency.go:363] Got endpoints: latency-svc-9x56h [1.175660134s]
  I0513 18:52:05.686483 19 service_latency.go:363] Got endpoints: latency-svc-zh44k [1.157952462s]
  I0513 18:52:05.694333 19 service_latency.go:356] Created: latency-svc-hpj2t
  I0513 18:52:05.728912 19 service_latency.go:363] Got endpoints: latency-svc-hpj2t [1.143247789s]
  I0513 18:52:05.729038 19 service_latency.go:356] Created: latency-svc-4drfd
  I0513 18:52:05.747458 19 service_latency.go:363] Got endpoints: latency-svc-4drfd [1.118877692s]
  I0513 18:52:05.783280 19 service_latency.go:356] Created: latency-svc-wmbb6
  I0513 18:52:05.816545 19 service_latency.go:363] Got endpoints: latency-svc-wmbb6 [1.135410043s]
  I0513 18:52:06.105850 19 service_latency.go:356] Created: latency-svc-mth4l
  I0513 18:52:06.111128 19 service_latency.go:356] Created: latency-svc-zrg6d
  I0513 18:52:06.154093 19 service_latency.go:356] Created: latency-svc-mjhzb
  I0513 18:52:06.154346 19 service_latency.go:356] Created: latency-svc-npdfs
  I0513 18:52:06.154447 19 service_latency.go:356] Created: latency-svc-psspf
  I0513 18:52:06.154093 19 service_latency.go:356] Created: latency-svc-62rn8
  I0513 18:52:06.154587 19 service_latency.go:356] Created: latency-svc-gsf2g
  I0513 18:52:06.154815 19 service_latency.go:356] Created: latency-svc-ncxwp
  I0513 18:52:06.155123 19 service_latency.go:356] Created: latency-svc-v579q
  I0513 18:52:06.155366 19 service_latency.go:356] Created: latency-svc-kjhxg
  I0513 18:52:06.155588 19 service_latency.go:356] Created: latency-svc-85jqp
  I0513 18:52:06.155350 19 service_latency.go:356] Created: latency-svc-9cb72
  I0513 18:52:06.155136 19 service_latency.go:356] Created: latency-svc-jztqg
  I0513 18:52:06.155623 19 service_latency.go:356] Created: latency-svc-xd64m
  I0513 18:52:06.154929 19 service_latency.go:356] Created: latency-svc-8fzvr
  I0513 18:52:06.158138 19 service_latency.go:363] Got endpoints: latency-svc-mth4l [901.39843ms]
  I0513 18:52:06.158205 19 service_latency.go:363] Got endpoints: latency-svc-zrg6d [341.506168ms]
  I0513 18:52:06.159678 19 service_latency.go:363] Got endpoints: latency-svc-npdfs [669.253496ms]
  I0513 18:52:06.174441 19 service_latency.go:363] Got endpoints: latency-svc-gsf2g [652.482158ms]
  I0513 18:52:06.175605 19 service_latency.go:363] Got endpoints: latency-svc-v579q [594.895376ms]
  I0513 18:52:06.175920 19 service_latency.go:363] Got endpoints: latency-svc-62rn8 [837.516815ms]
  I0513 18:52:06.212657 19 service_latency.go:363] Got endpoints: latency-svc-mjhzb [534.439029ms]
  I0513 18:52:06.212758 19 service_latency.go:363] Got endpoints: latency-svc-psspf [534.430798ms]
  I0513 18:52:06.212777 19 service_latency.go:363] Got endpoints: latency-svc-kjhxg [840.920043ms]
  I0513 18:52:06.223828 19 service_latency.go:363] Got endpoints: latency-svc-ncxwp [913.64019ms]
  I0513 18:52:06.224176 19 service_latency.go:363] Got endpoints: latency-svc-xd64m [796.941966ms]
  I0513 18:52:06.241560 19 service_latency.go:363] Got endpoints: latency-svc-85jqp [512.420864ms]
  I0513 18:52:06.243174 19 service_latency.go:363] Got endpoints: latency-svc-jztqg [796.32765ms]
  I0513 18:52:06.243290 19 service_latency.go:363] Got endpoints: latency-svc-8fzvr [556.740701ms]
  I0513 18:52:06.244794 19 service_latency.go:356] Created: latency-svc-2nnzx
  I0513 18:52:06.266277 19 service_latency.go:363] Got endpoints: latency-svc-9cb72 [518.741059ms]
  I0513 18:52:06.287847 19 service_latency.go:363] Got endpoints: latency-svc-2nnzx [129.562799ms]
  I0513 18:52:06.288730 19 service_latency.go:356] Created: latency-svc-c47zb
  I0513 18:52:06.300554 19 service_latency.go:363] Got endpoints: latency-svc-c47zb [141.996983ms]
  I0513 18:52:06.322877 19 service_latency.go:356] Created: latency-svc-kq4sv
  I0513 18:52:06.356585 19 service_latency.go:363] Got endpoints: latency-svc-kq4sv [196.859524ms]
  I0513 18:52:06.365560 19 service_latency.go:356] Created: latency-svc-pfw2x
  I0513 18:52:06.384513 19 service_latency.go:363] Got endpoints: latency-svc-pfw2x [209.997377ms]
  I0513 18:52:06.398292 19 service_latency.go:356] Created: latency-svc-2lvc8
  I0513 18:52:06.421971 19 service_latency.go:363] Got endpoints: latency-svc-2lvc8 [246.299944ms]
  I0513 18:52:06.435475 19 service_latency.go:356] Created: latency-svc-x89t9
  I0513 18:52:06.464281 19 service_latency.go:363] Got endpoints: latency-svc-x89t9 [288.317249ms]
  I0513 18:52:06.475958 19 service_latency.go:356] Created: latency-svc-mb9mz
  I0513 18:52:06.506493 19 service_latency.go:363] Got endpoints: latency-svc-mb9mz [293.563816ms]
  I0513 18:52:06.515789 19 service_latency.go:356] Created: latency-svc-b7tzj
  I0513 18:52:06.551078 19 service_latency.go:363] Got endpoints: latency-svc-b7tzj [337.869162ms]
  I0513 18:52:06.578396 19 service_latency.go:356] Created: latency-svc-x8dp5
  I0513 18:52:06.579755 19 service_latency.go:363] Got endpoints: latency-svc-x8dp5 [366.716684ms]
  I0513 18:52:06.638083 19 service_latency.go:356] Created: latency-svc-zdb2m
  I0513 18:52:06.642575 19 service_latency.go:363] Got endpoints: latency-svc-zdb2m [418.351962ms]
  I0513 18:52:06.682949 19 service_latency.go:356] Created: latency-svc-xkrk6
  I0513 18:52:06.704114 19 service_latency.go:363] Got endpoints: latency-svc-xkrk6 [480.140393ms]
  I0513 18:52:06.714792 19 service_latency.go:356] Created: latency-svc-k5bxk
  I0513 18:52:06.731250 19 service_latency.go:363] Got endpoints: latency-svc-k5bxk [489.415474ms]
  I0513 18:52:06.768751 19 service_latency.go:356] Created: latency-svc-7rw74
  I0513 18:52:06.808244 19 service_latency.go:356] Created: latency-svc-2skm8
  I0513 18:52:06.820944 19 service_latency.go:363] Got endpoints: latency-svc-7rw74 [577.280807ms]
  I0513 18:52:06.846515 19 service_latency.go:356] Created: latency-svc-z6pfv
  I0513 18:52:06.846896 19 service_latency.go:363] Got endpoints: latency-svc-2skm8 [603.321676ms]
  I0513 18:52:06.872636 19 service_latency.go:363] Got endpoints: latency-svc-z6pfv [606.258092ms]
  I0513 18:52:06.881397 19 service_latency.go:356] Created: latency-svc-7zwxl
  I0513 18:52:06.909542 19 service_latency.go:363] Got endpoints: latency-svc-7zwxl [621.621053ms]
  I0513 18:52:06.916460 19 service_latency.go:356] Created: latency-svc-lprhw
  I0513 18:52:06.942085 19 service_latency.go:363] Got endpoints: latency-svc-lprhw [641.468851ms]
  I0513 18:52:06.948545 19 service_latency.go:356] Created: latency-svc-fmzlk
  I0513 18:52:06.990864 19 service_latency.go:363] Got endpoints: latency-svc-fmzlk [634.042397ms]
  I0513 18:52:07.012418 19 service_latency.go:356] Created: latency-svc-vmw74
  I0513 18:52:07.022742 19 service_latency.go:363] Got endpoints: latency-svc-vmw74 [638.028602ms]
  I0513 18:52:07.043044 19 service_latency.go:356] Created: latency-svc-l8vz7
  I0513 18:52:07.070848 19 service_latency.go:363] Got endpoints: latency-svc-l8vz7 [648.634638ms]
  I0513 18:52:07.112023 19 service_latency.go:356] Created: latency-svc-wk9j2
  I0513 18:52:07.113033 19 service_latency.go:363] Got endpoints: latency-svc-wk9j2 [648.108424ms]
  I0513 18:52:07.140051 19 service_latency.go:356] Created: latency-svc-wgcq4
  I0513 18:52:07.161956 19 service_latency.go:363] Got endpoints: latency-svc-wgcq4 [655.398684ms]
  I0513 18:52:07.172105 19 service_latency.go:356] Created: latency-svc-rl6ch
  I0513 18:52:07.208855 19 service_latency.go:356] Created: latency-svc-qdt4h
  I0513 18:52:07.233460 19 service_latency.go:363] Got endpoints: latency-svc-rl6ch [682.314056ms]
  I0513 18:52:07.241809 19 service_latency.go:363] Got endpoints: latency-svc-qdt4h [661.845642ms]
  I0513 18:52:07.248644 19 service_latency.go:356] Created: latency-svc-27s7t
  I0513 18:52:07.275531 19 service_latency.go:363] Got endpoints: latency-svc-27s7t [632.909298ms]
  I0513 18:52:07.296164 19 service_latency.go:356] Created: latency-svc-8qjq5
  I0513 18:52:07.352536 19 service_latency.go:363] Got endpoints: latency-svc-8qjq5 [648.189436ms]
  I0513 18:52:07.353444 19 service_latency.go:356] Created: latency-svc-5j56d
  I0513 18:52:07.361053 19 service_latency.go:363] Got endpoints: latency-svc-5j56d [629.734675ms]
  I0513 18:52:07.395255 19 service_latency.go:356] Created: latency-svc-rwgcb
  I0513 18:52:07.430578 19 service_latency.go:363] Got endpoints: latency-svc-rwgcb [609.567118ms]
  I0513 18:52:07.431255 19 service_latency.go:356] Created: latency-svc-9kpdz
  I0513 18:52:07.468721 19 service_latency.go:363] Got endpoints: latency-svc-9kpdz [621.778577ms]
  I0513 18:52:07.480323 19 service_latency.go:356] Created: latency-svc-k5bxn
  I0513 18:52:07.509012 19 service_latency.go:363] Got endpoints: latency-svc-k5bxn [636.223964ms]
  I0513 18:52:07.514239 19 service_latency.go:356] Created: latency-svc-n5kpk
  I0513 18:52:07.541767 19 service_latency.go:363] Got endpoints: latency-svc-n5kpk [632.153587ms]
  I0513 18:52:07.562009 19 service_latency.go:356] Created: latency-svc-6zxd7
  I0513 18:52:07.586463 19 service_latency.go:363] Got endpoints: latency-svc-6zxd7 [644.214952ms]
  I0513 18:52:07.599862 19 service_latency.go:356] Created: latency-svc-t446v
  I0513 18:52:07.629800 19 service_latency.go:363] Got endpoints: latency-svc-t446v [638.875752ms]
  I0513 18:52:07.643799 19 service_latency.go:356] Created: latency-svc-8hmkm
  I0513 18:52:07.679732 19 service_latency.go:363] Got endpoints: latency-svc-8hmkm [656.925974ms]
  I0513 18:52:07.682426 19 service_latency.go:356] Created: latency-svc-fvw5q
  I0513 18:52:07.715716 19 service_latency.go:363] Got endpoints: latency-svc-fvw5q [644.679354ms]
  I0513 18:52:07.727709 19 service_latency.go:356] Created: latency-svc-t5wvk
  I0513 18:52:07.770497 19 service_latency.go:363] Got endpoints: latency-svc-t5wvk [657.414706ms]
  I0513 18:52:07.779327 19 service_latency.go:356] Created: latency-svc-6jjdh
  I0513 18:52:07.830304 19 service_latency.go:363] Got endpoints: latency-svc-6jjdh [668.28798ms]
  I0513 18:52:07.831863 19 service_latency.go:356] Created: latency-svc-6lkbd
  I0513 18:52:07.846373 19 service_latency.go:363] Got endpoints: latency-svc-6lkbd [612.848404ms]
  I0513 18:52:07.870361 19 service_latency.go:356] Created: latency-svc-qqbg6
  I0513 18:52:07.891915 19 service_latency.go:356] Created: latency-svc-gzx57
  I0513 18:52:07.949283 19 service_latency.go:356] Created: latency-svc-9c6cb
  I0513 18:52:07.949994 19 service_latency.go:363] Got endpoints: latency-svc-qqbg6 [708.12011ms]
  I0513 18:52:07.950014 19 service_latency.go:363] Got endpoints: latency-svc-gzx57 [674.416131ms]
  I0513 18:52:07.970054 19 service_latency.go:363] Got endpoints: latency-svc-9c6cb [617.370972ms]
  I0513 18:52:07.972599 19 service_latency.go:356] Created: latency-svc-r5swl
  I0513 18:52:07.996857 19 service_latency.go:363] Got endpoints: latency-svc-r5swl [635.652699ms]
  I0513 18:52:08.006415 19 service_latency.go:356] Created: latency-svc-qlg4b
  I0513 18:52:08.037524 19 service_latency.go:363] Got endpoints: latency-svc-qlg4b [606.726145ms]
  I0513 18:52:08.037835 19 service_latency.go:356] Created: latency-svc-gm5j4
  I0513 18:52:08.067777 19 service_latency.go:363] Got endpoints: latency-svc-gm5j4 [598.866ms]
  I0513 18:52:08.078598 19 service_latency.go:356] Created: latency-svc-pn2bc
  I0513 18:52:08.100875 19 service_latency.go:363] Got endpoints: latency-svc-pn2bc [591.806185ms]
  I0513 18:52:08.118676 19 service_latency.go:356] Created: latency-svc-kwml7
  I0513 18:52:08.142101 19 service_latency.go:363] Got endpoints: latency-svc-kwml7 [600.159863ms]
  I0513 18:52:08.159940 19 service_latency.go:356] Created: latency-svc-7ddvv
  I0513 18:52:08.184777 19 service_latency.go:363] Got endpoints: latency-svc-7ddvv [598.244093ms]
  I0513 18:52:08.194701 19 service_latency.go:356] Created: latency-svc-p8qqk
  I0513 18:52:08.227676 19 service_latency.go:363] Got endpoints: latency-svc-p8qqk [597.716459ms]
  I0513 18:52:08.228506 19 service_latency.go:356] Created: latency-svc-g4s8z
  I0513 18:52:08.271251 19 service_latency.go:356] Created: latency-svc-7kbxg
  I0513 18:52:08.280983 19 service_latency.go:363] Got endpoints: latency-svc-g4s8z [601.18319ms]
  I0513 18:52:08.302804 19 service_latency.go:363] Got endpoints: latency-svc-7kbxg [587.004041ms]
  I0513 18:52:08.312011 19 service_latency.go:356] Created: latency-svc-c42rh
  I0513 18:52:08.334339 19 service_latency.go:363] Got endpoints: latency-svc-c42rh [563.778394ms]
  I0513 18:52:08.334526 19 service_latency.go:114] Latencies: [61.297048ms 129.562799ms 141.996983ms 174.969593ms 186.057663ms 196.859524ms 209.997377ms 229.68016ms 246.299944ms 277.002935ms 288.317249ms 293.563816ms 296.862533ms 334.086053ms 337.869162ms 341.506168ms 352.499353ms 366.716684ms 378.201114ms 418.351962ms 422.801537ms 459.168276ms 480.140393ms 489.415474ms 496.382086ms 512.420864ms 518.741059ms 534.430798ms 534.439029ms 544.179003ms 556.740701ms 558.815285ms 560.890279ms 562.913741ms 563.778394ms 565.217001ms 568.640712ms 573.290802ms 573.551999ms 575.728986ms 577.280807ms 579.639997ms 584.880314ms 585.643865ms 586.077015ms 586.169219ms 587.004041ms 587.0095ms 587.041021ms 591.806185ms 593.052188ms 594.895376ms 594.906296ms 595.687647ms 595.78503ms 596.378665ms 597.716459ms 598.244093ms 598.426699ms 598.866ms 598.88993ms 599.148707ms 600.05962ms 600.066991ms 600.159863ms 601.18319ms 601.628422ms 602.31118ms 603.321676ms 603.539971ms 604.422664ms 604.768943ms 605.285158ms 606.258092ms 606.726145ms 607.322469ms 609.567118ms 611.938841ms 612.848404ms 615.043342ms 616.862018ms 617.350392ms 617.370972ms 618.413219ms 619.510948ms 621.621053ms 621.778577ms 622.040944ms 624.490988ms 625.148915ms 628.334208ms 629.734675ms 630.487854ms 631.181142ms 631.900881ms 632.153587ms 632.490516ms 632.909298ms 633.291677ms 633.875543ms 634.042397ms 634.151449ms 634.202381ms 635.652699ms 636.223964ms 637.513708ms 638.028602ms 638.875752ms 641.468851ms 644.214952ms 644.679354ms 646.380839ms 647.634981ms 647.849638ms 648.108424ms 648.183756ms 648.189436ms 648.634638ms 648.748641ms 650.144817ms 650.657411ms 652.482158ms 655.273811ms 655.398684ms 656.925974ms 657.414706ms 659.844391ms 661.674247ms 661.845642ms 663.173637ms 665.107048ms 666.590626ms 666.661398ms 668.217278ms 668.28798ms 668.853414ms 669.253496ms 669.481031ms 669.990315ms 672.262874ms 674.416131ms 682.314056ms 684.045381ms 684.339069ms 685.379577ms 685.507879ms 689.226026ms 692.79618ms 693.026625ms 693.037066ms 695.927621ms 703.729404ms 706.329012ms 706.412894ms 707.652767ms 708.12011ms 709.840094ms 709.891325ms 710.399899ms 710.623494ms 715.241546ms 719.091156ms 719.844916ms 726.342495ms 728.196383ms 730.904374ms 731.818117ms 732.052783ms 732.356292ms 733.282395ms 736.50059ms 740.481503ms 742.532687ms 752.331253ms 752.438116ms 755.213168ms 757.115247ms 765.962868ms 782.53347ms 796.32765ms 796.941966ms 837.516815ms 840.920043ms 901.39843ms 913.64019ms 1.118877692s 1.135410043s 1.143247789s 1.157952462s 1.164475902s 1.173074847s 1.175660134s 1.18549599s 1.190134931s 1.193794597s 1.19434377s 1.198970432s 1.201317613s 1.213173242s 1.22959637s]
  I0513 18:52:08.334561 19 service_latency.go:118] 50 %ile: 634.042397ms
  I0513 18:52:08.334577 19 service_latency.go:119] 90 %ile: 796.941966ms
  I0513 18:52:08.334591 19 service_latency.go:120] 99 %ile: 1.213173242s
  I0513 18:52:08.334605 19 service_latency.go:121] Total sample count: 200
  I0513 18:52:08.334686 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-4953" for this suite. @ 05/13/24 18:52:08.34
• [12.205 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 05/13/24 18:52:08.352
  I0513 18:52:08.352164 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename configmap @ 05/13/24 18:52:08.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:52:08.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:52:08.392
  STEP: Creating configMap that has name configmap-test-emptyKey-5f522fa3-7893-4d58-a94d-9b52b9bd503b @ 05/13/24 18:52:08.397
  I0513 18:52:08.402037 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6733" for this suite. @ 05/13/24 18:52:08.42
• [0.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:817
  STEP: Creating a kubernetes client @ 05/13/24 18:52:08.439
  I0513 18:52:08.439819 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename webhook @ 05/13/24 18:52:08.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:52:08.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:52:08.49
  STEP: Setting up server cert @ 05/13/24 18:52:08.574
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/13/24 18:52:09.354
  STEP: Deploying the webhook pod @ 05/13/24 18:52:09.37
  STEP: Wait for the deployment to be ready @ 05/13/24 18:52:09.405
  I0513 18:52:09.431226 19 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 05/13/24 18:52:11.442
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 18:52:11.479
  I0513 18:52:12.479897 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 05/13/24 18:52:12.487
  I0513 18:52:12.611199 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2845" for this suite. @ 05/13/24 18:52:12.625
  STEP: Destroying namespace "webhook-markers-2893" for this suite. @ 05/13/24 18:52:12.636
• [4.216 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 05/13/24 18:52:12.656
  I0513 18:52:12.656744 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename svcaccounts @ 05/13/24 18:52:12.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:52:12.687
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:52:12.691
  STEP: Creating ServiceAccount "e2e-sa-wr5rj"  @ 05/13/24 18:52:12.697
  I0513 18:52:12.709866 19 service_accounts.go:825] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-wr5rj"  @ 05/13/24 18:52:12.709
  I0513 18:52:12.723385 19 service_accounts.go:839] AutomountServiceAccountToken: true
  I0513 18:52:12.723622 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2367" for this suite. @ 05/13/24 18:52:12.728
• [0.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 05/13/24 18:52:12.751
  I0513 18:52:12.751147 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename emptydir @ 05/13/24 18:52:12.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:52:12.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:52:12.798
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 05/13/24 18:52:12.802
  STEP: Saw pod success @ 05/13/24 18:52:16.852
  I0513 18:52:16.859988 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod pod-bcc920bd-7a03-4a35-ba14-1c0d266cb41a container test-container: <nil>
  STEP: delete the pod @ 05/13/24 18:52:16.881
  I0513 18:52:16.962333 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6150" for this suite. @ 05/13/24 18:52:16.972
• [4.253 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:330
  STEP: Creating a kubernetes client @ 05/13/24 18:52:17.004
  I0513 18:52:17.004496 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename resourcequota @ 05/13/24 18:52:17.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:52:17.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:52:17.063
  STEP: Counting existing ResourceQuota @ 05/13/24 18:52:34.074
  STEP: Creating a ResourceQuota @ 05/13/24 18:52:39.079
  STEP: Ensuring resource quota status is calculated @ 05/13/24 18:52:39.095
  STEP: Creating a ConfigMap @ 05/13/24 18:52:41.099
  STEP: Ensuring resource quota status captures configMap creation @ 05/13/24 18:52:41.132
  STEP: Deleting a ConfigMap @ 05/13/24 18:52:43.137
  STEP: Ensuring resource quota status released usage @ 05/13/24 18:52:43.15
  I0513 18:52:45.155181 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5606" for this suite. @ 05/13/24 18:52:45.159
• [28.166 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 05/13/24 18:52:45.171
  I0513 18:52:45.171079 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename secrets @ 05/13/24 18:52:45.172
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:52:45.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:52:45.214
  STEP: Creating secret with name s-test-opt-del-6c528c28-0e54-482d-a714-82f7acaaac1e @ 05/13/24 18:52:45.228
  STEP: Creating secret with name s-test-opt-upd-ff66df10-ce24-4e89-b69d-7557d21f444f @ 05/13/24 18:52:45.249
  STEP: Creating the pod @ 05/13/24 18:52:45.261
  STEP: Deleting secret s-test-opt-del-6c528c28-0e54-482d-a714-82f7acaaac1e @ 05/13/24 18:52:47.334
  STEP: Updating secret s-test-opt-upd-ff66df10-ce24-4e89-b69d-7557d21f444f @ 05/13/24 18:52:47.344
  STEP: Creating secret with name s-test-opt-create-aec4ad89-225f-47e7-8c71-ed95d874c63d @ 05/13/24 18:52:47.359
  STEP: waiting to observe update in volume @ 05/13/24 18:52:47.373
  I0513 18:54:11.844648 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4538" for this suite. @ 05/13/24 18:54:11.848
• [86.688 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 05/13/24 18:54:11.861
  I0513 18:54:11.861415 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename webhook @ 05/13/24 18:54:11.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:54:11.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:54:11.909
  STEP: Setting up server cert @ 05/13/24 18:54:11.971
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/13/24 18:54:12.845
  STEP: Deploying the webhook pod @ 05/13/24 18:54:12.86
  STEP: Wait for the deployment to be ready @ 05/13/24 18:54:12.902
  I0513 18:54:12.947425 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/13/24 18:54:14.96
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 18:54:14.994
  I0513 18:54:15.994681 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 05/13/24 18:54:16.002
  STEP: Creating a custom resource definition that should be denied by the webhook @ 05/13/24 18:54:16.033
  I0513 18:54:16.033898 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 18:54:16.509135 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8431" for this suite. @ 05/13/24 18:54:16.529
  STEP: Destroying namespace "webhook-markers-5118" for this suite. @ 05/13/24 18:54:16.544
• [4.703 seconds]
------------------------------
S
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 05/13/24 18:54:16.565
  I0513 18:54:16.565566 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename podtemplate @ 05/13/24 18:54:16.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:54:16.625
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:54:16.63
  STEP: Create set of pod templates @ 05/13/24 18:54:16.634
  I0513 18:54:16.650595 19 podtemplates.go:143] created test-podtemplate-1
  I0513 18:54:16.662866 19 podtemplates.go:143] created test-podtemplate-2
  I0513 18:54:16.674128 19 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 05/13/24 18:54:16.674
  STEP: delete collection of pod templates @ 05/13/24 18:54:16.677
  I0513 18:54:16.677676 19 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 05/13/24 18:54:16.718
  I0513 18:54:16.719087 19 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0513 18:54:16.735043 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-6146" for this suite. @ 05/13/24 18:54:16.741
• [0.194 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 05/13/24 18:54:16.759
  I0513 18:54:16.759626 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename cronjob @ 05/13/24 18:54:16.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:54:16.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:54:16.812
  STEP: Creating a ForbidConcurrent cronjob @ 05/13/24 18:54:16.816
  STEP: Ensuring a job is scheduled @ 05/13/24 18:54:16.827
  STEP: Ensuring exactly one is scheduled @ 05/13/24 18:55:00.834
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 05/13/24 18:55:00.857
  STEP: Ensuring no more jobs are scheduled @ 05/13/24 18:55:00.863
  STEP: Removing cronjob @ 05/13/24 18:55:00.87
  I0513 18:55:00.908730 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7232" for this suite. @ 05/13/24 18:55:00.913
• [44.181 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1031
  STEP: Creating a kubernetes client @ 05/13/24 18:55:00.94
  I0513 18:55:00.940746 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename statefulset @ 05/13/24 18:55:00.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:55:01.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:55:01.042
  STEP: Creating service test in namespace statefulset-3328 @ 05/13/24 18:55:01.048
  STEP: Creating statefulset ss in namespace statefulset-3328 @ 05/13/24 18:55:01.087
  I0513 18:55:01.115279 19 wait.go:40] Found 0 stateful pods, waiting for 1
  I0513 18:55:11.105869 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 05/13/24 18:55:11.121
  STEP: Getting /status @ 05/13/24 18:55:11.143
  I0513 18:55:11.161496 19 statefulset.go:1067] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 05/13/24 18:55:11.161
  I0513 18:55:11.188683 19 statefulset.go:1087] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 05/13/24 18:55:11.188
  I0513 18:55:11.192736 19 statefulset.go:1115] Observed &StatefulSet event: ADDED
  I0513 18:55:11.192802 19 statefulset.go:1108] Found Statefulset ss in namespace statefulset-3328 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0513 18:55:11.192823 19 statefulset.go:1119] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 05/13/24 18:55:11.192
  I0513 18:55:11.193013 19 statefulset.go:1123] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0513 18:55:11.207034 19 statefulset.go:1127] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 05/13/24 18:55:11.207
  I0513 18:55:11.210249 19 statefulset.go:1152] Observed &StatefulSet event: ADDED
  I0513 18:55:11.210460 19 statefulset.go:135] Deleting all statefulset in ns statefulset-3328
  I0513 18:55:11.214284 19 rest.go:150] Scaling statefulset ss to 0
  I0513 18:55:21.240711 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0513 18:55:21.246313 19 rest.go:88] Deleting statefulset ss
  I0513 18:55:21.286520 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3328" for this suite. @ 05/13/24 18:55:21.3
• [20.375 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 05/13/24 18:55:21.316
  I0513 18:55:21.316460 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename field-validation @ 05/13/24 18:55:21.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:55:21.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:55:21.35
  I0513 18:55:21.354148 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  W0513 18:55:21.355112      19 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc000b3cba0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W0513 18:55:23.918822      19 warnings.go:70] unknown field "alpha"
  W0513 18:55:23.918861      19 warnings.go:70] unknown field "beta"
  W0513 18:55:23.918898      19 warnings.go:70] unknown field "delta"
  W0513 18:55:23.918907      19 warnings.go:70] unknown field "epsilon"
  W0513 18:55:23.918915      19 warnings.go:70] unknown field "gamma"
  I0513 18:55:24.478287 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7257" for this suite. @ 05/13/24 18:55:24.483
• [3.179 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 05/13/24 18:55:24.496
  I0513 18:55:24.496044 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename downward-api @ 05/13/24 18:55:24.496
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:55:24.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:55:24.542
  STEP: Creating a pod to test downward API volume plugin @ 05/13/24 18:55:24.547
  STEP: Saw pod success @ 05/13/24 18:55:28.591
  I0513 18:55:28.595378 19 output.go:196] Trying to get logs from node ip-172-31-0-253.us-east-2.compute.internal pod downwardapi-volume-5ebc197b-03d4-4c9e-845b-c5f150527850 container client-container: <nil>
  STEP: delete the pod @ 05/13/24 18:55:28.626
  I0513 18:55:28.688462 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7680" for this suite. @ 05/13/24 18:55:28.693
• [4.218 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 05/13/24 18:55:28.715
  I0513 18:55:28.715348 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename configmap @ 05/13/24 18:55:28.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:55:28.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:55:28.762
  STEP: Creating configMap with name configmap-test-volume-8421ed15-cc59-4f01-be0b-24bfd29aac4c @ 05/13/24 18:55:28.766
  STEP: Creating a pod to test consume configMaps @ 05/13/24 18:55:28.795
  STEP: Saw pod success @ 05/13/24 18:55:32.856
  I0513 18:55:32.859707 19 output.go:196] Trying to get logs from node ip-172-31-0-253.us-east-2.compute.internal pod pod-configmaps-6e4de59e-6d06-41f9-b970-e899fc9354c3 container agnhost-container: <nil>
  STEP: delete the pod @ 05/13/24 18:55:32.867
  I0513 18:55:32.908273 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2418" for this suite. @ 05/13/24 18:55:32.913
• [4.216 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 05/13/24 18:55:32.934
  I0513 18:55:32.934820 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename daemonsets @ 05/13/24 18:55:32.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:55:33.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:55:33.02
  STEP: Creating simple DaemonSet "daemon-set" @ 05/13/24 18:55:33.056
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/13/24 18:55:33.074
  I0513 18:55:33.101829 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 18:55:33.102021 19 fixtures.go:130] Node ip-172-31-0-253.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 18:55:34.086622 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 18:55:34.086853 19 fixtures.go:130] Node ip-172-31-0-253.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 18:55:35.086278 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0513 18:55:35.086582 19 fixtures.go:130] Node ip-172-31-0-253.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 18:55:36.084282 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0513 18:55:36.084441 19 fixtures.go:130] Node ip-172-31-0-253.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 18:55:37.085405 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0513 18:55:37.085575 19 fixtures.go:130] Node ip-172-31-0-253.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 18:55:38.093888 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0513 18:55:38.094116 19 fixtures.go:130] Node ip-172-31-0-253.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 18:55:39.094065 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0513 18:55:39.094108 19 fixtures.go:130] Node ip-172-31-0-253.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 18:55:40.085077 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0513 18:55:40.085161 19 fixtures.go:130] Node ip-172-31-0-253.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 18:55:41.083387 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0513 18:55:41.083441 19 fixtures.go:130] Node ip-172-31-0-253.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 18:55:42.084289 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0513 18:55:42.084344 19 fixtures.go:135] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: listing all DaemonSets @ 05/13/24 18:55:42.087
  STEP: DeleteCollection of the DaemonSets @ 05/13/24 18:55:42.091
  STEP: Verify that ReplicaSets have been deleted @ 05/13/24 18:55:42.109
  I0513 18:55:42.139919 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"40773"},"items":null}

  I0513 18:55:42.199732 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"40779"},"items":[{"metadata":{"name":"daemon-set-228pn","generateName":"daemon-set-","namespace":"daemonsets-1673","uid":"8737d488-e5d6-456f-b1f6-3a0a6ff3cea6","resourceVersion":"40776","creationTimestamp":"2024-05-13T18:55:33Z","deletionTimestamp":"2024-05-13T18:56:12Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"7d79bd845c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"a2c3fd62-d43d-4727-a3b4-514f6c49dc0d","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2024-05-13T18:55:33Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a2c3fd62-d43d-4727-a3b4-514f6c49dc0d\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2024-05-13T18:55:41Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.3.16\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-dmvhz","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-dmvhz","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-0-253.us-east-2.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-0-253.us-east-2.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-13T18:55:41Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-13T18:55:33Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-13T18:55:41Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-13T18:55:41Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-13T18:55:33Z"}],"hostIP":"172.31.0.253","hostIPs":[{"ip":"172.31.0.253"}],"podIP":"10.42.3.16","podIPs":[{"ip":"10.42.3.16"}],"startTime":"2024-05-13T18:55:33Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-05-13T18:55:40Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://3a4d3e8b99394e199f59e2184244a5afe20e9d8801e08704fd55461acafa097a","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-7gj2x","generateName":"daemon-set-","namespace":"daemonsets-1673","uid":"56ef1a96-dd1d-476d-bcad-f60f647e5664","resourceVersion":"40778","creationTimestamp":"2024-05-13T18:55:33Z","deletionTimestamp":"2024-05-13T18:56:12Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"7d79bd845c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"a2c3fd62-d43d-4727-a3b4-514f6c49dc0d","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2024-05-13T18:55:33Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a2c3fd62-d43d-4727-a3b4-514f6c49dc0d\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2024-05-13T18:55:38Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.1.12\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-6r9f4","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-6r9f4","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-3-33.us-east-2.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-3-33.us-east-2.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-13T18:55:38Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-13T18:55:33Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-13T18:55:38Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-13T18:55:38Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-13T18:55:33Z"}],"hostIP":"172.31.3.33","hostIPs":[{"ip":"172.31.3.33"}],"podIP":"10.42.1.12","podIPs":[{"ip":"10.42.1.12"}],"startTime":"2024-05-13T18:55:33Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-05-13T18:55:38Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://f8dbe9e0f60c6a90a41e7b8a54430260a67e38c73ebb42656dbde230388bc9a1","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-d287t","generateName":"daemon-set-","namespace":"daemonsets-1673","uid":"fc8619b4-7c58-478a-b3ed-de1a5b8014ff","resourceVersion":"40777","creationTimestamp":"2024-05-13T18:55:33Z","deletionTimestamp":"2024-05-13T18:56:12Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"7d79bd845c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"a2c3fd62-d43d-4727-a3b4-514f6c49dc0d","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2024-05-13T18:55:33Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a2c3fd62-d43d-4727-a3b4-514f6c49dc0d\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2024-05-13T18:55:34Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.2.38\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-zrmx5","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-zrmx5","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-11-14.us-east-2.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-11-14.us-east-2.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-13T18:55:34Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-13T18:55:33Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-13T18:55:34Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-13T18:55:34Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-13T18:55:33Z"}],"hostIP":"172.31.11.14","hostIPs":[{"ip":"172.31.11.14"}],"podIP":"10.42.2.38","podIPs":[{"ip":"10.42.2.38"}],"startTime":"2024-05-13T18:55:33Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-05-13T18:55:34Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://168b5b48ff32cafb27f5b4caf8baabc911bdc0b3b10dd74f3cce86a0e26fd147","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-g5nj9","generateName":"daemon-set-","namespace":"daemonsets-1673","uid":"8dce9e69-2780-4365-8717-b883b8140a3e","resourceVersion":"40774","creationTimestamp":"2024-05-13T18:55:33Z","deletionTimestamp":"2024-05-13T18:56:12Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"7d79bd845c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"a2c3fd62-d43d-4727-a3b4-514f6c49dc0d","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2024-05-13T18:55:33Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a2c3fd62-d43d-4727-a3b4-514f6c49dc0d\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"k3s","operation":"Update","apiVersion":"v1","time":"2024-05-13T18:55:38Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.0.11\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-j8xff","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-j8xff","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-14-0.us-east-2.compute.internal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-14-0.us-east-2.compute.internal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-13T18:55:38Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-13T18:55:33Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-13T18:55:38Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-13T18:55:38Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-05-13T18:55:33Z"}],"hostIP":"172.31.14.0","hostIPs":[{"ip":"172.31.14.0"}],"podIP":"10.42.0.11","podIPs":[{"ip":"10.42.0.11"}],"startTime":"2024-05-13T18:55:33Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-05-13T18:55:38Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://2bc2742f663867492e1cad9f657f895ed01f3a4dfed27fa87913b64507f29864","started":true}],"qosClass":"BestEffort"}}]}

  I0513 18:55:42.233447 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1673" for this suite. @ 05/13/24 18:55:42.239
• [9.318 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 05/13/24 18:55:42.255
  I0513 18:55:42.255427 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename pods @ 05/13/24 18:55:42.256
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:55:42.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:55:42.375
  STEP: Saw pod success @ 05/13/24 18:55:48.604
  I0513 18:55:48.608158 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod client-envvars-ec32ae89-9b48-46a5-af8c-9f6dc8314a93 container env3cont: <nil>
  STEP: delete the pod @ 05/13/24 18:55:48.623
  I0513 18:55:48.666531 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-11" for this suite. @ 05/13/24 18:55:48.671
• [6.440 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 05/13/24 18:55:48.697
  I0513 18:55:48.697980 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename projected @ 05/13/24 18:55:48.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:55:48.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:55:48.74
  STEP: Creating projection with secret that has name projected-secret-test-9c49ffd2-9cb2-4b5f-8a4e-be6c1ba12637 @ 05/13/24 18:55:48.745
  STEP: Creating a pod to test consume secrets @ 05/13/24 18:55:48.758
  STEP: Saw pod success @ 05/13/24 18:55:52.798
  I0513 18:55:52.801994 19 output.go:196] Trying to get logs from node ip-172-31-0-253.us-east-2.compute.internal pod pod-projected-secrets-aa2e7717-d5f4-403c-b8d5-558046033e11 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/13/24 18:55:52.811
  I0513 18:55:52.864015 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4769" for this suite. @ 05/13/24 18:55:52.87
• [4.193 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 05/13/24 18:55:52.893
  I0513 18:55:52.893677 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename aggregateddiscovery @ 05/13/24 18:55:52.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:55:52.941
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:55:52.945
  I0513 18:55:52.956040 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-654" for this suite. @ 05/13/24 18:55:52.966
• [0.107 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 05/13/24 18:55:53.001
  I0513 18:55:53.001451 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename configmap @ 05/13/24 18:55:53.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:55:53.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:55:53.058
  STEP: Creating configMap with name configmap-test-volume-dad1b822-67a3-42d4-8148-dbcd98556c2c @ 05/13/24 18:55:53.063
  STEP: Creating a pod to test consume configMaps @ 05/13/24 18:55:53.079
  STEP: Saw pod success @ 05/13/24 18:55:57.116
  I0513 18:55:57.120526 19 output.go:196] Trying to get logs from node ip-172-31-0-253.us-east-2.compute.internal pod pod-configmaps-445d9f74-2b3d-417c-82d0-ef25c0b75c57 container agnhost-container: <nil>
  STEP: delete the pod @ 05/13/24 18:55:57.128
  I0513 18:55:57.168268 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1599" for this suite. @ 05/13/24 18:55:57.173
• [4.198 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 05/13/24 18:55:57.199
  I0513 18:55:57.199736 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename pods @ 05/13/24 18:55:57.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:55:57.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:55:57.24
  STEP: creating the pod @ 05/13/24 18:55:57.249
  STEP: submitting the pod to kubernetes @ 05/13/24 18:55:57.249
  STEP: verifying the pod is in kubernetes @ 05/13/24 18:55:59.286
  STEP: updating the pod @ 05/13/24 18:55:59.29
  I0513 18:55:59.817082 19 pod_client.go:141] Successfully updated pod "pod-update-06eccd2a-77df-4e88-bbd9-45fe319b0d0f"
  STEP: verifying the updated pod is in kubernetes @ 05/13/24 18:55:59.822
  I0513 18:55:59.826354 19 pods.go:391] Pod update OK
  I0513 18:55:59.826498 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4147" for this suite. @ 05/13/24 18:55:59.832
• [2.650 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:850
  STEP: Creating a kubernetes client @ 05/13/24 18:55:59.853
  I0513 18:55:59.853291 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename services @ 05/13/24 18:55:59.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:55:59.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:55:59.914
  STEP: creating service multi-endpoint-test in namespace services-1553 @ 05/13/24 18:55:59.919
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1553 to expose endpoints map[] @ 05/13/24 18:55:59.971
  I0513 18:56:00.011472 19 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-1553 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-1553 @ 05/13/24 18:56:00.011
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1553 to expose endpoints map[pod1:[100]] @ 05/13/24 18:56:02.054
  I0513 18:56:02.079872 19 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-1553 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-1553 @ 05/13/24 18:56:02.079
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1553 to expose endpoints map[pod1:[100] pod2:[101]] @ 05/13/24 18:56:04.113
  I0513 18:56:04.138086 19 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-1553 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 05/13/24 18:56:04.138
  I0513 18:56:04.138702 19 resource.go:361] Creating new exec pod
  I0513 18:56:11.175013 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-1553 exec execpodhv2t9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0513 18:56:11.398975 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  I0513 18:56:11.399225 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0513 18:56:11.399439 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-1553 exec execpodhv2t9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.254.102 80'
  I0513 18:56:11.558004 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.254.102 80\nConnection to 10.43.254.102 80 port [tcp/http] succeeded!\n"
  I0513 18:56:11.558073 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0513 18:56:11.558192 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-1553 exec execpodhv2t9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0513 18:56:11.690637 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  I0513 18:56:11.690702 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0513 18:56:11.690794 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-1553 exec execpodhv2t9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.254.102 81'
  I0513 18:56:11.834611 19 builder.go:146] stderr: "+ + ncecho hostName\n -v -t -w 2 10.43.254.102 81\nConnection to 10.43.254.102 81 port [tcp/*] succeeded!\n"
  I0513 18:56:11.834675 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-1553 @ 05/13/24 18:56:11.834
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1553 to expose endpoints map[pod2:[101]] @ 05/13/24 18:56:11.868
  I0513 18:56:12.939619 19 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-1553 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-1553 @ 05/13/24 18:56:12.939
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1553 to expose endpoints map[] @ 05/13/24 18:56:12.999
  I0513 18:56:13.041083 19 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-1553 exposes endpoints map[]
  I0513 18:56:13.082723 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1553" for this suite. @ 05/13/24 18:56:13.087
• [13.254 seconds]
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 05/13/24 18:56:13.109
  I0513 18:56:13.109159 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename replicaset @ 05/13/24 18:56:13.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:56:13.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:56:13.172
  I0513 18:56:13.178052 19 replica_set.go:191] Creating ReplicaSet my-hostname-basic-01cbf6b2-0c38-4ddc-ba0d-84fb4819678b
  I0513 18:56:13.191871 19 resource.go:87] Pod name my-hostname-basic-01cbf6b2-0c38-4ddc-ba0d-84fb4819678b: Found 0 pods out of 1
  I0513 18:56:18.198583 19 resource.go:87] Pod name my-hostname-basic-01cbf6b2-0c38-4ddc-ba0d-84fb4819678b: Found 1 pods out of 1
  I0513 18:56:18.198800 19 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-01cbf6b2-0c38-4ddc-ba0d-84fb4819678b" is running
  I0513 18:56:18.209576 19 replica_set.go:220] Pod "my-hostname-basic-01cbf6b2-0c38-4ddc-ba0d-84fb4819678b-qw6bc" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-13 18:56:15 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-13 18:56:13 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-13 18:56:15 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-13 18:56:15 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-13 18:56:13 +0000 UTC Reason: Message:}])
  I0513 18:56:18.209818 19 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 05/13/24 18:56:18.21
  I0513 18:56:18.239272 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9166" for this suite. @ 05/13/24 18:56:18.244
• [5.155 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 05/13/24 18:56:18.265
  I0513 18:56:18.265238 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename pods @ 05/13/24 18:56:18.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:56:18.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:56:18.314
  STEP: creating the pod @ 05/13/24 18:56:18.322
  STEP: submitting the pod to kubernetes @ 05/13/24 18:56:18.322
  STEP: verifying QOS class is set on the pod @ 05/13/24 18:56:18.351
  I0513 18:56:18.357017 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6698" for this suite. @ 05/13/24 18:56:18.367
• [0.136 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 05/13/24 18:56:18.401
  I0513 18:56:18.401380 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename var-expansion @ 05/13/24 18:56:18.402
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:56:18.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:56:18.497
  STEP: creating the pod @ 05/13/24 18:56:18.503
  STEP: waiting for pod running @ 05/13/24 18:56:18.539
  STEP: creating a file in subpath @ 05/13/24 18:56:20.552
  I0513 18:56:20.556970 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-937 PodName:var-expansion-9e5b87ca-4b8e-440a-817d-f46c547e549a ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 18:56:20.557158 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 18:56:20.557797 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 18:56:20.557903 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/var-expansion-937/pods/var-expansion-9e5b87ca-4b8e-440a-817d-f46c547e549a/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 05/13/24 18:56:20.634
  I0513 18:56:20.640282 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-937 PodName:var-expansion-9e5b87ca-4b8e-440a-817d-f46c547e549a ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 18:56:20.640525 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 18:56:20.641330 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 18:56:20.641540 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/var-expansion-937/pods/var-expansion-9e5b87ca-4b8e-440a-817d-f46c547e549a/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 05/13/24 18:56:20.707
  I0513 18:56:21.232242 19 pod_client.go:141] Successfully updated pod "var-expansion-9e5b87ca-4b8e-440a-817d-f46c547e549a"
  STEP: waiting for annotated pod running @ 05/13/24 18:56:21.232
  STEP: deleting the pod gracefully @ 05/13/24 18:56:21.235
  I0513 18:56:21.235880 19 delete.go:62] Deleting pod "var-expansion-9e5b87ca-4b8e-440a-817d-f46c547e549a" in namespace "var-expansion-937"
  I0513 18:56:21.257904 19 delete.go:70] Wait up to 5m0s for pod "var-expansion-9e5b87ca-4b8e-440a-817d-f46c547e549a" to be fully deleted
  I0513 18:56:53.346032 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-937" for this suite. @ 05/13/24 18:56:53.351
• [34.965 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 05/13/24 18:56:53.366
  I0513 18:56:53.366725 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename pods @ 05/13/24 18:56:53.367
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:56:53.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:56:53.436
  STEP: Create a pod @ 05/13/24 18:56:53.44
  STEP: patching /status @ 05/13/24 18:56:55.499
  I0513 18:56:55.512039 19 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0513 18:56:55.512325 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5949" for this suite. @ 05/13/24 18:56:55.529
• [2.179 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 05/13/24 18:56:55.546
  I0513 18:56:55.546505 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename deployment @ 05/13/24 18:56:55.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:56:55.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:56:55.608
  I0513 18:56:55.661451 19 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/13/24 18:56:55.661
  I0513 18:56:57.692587 19 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 05/13/24 18:56:57.715
  I0513 18:56:57.750190 19 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2156",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4b97c89f-0f36-4ec7-8c58-e9111965e277",
      ResourceVersion: (string) (len=5) "41403",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851223417,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851223417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0513 18:56:57.779437 19 deployment.go:39] New ReplicaSet "test-cleanup-deployment-7c4d497584" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-7c4d497584",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2156",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5c5d2a35-c735-470f-819c-e93b4df36573",
      ResourceVersion: (string) (len=5) "41405",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851223417,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7c4d497584"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "4b97c89f-0f36-4ec7-8c58-e9111965e277",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851223417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 62 39 37 63 38  39 66 2d 30 66 33 36 2d  |\"4b97c89f-0f36-|
              00000120  34 65 63 37 2d 38 63 35  38 2d 65 39 31 31 31 39  |4ec7-8c58-e91119|
              00000130  36 35 65 32 37 37 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |65e277\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7c4d497584"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7c4d497584"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0513 18:56:57.781524 19 deployment.go:44] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I0513 18:56:57.782304 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2156",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e9a3dd85-23a8-4990-9ee3-704642023ace",
      ResourceVersion: (string) (len=5) "41404",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851223415,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "4b97c89f-0f36-4ec7-8c58-e9111965e277",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851223415,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851223417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 34 62 39 37 63 38 39  |"uid\":\"4b97c89|
              00000040  66 2d 30 66 33 36 2d 34  65 63 37 2d 38 63 35 38  |f-0f36-4ec7-8c58|
              00000050  2d 65 39 31 31 31 39 36  35 65 32 37 37 5c 22 7d  |-e9111965e277\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851223417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0513 18:56:57.809497 19 deployment.go:67] Pod "test-cleanup-controller-7t7wc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-7t7wc",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-2156",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4f7b8b04-39c5-4947-aa64-821ed409e5a0",
      ResourceVersion: (string) (len=5) "41401",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851223415,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "e9a3dd85-23a8-4990-9ee3-704642023ace",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851223415,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  65 39 61 33 64 64 38 35  |uid\":\"e9a3dd85|
              00000080  2d 32 33 61 38 2d 34 39  39 30 2d 39 65 65 33 2d  |-23a8-4990-9ee3-|
              00000090  37 30 34 36 34 32 30 32  33 61 63 65 5c 22 7d 22  |704642023ace\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851223417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 32 30  5c 22 7d 22 3a 7b 22 2e  |.42.3.20\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8dxcc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8dxcc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-0-253.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851223417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851223415,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851223417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851223417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851223415,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.0.253",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.0.253"
        }
      },
      PodIP: (string) (len=10) "10.42.3.20",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.3.20"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851223415,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851223416,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c9a3efc3fedadd1104833cd7bc48635dd770ee10eaa3257a1104d8cdb0af46b2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 18:56:57.814100 19 deployment.go:67] Pod "test-cleanup-deployment-7c4d497584-xxgwm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-7c4d497584-xxgwm",
      GenerateName: (string) (len=35) "test-cleanup-deployment-7c4d497584-",
      Namespace: (string) (len=15) "deployment-2156",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "91f8de4b-5eff-4f52-a1d3-9527d7edb9dc",
      ResourceVersion: (string) (len=5) "41409",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851223417,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7c4d497584"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-7c4d497584",
          UID: (types.UID) (len=36) "5c5d2a35-c735-470f-819c-e93b4df36573",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851223417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 35 63  35 64 32 61 33 35 2d 63  |d\":\"5c5d2a35-c|
              00000090  37 33 35 2d 34 37 30 66  2d 38 31 39 63 2d 65 39  |735-470f-819c-e9|
              000000a0  33 62 34 64 66 33 36 35  37 33 5c 22 7d 22 3a 7b  |3b4df36573\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xsrt9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xsrt9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-11-14.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851223417,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 18:56:57.815746 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2156" for this suite. @ 05/13/24 18:56:57.837
• [2.329 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 05/13/24 18:56:57.879
  I0513 18:56:57.879850 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename configmap @ 05/13/24 18:56:57.881
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:56:57.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:56:57.955
  STEP: Creating configMap with name configmap-test-volume-e9e18a00-2c8a-4b0d-a005-cc4e92628513 @ 05/13/24 18:56:57.961
  STEP: Creating a pod to test consume configMaps @ 05/13/24 18:56:57.973
  STEP: Saw pod success @ 05/13/24 18:57:02.051
  I0513 18:57:02.059031 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod pod-configmaps-4e036528-9fdb-4614-b75e-06a1e99893d2 container configmap-volume-test: <nil>
  STEP: delete the pod @ 05/13/24 18:57:02.07
  I0513 18:57:02.118068 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9821" for this suite. @ 05/13/24 18:57:02.124
• [4.265 seconds]
------------------------------
SS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 05/13/24 18:57:02.144
  I0513 18:57:02.144537 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename security-context-test @ 05/13/24 18:57:02.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:57:02.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:57:02.223
  I0513 18:57:06.292604 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2299" for this suite. @ 05/13/24 18:57:06.298
• [4.166 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 05/13/24 18:57:06.314
  I0513 18:57:06.314893 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename replicaset @ 05/13/24 18:57:06.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:57:06.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:57:06.373
  I0513 18:57:06.420450 19 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/13/24 18:57:06.42
  STEP: Scaling up "test-rs" replicaset @ 05/13/24 18:57:08.431
  I0513 18:57:08.461482 19 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 05/13/24 18:57:08.461
  I0513 18:57:08.481265 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-153 with ReadyReplicas 1, AvailableReplicas 1
  I0513 18:57:08.542308 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-153 with ReadyReplicas 1, AvailableReplicas 1
  I0513 18:57:08.574473 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-153 with ReadyReplicas 1, AvailableReplicas 1
  I0513 18:57:08.614442 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-153 with ReadyReplicas 1, AvailableReplicas 1
  I0513 18:57:09.440789 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-153 with ReadyReplicas 2, AvailableReplicas 2
  I0513 18:57:10.894259 19 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-153 with ReadyReplicas 3 found true
  I0513 18:57:10.894396 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-153" for this suite. @ 05/13/24 18:57:10.901
• [4.623 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:715
  STEP: Creating a kubernetes client @ 05/13/24 18:57:10.939
  I0513 18:57:10.940074 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename webhook @ 05/13/24 18:57:10.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:57:10.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:57:10.98
  STEP: Setting up server cert @ 05/13/24 18:57:11.053
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/13/24 18:57:11.759
  STEP: Deploying the webhook pod @ 05/13/24 18:57:11.807
  STEP: Wait for the deployment to be ready @ 05/13/24 18:57:11.843
  I0513 18:57:11.850685 19 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 05/13/24 18:57:13.864
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 18:57:13.893
  I0513 18:57:14.893630 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 05/13/24 18:57:14.901
  STEP: verifying the validating webhook match conditions @ 05/13/24 18:57:14.924
  STEP: updating the validating webhook match conditions @ 05/13/24 18:57:14.928
  STEP: verifying the validating webhook match conditions @ 05/13/24 18:57:14.954
  I0513 18:57:15.082361 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3332" for this suite. @ 05/13/24 18:57:15.087
  STEP: Destroying namespace "webhook-markers-797" for this suite. @ 05/13/24 18:57:15.106
• [4.186 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1537
  STEP: Creating a kubernetes client @ 05/13/24 18:57:15.127
  I0513 18:57:15.127861 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename services @ 05/13/24 18:57:15.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:57:15.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:57:15.194
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-1185 @ 05/13/24 18:57:15.199
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 05/13/24 18:57:15.236
  STEP: creating service externalsvc in namespace services-1185 @ 05/13/24 18:57:15.236
  STEP: creating replication controller externalsvc in namespace services-1185 @ 05/13/24 18:57:15.268
  I0513 18:57:15.279197      19 runners.go:198] Created replication controller with name: externalsvc, namespace: services-1185, replica count: 2
  I0513 18:57:18.329986      19 runners.go:198] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 05/13/24 18:57:18.334
  I0513 18:57:18.389157 19 resource.go:361] Creating new exec pod
  I0513 18:57:20.461514 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-1185 exec execpodsnk5k -- /bin/sh -x -c nslookup nodeport-service.services-1185.svc.cluster.local'
  I0513 18:57:21.210030 19 builder.go:146] stderr: "+ nslookup nodeport-service.services-1185.svc.cluster.local\n"
  I0513 18:57:21.210092 19 builder.go:147] stdout: "Server:\t\t10.43.0.10\nAddress:\t10.43.0.10#53\n\nnodeport-service.services-1185.svc.cluster.local\tcanonical name = externalsvc.services-1185.svc.cluster.local.\nName:\texternalsvc.services-1185.svc.cluster.local\nAddress: 10.43.57.8\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-1185, will wait for the garbage collector to delete the pods @ 05/13/24 18:57:21.21
  I0513 18:57:21.281881 19 resources.go:139] Deleting ReplicationController externalsvc took: 13.993098ms
  I0513 18:57:21.382275 19 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.391911ms
  I0513 18:57:25.084070 19 service.go:1548] Cleaning up the NodePort to ExternalName test service
  I0513 18:57:25.104667 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1185" for this suite. @ 05/13/24 18:57:25.109
• [10.001 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 05/13/24 18:57:25.13
  I0513 18:57:25.130305 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename downward-api @ 05/13/24 18:57:25.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:57:25.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:57:25.18
  STEP: Creating a pod to test downward API volume plugin @ 05/13/24 18:57:25.184
  STEP: Saw pod success @ 05/13/24 18:57:29.691
  I0513 18:57:29.695007 19 output.go:196] Trying to get logs from node ip-172-31-0-253.us-east-2.compute.internal pod downwardapi-volume-73ee37a3-0d47-4fbc-bb32-7203aa28fb01 container client-container: <nil>
  STEP: delete the pod @ 05/13/24 18:57:29.708
  I0513 18:57:29.747595 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7483" for this suite. @ 05/13/24 18:57:29.752
• [4.650 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 05/13/24 18:57:29.78
  I0513 18:57:29.780762 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename projected @ 05/13/24 18:57:29.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:57:29.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:57:29.816
  STEP: Creating projection with secret that has name projected-secret-test-2f86d7e0-fe76-41ef-94ac-56fe2aa89a33 @ 05/13/24 18:57:29.82
  STEP: Creating a pod to test consume secrets @ 05/13/24 18:57:29.834
  STEP: Saw pod success @ 05/13/24 18:57:33.88
  I0513 18:57:33.883910 19 output.go:196] Trying to get logs from node ip-172-31-0-253.us-east-2.compute.internal pod pod-projected-secrets-757bdffe-b8d0-447f-824d-107025b756eb container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/13/24 18:57:33.891
  I0513 18:57:33.929775 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1670" for this suite. @ 05/13/24 18:57:33.934
• [4.171 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:766
  STEP: Creating a kubernetes client @ 05/13/24 18:57:33.952
  I0513 18:57:33.952818 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename webhook @ 05/13/24 18:57:33.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:57:33.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:57:33.999
  STEP: Setting up server cert @ 05/13/24 18:57:34.043
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/13/24 18:57:34.603
  STEP: Deploying the webhook pod @ 05/13/24 18:57:34.612
  STEP: Wait for the deployment to be ready @ 05/13/24 18:57:34.641
  I0513 18:57:34.663372 19 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 05/13/24 18:57:36.674
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 18:57:36.7
  I0513 18:57:37.701179 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 05/13/24 18:57:37.717
  STEP: verifying the mutating webhook match conditions @ 05/13/24 18:57:37.742
  STEP: updating the mutating webhook match conditions @ 05/13/24 18:57:37.756
  STEP: verifying the mutating webhook match conditions @ 05/13/24 18:57:37.783
  I0513 18:57:37.922628 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5403" for this suite. @ 05/13/24 18:57:37.928
  STEP: Destroying namespace "webhook-markers-3429" for this suite. @ 05/13/24 18:57:37.956
• [4.036 seconds]
------------------------------
SSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 05/13/24 18:57:37.992
  I0513 18:57:37.992482 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename events @ 05/13/24 18:57:37.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:57:38.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:57:38.048
  STEP: creating a test event @ 05/13/24 18:57:38.052
  STEP: listing all events in all namespaces @ 05/13/24 18:57:38.083
  STEP: patching the test event @ 05/13/24 18:57:38.092
  STEP: fetching the test event @ 05/13/24 18:57:38.119
  STEP: updating the test event @ 05/13/24 18:57:38.123
  STEP: getting the test event @ 05/13/24 18:57:38.154
  STEP: deleting the test event @ 05/13/24 18:57:38.158
  STEP: listing all events in all namespaces @ 05/13/24 18:57:38.177
  I0513 18:57:38.183913 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9989" for this suite. @ 05/13/24 18:57:38.188
• [0.215 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 05/13/24 18:57:38.208
  I0513 18:57:38.208577 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 05/13/24 18:57:38.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:57:38.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:57:38.272
  STEP: creating a target pod @ 05/13/24 18:57:38.275
  STEP: adding an ephemeral container @ 05/13/24 18:57:40.302
  STEP: checking pod container endpoints @ 05/13/24 18:57:42.331
  I0513 18:57:42.331304 19 exec_util.go:55] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-7412 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 18:57:42.331330 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 18:57:42.331960 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 18:57:42.332035 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/ephemeral-containers-test-7412/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I0513 18:57:42.392503 19 exec_util.go:106] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 05/13/24 18:57:42.399
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 05/13/24 18:57:42.403
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 05/13/24 18:57:42.441
  I0513 18:57:42.447949 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-7412" for this suite. @ 05/13/24 18:57:42.463
• [4.277 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 05/13/24 18:57:42.485
  I0513 18:57:42.485829 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename emptydir @ 05/13/24 18:57:42.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:57:42.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:57:42.564
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 05/13/24 18:57:42.568
  STEP: Saw pod success @ 05/13/24 18:57:46.808
  I0513 18:57:46.814657 19 output.go:196] Trying to get logs from node ip-172-31-0-253.us-east-2.compute.internal pod pod-5b85c145-7dc0-4144-969f-ee016c7bb990 container test-container: <nil>
  STEP: delete the pod @ 05/13/24 18:57:46.836
  I0513 18:57:46.870394 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9181" for this suite. @ 05/13/24 18:57:46.875
• [4.402 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 05/13/24 18:57:46.888
  I0513 18:57:46.888929 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename endpointslice @ 05/13/24 18:57:46.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:57:46.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:57:46.951
  STEP: getting /apis @ 05/13/24 18:57:46.955
  STEP: getting /apis/discovery.k8s.io @ 05/13/24 18:57:46.964
  STEP: getting /apis/discovery.k8s.iov1 @ 05/13/24 18:57:46.966
  STEP: creating @ 05/13/24 18:57:46.968
  STEP: getting @ 05/13/24 18:57:47.018
  STEP: listing @ 05/13/24 18:57:47.021
  STEP: watching @ 05/13/24 18:57:47.024
  I0513 18:57:47.024766 19 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 05/13/24 18:57:47.026
  STEP: cluster-wide watching @ 05/13/24 18:57:47.03
  I0513 18:57:47.030477 19 endpointslice.go:459] starting watch
  STEP: patching @ 05/13/24 18:57:47.032
  STEP: updating @ 05/13/24 18:57:47.048
  I0513 18:57:47.067097 19 endpointslice.go:482] waiting for watch events with expected annotations
  I0513 18:57:47.067184 19 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 05/13/24 18:57:47.067
  STEP: deleting a collection @ 05/13/24 18:57:47.083
  I0513 18:57:47.106491 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6657" for this suite. @ 05/13/24 18:57:47.113
• [0.254 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 05/13/24 18:57:47.142
  I0513 18:57:47.142998 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename replication-controller @ 05/13/24 18:57:47.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:57:47.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:57:47.195
  I0513 18:57:47.200938 19 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 05/13/24 18:57:48.221
  STEP: Checking rc "condition-test" has the desired failure condition set @ 05/13/24 18:57:48.233
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 05/13/24 18:57:49.253
  I0513 18:57:49.269839 19 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 05/13/24 18:57:49.269
  I0513 18:57:49.281707 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8857" for this suite. @ 05/13/24 18:57:49.297
• [2.177 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 05/13/24 18:57:49.32
  I0513 18:57:49.320695 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename configmap @ 05/13/24 18:57:49.321
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:57:49.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:57:49.369
  STEP: Creating configMap configmap-6763/configmap-test-5690b811-5ed8-4284-8db6-aea23dbb6b76 @ 05/13/24 18:57:49.372
  STEP: Creating a pod to test consume configMaps @ 05/13/24 18:57:49.388
  STEP: Saw pod success @ 05/13/24 18:57:53.443
  I0513 18:57:53.446632 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod pod-configmaps-1154b412-a0b1-4366-95c1-9531c1859352 container env-test: <nil>
  STEP: delete the pod @ 05/13/24 18:57:53.455
  I0513 18:57:53.511150 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6763" for this suite. @ 05/13/24 18:57:53.517
• [4.208 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 05/13/24 18:57:53.529
  I0513 18:57:53.530050 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename pods @ 05/13/24 18:57:53.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:57:53.623
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:57:53.629
  STEP: Create set of pods @ 05/13/24 18:57:53.634
  I0513 18:57:53.665379 19 pods.go:871] created test-pod-1
  I0513 18:57:53.694576 19 pods.go:871] created test-pod-2
  I0513 18:57:53.730582 19 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 05/13/24 18:57:53.73
  STEP: waiting for all pods to be deleted @ 05/13/24 18:57:55.876
  I0513 18:57:55.881265 19 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0513 18:57:56.890725 19 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0513 18:57:57.881874 19 pods.go:1140] Pod quantity 1 is different from expected quantity 0
  I0513 18:57:58.884034 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4087" for this suite. @ 05/13/24 18:57:58.893
• [5.382 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 05/13/24 18:57:58.913
  I0513 18:57:58.913849 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename svcaccounts @ 05/13/24 18:57:58.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:57:58.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:57:58.978
  STEP: creating a ServiceAccount @ 05/13/24 18:57:58.983
  STEP: watching for the ServiceAccount to be added @ 05/13/24 18:57:59.016
  STEP: patching the ServiceAccount @ 05/13/24 18:57:59.018
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 05/13/24 18:57:59.044
  STEP: deleting the ServiceAccount @ 05/13/24 18:57:59.049
  I0513 18:57:59.084246 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8927" for this suite. @ 05/13/24 18:57:59.093
• [0.194 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 05/13/24 18:57:59.107
  I0513 18:57:59.107400 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename dns @ 05/13/24 18:57:59.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:57:59.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:57:59.166
  STEP: Creating a test headless service @ 05/13/24 18:57:59.191
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2740.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-2740.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2740.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-2740.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-2740.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-2740.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-2740.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-2740.svc.cluster.local;sleep 1; done
   @ 05/13/24 18:57:59.209
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2740.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-2740.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-2740.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-2740.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-2740.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-2740.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-2740.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-2740.svc.cluster.local;sleep 1; done
   @ 05/13/24 18:57:59.209
  STEP: creating a pod to probe DNS @ 05/13/24 18:57:59.209
  STEP: submitting the pod to kubernetes @ 05/13/24 18:57:59.209
  STEP: retrieving the pod @ 05/13/24 18:58:17.31
  STEP: looking for the results for each expected name from probers @ 05/13/24 18:58:17.314
  I0513 18:58:17.366068 19 dns_common.go:527] DNS probes using dns-2740/dns-test-687a142d-9306-46b3-9665-32c1142b3a52 succeeded

  STEP: deleting the pod @ 05/13/24 18:58:17.366
  STEP: deleting the test headless service @ 05/13/24 18:58:17.412
  I0513 18:58:17.464991 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-2740" for this suite. @ 05/13/24 18:58:17.47
• [18.405 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 05/13/24 18:58:17.512
  I0513 18:58:17.513006 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename secrets @ 05/13/24 18:58:17.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:58:17.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:58:17.602
  STEP: Creating secret with name secret-test-map-50e1cd74-1215-49c3-ab13-1161b7b413d0 @ 05/13/24 18:58:17.607
  STEP: Creating a pod to test consume secrets @ 05/13/24 18:58:17.625
  STEP: Saw pod success @ 05/13/24 18:58:33.732
  I0513 18:58:33.735332 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod pod-secrets-48f5ef2c-421d-4e78-ad57-c13d71bfebd1 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/13/24 18:58:33.745
  I0513 18:58:33.781568 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7916" for this suite. @ 05/13/24 18:58:33.785
• [16.289 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 05/13/24 18:58:33.802
  I0513 18:58:33.802476 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename webhook @ 05/13/24 18:58:33.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:58:33.84
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:58:33.846
  STEP: Setting up server cert @ 05/13/24 18:58:33.957
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/13/24 18:58:34.668
  STEP: Deploying the webhook pod @ 05/13/24 18:58:34.681
  STEP: Wait for the deployment to be ready @ 05/13/24 18:58:34.707
  I0513 18:58:34.713923 19 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 05/13/24 18:58:36.725
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 18:58:36.78
  I0513 18:58:37.780845 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 05/13/24 18:58:37.954
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/13/24 18:58:38.01
  STEP: Deleting the collection of validation webhooks @ 05/13/24 18:58:38.07
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/13/24 18:58:38.34
  I0513 18:58:38.471882 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4025" for this suite. @ 05/13/24 18:58:38.5
  STEP: Destroying namespace "webhook-markers-9014" for this suite. @ 05/13/24 18:58:38.514
• [4.730 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 05/13/24 18:58:38.532
  I0513 18:58:38.532414 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename limitrange @ 05/13/24 18:58:38.535
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:58:38.601
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:58:38.607
  STEP: Creating a LimitRange @ 05/13/24 18:58:38.619
  STEP: Setting up watch @ 05/13/24 18:58:38.619
  STEP: Submitting a LimitRange @ 05/13/24 18:58:38.727
  STEP: Verifying LimitRange creation was observed @ 05/13/24 18:58:38.738
  STEP: Fetching the LimitRange to ensure it has proper values @ 05/13/24 18:58:38.738
  I0513 18:58:38.742369 19 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0513 18:58:38.742435 19 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 05/13/24 18:58:38.742
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 05/13/24 18:58:38.754
  I0513 18:58:38.760730 19 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0513 18:58:38.760799 19 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 05/13/24 18:58:38.76
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 05/13/24 18:58:38.791
  I0513 18:58:38.815946 19 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0513 18:58:38.816015 19 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 05/13/24 18:58:38.816
  STEP: Failing to create a Pod with more than max resources @ 05/13/24 18:58:38.82
  STEP: Updating a LimitRange @ 05/13/24 18:58:38.823
  STEP: Verifying LimitRange updating is effective @ 05/13/24 18:58:38.84
  STEP: Creating a Pod with less than former min resources @ 05/13/24 18:58:40.845
  STEP: Failing to create a Pod with more than max resources @ 05/13/24 18:58:40.856
  STEP: Deleting a LimitRange @ 05/13/24 18:58:40.858
  STEP: Verifying the LimitRange was deleted @ 05/13/24 18:58:40.885
  I0513 18:58:45.890234 19 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 05/13/24 18:58:45.89
  I0513 18:58:45.903290 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-4838" for this suite. @ 05/13/24 18:58:45.907
• [7.402 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 05/13/24 18:58:45.935
  I0513 18:58:45.935595 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename projected @ 05/13/24 18:58:45.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:58:45.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:58:45.973
  STEP: Creating a pod to test downward API volume plugin @ 05/13/24 18:58:46.014
  STEP: Saw pod success @ 05/13/24 18:58:50.066
  I0513 18:58:50.069975 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod downwardapi-volume-5101c810-de2e-4772-b4ec-61f63b3ad917 container client-container: <nil>
  STEP: delete the pod @ 05/13/24 18:58:50.078
  I0513 18:58:50.120710 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-709" for this suite. @ 05/13/24 18:58:50.125
• [4.202 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 05/13/24 18:58:50.137
  I0513 18:58:50.137796 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename container-probe @ 05/13/24 18:58:50.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 18:58:50.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 18:58:50.182
  STEP: Creating pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660 @ 05/13/24 18:58:50.187
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/13/24 18:58:52.214
  I0513 18:58:52.217537 19 container_probe.go:1749] Initial restart count of pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 is 0
  I0513 18:58:52.221168 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 18:58:54.225057 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 18:58:56.230328 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 18:58:58.236304 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 18:59:00.241174 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 18:59:02.246205 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 18:59:04.252847 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 18:59:06.259215 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 18:59:08.264518 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 18:59:10.269585 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 18:59:12.275541 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 18:59:14.281891 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 18:59:16.287817 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 18:59:18.293214 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 18:59:20.298144 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 18:59:22.303381 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 18:59:24.308899 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 18:59:26.321791 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 18:59:28.328253 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 18:59:30.333172 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 18:59:32.338614 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 18:59:34.343503 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 18:59:36.348158 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 18:59:38.354496 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 18:59:40.359474 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 18:59:42.364452 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 18:59:44.368564 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 18:59:46.383458 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 18:59:48.390319 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 18:59:50.405505 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 18:59:52.410868 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 18:59:54.416031 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 18:59:56.425940 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 18:59:58.433039 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:00:00.440120 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:00:02.446971 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:00:04.455213 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:00:06.466292 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:00:08.477112 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:00:10.496778 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:00:12.507044 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:00:14.515649 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:00:16.520722 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:00:18.526191 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:00:20.530784 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:00:22.538495 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:00:24.543603 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:00:26.548023 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:00:28.553627 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:00:30.559088 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:00:32.563357 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:00:34.568024 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:00:36.572827 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:00:38.578076 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:00:40.582734 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:00:42.591345 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:00:44.595811 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:00:46.605682 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:00:48.611630 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:00:50.615794 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:00:52.620009 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:00:54.625513 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:00:56.631232 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:00:58.636542 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:01:00.640919 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:01:02.646888 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:01:04.652737 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:01:06.658019 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:01:08.663611 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:01:10.668271 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:01:12.673067 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:01:14.677462 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:01:16.682477 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:01:18.691642 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:01:20.696240 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:01:22.702843 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:01:24.707982 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:01:26.712947 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:01:28.720109 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:01:30.731638 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:01:32.735779 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:01:34.747520 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:01:36.755567 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:01:38.760989 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:01:40.766106 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:01:42.770556 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:01:44.774535 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:01:46.784141 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:01:48.790355 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:01:50.796281 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:01:52.800850 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:01:54.806159 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:01:56.811839 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:01:58.816641 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:02:00.821663 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:02:02.827566 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:02:04.841829 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:02:06.846082 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:02:08.850651 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:02:10.856146 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:02:12.861666 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:02:14.866818 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:02:16.871159 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:02:18.875614 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:02:20.888902 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:02:22.899742 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:02:24.905379 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:02:26.909143 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:02:28.914013 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:02:30.918888 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:02:32.924275 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:02:34.933816 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:02:36.941159 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:02:38.946712 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:02:40.951931 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:02:42.956785 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:02:44.962369 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:02:47.100203 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:02:49.115770 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  I0513 19:02:51.121469 19 container_probe.go:1759] Get pod liveness-3cd372c7-9255-43b4-8078-17de154b0d12 in namespace container-probe-2660
  STEP: deleting the pod @ 05/13/24 19:02:53.122
  I0513 19:02:53.158856 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2660" for this suite. @ 05/13/24 19:02:53.17
• [243.063 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 05/13/24 19:02:53.202
  I0513 19:02:53.202450 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/13/24 19:02:53.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:02:53.233
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:02:53.238
  STEP: set up a multi version CRD @ 05/13/24 19:02:53.243
  I0513 19:02:53.244543 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: rename a version @ 05/13/24 19:02:58.277
  STEP: check the new version name is served @ 05/13/24 19:02:58.308
  STEP: check the old version name is removed @ 05/13/24 19:02:59.77
  STEP: check the other version is not changed @ 05/13/24 19:03:00.533
  I0513 19:03:04.126090 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5615" for this suite. @ 05/13/24 19:03:04.135
• [10.949 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 05/13/24 19:03:04.152
  I0513 19:03:04.152099 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename cronjob @ 05/13/24 19:03:04.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:03:04.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:03:04.21
  STEP: Creating a suspended cronjob @ 05/13/24 19:03:04.214
  STEP: Ensuring no jobs are scheduled @ 05/13/24 19:03:04.231
  STEP: Ensuring no job exists by listing jobs explicitly @ 05/13/24 19:08:04.231
  STEP: Removing cronjob @ 05/13/24 19:08:04.235
  I0513 19:08:04.251154 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5060" for this suite. @ 05/13/24 19:08:04.256
• [300.132 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 05/13/24 19:08:04.284
  I0513 19:08:04.284204 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename field-validation @ 05/13/24 19:08:04.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:08:04.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:08:04.352
  I0513 19:08:04.356690 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 19:08:07.511588 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6515" for this suite. @ 05/13/24 19:08:07.518
• [3.247 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 05/13/24 19:08:07.531
  I0513 19:08:07.531196 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename projected @ 05/13/24 19:08:07.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:08:07.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:08:07.594
  STEP: Creating a pod to test downward API volume plugin @ 05/13/24 19:08:07.603
  STEP: Saw pod success @ 05/13/24 19:08:11.648
  I0513 19:08:11.652842 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod downwardapi-volume-402ce53d-3c09-45ff-8732-d76132d86203 container client-container: <nil>
  STEP: delete the pod @ 05/13/24 19:08:11.669
  I0513 19:08:11.710284 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2411" for this suite. @ 05/13/24 19:08:11.735
• [4.216 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 05/13/24 19:08:11.748
  I0513 19:08:11.748618 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename field-validation @ 05/13/24 19:08:11.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:08:11.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:08:11.789
  I0513 19:08:11.793635 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  W0513 19:08:14.370419      19 warnings.go:70] unknown field "alpha"
  W0513 19:08:14.370557      19 warnings.go:70] unknown field "beta"
  W0513 19:08:14.370670      19 warnings.go:70] unknown field "delta"
  W0513 19:08:14.370713      19 warnings.go:70] unknown field "epsilon"
  W0513 19:08:14.370722      19 warnings.go:70] unknown field "gamma"
  I0513 19:08:14.957909 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-232" for this suite. @ 05/13/24 19:08:14.963
• [3.237 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:51
  STEP: Creating a kubernetes client @ 05/13/24 19:08:14.986
  I0513 19:08:14.986116 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename kubelet-test @ 05/13/24 19:08:14.987
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:08:15.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:08:15.056
  I0513 19:08:17.103760 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8089" for this suite. @ 05/13/24 19:08:17.108
• [2.141 seconds]
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1858
  STEP: Creating a kubernetes client @ 05/13/24 19:08:17.127
  I0513 19:08:17.127808 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename kubectl @ 05/13/24 19:08:17.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:08:17.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:08:17.222
  STEP: Starting the proxy @ 05/13/24 19:08:17.228
  I0513 19:08:17.228495 19 util.go:592] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-3037 proxy --unix-socket=/tmp/kubectl-proxy-unix1813907326/test'
  STEP: retrieving proxy /api/ output @ 05/13/24 19:08:17.31
  I0513 19:08:17.311346 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3037" for this suite. @ 05/13/24 19:08:17.325
• [0.215 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 05/13/24 19:08:17.343
  I0513 19:08:17.343098 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/13/24 19:08:17.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:08:17.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:08:17.381
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 05/13/24 19:08:17.385
  I0513 19:08:17.386624 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 19:08:19.541708 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 19:08:26.906035 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4754" for this suite. @ 05/13/24 19:08:26.917
• [9.607 seconds]
------------------------------
S
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 05/13/24 19:08:26.95
  I0513 19:08:26.950227 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/13/24 19:08:26.951
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:08:26.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:08:27.005
  STEP: create the container to handle the HTTPGet hook request. @ 05/13/24 19:08:27.014
  STEP: create the pod with lifecycle hook @ 05/13/24 19:08:29.047
  STEP: check poststart hook @ 05/13/24 19:08:31.089
  STEP: delete the pod with lifecycle hook @ 05/13/24 19:08:31.097
  I0513 19:08:33.125139 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-3018" for this suite. @ 05/13/24 19:08:33.129
• [6.194 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 05/13/24 19:08:33.145
  I0513 19:08:33.145784 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename configmap @ 05/13/24 19:08:33.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:08:33.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:08:33.198
  STEP: Creating configMap with name configmap-test-volume-map-d5b43445-3034-4da4-827e-a7d3e548a3be @ 05/13/24 19:08:33.201
  STEP: Creating a pod to test consume configMaps @ 05/13/24 19:08:33.216
  STEP: Saw pod success @ 05/13/24 19:08:37.243
  I0513 19:08:37.248212 19 output.go:196] Trying to get logs from node ip-172-31-0-253.us-east-2.compute.internal pod pod-configmaps-e0d029a1-9275-4605-9577-f13f7d8a2a05 container agnhost-container: <nil>
  STEP: delete the pod @ 05/13/24 19:08:37.268
  I0513 19:08:37.368351 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5951" for this suite. @ 05/13/24 19:08:37.373
• [4.240 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 05/13/24 19:08:37.387
  I0513 19:08:37.387879 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename projected @ 05/13/24 19:08:37.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:08:37.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:08:37.439
  STEP: Creating projection with secret that has name projected-secret-test-map-0a102bf9-ceff-4707-a364-d6c7694d3b52 @ 05/13/24 19:08:37.443
  STEP: Creating a pod to test consume secrets @ 05/13/24 19:08:37.455
  STEP: Saw pod success @ 05/13/24 19:08:41.506
  I0513 19:08:41.513228 19 output.go:196] Trying to get logs from node ip-172-31-0-253.us-east-2.compute.internal pod pod-projected-secrets-52ae1ad5-4ab1-45a6-8c56-ef22ee77721b container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/13/24 19:08:41.521
  I0513 19:08:41.574402 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3633" for this suite. @ 05/13/24 19:08:41.578
• [4.210 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:321
  STEP: Creating a kubernetes client @ 05/13/24 19:08:41.598
  I0513 19:08:41.598660 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename statefulset @ 05/13/24 19:08:41.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:08:41.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:08:41.634
  STEP: Creating service test in namespace statefulset-4363 @ 05/13/24 19:08:41.637
  STEP: Creating a new StatefulSet @ 05/13/24 19:08:41.652
  I0513 19:08:41.668338 19 wait.go:40] Found 0 stateful pods, waiting for 3
  I0513 19:08:51.670795 19 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0513 19:08:51.670856 19 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0513 19:08:51.670874 19 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0513 19:08:51.685040 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=statefulset-4363 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0513 19:08:51.831709 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0513 19:08:51.831789 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0513 19:08:51.831816 19 statefulset.go:2184] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 05/13/24 19:09:01.84
  I0513 19:09:01.865531 19 statefulset.go:2241] Updating stateful set ss2
  STEP: Creating a new revision @ 05/13/24 19:09:01.865
  STEP: Updating Pods in reverse ordinal order @ 05/13/24 19:09:11.88
  I0513 19:09:11.889314 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=statefulset-4363 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0513 19:09:12.021142 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0513 19:09:12.021194 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0513 19:09:12.021215 19 statefulset.go:2208] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0513 19:09:32.055736 19 wait.go:158] Waiting for StatefulSet statefulset-4363/ss2 to complete update
  STEP: Rolling back to a previous revision @ 05/13/24 19:09:42.054
  I0513 19:09:42.054456 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=statefulset-4363 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0513 19:09:42.193596 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0513 19:09:42.193659 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0513 19:09:42.193690 19 statefulset.go:2184] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0513 19:09:52.237947 19 statefulset.go:2241] Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 05/13/24 19:10:02.253
  I0513 19:10:02.257714 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=statefulset-4363 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0513 19:10:02.386762 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0513 19:10:02.386828 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0513 19:10:02.386849 19 statefulset.go:2208] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0513 19:10:12.403756 19 wait.go:158] Waiting for StatefulSet statefulset-4363/ss2 to complete update
  I0513 19:10:12.403827 19 wait.go:165] Waiting for Pod statefulset-4363/ss2-0 to have revision ss2-7b6c9599d5 update revision ss2-5459d8585b
  I0513 19:10:22.406729 19 statefulset.go:135] Deleting all statefulset in ns statefulset-4363
  I0513 19:10:22.410483 19 rest.go:150] Scaling statefulset ss2 to 0
  I0513 19:10:32.441038 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0513 19:10:32.446249 19 rest.go:88] Deleting statefulset ss2
  I0513 19:10:32.473762 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4363" for this suite. @ 05/13/24 19:10:32.493
• [110.913 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 05/13/24 19:10:32.512
  I0513 19:10:32.512581 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename pods @ 05/13/24 19:10:32.514
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:10:32.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:10:32.583
  STEP: creating pod @ 05/13/24 19:10:32.587
  I0513 19:10:34.635291 19 pods.go:83] Pod pod-hostip-efc5de85-eb6f-4690-8a7e-ae89e4480da3 has hostIP: 172.31.11.14
  I0513 19:10:34.635707 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-86" for this suite. @ 05/13/24 19:10:34.641
• [2.140 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 05/13/24 19:10:34.653
  I0513 19:10:34.653581 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename runtimeclass @ 05/13/24 19:10:34.654
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:10:34.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:10:34.712
  I0513 19:10:36.763091 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8666" for this suite. @ 05/13/24 19:10:36.768
• [2.141 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 05/13/24 19:10:36.795
  I0513 19:10:36.795585 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename var-expansion @ 05/13/24 19:10:36.797
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:10:36.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:10:36.846
  STEP: Creating a pod to test substitution in container's command @ 05/13/24 19:10:36.851
  STEP: Saw pod success @ 05/13/24 19:10:41.145
  I0513 19:10:41.149887 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod var-expansion-8f5e79b8-6d92-4c4f-93ec-602804a8a8e3 container dapi-container: <nil>
  STEP: delete the pod @ 05/13/24 19:10:41.187
  I0513 19:10:41.219522 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6894" for this suite. @ 05/13/24 19:10:41.224
• [4.447 seconds]
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 05/13/24 19:10:41.242
  I0513 19:10:41.242507 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename secrets @ 05/13/24 19:10:41.243
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:10:41.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:10:41.28
  STEP: Creating projection with secret that has name secret-emptykey-test-c5308e77-ccd4-493a-a109-ca4794c0afc1 @ 05/13/24 19:10:41.284
  I0513 19:10:41.286461 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8936" for this suite. @ 05/13/24 19:10:41.292
• [0.068 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 05/13/24 19:10:41.31
  I0513 19:10:41.310948 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename projected @ 05/13/24 19:10:41.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:10:41.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:10:41.394
  STEP: Creating secret with name s-test-opt-del-792829f8-cff9-4347-8f91-9bdaefe9c46a @ 05/13/24 19:10:41.403
  STEP: Creating secret with name s-test-opt-upd-b95faabd-fb17-4b64-ba85-d5469982bbc8 @ 05/13/24 19:10:41.42
  STEP: Creating the pod @ 05/13/24 19:10:41.43
  STEP: Deleting secret s-test-opt-del-792829f8-cff9-4347-8f91-9bdaefe9c46a @ 05/13/24 19:10:43.51
  STEP: Updating secret s-test-opt-upd-b95faabd-fb17-4b64-ba85-d5469982bbc8 @ 05/13/24 19:10:43.526
  STEP: Creating secret with name s-test-opt-create-dc59be41-123a-44cc-a1d7-ec4e99caddb9 @ 05/13/24 19:10:43.553
  STEP: waiting to observe update in volume @ 05/13/24 19:10:43.567
  I0513 19:12:02.085506 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9683" for this suite. @ 05/13/24 19:12:02.09
• [80.800 seconds]
------------------------------
SSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 05/13/24 19:12:02.111
  I0513 19:12:02.111861 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename endpointslice @ 05/13/24 19:12:02.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:12:02.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:12:02.21
  I0513 19:12:02.233604 19 endpointslice.go:1045] Endpoints addresses: [3.135.218.159 3.139.238.222 3.15.21.73] , ports: [6443]
  I0513 19:12:02.233648 19 endpointslice.go:1075] EndpointSlices addresses: [3.135.218.159 3.139.238.222 3.15.21.73] , ports: [6443]
  I0513 19:12:02.233730 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-7188" for this suite. @ 05/13/24 19:12:02.25
• [0.156 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:397
  STEP: Creating a kubernetes client @ 05/13/24 19:12:02.268
  I0513 19:12:02.268826 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename resourcequota @ 05/13/24 19:12:02.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:12:02.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:12:02.341
  STEP: Counting existing ResourceQuota @ 05/13/24 19:12:02.346
  STEP: Creating a ResourceQuota @ 05/13/24 19:12:07.349
  STEP: Ensuring resource quota status is calculated @ 05/13/24 19:12:07.374
  STEP: Creating a ReplicationController @ 05/13/24 19:12:09.381
  STEP: Ensuring resource quota status captures replication controller creation @ 05/13/24 19:12:09.411
  STEP: Deleting a ReplicationController @ 05/13/24 19:12:11.416
  STEP: Ensuring resource quota status released usage @ 05/13/24 19:12:11.427
  I0513 19:12:13.432401 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3207" for this suite. @ 05/13/24 19:12:13.438
• [11.181 seconds]
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 05/13/24 19:12:13.45
  I0513 19:12:13.450631 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename dns @ 05/13/24 19:12:13.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:12:13.489
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:12:13.494
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-4922.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-4922.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 05/13/24 19:12:13.498
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-4922.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-4922.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 05/13/24 19:12:13.5
  STEP: creating a pod to probe /etc/hosts @ 05/13/24 19:12:13.5
  STEP: submitting the pod to kubernetes @ 05/13/24 19:12:13.5
  STEP: retrieving the pod @ 05/13/24 19:12:15.586
  STEP: looking for the results for each expected name from probers @ 05/13/24 19:12:15.591
  I0513 19:12:15.617517 19 dns_common.go:527] DNS probes using dns-4922/dns-test-6d893309-b744-476a-80db-3740e2bef057 succeeded

  STEP: deleting the pod @ 05/13/24 19:12:15.617
  I0513 19:12:15.670321 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4922" for this suite. @ 05/13/24 19:12:15.677
• [2.240 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:793
  STEP: Creating a kubernetes client @ 05/13/24 19:12:15.69
  I0513 19:12:15.690772 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename statefulset @ 05/13/24 19:12:15.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:12:15.75
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:12:15.754
  STEP: Creating service test in namespace statefulset-3328 @ 05/13/24 19:12:15.758
  STEP: Looking for a node to schedule stateful set and pod @ 05/13/24 19:12:15.771
  STEP: Creating pod with conflicting port in namespace statefulset-3328 @ 05/13/24 19:12:15.803
  STEP: Waiting until pod test-pod will start running in namespace statefulset-3328 @ 05/13/24 19:12:15.825
  STEP: Creating statefulset with conflicting port in namespace statefulset-3328 @ 05/13/24 19:12:17.839
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-3328 @ 05/13/24 19:12:17.854
  I0513 19:12:17.898537 19 statefulset.go:866] Observed stateful pod in namespace: statefulset-3328, name: ss-0, uid: 99e8b2cc-c4b5-43ea-9fc8-67c505614df9, status phase: Pending. Waiting for statefulset controller to delete.
  I0513 19:12:17.939917 19 statefulset.go:866] Observed stateful pod in namespace: statefulset-3328, name: ss-0, uid: 99e8b2cc-c4b5-43ea-9fc8-67c505614df9, status phase: Failed. Waiting for statefulset controller to delete.
  I0513 19:12:17.974786 19 statefulset.go:866] Observed stateful pod in namespace: statefulset-3328, name: ss-0, uid: 99e8b2cc-c4b5-43ea-9fc8-67c505614df9, status phase: Failed. Waiting for statefulset controller to delete.
  I0513 19:12:17.986272 19 statefulset.go:860] Observed delete event for stateful pod ss-0 in namespace statefulset-3328
  STEP: Removing pod with conflicting port in namespace statefulset-3328 @ 05/13/24 19:12:17.986
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-3328 and will be in running state @ 05/13/24 19:12:18.089
  I0513 19:12:20.107261 19 statefulset.go:135] Deleting all statefulset in ns statefulset-3328
  I0513 19:12:20.114465 19 rest.go:150] Scaling statefulset ss to 0
  I0513 19:12:30.137864 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0513 19:12:30.145309 19 rest.go:88] Deleting statefulset ss
  I0513 19:12:30.162781 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3328" for this suite. @ 05/13/24 19:12:30.167
• [14.499 seconds]
------------------------------
SS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 05/13/24 19:12:30.189
  I0513 19:12:30.189907 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename security-context-test @ 05/13/24 19:12:30.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:12:30.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:12:30.227
  I0513 19:12:34.283574 19 security_context.go:538] Got logs for pod "busybox-privileged-false-45754bfb-0c2c-4f67-ab9c-c4cb862d1dbb": "ip: RTNETLINK answers: Operation not permitted\n"
  I0513 19:12:34.283820 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7811" for this suite. @ 05/13/24 19:12:34.288
• [4.124 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 05/13/24 19:12:34.314
  I0513 19:12:34.314370 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename projected @ 05/13/24 19:12:34.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:12:34.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:12:34.359
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-5eaa7ce7-b842-4054-8df4-81a8faeec632 @ 05/13/24 19:12:34.373
  STEP: Creating the pod @ 05/13/24 19:12:34.388
  STEP: Updating configmap projected-configmap-test-upd-5eaa7ce7-b842-4054-8df4-81a8faeec632 @ 05/13/24 19:12:36.442
  STEP: waiting to observe update in volume @ 05/13/24 19:12:36.455
  I0513 19:13:42.824079 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4504" for this suite. @ 05/13/24 19:13:42.829
• [68.535 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 05/13/24 19:13:42.849
  I0513 19:13:42.849977 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename projected @ 05/13/24 19:13:42.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:13:42.897
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:13:42.901
  STEP: Creating configMap with name projected-configmap-test-volume-map-f75a4de0-421f-4cbf-8d55-58d037d9dd9b @ 05/13/24 19:13:42.905
  STEP: Creating a pod to test consume configMaps @ 05/13/24 19:13:42.916
  STEP: Saw pod success @ 05/13/24 19:13:46.952
  I0513 19:13:46.956189 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod pod-projected-configmaps-eee88f2c-7baa-495c-9424-33c62f02b8ff container agnhost-container: <nil>
  STEP: delete the pod @ 05/13/24 19:13:46.963
  I0513 19:13:47.003897 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2066" for this suite. @ 05/13/24 19:13:47.009
• [4.188 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:808
  STEP: Creating a kubernetes client @ 05/13/24 19:13:47.038
  I0513 19:13:47.038421 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename resourcequota @ 05/13/24 19:13:47.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:13:47.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:13:47.084
  STEP: Creating a ResourceQuota with best effort scope @ 05/13/24 19:13:47.088
  STEP: Ensuring ResourceQuota status is calculated @ 05/13/24 19:13:47.104
  STEP: Creating a ResourceQuota with not best effort scope @ 05/13/24 19:13:49.108
  STEP: Ensuring ResourceQuota status is calculated @ 05/13/24 19:13:49.123
  STEP: Creating a best-effort pod @ 05/13/24 19:13:51.128
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 05/13/24 19:13:51.157
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 05/13/24 19:13:53.161
  STEP: Deleting the pod @ 05/13/24 19:13:55.165
  STEP: Ensuring resource quota status released the pod usage @ 05/13/24 19:13:55.199
  STEP: Creating a not best-effort pod @ 05/13/24 19:13:57.204
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 05/13/24 19:13:57.23
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 05/13/24 19:13:59.235
  STEP: Deleting the pod @ 05/13/24 19:14:01.24
  STEP: Ensuring resource quota status released the pod usage @ 05/13/24 19:14:01.299
  I0513 19:14:03.306240 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5103" for this suite. @ 05/13/24 19:14:03.311
• [16.298 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 05/13/24 19:14:03.336
  I0513 19:14:03.336410 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/13/24 19:14:03.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:14:03.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:14:03.416
  I0513 19:14:03.421156 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 19:14:10.161575 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-71" for this suite. @ 05/13/24 19:14:10.166
• [6.842 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 05/13/24 19:14:10.178
  I0513 19:14:10.178663 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename configmap @ 05/13/24 19:14:10.179
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:14:10.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:14:10.268
  STEP: Creating configMap with name configmap-test-volume-7d87f5fb-d9f8-414f-8edd-ecbd0fcd0e2b @ 05/13/24 19:14:10.273
  STEP: Creating a pod to test consume configMaps @ 05/13/24 19:14:10.292
  STEP: Saw pod success @ 05/13/24 19:14:14.319
  I0513 19:14:14.323367 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod pod-configmaps-d86172eb-e41b-42c7-a352-a095a6e7ac00 container agnhost-container: <nil>
  STEP: delete the pod @ 05/13/24 19:14:14.333
  I0513 19:14:14.374725 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7503" for this suite. @ 05/13/24 19:14:14.38
• [4.232 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 05/13/24 19:14:14.41
  I0513 19:14:14.411013 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename discovery @ 05/13/24 19:14:14.411
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:14:14.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:14:14.466
  STEP: Setting up server cert @ 05/13/24 19:14:14.473
  I0513 19:14:14.780971 19 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0513 19:14:14.782012 19 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0513 19:14:14.782060 19 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0513 19:14:14.782075 19 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0513 19:14:14.782089 19 discovery.go:139] Checking APIGroup: apps
  I0513 19:14:14.783035 19 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0513 19:14:14.783073 19 discovery.go:148] Versions found [{apps/v1 v1}]
  I0513 19:14:14.783094 19 discovery.go:154] apps/v1 matches apps/v1
  I0513 19:14:14.783107 19 discovery.go:139] Checking APIGroup: events.k8s.io
  I0513 19:14:14.783940 19 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0513 19:14:14.783979 19 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0513 19:14:14.783993 19 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0513 19:14:14.784039 19 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0513 19:14:14.785082 19 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0513 19:14:14.785126 19 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0513 19:14:14.785139 19 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0513 19:14:14.785151 19 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0513 19:14:14.786307 19 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0513 19:14:14.786344 19 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0513 19:14:14.786357 19 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0513 19:14:14.786563 19 discovery.go:139] Checking APIGroup: autoscaling
  I0513 19:14:14.787909 19 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0513 19:14:14.787948 19 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0513 19:14:14.788267 19 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0513 19:14:14.788298 19 discovery.go:139] Checking APIGroup: batch
  I0513 19:14:14.789523 19 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0513 19:14:14.789561 19 discovery.go:148] Versions found [{batch/v1 v1}]
  I0513 19:14:14.789574 19 discovery.go:154] batch/v1 matches batch/v1
  I0513 19:14:14.789862 19 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0513 19:14:14.791028 19 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0513 19:14:14.791229 19 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0513 19:14:14.791389 19 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0513 19:14:14.791561 19 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0513 19:14:14.792951 19 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0513 19:14:14.792979 19 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0513 19:14:14.792994 19 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0513 19:14:14.793007 19 discovery.go:139] Checking APIGroup: policy
  I0513 19:14:14.794100 19 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0513 19:14:14.794138 19 discovery.go:148] Versions found [{policy/v1 v1}]
  I0513 19:14:14.794590 19 discovery.go:154] policy/v1 matches policy/v1
  I0513 19:14:14.794677 19 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0513 19:14:14.795923 19 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0513 19:14:14.796038 19 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0513 19:14:14.796129 19 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0513 19:14:14.796243 19 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0513 19:14:14.797427 19 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0513 19:14:14.797465 19 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0513 19:14:14.797479 19 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0513 19:14:14.797966 19 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0513 19:14:14.799444 19 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0513 19:14:14.799482 19 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0513 19:14:14.799497 19 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0513 19:14:14.799509 19 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0513 19:14:14.800611 19 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0513 19:14:14.800643 19 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0513 19:14:14.800656 19 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0513 19:14:14.800668 19 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0513 19:14:14.801765 19 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0513 19:14:14.801801 19 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0513 19:14:14.801815 19 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0513 19:14:14.801827 19 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0513 19:14:14.802917 19 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0513 19:14:14.802957 19 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0513 19:14:14.802969 19 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0513 19:14:14.802981 19 discovery.go:139] Checking APIGroup: node.k8s.io
  I0513 19:14:14.803915 19 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0513 19:14:14.803953 19 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0513 19:14:14.803975 19 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0513 19:14:14.803988 19 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0513 19:14:14.805056 19 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0513 19:14:14.805112 19 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0513 19:14:14.805126 19 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0513 19:14:14.805137 19 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0513 19:14:14.806309 19 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0513 19:14:14.806349 19 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  I0513 19:14:14.806363 19 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0513 19:14:14.806375 19 discovery.go:139] Checking APIGroup: helm.cattle.io
  I0513 19:14:14.807500 19 discovery.go:147] PreferredVersion.GroupVersion: helm.cattle.io/v1
  I0513 19:14:14.807537 19 discovery.go:148] Versions found [{helm.cattle.io/v1 v1}]
  I0513 19:14:14.807550 19 discovery.go:154] helm.cattle.io/v1 matches helm.cattle.io/v1
  I0513 19:14:14.807562 19 discovery.go:139] Checking APIGroup: k3s.cattle.io
  I0513 19:14:14.808576 19 discovery.go:147] PreferredVersion.GroupVersion: k3s.cattle.io/v1
  I0513 19:14:14.808664 19 discovery.go:148] Versions found [{k3s.cattle.io/v1 v1}]
  I0513 19:14:14.808680 19 discovery.go:154] k3s.cattle.io/v1 matches k3s.cattle.io/v1
  I0513 19:14:14.808693 19 discovery.go:139] Checking APIGroup: traefik.containo.us
  I0513 19:14:14.809712 19 discovery.go:147] PreferredVersion.GroupVersion: traefik.containo.us/v1alpha1
  I0513 19:14:14.809766 19 discovery.go:148] Versions found [{traefik.containo.us/v1alpha1 v1alpha1}]
  I0513 19:14:14.809780 19 discovery.go:154] traefik.containo.us/v1alpha1 matches traefik.containo.us/v1alpha1
  I0513 19:14:14.809792 19 discovery.go:139] Checking APIGroup: traefik.io
  I0513 19:14:14.810970 19 discovery.go:147] PreferredVersion.GroupVersion: traefik.io/v1alpha1
  I0513 19:14:14.811288 19 discovery.go:148] Versions found [{traefik.io/v1alpha1 v1alpha1}]
  I0513 19:14:14.811438 19 discovery.go:154] traefik.io/v1alpha1 matches traefik.io/v1alpha1
  I0513 19:14:14.811611 19 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I0513 19:14:14.812970 19 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I0513 19:14:14.813008 19 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I0513 19:14:14.813021 19 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I0513 19:14:14.813260 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-9326" for this suite. @ 05/13/24 19:14:14.817
• [0.418 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 05/13/24 19:14:14.828
  I0513 19:14:14.828825 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename tables @ 05/13/24 19:14:14.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:14:14.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:14:14.871
  I0513 19:14:14.879074 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-3480" for this suite. @ 05/13/24 19:14:14.882
• [0.078 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 05/13/24 19:14:14.906
  I0513 19:14:14.906784 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename gc @ 05/13/24 19:14:14.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:14:14.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:14:14.943
  STEP: create the deployment @ 05/13/24 19:14:14.95
  W0513 19:14:14.962246      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 05/13/24 19:14:14.962
  STEP: delete the deployment @ 05/13/24 19:14:15.474
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 05/13/24 19:14:15.489
  STEP: Gathering metrics @ 05/13/24 19:14:16.004
  W0513 19:14:16.020907      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0513 19:14:16.020962 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0513 19:14:16.021454 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-753" for this suite. @ 05/13/24 19:14:16.026
• [1.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 05/13/24 19:14:16.037
  I0513 19:14:16.037570 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename chunking @ 05/13/24 19:14:16.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:14:16.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:14:16.081
  STEP: creating a large number of resources @ 05/13/24 19:14:16.085
  STEP: retrieving those results in paged fashion several times @ 05/13/24 19:14:33.75
  I0513 19:14:33.795448 19 chunking.go:98] Retrieved 17/17 results with rv 47662 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjIsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0513 19:14:33.856705 19 chunking.go:98] Retrieved 17/17 results with rv 47662 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjIsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0513 19:14:33.895632 19 chunking.go:98] Retrieved 17/17 results with rv 47662 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjIsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0513 19:14:33.945719 19 chunking.go:98] Retrieved 17/17 results with rv 47662 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjIsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0513 19:14:33.994152 19 chunking.go:98] Retrieved 17/17 results with rv 47662 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjIsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0513 19:14:34.044781 19 chunking.go:98] Retrieved 17/17 results with rv 47662 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjIsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0513 19:14:34.093798 19 chunking.go:98] Retrieved 17/17 results with rv 47662 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjIsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0513 19:14:34.144319 19 chunking.go:98] Retrieved 17/17 results with rv 47662 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjIsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0513 19:14:34.195279 19 chunking.go:98] Retrieved 17/17 results with rv 47662 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjIsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0513 19:14:34.243299 19 chunking.go:98] Retrieved 17/17 results with rv 47662 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjIsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0513 19:14:34.295462 19 chunking.go:98] Retrieved 17/17 results with rv 47662 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjIsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0513 19:14:34.344704 19 chunking.go:98] Retrieved 17/17 results with rv 47662 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjIsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0513 19:14:34.393622 19 chunking.go:98] Retrieved 17/17 results with rv 47662 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjIsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0513 19:14:34.447635 19 chunking.go:98] Retrieved 17/17 results with rv 47662 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjIsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0513 19:14:34.493981 19 chunking.go:98] Retrieved 17/17 results with rv 47662 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjIsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0513 19:14:34.544703 19 chunking.go:98] Retrieved 17/17 results with rv 47662 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjIsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0513 19:14:34.594108 19 chunking.go:98] Retrieved 17/17 results with rv 47662 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjIsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0513 19:14:34.643535 19 chunking.go:98] Retrieved 17/17 results with rv 47662 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjIsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0513 19:14:34.695882 19 chunking.go:98] Retrieved 17/17 results with rv 47662 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjIsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0513 19:14:34.744351 19 chunking.go:98] Retrieved 17/17 results with rv 47662 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjIsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0513 19:14:34.817484 19 chunking.go:98] Retrieved 17/17 results with rv 47662 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjIsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0513 19:14:34.846927 19 chunking.go:98] Retrieved 17/17 results with rv 47662 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjIsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0513 19:14:34.894362 19 chunking.go:98] Retrieved 17/17 results with rv 47662 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjIsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0513 19:14:34.942976 19 chunking.go:98] Retrieved 9/17 results with rv 47662 and continue 
  I0513 19:14:35.006500 19 chunking.go:98] Retrieved 17/17 results with rv 47669 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjksInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0513 19:14:35.043828 19 chunking.go:98] Retrieved 17/17 results with rv 47669 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjksInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0513 19:14:35.094169 19 chunking.go:98] Retrieved 17/17 results with rv 47669 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjksInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0513 19:14:35.143888 19 chunking.go:98] Retrieved 17/17 results with rv 47669 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjksInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0513 19:14:35.195427 19 chunking.go:98] Retrieved 17/17 results with rv 47669 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjksInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0513 19:14:35.243847 19 chunking.go:98] Retrieved 17/17 results with rv 47669 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjksInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0513 19:14:35.293625 19 chunking.go:98] Retrieved 17/17 results with rv 47669 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjksInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0513 19:14:35.343667 19 chunking.go:98] Retrieved 17/17 results with rv 47669 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjksInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0513 19:14:35.393017 19 chunking.go:98] Retrieved 17/17 results with rv 47669 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjksInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0513 19:14:35.444721 19 chunking.go:98] Retrieved 17/17 results with rv 47669 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjksInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0513 19:14:35.494479 19 chunking.go:98] Retrieved 17/17 results with rv 47669 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjksInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0513 19:14:35.544067 19 chunking.go:98] Retrieved 17/17 results with rv 47669 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjksInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0513 19:14:35.594104 19 chunking.go:98] Retrieved 17/17 results with rv 47669 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjksInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0513 19:14:35.644258 19 chunking.go:98] Retrieved 17/17 results with rv 47669 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjksInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0513 19:14:35.694156 19 chunking.go:98] Retrieved 17/17 results with rv 47669 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjksInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0513 19:14:35.745563 19 chunking.go:98] Retrieved 17/17 results with rv 47669 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjksInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0513 19:14:35.794223 19 chunking.go:98] Retrieved 17/17 results with rv 47669 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjksInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0513 19:14:35.843937 19 chunking.go:98] Retrieved 17/17 results with rv 47669 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjksInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0513 19:14:35.892979 19 chunking.go:98] Retrieved 17/17 results with rv 47669 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjksInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0513 19:14:35.944199 19 chunking.go:98] Retrieved 17/17 results with rv 47669 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjksInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0513 19:14:35.993311 19 chunking.go:98] Retrieved 17/17 results with rv 47669 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjksInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0513 19:14:36.044630 19 chunking.go:98] Retrieved 17/17 results with rv 47669 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjksInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0513 19:14:36.095183 19 chunking.go:98] Retrieved 17/17 results with rv 47669 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NjksInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0513 19:14:36.142429 19 chunking.go:98] Retrieved 9/17 results with rv 47669 and continue 
  I0513 19:14:36.193255 19 chunking.go:98] Retrieved 17/17 results with rv 47672 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NzIsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0513 19:14:36.248970 19 chunking.go:98] Retrieved 17/17 results with rv 47672 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NzIsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0513 19:14:36.294577 19 chunking.go:98] Retrieved 17/17 results with rv 47672 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NzIsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0513 19:14:36.350186 19 chunking.go:98] Retrieved 17/17 results with rv 47672 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NzIsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0513 19:14:36.394555 19 chunking.go:98] Retrieved 17/17 results with rv 47672 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NzIsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0513 19:14:36.444530 19 chunking.go:98] Retrieved 17/17 results with rv 47672 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NzIsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0513 19:14:36.495036 19 chunking.go:98] Retrieved 17/17 results with rv 47672 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NzIsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0513 19:14:36.543119 19 chunking.go:98] Retrieved 17/17 results with rv 47672 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NzIsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0513 19:14:36.593823 19 chunking.go:98] Retrieved 17/17 results with rv 47672 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NzIsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0513 19:14:36.644429 19 chunking.go:98] Retrieved 17/17 results with rv 47672 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NzIsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0513 19:14:36.695146 19 chunking.go:98] Retrieved 17/17 results with rv 47672 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NzIsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0513 19:14:36.744467 19 chunking.go:98] Retrieved 17/17 results with rv 47672 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NzIsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0513 19:14:36.793223 19 chunking.go:98] Retrieved 17/17 results with rv 47672 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NzIsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0513 19:14:36.845768 19 chunking.go:98] Retrieved 17/17 results with rv 47672 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NzIsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0513 19:14:36.903660 19 chunking.go:98] Retrieved 17/17 results with rv 47672 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NzIsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0513 19:14:36.943813 19 chunking.go:98] Retrieved 17/17 results with rv 47672 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NzIsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0513 19:14:36.993876 19 chunking.go:98] Retrieved 17/17 results with rv 47672 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NzIsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0513 19:14:37.044130 19 chunking.go:98] Retrieved 17/17 results with rv 47672 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NzIsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0513 19:14:37.094202 19 chunking.go:98] Retrieved 17/17 results with rv 47672 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NzIsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0513 19:14:37.143592 19 chunking.go:98] Retrieved 17/17 results with rv 47672 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NzIsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0513 19:14:37.197808 19 chunking.go:98] Retrieved 17/17 results with rv 47672 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NzIsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0513 19:14:37.243339 19 chunking.go:98] Retrieved 17/17 results with rv 47672 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NzIsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0513 19:14:37.293366 19 chunking.go:98] Retrieved 17/17 results with rv 47672 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDc2NzIsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0513 19:14:37.342803 19 chunking.go:98] Retrieved 9/17 results with rv 47672 and continue 
  STEP: retrieving those results all at once @ 05/13/24 19:14:37.342
  I0513 19:14:37.407943 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-1425" for this suite. @ 05/13/24 19:14:37.445
• [21.463 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 05/13/24 19:14:37.501
  I0513 19:14:37.501815 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename emptydir-wrapper @ 05/13/24 19:14:37.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:14:37.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:14:37.556
  STEP: Cleaning up the secret @ 05/13/24 19:14:39.625
  STEP: Cleaning up the configmap @ 05/13/24 19:14:39.635
  STEP: Cleaning up the pod @ 05/13/24 19:14:39.646
  I0513 19:14:39.687146 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-3393" for this suite. @ 05/13/24 19:14:39.691
• [2.214 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:348
  STEP: Creating a kubernetes client @ 05/13/24 19:14:39.716
  I0513 19:14:39.716343 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename disruption @ 05/13/24 19:14:39.718
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:14:39.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:14:39.771
  STEP: Creating a pdb that targets all three pods in a test replica set @ 05/13/24 19:14:39.775
  STEP: Waiting for the pdb to be processed @ 05/13/24 19:14:39.79
  STEP: First trying to evict a pod which shouldn't be evictable @ 05/13/24 19:14:41.812
  STEP: Waiting for all pods to be running @ 05/13/24 19:14:41.812
  I0513 19:14:41.816905 19 disruption.go:567] pods: 0 < 3
  I0513 19:14:43.818930 19 disruption.go:578] running pods: 2 < 3
  STEP: locating a running pod @ 05/13/24 19:14:45.817
  STEP: Updating the pdb to allow a pod to be evicted @ 05/13/24 19:14:45.844
  STEP: Waiting for the pdb to be processed @ 05/13/24 19:14:45.874
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 05/13/24 19:14:47.879
  STEP: Waiting for all pods to be running @ 05/13/24 19:14:47.879
  STEP: Waiting for the pdb to observed all healthy pods @ 05/13/24 19:14:47.89
  STEP: Patching the pdb to disallow a pod to be evicted @ 05/13/24 19:14:47.966
  STEP: Waiting for the pdb to be processed @ 05/13/24 19:14:48.016
  STEP: Waiting for all pods to be running @ 05/13/24 19:14:50.022
  STEP: locating a running pod @ 05/13/24 19:14:50.03
  STEP: Deleting the pdb to allow a pod to be evicted @ 05/13/24 19:14:50.053
  STEP: Waiting for the pdb to be deleted @ 05/13/24 19:14:50.066
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 05/13/24 19:14:50.073
  STEP: Waiting for all pods to be running @ 05/13/24 19:14:50.073
  I0513 19:14:50.119965 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2036" for this suite. @ 05/13/24 19:14:50.155
• [10.467 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 05/13/24 19:14:50.183
  I0513 19:14:50.183665 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename runtimeclass @ 05/13/24 19:14:50.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:14:50.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:14:50.238
  STEP: Deleting RuntimeClass runtimeclass-7249-delete-me @ 05/13/24 19:14:50.269
  STEP: Waiting for the RuntimeClass to disappear @ 05/13/24 19:14:50.283
  I0513 19:14:50.294813 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7249" for this suite. @ 05/13/24 19:14:50.299
• [0.142 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3656
  STEP: Creating a kubernetes client @ 05/13/24 19:14:50.326
  I0513 19:14:50.326063 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename services @ 05/13/24 19:14:50.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:14:50.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:14:50.359
  STEP: creating service multiprotocol-test in namespace services-4360 @ 05/13/24 19:14:50.366
  STEP: creating pod pod1 in namespace services-4360 @ 05/13/24 19:14:50.411
  STEP: Creating pod pod1 in namespace services-4360 @ 05/13/24 19:14:50.412
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-4360 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 05/13/24 19:14:52.48
  I0513 19:14:52.490342 19 service.go:4351] successfully validated that service multiprotocol-test in namespace services-4360 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 05/13/24 19:14:52.49
  I0513 19:14:52.490436 19 resource.go:361] Creating new exec pod
  I0513 19:14:54.524686 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-4360 exec execpodk9sl5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.144.27 80'
  I0513 19:14:54.662367 19 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.144.27 80\n+ echo hostName\nConnection to 10.43.144.27 80 port [tcp/http] succeeded!\n"
  I0513 19:14:54.662469 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0513 19:14:54.662567 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-4360 exec execpodk9sl5 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.144.27 80'
  I0513 19:14:58.822417 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.144.27 80\nConnection to 10.43.144.27 80 port [udp/*] succeeded!\n"
  I0513 19:14:58.822475 19 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 05/13/24 19:14:58.822
  I0513 19:14:58.839700 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-4360 exec execpodk9sl5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.144.27 80'
  I0513 19:14:59.381435 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.144.27 80\nConnection to 10.43.144.27 80 port [tcp/http] succeeded!\n"
  I0513 19:14:59.381496 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0513 19:14:59.381600 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-4360 exec execpodk9sl5 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.144.27 80'
  I0513 19:15:03.541402 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.144.27 80\nConnection to 10.43.144.27 80 port [udp/*] succeeded!\n"
  I0513 19:15:03.541484 19 builder.go:147] stdout: ""
  I0513 19:15:03.541572 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-4360 exec execpodk9sl5 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.144.27 80'
  I0513 19:15:07.691984 19 builder.go:146] stderr: "+ nc -v -u -w 2 10.43.144.27 80\n+ echo hostName\nConnection to 10.43.144.27 80 port [udp/*] succeeded!\n"
  I0513 19:15:07.692053 19 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 05/13/24 19:15:07.692
  I0513 19:15:07.712961 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-4360 exec execpodk9sl5 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.144.27 80'
  I0513 19:15:11.913181 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.144.27 80\nConnection to 10.43.144.27 80 port [udp/*] succeeded!\n"
  I0513 19:15:11.913232 19 builder.go:147] stdout: "pod1"
  I0513 19:15:11.913449 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-4360 exec execpodk9sl5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.144.27 80'
  I0513 19:15:14.084927 19 builder.go:135] rc: 1
  I0513 19:15:14.085014 19 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-4360 exec execpodk9sl5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.144.27 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.43.144.27 80
  nc: connect to 10.43.144.27 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0513 19:15:14.085147 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-4360 exec execpodk9sl5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.144.27 80'
  I0513 19:15:16.223703 19 builder.go:135] rc: 1
  I0513 19:15:16.223799 19 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-4360 exec execpodk9sl5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.144.27 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.43.144.27 80
  nc: connect to 10.43.144.27 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0513 19:15:16.223916 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-4360 exec execpodk9sl5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.144.27 80'
  I0513 19:15:18.357506 19 builder.go:135] rc: 1
  I0513 19:15:18.357576 19 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-4360 exec execpodk9sl5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.144.27 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.43.144.27 80
  nc: connect to 10.43.144.27 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0513 19:15:18.357774 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4360" for this suite. @ 05/13/24 19:15:18.362
• [28.048 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:341
  STEP: Creating a kubernetes client @ 05/13/24 19:15:18.373
  I0513 19:15:18.373898 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename cronjob @ 05/13/24 19:15:18.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:15:18.416
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:15:18.42
  STEP: Creating a cronjob @ 05/13/24 19:15:18.423
  STEP: creating @ 05/13/24 19:15:18.423
  STEP: getting @ 05/13/24 19:15:18.442
  STEP: listing @ 05/13/24 19:15:18.448
  STEP: watching @ 05/13/24 19:15:18.452
  I0513 19:15:18.452045 19 cronjob.go:370] starting watch
  STEP: cluster-wide listing @ 05/13/24 19:15:18.453
  STEP: cluster-wide watching @ 05/13/24 19:15:18.457
  I0513 19:15:18.457601 19 cronjob.go:382] starting watch
  STEP: patching @ 05/13/24 19:15:18.459
  STEP: updating @ 05/13/24 19:15:18.493
  I0513 19:15:18.529276 19 cronjob.go:406] waiting for watch events with expected annotations
  I0513 19:15:18.529346 19 cronjob.go:420] saw patched and updated annotations
  STEP: patching /status @ 05/13/24 19:15:18.529
  STEP: updating /status @ 05/13/24 19:15:18.541
  STEP: get /status @ 05/13/24 19:15:18.557
  STEP: deleting @ 05/13/24 19:15:18.563
  STEP: deleting a collection @ 05/13/24 19:15:18.603
  I0513 19:15:18.626660 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3024" for this suite. @ 05/13/24 19:15:18.634
• [0.275 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 05/13/24 19:15:18.649
  I0513 19:15:18.649642 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename pods @ 05/13/24 19:15:18.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:15:18.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:15:18.738
  STEP: creating a Pod with a static label @ 05/13/24 19:15:18.752
  STEP: watching for Pod to be ready @ 05/13/24 19:15:18.775
  I0513 19:15:18.777990 19 pods.go:945] observed Pod pod-test in namespace pods-102 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0513 19:15:18.792175 19 pods.go:945] observed Pod pod-test in namespace pods-102 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:15:18 +0000 UTC  }]
  I0513 19:15:18.822491 19 pods.go:945] observed Pod pod-test in namespace pods-102 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:15:18 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:15:18 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:15:18 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:15:18 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:15:18 +0000 UTC  }]
  I0513 19:15:19.798183 19 pods.go:948] Found Pod pod-test in namespace pods-102 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:15:19 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:15:18 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:15:19 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:15:19 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 19:15:18 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 05/13/24 19:15:19.802
  STEP: getting the Pod and ensuring that it's patched @ 05/13/24 19:15:19.831
  STEP: replacing the Pod's status Ready condition to False @ 05/13/24 19:15:19.835
  STEP: check the Pod again to ensure its Ready conditions are False @ 05/13/24 19:15:19.866
  STEP: deleting the Pod via a Collection with a LabelSelector @ 05/13/24 19:15:19.866
  STEP: watching for the Pod to be deleted @ 05/13/24 19:15:19.899
  I0513 19:15:19.902731 19 pods.go:1058] observed event type MODIFIED
  I0513 19:15:21.814217 19 pods.go:1058] observed event type MODIFIED
  I0513 19:15:21.967943 19 pods.go:1058] observed event type MODIFIED
  I0513 19:15:22.821221 19 pods.go:1058] observed event type MODIFIED
  I0513 19:15:22.859715 19 pods.go:1058] observed event type MODIFIED
  I0513 19:15:22.876181 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-102" for this suite. @ 05/13/24 19:15:22.881
• [4.244 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 05/13/24 19:15:22.895
  I0513 19:15:22.895536 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename disruption @ 05/13/24 19:15:22.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:15:22.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:15:22.942
  STEP: Waiting for the pdb to be processed @ 05/13/24 19:15:22.967
  STEP: Updating PodDisruptionBudget status @ 05/13/24 19:15:22.979
  STEP: Waiting for all pods to be running @ 05/13/24 19:15:22.999
  I0513 19:15:23.003777 19 disruption.go:578] running pods: 0 < 1
  STEP: locating a running pod @ 05/13/24 19:15:25.012
  STEP: Waiting for the pdb to be processed @ 05/13/24 19:15:25.04
  STEP: Patching PodDisruptionBudget status @ 05/13/24 19:15:25.061
  STEP: Waiting for the pdb to be processed @ 05/13/24 19:15:25.08
  I0513 19:15:25.085545 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7730" for this suite. @ 05/13/24 19:15:25.093
• [2.217 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 05/13/24 19:15:25.113
  I0513 19:15:25.113068 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename container-runtime @ 05/13/24 19:15:25.114
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:15:25.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:15:25.21
  STEP: create the container @ 05/13/24 19:15:25.22
  W0513 19:15:25.245745      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 05/13/24 19:15:25.245
  STEP: get the container status @ 05/13/24 19:15:28.278
  STEP: the container should be terminated @ 05/13/24 19:15:28.281
  STEP: the termination message should be set @ 05/13/24 19:15:28.281
  I0513 19:15:28.281974 19 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 05/13/24 19:15:28.282
  I0513 19:15:28.308360 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-1840" for this suite. @ 05/13/24 19:15:28.312
• [3.217 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 05/13/24 19:15:28.33
  I0513 19:15:28.331088 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename emptydir @ 05/13/24 19:15:28.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:15:28.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:15:28.385
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 05/13/24 19:15:28.409
  STEP: Saw pod success @ 05/13/24 19:15:32.485
  I0513 19:15:32.488836 19 output.go:196] Trying to get logs from node ip-172-31-0-253.us-east-2.compute.internal pod pod-4d0802f7-1681-4118-bdab-512442c8dbda container test-container: <nil>
  STEP: delete the pod @ 05/13/24 19:15:32.504
  I0513 19:15:32.543427 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5703" for this suite. @ 05/13/24 19:15:32.551
• [4.237 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 05/13/24 19:15:32.569
  I0513 19:15:32.569170 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename secrets @ 05/13/24 19:15:32.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:15:32.608
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:15:32.611
  STEP: Creating secret with name secret-test-fd4c8120-db24-4688-9bee-f51addc15f8c @ 05/13/24 19:15:32.616
  STEP: Creating a pod to test consume secrets @ 05/13/24 19:15:32.627
  STEP: Saw pod success @ 05/13/24 19:15:36.718
  I0513 19:15:36.724979 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod pod-secrets-fba2d506-a422-4e6a-8261-dda27e4c2c40 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/13/24 19:15:36.733
  I0513 19:15:36.780591 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6106" for this suite. @ 05/13/24 19:15:36.797
• [4.259 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 05/13/24 19:15:36.829
  I0513 19:15:36.829634 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename dns @ 05/13/24 19:15:36.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:15:36.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:15:36.894
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 05/13/24 19:15:36.898
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 05/13/24 19:15:36.899
  STEP: creating a pod to probe DNS @ 05/13/24 19:15:36.899
  STEP: submitting the pod to kubernetes @ 05/13/24 19:15:36.899
  STEP: retrieving the pod @ 05/13/24 19:15:38.946
  STEP: looking for the results for each expected name from probers @ 05/13/24 19:15:38.949
  I0513 19:15:38.971403 19 dns_common.go:527] DNS probes using dns-5814/dns-test-cbf2a61e-b034-4e49-b7b9-1424efe92851 succeeded

  STEP: deleting the pod @ 05/13/24 19:15:38.971
  I0513 19:15:39.013329 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5814" for this suite. @ 05/13/24 19:15:39.019
• [2.205 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1015
  STEP: Creating a kubernetes client @ 05/13/24 19:15:39.035
  I0513 19:15:39.035764 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename resourcequota @ 05/13/24 19:15:39.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:15:39.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:15:39.072
  STEP: Creating resourceQuota "e2e-rq-status-2k9g4" @ 05/13/24 19:15:39.088
  I0513 19:15:39.104536 19 resource_quota.go:1051] Resource quota "e2e-rq-status-2k9g4" reports spec: hard cpu limit of 500m
  I0513 19:15:39.104832 19 resource_quota.go:1053] Resource quota "e2e-rq-status-2k9g4" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-2k9g4" /status @ 05/13/24 19:15:39.105
  STEP: Confirm /status for "e2e-rq-status-2k9g4" resourceQuota via watch @ 05/13/24 19:15:39.154
  I0513 19:15:39.166214 19 resource_quota.go:1080] observed resourceQuota "e2e-rq-status-2k9g4" in namespace "resourcequota-2554" with hard status: v1.ResourceList(nil)
  I0513 19:15:39.166347 19 resource_quota.go:1083] Found resourceQuota "e2e-rq-status-2k9g4" in namespace "resourcequota-2554" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0513 19:15:39.166372 19 resource_quota.go:1090] ResourceQuota "e2e-rq-status-2k9g4" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 05/13/24 19:15:39.17
  I0513 19:15:39.184888 19 resource_quota.go:1101] Resource quota "e2e-rq-status-2k9g4" reports spec: hard cpu limit of 1
  I0513 19:15:39.184959 19 resource_quota.go:1102] Resource quota "e2e-rq-status-2k9g4" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-2k9g4" /status @ 05/13/24 19:15:39.184
  STEP: Confirm /status for "e2e-rq-status-2k9g4" resourceQuota via watch @ 05/13/24 19:15:39.204
  I0513 19:15:39.206999 19 resource_quota.go:1124] observed resourceQuota "e2e-rq-status-2k9g4" in namespace "resourcequota-2554" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0513 19:15:39.207187 19 resource_quota.go:1127] Found resourceQuota "e2e-rq-status-2k9g4" in namespace "resourcequota-2554" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0513 19:15:39.207290 19 resource_quota.go:1134] ResourceQuota "e2e-rq-status-2k9g4" /status was patched
  STEP: Get "e2e-rq-status-2k9g4" /status @ 05/13/24 19:15:39.207
  I0513 19:15:39.211038 19 resource_quota.go:1145] Resourcequota "e2e-rq-status-2k9g4" reports status: hard cpu of 1
  I0513 19:15:39.211086 19 resource_quota.go:1147] Resourcequota "e2e-rq-status-2k9g4" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-2k9g4" /status before checking Spec is unchanged @ 05/13/24 19:15:39.213
  I0513 19:15:39.234583 19 resource_quota.go:1167] Resourcequota "e2e-rq-status-2k9g4" reports status: hard cpu of 2
  I0513 19:15:39.234736 19 resource_quota.go:1169] Resourcequota "e2e-rq-status-2k9g4" reports status: hard memory of 2Gi
  I0513 19:15:39.236758 19 resource_quota.go:1181] Found resourceQuota "e2e-rq-status-2k9g4" in namespace "resourcequota-2554" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0513 19:15:39.239638 19 resource_quota.go:1212] ResourceQuota "e2e-rq-status-2k9g4" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-2k9g4", GenerateName:"", Namespace:"resourcequota-2554", SelfLink:"", UID:"ce8e6d37-6daa-4b5d-bc7f-c01c2925f96d", ResourceVersion:"48710", Generation:0, CreationTimestamp:time.Date(2024, time.May, 13, 19, 15, 39, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-2k9g4"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 13, 19, 15, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d93b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 13, 19, 15, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d93f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 13, 19, 15, 39, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053d9428), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList(nil)}}
  I0513 19:15:44.240712 19 resource_quota.go:1209] ResourceQuota "e2e-rq-status-2k9g4" Spec was unchanged and /status reset
  I0513 19:15:44.240905 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2554" for this suite. @ 05/13/24 19:15:44.245
• [5.226 seconds]
------------------------------
SS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 05/13/24 19:15:44.262
  I0513 19:15:44.262944 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename hostport @ 05/13/24 19:15:44.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:15:44.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:15:44.3
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 05/13/24 19:15:44.314
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.14.0 on the node which pod1 resides and expect scheduled @ 05/13/24 19:15:50.36
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.14.0 but use UDP protocol on the node which pod2 resides @ 05/13/24 19:15:52.404
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 05/13/24 19:15:56.475
  I0513 19:15:56.475937 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.14.0 http://127.0.0.1:54323/hostname] Namespace:hostport-1988 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 19:15:56.475962 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 19:15:56.476601 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 19:15:56.476679 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-1988/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.14.0+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.14.0, port: 54323 @ 05/13/24 19:15:56.576
  I0513 19:15:56.576829 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.14.0:54323/hostname] Namespace:hostport-1988 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 19:15:56.576854 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 19:15:56.577557 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 19:15:56.579335 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-1988/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.14.0%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.14.0, port: 54323 UDP @ 05/13/24 19:15:56.636
  I0513 19:15:56.636489 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.14.0 54323] Namespace:hostport-1988 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 19:15:56.636514 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 19:15:56.637304 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 19:15:56.637389 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-1988/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.14.0+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  I0513 19:16:01.697425 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-1988" for this suite. @ 05/13/24 19:16:01.705
• [17.461 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 05/13/24 19:16:01.723
  I0513 19:16:01.723682 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename crd-watch @ 05/13/24 19:16:01.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:16:01.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:16:01.763
  I0513 19:16:01.767352 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Creating first CR  @ 05/13/24 19:16:04.36
  I0513 19:16:04.373206 19 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-13T19:16:04Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-13T19:16:04Z]] name:name1 resourceVersion:48866 uid:a60b4a82-7add-41af-af00-a1184e845e90] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 05/13/24 19:16:14.374
  I0513 19:16:14.406762 19 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-13T19:16:14Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-13T19:16:14Z]] name:name2 resourceVersion:48940 uid:e8e7f951-a453-4665-b443-374df6121a7e] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 05/13/24 19:16:24.407
  I0513 19:16:24.422536 19 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-13T19:16:04Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-13T19:16:24Z]] name:name1 resourceVersion:48976 uid:a60b4a82-7add-41af-af00-a1184e845e90] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 05/13/24 19:16:34.423
  I0513 19:16:34.440487 19 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-13T19:16:14Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-13T19:16:34Z]] name:name2 resourceVersion:49012 uid:e8e7f951-a453-4665-b443-374df6121a7e] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 05/13/24 19:16:44.441
  I0513 19:16:44.454311 19 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-13T19:16:04Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-13T19:16:24Z]] name:name1 resourceVersion:49048 uid:a60b4a82-7add-41af-af00-a1184e845e90] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 05/13/24 19:16:54.455
  I0513 19:16:54.469726 19 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-05-13T19:16:14Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-05-13T19:16:34Z]] name:name2 resourceVersion:49084 uid:e8e7f951-a453-4665-b443-374df6121a7e] num:map[num1:9223372036854775807 num2:1000000]]}
  I0513 19:17:04.997404 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-7352" for this suite. @ 05/13/24 19:17:05.007
• [63.301 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 05/13/24 19:17:05.024
  I0513 19:17:05.024369 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename emptydir @ 05/13/24 19:17:05.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:17:05.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:17:05.075
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 05/13/24 19:17:05.079
  STEP: Saw pod success @ 05/13/24 19:17:09.118
  I0513 19:17:09.125723 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod pod-9e11fc86-57b1-4f3a-8d3a-86ab82d32973 container test-container: <nil>
  STEP: delete the pod @ 05/13/24 19:17:09.147
  I0513 19:17:09.192217 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6338" for this suite. @ 05/13/24 19:17:09.197
• [4.186 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:841
  STEP: Creating a kubernetes client @ 05/13/24 19:17:09.211
  I0513 19:17:09.211571 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename webhook @ 05/13/24 19:17:09.212
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:17:09.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:17:09.245
  STEP: Setting up server cert @ 05/13/24 19:17:09.3
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/13/24 19:17:09.726
  STEP: Deploying the webhook pod @ 05/13/24 19:17:09.752
  STEP: Wait for the deployment to be ready @ 05/13/24 19:17:09.783
  I0513 19:17:09.819518 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/13/24 19:17:11.83
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 19:17:11.86
  I0513 19:17:12.860693 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 05/13/24 19:17:12.868
  I0513 19:17:12.990082 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9731" for this suite. @ 05/13/24 19:17:13.007
  STEP: Destroying namespace "webhook-markers-6736" for this suite. @ 05/13/24 19:17:13.03
• [3.835 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:142
  STEP: Creating a kubernetes client @ 05/13/24 19:17:13.047
  I0513 19:17:13.047323 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename crd-webhook @ 05/13/24 19:17:13.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:17:13.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:17:13.091
  STEP: Setting up server cert @ 05/13/24 19:17:13.095
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 05/13/24 19:17:13.884
  STEP: Deploying the custom resource conversion webhook pod @ 05/13/24 19:17:13.897
  STEP: Wait for the deployment to be ready @ 05/13/24 19:17:13.942
  I0513 19:17:13.964621 19 deployment.go:222] new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  I0513 19:17:15.986613 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 19, 17, 14, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 17, 14, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 17, 14, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 17, 13, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-6c44f5d846\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 05/13/24 19:17:17.992
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 19:17:18.02
  I0513 19:17:19.021162 19 util.go:427] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0513 19:17:19.028882 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Creating a v1 custom resource @ 05/13/24 19:17:21.616
  STEP: v2 custom resource should be converted @ 05/13/24 19:17:21.631
  I0513 19:17:22.275171 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-6833" for this suite. @ 05/13/24 19:17:22.279
• [9.242 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 05/13/24 19:17:22.29
  I0513 19:17:22.290319 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename emptydir @ 05/13/24 19:17:22.291
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:17:22.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:17:22.389
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 05/13/24 19:17:22.392
  STEP: Saw pod success @ 05/13/24 19:17:26.435
  I0513 19:17:26.438649 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod pod-b18ef6a2-24f4-4532-b65f-d1a57aecb82c container test-container: <nil>
  STEP: delete the pod @ 05/13/24 19:17:26.447
  I0513 19:17:26.485496 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4282" for this suite. @ 05/13/24 19:17:26.491
• [4.214 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 05/13/24 19:17:26.504
  I0513 19:17:26.505028 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename var-expansion @ 05/13/24 19:17:26.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:17:26.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:17:26.554
  I0513 19:17:28.591598 19 delete.go:62] Deleting pod "var-expansion-49ec80cf-73f6-4119-8f8f-fa541d1956d3" in namespace "var-expansion-560"
  I0513 19:17:28.607781 19 delete.go:70] Wait up to 5m0s for pod "var-expansion-49ec80cf-73f6-4119-8f8f-fa541d1956d3" to be fully deleted
  I0513 19:17:30.618252 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-560" for this suite. @ 05/13/24 19:17:30.623
• [4.129 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 05/13/24 19:17:30.634
  I0513 19:17:30.634998 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename security-context @ 05/13/24 19:17:30.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:17:30.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:17:30.671
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 05/13/24 19:17:30.676
  STEP: Saw pod success @ 05/13/24 19:17:34.735
  I0513 19:17:34.739633 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod security-context-5dc3f20c-d62d-4cd2-8898-9f2d8126d3f7 container test-container: <nil>
  STEP: delete the pod @ 05/13/24 19:17:34.746
  I0513 19:17:34.794249 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-4585" for this suite. @ 05/13/24 19:17:34.805
• [4.188 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 05/13/24 19:17:34.828
  I0513 19:17:34.828569 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename replicaset @ 05/13/24 19:17:34.83
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:17:34.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:17:34.889
  STEP: Create a ReplicaSet @ 05/13/24 19:17:34.893
  STEP: Verify that the required pods have come up @ 05/13/24 19:17:34.903
  I0513 19:17:34.907343 19 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  I0513 19:17:39.926813 19 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 05/13/24 19:17:39.926
  I0513 19:17:39.938767 19 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 05/13/24 19:17:39.938
  STEP: DeleteCollection of the ReplicaSets @ 05/13/24 19:17:39.946
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 05/13/24 19:17:39.959
  I0513 19:17:39.966242 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-5115" for this suite. @ 05/13/24 19:17:39.975
• [5.263 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 05/13/24 19:17:40.091
  I0513 19:17:40.091636 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 05/13/24 19:17:40.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:17:40.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:17:40.169
  STEP: creating a target pod @ 05/13/24 19:17:40.174
  STEP: adding an ephemeral container @ 05/13/24 19:17:42.212
  STEP: checking pod container endpoints @ 05/13/24 19:17:44.238
  I0513 19:17:44.238995 19 exec_util.go:55] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-779 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 19:17:44.239019 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 19:17:44.239774 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 19:17:44.239848 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/ephemeral-containers-test-779/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I0513 19:17:44.293497 19 exec_util.go:106] Exec stderr: ""
  I0513 19:17:44.309181 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-779" for this suite. @ 05/13/24 19:17:44.315
• [4.245 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 05/13/24 19:17:44.336
  I0513 19:17:44.336634 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename init-container @ 05/13/24 19:17:44.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:17:44.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:17:44.398
  STEP: creating the pod @ 05/13/24 19:17:44.402
  I0513 19:17:44.402767 19 init_container.go:294] PodSpec: initContainers in spec.initContainers
  I0513 19:17:48.140868 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9305" for this suite. @ 05/13/24 19:17:48.147
• [3.823 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 05/13/24 19:17:48.159
  I0513 19:17:48.159538 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename aggregateddiscovery @ 05/13/24 19:17:48.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:17:48.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:17:48.213
  I0513 19:17:48.216882 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 19:17:51.322252 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-5467" for this suite. @ 05/13/24 19:17:51.328
• [3.189 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1459
  STEP: Creating a kubernetes client @ 05/13/24 19:17:51.349
  I0513 19:17:51.349482 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename services @ 05/13/24 19:17:51.35
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:17:51.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:17:51.4
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-4129 @ 05/13/24 19:17:51.404
  STEP: changing the ExternalName service to type=NodePort @ 05/13/24 19:17:51.418
  STEP: creating replication controller externalname-service in namespace services-4129 @ 05/13/24 19:17:51.468
  I0513 19:17:51.500172      19 runners.go:198] Created replication controller with name: externalname-service, namespace: services-4129, replica count: 2
  I0513 19:17:54.550737      19 runners.go:198] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0513 19:17:54.550900 19 resource.go:361] Creating new exec pod
  I0513 19:17:57.593493 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-4129 exec execpod2m4qz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0513 19:17:57.732312 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0513 19:17:57.732380 19 builder.go:147] stdout: "externalname-service-hglbx"
  I0513 19:17:57.732644 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-4129 exec execpod2m4qz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.204.21 80'
  I0513 19:17:57.885397 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.204.21 80\nConnection to 10.43.204.21 80 port [tcp/http] succeeded!\n"
  I0513 19:17:57.885466 19 builder.go:147] stdout: "externalname-service-rbls8"
  I0513 19:17:57.885570 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-4129 exec execpod2m4qz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.0.253 31455'
  I0513 19:17:58.022837 19 builder.go:146] stderr: "+ + ncecho -v hostName\n -t -w 2 172.31.0.253 31455\nConnection to 172.31.0.253 31455 port [tcp/*] succeeded!\n"
  I0513 19:17:58.022919 19 builder.go:147] stdout: ""
  I0513 19:17:58.885804 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-4129 exec execpod2m4qz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.0.253 31455'
  I0513 19:17:59.031895 19 builder.go:146] stderr: "+ nc -v -t -w 2 172.31.0.253 31455\n+ echo hostName\nConnection to 172.31.0.253 31455 port [tcp/*] succeeded!\n"
  I0513 19:17:59.031982 19 builder.go:147] stdout: "externalname-service-hglbx"
  I0513 19:17:59.032081 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-4129 exec execpod2m4qz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.11.14 31455'
  I0513 19:17:59.197176 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.11.14 31455\nConnection to 172.31.11.14 31455 port [tcp/*] succeeded!\n"
  I0513 19:17:59.197252 19 builder.go:147] stdout: "externalname-service-hglbx"
  I0513 19:17:59.197339 19 service.go:1468] Cleaning up the ExternalName to NodePort test service
  I0513 19:17:59.264550 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4129" for this suite. @ 05/13/24 19:17:59.27
• [7.937 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 05/13/24 19:17:59.286
  I0513 19:17:59.286978 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename aggregateddiscovery @ 05/13/24 19:17:59.287
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:17:59.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:17:59.345
  I0513 19:17:59.354382 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-1085" for this suite. @ 05/13/24 19:17:59.359
• [0.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 05/13/24 19:17:59.381
  I0513 19:17:59.381658 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename container-probe @ 05/13/24 19:17:59.382
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:17:59.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:17:59.436
  STEP: Creating pod busybox-6df5be1b-9b36-4c8f-ae4c-6cd6f0dec139 in namespace container-probe-3073 @ 05/13/24 19:17:59.451
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/13/24 19:18:01.496
  I0513 19:18:01.499123 19 container_probe.go:1749] Initial restart count of pod busybox-6df5be1b-9b36-4c8f-ae4c-6cd6f0dec139 is 0
  I0513 19:18:01.502608 19 container_probe.go:1759] Get pod busybox-6df5be1b-9b36-4c8f-ae4c-6cd6f0dec139 in namespace container-probe-3073
  I0513 19:18:03.508494 19 container_probe.go:1759] Get pod busybox-6df5be1b-9b36-4c8f-ae4c-6cd6f0dec139 in namespace container-probe-3073
  I0513 19:18:05.513054 19 container_probe.go:1759] Get pod busybox-6df5be1b-9b36-4c8f-ae4c-6cd6f0dec139 in namespace container-probe-3073
  I0513 19:18:07.519648 19 container_probe.go:1759] Get pod busybox-6df5be1b-9b36-4c8f-ae4c-6cd6f0dec139 in namespace container-probe-3073
  I0513 19:18:09.525231 19 container_probe.go:1759] Get pod busybox-6df5be1b-9b36-4c8f-ae4c-6cd6f0dec139 in namespace container-probe-3073
  I0513 19:18:11.530909 19 container_probe.go:1759] Get pod busybox-6df5be1b-9b36-4c8f-ae4c-6cd6f0dec139 in namespace container-probe-3073
  I0513 19:18:13.535051 19 container_probe.go:1759] Get pod busybox-6df5be1b-9b36-4c8f-ae4c-6cd6f0dec139 in namespace container-probe-3073
  I0513 19:18:15.541385 19 container_probe.go:1759] Get pod busybox-6df5be1b-9b36-4c8f-ae4c-6cd6f0dec139 in namespace container-probe-3073
  I0513 19:18:17.548423 19 container_probe.go:1759] Get pod busybox-6df5be1b-9b36-4c8f-ae4c-6cd6f0dec139 in namespace container-probe-3073
  I0513 19:18:19.605259 19 container_probe.go:1759] Get pod busybox-6df5be1b-9b36-4c8f-ae4c-6cd6f0dec139 in namespace container-probe-3073
  I0513 19:18:21.611022 19 container_probe.go:1759] Get pod busybox-6df5be1b-9b36-4c8f-ae4c-6cd6f0dec139 in namespace container-probe-3073
  I0513 19:18:23.616141 19 container_probe.go:1759] Get pod busybox-6df5be1b-9b36-4c8f-ae4c-6cd6f0dec139 in namespace container-probe-3073
  I0513 19:18:25.620717 19 container_probe.go:1759] Get pod busybox-6df5be1b-9b36-4c8f-ae4c-6cd6f0dec139 in namespace container-probe-3073
  I0513 19:18:27.625968 19 container_probe.go:1759] Get pod busybox-6df5be1b-9b36-4c8f-ae4c-6cd6f0dec139 in namespace container-probe-3073
  I0513 19:18:29.631391 19 container_probe.go:1759] Get pod busybox-6df5be1b-9b36-4c8f-ae4c-6cd6f0dec139 in namespace container-probe-3073
  I0513 19:18:31.636515 19 container_probe.go:1759] Get pod busybox-6df5be1b-9b36-4c8f-ae4c-6cd6f0dec139 in namespace container-probe-3073
  I0513 19:18:33.642638 19 container_probe.go:1759] Get pod busybox-6df5be1b-9b36-4c8f-ae4c-6cd6f0dec139 in namespace container-probe-3073
  I0513 19:18:35.648363 19 container_probe.go:1759] Get pod busybox-6df5be1b-9b36-4c8f-ae4c-6cd6f0dec139 in namespace container-probe-3073
  I0513 19:18:37.653919 19 container_probe.go:1759] Get pod busybox-6df5be1b-9b36-4c8f-ae4c-6cd6f0dec139 in namespace container-probe-3073
  I0513 19:18:39.657812 19 container_probe.go:1759] Get pod busybox-6df5be1b-9b36-4c8f-ae4c-6cd6f0dec139 in namespace container-probe-3073
  I0513 19:18:41.662908 19 container_probe.go:1759] Get pod busybox-6df5be1b-9b36-4c8f-ae4c-6cd6f0dec139 in namespace container-probe-3073
  I0513 19:18:43.666988 19 container_probe.go:1759] Get pod busybox-6df5be1b-9b36-4c8f-ae4c-6cd6f0dec139 in namespace container-probe-3073
  I0513 19:18:45.672769 19 container_probe.go:1759] Get pod busybox-6df5be1b-9b36-4c8f-ae4c-6cd6f0dec139 in namespace container-probe-3073
  I0513 19:18:47.678138 19 container_probe.go:1759] Get pod busybox-6df5be1b-9b36-4c8f-ae4c-6cd6f0dec139 in namespace container-probe-3073
  I0513 19:18:49.683291 19 container_probe.go:1759] Get pod busybox-6df5be1b-9b36-4c8f-ae4c-6cd6f0dec139 in namespace container-probe-3073
  I0513 19:18:51.688651 19 container_probe.go:1759] Get pod busybox-6df5be1b-9b36-4c8f-ae4c-6cd6f0dec139 in namespace container-probe-3073
  I0513 19:18:51.688703 19 container_probe.go:1763] Restart count of pod container-probe-3073/busybox-6df5be1b-9b36-4c8f-ae4c-6cd6f0dec139 is now 1 (50.189501012s elapsed)
  STEP: deleting the pod @ 05/13/24 19:18:51.688
  I0513 19:18:51.717276 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3073" for this suite. @ 05/13/24 19:18:51.725
• [52.358 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 05/13/24 19:18:51.741
  I0513 19:18:51.741770 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/13/24 19:18:51.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:18:51.833
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:18:51.838
  I0513 19:18:51.844629 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 05/13/24 19:18:54.093
  I0513 19:18:54.093347 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=crd-publish-openapi-8517 --namespace=crd-publish-openapi-8517 create -f -'
  I0513 19:18:54.234611 19 builder.go:146] stderr: ""
  I0513 19:18:54.234675 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5205-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0513 19:18:54.234740 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=crd-publish-openapi-8517 --namespace=crd-publish-openapi-8517 delete e2e-test-crd-publish-openapi-5205-crds test-foo'
  I0513 19:18:54.338650 19 builder.go:146] stderr: ""
  I0513 19:18:54.338710 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5205-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0513 19:18:54.338771 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=crd-publish-openapi-8517 --namespace=crd-publish-openapi-8517 apply -f -'
  I0513 19:18:54.447418 19 builder.go:146] stderr: ""
  I0513 19:18:54.447479 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5205-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0513 19:18:54.447788 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=crd-publish-openapi-8517 --namespace=crd-publish-openapi-8517 delete e2e-test-crd-publish-openapi-5205-crds test-foo'
  I0513 19:18:54.552191 19 builder.go:146] stderr: ""
  I0513 19:18:54.552242 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-5205-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 05/13/24 19:18:54.552
  I0513 19:18:54.552347 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=crd-publish-openapi-8517 --namespace=crd-publish-openapi-8517 create -f -'
  I0513 19:18:54.640998 19 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 05/13/24 19:18:54.641
  I0513 19:18:54.641206 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=crd-publish-openapi-8517 --namespace=crd-publish-openapi-8517 create -f -'
  I0513 19:18:54.742055 19 builder.go:135] rc: 1
  I0513 19:18:54.742163 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=crd-publish-openapi-8517 --namespace=crd-publish-openapi-8517 apply -f -'
  I0513 19:18:54.858399 19 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 05/13/24 19:18:54.858
  I0513 19:18:54.858915 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=crd-publish-openapi-8517 --namespace=crd-publish-openapi-8517 create -f -'
  I0513 19:18:54.952405 19 builder.go:135] rc: 1
  I0513 19:18:54.952510 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=crd-publish-openapi-8517 --namespace=crd-publish-openapi-8517 apply -f -'
  I0513 19:18:55.071591 19 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 05/13/24 19:18:55.071
  I0513 19:18:55.071792 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=crd-publish-openapi-8517 explain e2e-test-crd-publish-openapi-5205-crds'
  I0513 19:18:55.173250 19 builder.go:146] stderr: ""
  I0513 19:18:55.173324 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-5205-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 05/13/24 19:18:55.173
  I0513 19:18:55.173752 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=crd-publish-openapi-8517 explain e2e-test-crd-publish-openapi-5205-crds.metadata'
  I0513 19:18:55.254713 19 builder.go:146] stderr: ""
  I0513 19:18:55.254935 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-5205-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0513 19:18:55.255659 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=crd-publish-openapi-8517 explain e2e-test-crd-publish-openapi-5205-crds.spec'
  I0513 19:18:55.333947 19 builder.go:146] stderr: ""
  I0513 19:18:55.334013 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-5205-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0513 19:18:55.334372 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=crd-publish-openapi-8517 explain e2e-test-crd-publish-openapi-5205-crds.spec.bars'
  I0513 19:18:55.414412 19 builder.go:146] stderr: ""
  I0513 19:18:55.414582 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-5205-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 05/13/24 19:18:55.414
  I0513 19:18:55.414824 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=crd-publish-openapi-8517 explain e2e-test-crd-publish-openapi-5205-crds.spec.bars2'
  I0513 19:18:55.493638 19 builder.go:135] rc: 1
  I0513 19:18:57.405208 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8517" for this suite. @ 05/13/24 19:18:57.412
• [5.684 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 05/13/24 19:18:57.425
  I0513 19:18:57.425802 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename container-probe @ 05/13/24 19:18:57.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:18:57.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:18:57.48
  STEP: Creating pod liveness-9f4183ce-803f-4a9d-ad56-5a1b55138bf0 in namespace container-probe-3601 @ 05/13/24 19:18:57.486
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/13/24 19:18:59.529
  I0513 19:18:59.532753 19 container_probe.go:1749] Initial restart count of pod liveness-9f4183ce-803f-4a9d-ad56-5a1b55138bf0 is 0
  I0513 19:18:59.535957 19 container_probe.go:1759] Get pod liveness-9f4183ce-803f-4a9d-ad56-5a1b55138bf0 in namespace container-probe-3601
  I0513 19:19:01.540744 19 container_probe.go:1759] Get pod liveness-9f4183ce-803f-4a9d-ad56-5a1b55138bf0 in namespace container-probe-3601
  I0513 19:19:03.545993 19 container_probe.go:1759] Get pod liveness-9f4183ce-803f-4a9d-ad56-5a1b55138bf0 in namespace container-probe-3601
  I0513 19:19:05.550663 19 container_probe.go:1759] Get pod liveness-9f4183ce-803f-4a9d-ad56-5a1b55138bf0 in namespace container-probe-3601
  I0513 19:19:07.556369 19 container_probe.go:1759] Get pod liveness-9f4183ce-803f-4a9d-ad56-5a1b55138bf0 in namespace container-probe-3601
  I0513 19:19:09.561250 19 container_probe.go:1759] Get pod liveness-9f4183ce-803f-4a9d-ad56-5a1b55138bf0 in namespace container-probe-3601
  I0513 19:19:11.566354 19 container_probe.go:1759] Get pod liveness-9f4183ce-803f-4a9d-ad56-5a1b55138bf0 in namespace container-probe-3601
  I0513 19:19:13.570712 19 container_probe.go:1759] Get pod liveness-9f4183ce-803f-4a9d-ad56-5a1b55138bf0 in namespace container-probe-3601
  I0513 19:19:15.576046 19 container_probe.go:1759] Get pod liveness-9f4183ce-803f-4a9d-ad56-5a1b55138bf0 in namespace container-probe-3601
  I0513 19:19:17.581760 19 container_probe.go:1759] Get pod liveness-9f4183ce-803f-4a9d-ad56-5a1b55138bf0 in namespace container-probe-3601
  I0513 19:19:19.586223 19 container_probe.go:1759] Get pod liveness-9f4183ce-803f-4a9d-ad56-5a1b55138bf0 in namespace container-probe-3601
  I0513 19:19:19.586275 19 container_probe.go:1763] Restart count of pod container-probe-3601/liveness-9f4183ce-803f-4a9d-ad56-5a1b55138bf0 is now 1 (20.053475221s elapsed)
  STEP: deleting the pod @ 05/13/24 19:19:19.586
  I0513 19:19:19.629634 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3601" for this suite. @ 05/13/24 19:19:19.635
• [22.226 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:332
  STEP: Creating a kubernetes client @ 05/13/24 19:19:19.652
  I0513 19:19:19.652557 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename statefulset @ 05/13/24 19:19:19.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:19:19.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:19:19.706
  STEP: Creating service test in namespace statefulset-4921 @ 05/13/24 19:19:19.709
  STEP: Creating a new StatefulSet @ 05/13/24 19:19:19.728
  I0513 19:19:19.773491 19 wait.go:40] Found 0 stateful pods, waiting for 3
  I0513 19:19:29.776777 19 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0513 19:19:29.777016 19 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0513 19:19:29.777285 19 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 05/13/24 19:19:29.796
  I0513 19:19:29.825356 19 statefulset.go:2241] Updating stateful set ss2
  STEP: Creating a new revision @ 05/13/24 19:19:29.825
  STEP: Not applying an update when the partition is greater than the number of replicas @ 05/13/24 19:19:39.836
  STEP: Performing a canary update @ 05/13/24 19:19:39.836
  I0513 19:19:39.871275 19 statefulset.go:2241] Updating stateful set ss2
  I0513 19:19:39.912646 19 wait.go:74] Waiting for Pod statefulset-4921/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 05/13/24 19:19:49.881
  I0513 19:19:49.990431 19 wait.go:40] Found 1 stateful pods, waiting for 3
  I0513 19:19:59.990225 19 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0513 19:19:59.990278 19 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0513 19:19:59.990297 19 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 05/13/24 19:19:59.996
  I0513 19:20:00.033408 19 statefulset.go:2241] Updating stateful set ss2
  I0513 19:20:00.055560 19 wait.go:74] Waiting for Pod statefulset-4921/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0513 19:20:10.079215 19 statefulset.go:2241] Updating stateful set ss2
  I0513 19:20:10.086289 19 wait.go:56] Waiting for StatefulSet statefulset-4921/ss2 to complete update
  I0513 19:20:10.086398 19 wait.go:63] Waiting for Pod statefulset-4921/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0513 19:20:20.091230 19 statefulset.go:135] Deleting all statefulset in ns statefulset-4921
  I0513 19:20:20.094750 19 rest.go:150] Scaling statefulset ss2 to 0
  I0513 19:20:30.122077 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0513 19:20:30.125997 19 rest.go:88] Deleting statefulset ss2
  I0513 19:20:30.144305 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4921" for this suite. @ 05/13/24 19:20:30.149
• [70.520 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 05/13/24 19:20:30.172
  I0513 19:20:30.172433 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/13/24 19:20:30.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:20:30.214
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:20:30.219
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 05/13/24 19:20:30.223
  I0513 19:20:30.224115 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 05/13/24 19:20:37.27
  I0513 19:20:37.271130 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 19:20:39.284957 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 19:20:46.655060 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5881" for this suite. @ 05/13/24 19:20:46.663
• [16.503 seconds]
------------------------------
SS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 05/13/24 19:20:46.675
  I0513 19:20:46.675671 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename endpointslicemirroring @ 05/13/24 19:20:46.676
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:20:46.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:20:46.775
  STEP: mirroring a new custom Endpoint @ 05/13/24 19:20:46.806
  I0513 19:20:46.826350 19 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 05/13/24 19:20:48.836
  I0513 19:20:48.856850 19 endpointslicemirroring.go:171] Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  STEP: mirroring deletion of a custom Endpoint @ 05/13/24 19:20:50.861
  I0513 19:20:50.875788 19 endpointslicemirroring.go:194] Waiting for 0 EndpointSlices to exist, got 1
  I0513 19:20:52.881545 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-7312" for this suite. @ 05/13/24 19:20:52.888
• [6.225 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1368
  STEP: Creating a kubernetes client @ 05/13/24 19:20:52.901
  I0513 19:20:52.901755 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename kubectl @ 05/13/24 19:20:52.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:20:52.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:20:52.955
  STEP: validating cluster-info @ 05/13/24 19:20:52.959
  I0513 19:20:52.960088 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-3127 cluster-info'
  I0513 19:20:53.075035 19 builder.go:146] stderr: ""
  I0513 19:20:53.075096 19 builder.go:147] stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.43.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0513 19:20:53.075207 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3127" for this suite. @ 05/13/24 19:20:53.081
• [0.196 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 05/13/24 19:20:53.097
  I0513 19:20:53.097707 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename projected @ 05/13/24 19:20:53.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:20:53.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:20:53.143
  STEP: Creating configMap with name projected-configmap-test-volume-05ce35b5-806f-48fc-845d-78f6a6188318 @ 05/13/24 19:20:53.159
  STEP: Creating a pod to test consume configMaps @ 05/13/24 19:20:53.171
  STEP: Saw pod success @ 05/13/24 19:20:57.227
  I0513 19:20:57.232752 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod pod-projected-configmaps-1484194d-a07e-4a02-9736-cd1c5dc1e925 container agnhost-container: <nil>
  STEP: delete the pod @ 05/13/24 19:20:57.248
  I0513 19:20:57.285015 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7366" for this suite. @ 05/13/24 19:20:57.29
• [4.223 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 05/13/24 19:20:57.32
  I0513 19:20:57.320563 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename daemonsets @ 05/13/24 19:20:57.321
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:20:57.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:20:57.356
  I0513 19:20:57.404141 19 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/13/24 19:20:57.419
  I0513 19:20:57.438995 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 19:20:57.439047 19 fixtures.go:130] Node ip-172-31-0-253.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 19:20:58.448857 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 19:20:58.448912 19 fixtures.go:130] Node ip-172-31-0-253.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 19:20:59.429526 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0513 19:20:59.429578 19 fixtures.go:130] Node ip-172-31-11-14.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 19:21:00.431207 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0513 19:21:00.431263 19 fixtures.go:135] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Update daemon pods image. @ 05/13/24 19:21:00.448
  STEP: Check that daemon pods images are updated. @ 05/13/24 19:21:00.483
  I0513 19:21:00.504073 19 daemon_set.go:1178] Wrong image for pod: daemon-set-dpnlc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0513 19:21:00.504147 19 daemon_set.go:1178] Wrong image for pod: daemon-set-s4fvf. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0513 19:21:00.504224 19 daemon_set.go:1178] Wrong image for pod: daemon-set-w4tv2. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0513 19:21:01.497419 19 daemon_set.go:1178] Wrong image for pod: daemon-set-dpnlc. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0513 19:21:01.497635 19 daemon_set.go:1183] Pod daemon-set-fjndj is not available
  I0513 19:21:01.497741 19 daemon_set.go:1178] Wrong image for pod: daemon-set-s4fvf. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0513 19:21:01.497865 19 daemon_set.go:1178] Wrong image for pod: daemon-set-w4tv2. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0513 19:21:02.494143 19 daemon_set.go:1178] Wrong image for pod: daemon-set-s4fvf. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0513 19:21:02.494333 19 daemon_set.go:1178] Wrong image for pod: daemon-set-w4tv2. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0513 19:21:02.494442 19 daemon_set.go:1183] Pod daemon-set-xpz5g is not available
  I0513 19:21:03.489885 19 daemon_set.go:1178] Wrong image for pod: daemon-set-s4fvf. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0513 19:21:03.489942 19 daemon_set.go:1178] Wrong image for pod: daemon-set-w4tv2. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0513 19:21:03.489960 19 daemon_set.go:1183] Pod daemon-set-xpz5g is not available
  I0513 19:21:04.490216 19 daemon_set.go:1178] Wrong image for pod: daemon-set-s4fvf. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0513 19:21:04.490405 19 daemon_set.go:1183] Pod daemon-set-zvvqq is not available
  I0513 19:21:05.509561 19 daemon_set.go:1183] Pod daemon-set-bb9tr is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 05/13/24 19:21:05.534
  I0513 19:21:05.546669 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0513 19:21:05.546725 19 fixtures.go:130] Node ip-172-31-14-0.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 19:21:06.545038 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0513 19:21:06.545122 19 fixtures.go:130] Node ip-172-31-14-0.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 19:21:07.563616 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0513 19:21:07.563680 19 fixtures.go:135] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/13/24 19:21:07.591
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7750, will wait for the garbage collector to delete the pods @ 05/13/24 19:21:07.592
  I0513 19:21:07.662007 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 14.57571ms
  I0513 19:21:07.763181 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.198776ms
  I0513 19:21:09.168976 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 19:21:09.169242 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0513 19:21:09.186202 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"51087"},"items":null}

  I0513 19:21:09.198953 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"51087"},"items":null}

  I0513 19:21:09.224042 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7750" for this suite. @ 05/13/24 19:21:09.228
• [11.923 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 05/13/24 19:21:09.243
  I0513 19:21:09.243824 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename runtimeclass @ 05/13/24 19:21:09.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:21:09.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:21:09.317
  I0513 19:21:11.393386 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8692" for this suite. @ 05/13/24 19:21:11.399
• [2.173 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 05/13/24 19:21:11.419
  I0513 19:21:11.419402 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename security-context @ 05/13/24 19:21:11.42
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:21:11.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:21:11.465
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 05/13/24 19:21:11.471
  STEP: Saw pod success @ 05/13/24 19:21:15.529
  I0513 19:21:15.533606 19 output.go:196] Trying to get logs from node ip-172-31-0-253.us-east-2.compute.internal pod security-context-51fd319d-ccfa-45ca-95c2-2a156fc65f1d container test-container: <nil>
  STEP: delete the pod @ 05/13/24 19:21:15.553
  I0513 19:21:15.611337 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-8621" for this suite. @ 05/13/24 19:21:15.616
• [4.210 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 05/13/24 19:21:15.631
  I0513 19:21:15.631627 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename container-probe @ 05/13/24 19:21:15.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:21:15.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:21:15.697
  STEP: Creating pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476 @ 05/13/24 19:21:15.702
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/13/24 19:21:17.735
  I0513 19:21:17.740007 19 container_probe.go:1749] Initial restart count of pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 is 0
  I0513 19:21:17.743737 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:21:19.748426 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:21:21.752693 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:21:23.758432 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:21:25.764478 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:21:27.768940 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:21:29.773579 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:21:31.777986 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:21:33.786266 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:21:35.790750 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:21:37.797544 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:21:39.802257 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:21:41.807740 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:21:43.814290 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:21:45.818224 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:21:47.823594 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:21:49.830500 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:21:51.836822 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:21:53.841798 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:21:55.846760 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:21:57.852472 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:21:59.858775 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:22:01.863313 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:22:03.884678 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:22:05.889549 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:22:07.893998 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:22:09.899931 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:22:11.904891 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:22:13.910481 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:22:15.915870 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:22:17.920826 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:22:19.925200 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:22:21.929560 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:22:23.934171 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:22:25.942096 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:22:27.954436 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:22:29.959902 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:22:31.965897 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:22:33.993919 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:22:36.004664 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:22:38.008957 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:22:40.013770 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:22:42.018630 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:22:44.030364 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:22:46.035247 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:22:48.040392 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:22:50.045596 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:22:52.050830 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:22:54.055759 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:22:56.060010 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:22:58.065889 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:23:00.069950 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:23:02.075946 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:23:04.082169 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:23:06.086947 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:23:08.094373 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:23:10.108836 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:23:12.114513 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:23:14.126366 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:23:16.136736 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:23:18.141336 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:23:20.146490 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:23:22.151341 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:23:24.156871 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:23:26.161213 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:23:28.167160 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:23:30.172341 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:23:32.177878 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:23:34.183286 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:23:36.188699 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:23:38.193790 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:23:40.197989 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:23:42.201942 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:23:44.206856 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:23:46.215259 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:23:48.220425 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:23:50.224986 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:23:52.229702 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:23:54.234274 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:23:56.238117 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:23:58.242697 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:24:00.248672 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:24:02.253837 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:24:04.259711 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:24:06.264523 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:24:08.269045 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:24:10.274585 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:24:12.280482 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:24:14.285748 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:24:16.291544 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:24:18.296035 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:24:20.301982 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:24:22.309944 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:24:24.314565 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:24:26.318746 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:24:28.330766 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:24:30.335723 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:24:32.341933 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:24:34.346421 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:24:36.350971 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:24:38.355373 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:24:40.359912 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:24:42.372639 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:24:44.377772 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:24:46.445623 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:24:48.449537 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:24:50.454390 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:24:52.459613 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:24:54.466604 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:24:56.470620 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:24:58.474516 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:25:00.480089 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:25:02.485759 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:25:04.492673 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:25:06.497593 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:25:08.504229 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:25:10.509245 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:25:12.513808 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:25:14.519812 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  I0513 19:25:16.524773 19 container_probe.go:1759] Get pod test-grpc-1a362a7b-5a2b-4ec2-b26d-0e041c125dd2 in namespace container-probe-6476
  STEP: deleting the pod @ 05/13/24 19:25:18.525
  I0513 19:25:18.579508 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6476" for this suite. @ 05/13/24 19:25:18.584
• [242.977 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 05/13/24 19:25:18.608
  I0513 19:25:18.608484 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename events @ 05/13/24 19:25:18.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:25:18.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:25:18.655
  STEP: Create set of events @ 05/13/24 19:25:18.677
  STEP: get a list of Events with a label in the current namespace @ 05/13/24 19:25:18.734
  STEP: delete a list of events @ 05/13/24 19:25:18.737
  I0513 19:25:18.737849 19 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 05/13/24 19:25:18.791
  I0513 19:25:18.798372 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1608" for this suite. @ 05/13/24 19:25:18.803
• [0.217 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 05/13/24 19:25:18.825
  I0513 19:25:18.825880 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename configmap @ 05/13/24 19:25:18.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:25:18.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:25:18.864
  I0513 19:25:18.983409 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4029" for this suite. @ 05/13/24 19:25:18.989
• [0.175 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 05/13/24 19:25:19.004
  I0513 19:25:19.004951 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename discovery @ 05/13/24 19:25:19.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:25:19.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:25:19.065
  STEP: Setting up server cert @ 05/13/24 19:25:19.069
  STEP: Requesting APIResourceList from "/api/v1" @ 05/13/24 19:25:19.692
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 05/13/24 19:25:19.695
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 05/13/24 19:25:19.696
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 05/13/24 19:25:19.698
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 05/13/24 19:25:19.699
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 05/13/24 19:25:19.7
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 05/13/24 19:25:19.702
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 05/13/24 19:25:19.703
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 05/13/24 19:25:19.705
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 05/13/24 19:25:19.706
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 05/13/24 19:25:19.708
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 05/13/24 19:25:19.709
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 05/13/24 19:25:19.71
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 05/13/24 19:25:19.712
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 05/13/24 19:25:19.714
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 05/13/24 19:25:19.716
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 05/13/24 19:25:19.717
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 05/13/24 19:25:19.719
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 05/13/24 19:25:19.721
  I0513 19:25:19.722943 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-2914" for this suite. @ 05/13/24 19:25:19.727
• [0.734 seconds]
------------------------------
SS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 05/13/24 19:25:19.739
  I0513 19:25:19.739565 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename events @ 05/13/24 19:25:19.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:25:19.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:25:19.796
  STEP: creating a test event @ 05/13/24 19:25:19.801
  STEP: listing events in all namespaces @ 05/13/24 19:25:19.812
  STEP: listing events in test namespace @ 05/13/24 19:25:19.818
  STEP: listing events with field selection filtering on source @ 05/13/24 19:25:19.821
  STEP: listing events with field selection filtering on reportingController @ 05/13/24 19:25:19.825
  STEP: getting the test event @ 05/13/24 19:25:19.83
  STEP: patching the test event @ 05/13/24 19:25:19.834
  STEP: getting the test event @ 05/13/24 19:25:19.851
  STEP: updating the test event @ 05/13/24 19:25:19.854
  STEP: getting the test event @ 05/13/24 19:25:19.87
  STEP: deleting the test event @ 05/13/24 19:25:19.879
  STEP: listing events in all namespaces @ 05/13/24 19:25:19.9
  STEP: listing events in test namespace @ 05/13/24 19:25:19.904
  I0513 19:25:19.907915 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-4797" for this suite. @ 05/13/24 19:25:19.912
• [0.184 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 05/13/24 19:25:19.924
  I0513 19:25:19.924896 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename webhook @ 05/13/24 19:25:19.926
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:25:20.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:25:20.037
  STEP: Setting up server cert @ 05/13/24 19:25:20.091
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/13/24 19:25:20.644
  STEP: Deploying the webhook pod @ 05/13/24 19:25:20.661
  STEP: Wait for the deployment to be ready @ 05/13/24 19:25:20.707
  I0513 19:25:20.724332 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/13/24 19:25:22.734
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 19:25:22.758
  I0513 19:25:23.758503 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 05/13/24 19:25:23.765
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 05/13/24 19:25:23.808
  STEP: Creating a configMap that should not be mutated @ 05/13/24 19:25:23.831
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 05/13/24 19:25:23.849
  STEP: Creating a configMap that should be mutated @ 05/13/24 19:25:23.867
  I0513 19:25:24.032499 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4441" for this suite. @ 05/13/24 19:25:24.057
  STEP: Destroying namespace "webhook-markers-5192" for this suite. @ 05/13/24 19:25:24.072
• [4.162 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:355
  STEP: Creating a kubernetes client @ 05/13/24 19:25:24.087
  I0513 19:25:24.087926 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename kubectl @ 05/13/24 19:25:24.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:25:24.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:25:24.125
  STEP: creating a replication controller @ 05/13/24 19:25:24.129
  I0513 19:25:24.129367 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-1482 create -f -'
  I0513 19:25:24.375862 19 builder.go:146] stderr: ""
  I0513 19:25:24.375909 19 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/13/24 19:25:24.375
  I0513 19:25:24.376008 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-1482 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0513 19:25:24.511772 19 builder.go:146] stderr: ""
  I0513 19:25:24.511822 19 builder.go:147] stdout: "update-demo-nautilus-j5chk update-demo-nautilus-m9x2h "
  I0513 19:25:24.511887 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-1482 get pods update-demo-nautilus-j5chk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0513 19:25:24.626365 19 builder.go:146] stderr: ""
  I0513 19:25:24.626440 19 builder.go:147] stdout: ""
  I0513 19:25:24.626459 19 kubectl.go:2501] update-demo-nautilus-j5chk is created but not running
  I0513 19:25:29.629290 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-1482 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0513 19:25:30.288919 19 builder.go:146] stderr: ""
  I0513 19:25:30.288980 19 builder.go:147] stdout: "update-demo-nautilus-j5chk update-demo-nautilus-m9x2h "
  I0513 19:25:30.289303 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-1482 get pods update-demo-nautilus-j5chk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0513 19:25:30.373460 19 builder.go:146] stderr: ""
  I0513 19:25:30.373528 19 builder.go:147] stdout: ""
  I0513 19:25:30.373546 19 kubectl.go:2501] update-demo-nautilus-j5chk is created but not running
  I0513 19:25:35.373891 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-1482 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0513 19:25:35.458226 19 builder.go:146] stderr: ""
  I0513 19:25:35.458392 19 builder.go:147] stdout: "update-demo-nautilus-j5chk update-demo-nautilus-m9x2h "
  I0513 19:25:35.458468 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-1482 get pods update-demo-nautilus-j5chk -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0513 19:25:35.547788 19 builder.go:146] stderr: ""
  I0513 19:25:35.547846 19 builder.go:147] stdout: "true"
  I0513 19:25:35.548108 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-1482 get pods update-demo-nautilus-j5chk -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0513 19:25:35.631929 19 builder.go:146] stderr: ""
  I0513 19:25:35.632004 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0513 19:25:35.632029 19 kubectl.go:2392] validating pod update-demo-nautilus-j5chk
  I0513 19:25:35.641274 19 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0513 19:25:35.641367 19 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0513 19:25:35.641387 19 kubectl.go:2519] update-demo-nautilus-j5chk is verified up and running
  I0513 19:25:35.641450 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-1482 get pods update-demo-nautilus-m9x2h -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0513 19:25:35.723324 19 builder.go:146] stderr: ""
  I0513 19:25:35.723386 19 builder.go:147] stdout: "true"
  I0513 19:25:35.723452 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-1482 get pods update-demo-nautilus-m9x2h -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0513 19:25:35.810551 19 builder.go:146] stderr: ""
  I0513 19:25:35.810595 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0513 19:25:35.810614 19 kubectl.go:2392] validating pod update-demo-nautilus-m9x2h
  I0513 19:25:35.822346 19 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0513 19:25:35.822427 19 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0513 19:25:35.822448 19 kubectl.go:2519] update-demo-nautilus-m9x2h is verified up and running
  STEP: scaling down the replication controller @ 05/13/24 19:25:35.822
  I0513 19:25:35.826268 19 kubectl.go:324] scanned /root for discovery docs: <nil>
  I0513 19:25:35.826337 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-1482 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  I0513 19:25:37.285519 19 builder.go:146] stderr: ""
  I0513 19:25:37.285568 19 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/13/24 19:25:37.285
  I0513 19:25:37.285923 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-1482 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0513 19:25:37.967611 19 builder.go:146] stderr: ""
  I0513 19:25:37.967661 19 builder.go:147] stdout: "update-demo-nautilus-j5chk update-demo-nautilus-m9x2h "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 05/13/24 19:25:37.967
  I0513 19:25:42.969353 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-1482 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0513 19:25:43.068588 19 builder.go:146] stderr: ""
  I0513 19:25:43.068669 19 builder.go:147] stdout: "update-demo-nautilus-j5chk update-demo-nautilus-m9x2h "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 05/13/24 19:25:43.068
  I0513 19:25:48.071220 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-1482 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0513 19:25:48.158443 19 builder.go:146] stderr: ""
  I0513 19:25:48.158613 19 builder.go:147] stdout: "update-demo-nautilus-m9x2h "
  I0513 19:25:48.158741 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-1482 get pods update-demo-nautilus-m9x2h -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0513 19:25:48.250145 19 builder.go:146] stderr: ""
  I0513 19:25:48.250201 19 builder.go:147] stdout: "true"
  I0513 19:25:48.250265 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-1482 get pods update-demo-nautilus-m9x2h -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0513 19:25:48.343162 19 builder.go:146] stderr: ""
  I0513 19:25:48.343230 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0513 19:25:48.343252 19 kubectl.go:2392] validating pod update-demo-nautilus-m9x2h
  I0513 19:25:48.349291 19 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0513 19:25:48.349375 19 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0513 19:25:48.349396 19 kubectl.go:2519] update-demo-nautilus-m9x2h is verified up and running
  STEP: scaling up the replication controller @ 05/13/24 19:25:48.349
  I0513 19:25:48.351849 19 kubectl.go:324] scanned /root for discovery docs: <nil>
  I0513 19:25:48.351995 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-1482 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  I0513 19:25:49.469025 19 builder.go:146] stderr: ""
  I0513 19:25:49.469348 19 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/13/24 19:25:49.469
  I0513 19:25:49.469472 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-1482 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0513 19:25:49.553481 19 builder.go:146] stderr: ""
  I0513 19:25:49.553539 19 builder.go:147] stdout: "update-demo-nautilus-8w62k update-demo-nautilus-m9x2h "
  I0513 19:25:49.553825 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-1482 get pods update-demo-nautilus-8w62k -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0513 19:25:49.637919 19 builder.go:146] stderr: ""
  I0513 19:25:49.638091 19 builder.go:147] stdout: "true"
  I0513 19:25:49.638194 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-1482 get pods update-demo-nautilus-8w62k -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0513 19:25:49.715009 19 builder.go:146] stderr: ""
  I0513 19:25:49.715057 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0513 19:25:49.715183 19 kubectl.go:2392] validating pod update-demo-nautilus-8w62k
  I0513 19:25:49.723873 19 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0513 19:25:49.723946 19 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0513 19:25:49.723966 19 kubectl.go:2519] update-demo-nautilus-8w62k is verified up and running
  I0513 19:25:49.724146 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-1482 get pods update-demo-nautilus-m9x2h -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0513 19:25:49.809304 19 builder.go:146] stderr: ""
  I0513 19:25:49.809367 19 builder.go:147] stdout: "true"
  I0513 19:25:49.809455 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-1482 get pods update-demo-nautilus-m9x2h -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0513 19:25:49.895324 19 builder.go:146] stderr: ""
  I0513 19:25:49.895374 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0513 19:25:49.895395 19 kubectl.go:2392] validating pod update-demo-nautilus-m9x2h
  I0513 19:25:49.900320 19 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0513 19:25:49.900393 19 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0513 19:25:49.900413 19 kubectl.go:2519] update-demo-nautilus-m9x2h is verified up and running
  STEP: using delete to clean up resources @ 05/13/24 19:25:49.9
  I0513 19:25:49.900820 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-1482 delete --grace-period=0 --force -f -'
  I0513 19:25:49.991292 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0513 19:25:49.991366 19 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0513 19:25:49.991450 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-1482 get rc,svc -l name=update-demo --no-headers'
  I0513 19:25:50.098881 19 builder.go:146] stderr: "No resources found in kubectl-1482 namespace.\n"
  I0513 19:25:50.098944 19 builder.go:147] stdout: ""
  I0513 19:25:50.099012 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-1482 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0513 19:25:50.192394 19 builder.go:146] stderr: ""
  I0513 19:25:50.192451 19 builder.go:147] stdout: ""
  I0513 19:25:50.192564 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1482" for this suite. @ 05/13/24 19:25:50.198
• [26.180 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 05/13/24 19:25:50.267
  I0513 19:25:50.267878 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename daemonsets @ 05/13/24 19:25:50.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:25:50.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:25:50.318
  STEP: Creating simple DaemonSet "daemon-set" @ 05/13/24 19:25:50.364
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/13/24 19:25:50.376
  I0513 19:25:50.390850 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 19:25:50.390910 19 fixtures.go:130] Node ip-172-31-0-253.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 19:25:51.400431 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 19:25:51.400842 19 fixtures.go:130] Node ip-172-31-0-253.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 19:25:52.397316 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0513 19:25:52.397524 19 fixtures.go:130] Node ip-172-31-0-253.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 19:25:53.387127 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0513 19:25:53.387298 19 fixtures.go:130] Node ip-172-31-0-253.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 19:25:54.387860 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0513 19:25:54.388005 19 fixtures.go:130] Node ip-172-31-0-253.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 19:25:55.393227 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0513 19:25:55.393310 19 fixtures.go:130] Node ip-172-31-0-253.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 19:25:56.388047 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0513 19:25:56.388107 19 fixtures.go:130] Node ip-172-31-0-253.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 19:25:57.388187 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0513 19:25:57.388238 19 fixtures.go:135] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Getting /status @ 05/13/24 19:25:57.392
  I0513 19:25:57.397909 19 daemon_set.go:912] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 05/13/24 19:25:57.397
  I0513 19:25:57.423932 19 daemon_set.go:932] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 05/13/24 19:25:57.423
  I0513 19:25:57.427242 19 daemon_set.go:957] Observed &DaemonSet event: ADDED
  I0513 19:25:57.427549 19 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I0513 19:25:57.428048 19 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I0513 19:25:57.428341 19 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I0513 19:25:57.428633 19 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I0513 19:25:57.429169 19 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I0513 19:25:57.430024 19 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I0513 19:25:57.430221 19 daemon_set.go:950] Found daemon set daemon-set in namespace daemonsets-7195 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0513 19:25:57.430277 19 daemon_set.go:961] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 05/13/24 19:25:57.43
  STEP: watching for the daemon set status to be patched @ 05/13/24 19:25:57.452
  I0513 19:25:57.455886 19 daemon_set.go:1001] Observed &DaemonSet event: ADDED
  I0513 19:25:57.460087 19 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0513 19:25:57.460283 19 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0513 19:25:57.460453 19 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0513 19:25:57.460807 19 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0513 19:25:57.460955 19 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0513 19:25:57.461132 19 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0513 19:25:57.465195 19 daemon_set.go:997] Observed daemon set daemon-set in namespace daemonsets-7195 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0513 19:25:57.465446 19 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0513 19:25:57.465484 19 daemon_set.go:994] Found daemon set daemon-set in namespace daemonsets-7195 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0513 19:25:57.465508 19 daemon_set.go:1005] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 05/13/24 19:25:57.476
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7195, will wait for the garbage collector to delete the pods @ 05/13/24 19:25:57.476
  I0513 19:25:57.556086 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 18.316834ms
  I0513 19:25:57.656338 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.250558ms
  I0513 19:25:59.771963 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 19:25:59.772202 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0513 19:25:59.775730 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"52509"},"items":null}

  I0513 19:25:59.779190 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"52509"},"items":null}

  I0513 19:25:59.799237 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7195" for this suite. @ 05/13/24 19:25:59.804
• [9.548 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 05/13/24 19:25:59.822
  I0513 19:25:59.822220 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename deployment @ 05/13/24 19:25:59.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:25:59.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:25:59.863
  STEP: creating a Deployment @ 05/13/24 19:25:59.882
  I0513 19:25:59.882230 19 deployment.go:507] Creating simple deployment test-deployment-8hntk
  I0513 19:25:59.912046 19 deployment.go:222] deployment "test-deployment-8hntk" doesn't have the required revision set
  STEP: Getting /status @ 05/13/24 19:26:01.934
  I0513 19:26:01.939254 19 deployment.go:532] Deployment test-deployment-8hntk has Conditions: [{Available True 2024-05-13 19:26:01 +0000 UTC 2024-05-13 19:26:01 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-05-13 19:26:01 +0000 UTC 2024-05-13 19:25:59 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-8hntk-c8586b885" has successfully progressed.}]
  STEP: updating Deployment Status @ 05/13/24 19:26:01.939
  I0513 19:26:01.970735 19 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 26, 1, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 26, 1, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 26, 1, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 25, 59, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-8hntk-c8586b885\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 05/13/24 19:26:01.97
  I0513 19:26:01.976796 19 deployment.go:579] Observed &Deployment event: ADDED
  I0513 19:26:01.976917 19 deployment.go:575] Observed Deployment test-deployment-8hntk in namespace deployment-850 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-13 19:25:59 +0000 UTC 2024-05-13 19:25:59 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-8hntk-c8586b885"}
  I0513 19:26:01.977326 19 deployment.go:579] Observed &Deployment event: MODIFIED
  I0513 19:26:01.978146 19 deployment.go:575] Observed Deployment test-deployment-8hntk in namespace deployment-850 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-13 19:25:59 +0000 UTC 2024-05-13 19:25:59 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-8hntk-c8586b885"}
  I0513 19:26:01.978210 19 deployment.go:575] Observed Deployment test-deployment-8hntk in namespace deployment-850 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-13 19:25:59 +0000 UTC 2024-05-13 19:25:59 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0513 19:26:01.978457 19 deployment.go:579] Observed &Deployment event: MODIFIED
  I0513 19:26:01.978527 19 deployment.go:575] Observed Deployment test-deployment-8hntk in namespace deployment-850 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-13 19:25:59 +0000 UTC 2024-05-13 19:25:59 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0513 19:26:01.978551 19 deployment.go:575] Observed Deployment test-deployment-8hntk in namespace deployment-850 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-13 19:26:00 +0000 UTC 2024-05-13 19:25:59 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-8hntk-c8586b885" is progressing.}
  I0513 19:26:01.978989 19 deployment.go:579] Observed &Deployment event: MODIFIED
  I0513 19:26:01.979059 19 deployment.go:575] Observed Deployment test-deployment-8hntk in namespace deployment-850 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-13 19:26:01 +0000 UTC 2024-05-13 19:26:01 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0513 19:26:01.979083 19 deployment.go:575] Observed Deployment test-deployment-8hntk in namespace deployment-850 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-13 19:26:01 +0000 UTC 2024-05-13 19:25:59 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-8hntk-c8586b885" has successfully progressed.}
  I0513 19:26:01.979286 19 deployment.go:579] Observed &Deployment event: MODIFIED
  I0513 19:26:01.979336 19 deployment.go:575] Observed Deployment test-deployment-8hntk in namespace deployment-850 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-13 19:26:01 +0000 UTC 2024-05-13 19:26:01 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0513 19:26:01.979360 19 deployment.go:575] Observed Deployment test-deployment-8hntk in namespace deployment-850 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-13 19:26:01 +0000 UTC 2024-05-13 19:25:59 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-8hntk-c8586b885" has successfully progressed.}
  I0513 19:26:01.979418 19 deployment.go:572] Found Deployment test-deployment-8hntk in namespace deployment-850 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0513 19:26:01.979456 19 deployment.go:583] Deployment test-deployment-8hntk has an updated status
  STEP: patching the Statefulset Status @ 05/13/24 19:26:01.979
  I0513 19:26:01.979760 19 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0513 19:26:01.998073 19 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 05/13/24 19:26:01.998
  I0513 19:26:02.000568 19 deployment.go:616] Observed &Deployment event: ADDED
  I0513 19:26:02.000634 19 deployment.go:612] Observed deployment test-deployment-8hntk in namespace deployment-850 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-13 19:25:59 +0000 UTC 2024-05-13 19:25:59 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-8hntk-c8586b885"}
  I0513 19:26:02.000801 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I0513 19:26:02.000841 19 deployment.go:612] Observed deployment test-deployment-8hntk in namespace deployment-850 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-13 19:25:59 +0000 UTC 2024-05-13 19:25:59 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-8hntk-c8586b885"}
  I0513 19:26:02.000864 19 deployment.go:612] Observed deployment test-deployment-8hntk in namespace deployment-850 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-13 19:25:59 +0000 UTC 2024-05-13 19:25:59 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0513 19:26:02.001023 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I0513 19:26:02.001067 19 deployment.go:612] Observed deployment test-deployment-8hntk in namespace deployment-850 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-05-13 19:25:59 +0000 UTC 2024-05-13 19:25:59 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0513 19:26:02.001116 19 deployment.go:612] Observed deployment test-deployment-8hntk in namespace deployment-850 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-13 19:26:00 +0000 UTC 2024-05-13 19:25:59 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-8hntk-c8586b885" is progressing.}
  I0513 19:26:02.001265 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I0513 19:26:02.001701 19 deployment.go:612] Observed deployment test-deployment-8hntk in namespace deployment-850 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-13 19:26:01 +0000 UTC 2024-05-13 19:26:01 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0513 19:26:02.001752 19 deployment.go:612] Observed deployment test-deployment-8hntk in namespace deployment-850 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-13 19:26:01 +0000 UTC 2024-05-13 19:25:59 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-8hntk-c8586b885" has successfully progressed.}
  I0513 19:26:02.001920 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I0513 19:26:02.001960 19 deployment.go:612] Observed deployment test-deployment-8hntk in namespace deployment-850 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-05-13 19:26:01 +0000 UTC 2024-05-13 19:26:01 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0513 19:26:02.001984 19 deployment.go:612] Observed deployment test-deployment-8hntk in namespace deployment-850 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-05-13 19:26:01 +0000 UTC 2024-05-13 19:25:59 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-8hntk-c8586b885" has successfully progressed.}
  I0513 19:26:02.002021 19 deployment.go:612] Observed deployment test-deployment-8hntk in namespace deployment-850 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0513 19:26:02.002218 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I0513 19:26:02.002262 19 deployment.go:609] Found deployment test-deployment-8hntk in namespace deployment-850 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0513 19:26:02.002283 19 deployment.go:620] Deployment test-deployment-8hntk has a patched status
  I0513 19:26:02.016608 19 deployment.go:633] Deployment "test-deployment-8hntk":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-8hntk",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-850",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "06ae38a2-9adb-47f2-9a9e-0db697abd9f9",
      ResourceVersion: (string) (len=5) "52544",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851225159,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225161,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225162,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=3) "e2e": (string) (len=7) "testing"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225161,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225161,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=55) "Found new replica set \"test-deployment-8hntk-c8586b885\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0513 19:26:02.041340 19 deployment.go:39] New ReplicaSet "test-deployment-8hntk-c8586b885" of Deployment "test-deployment-8hntk":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-8hntk-c8586b885",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-850",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6e4c7380-f25d-4a50-9824-67fed2f13942",
      ResourceVersion: (string) (len=5) "52537",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851225159,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-8hntk",
          UID: (types.UID) (len=36) "06ae38a2-9adb-47f2-9a9e-0db697abd9f9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 30 36 61  |k:{\"uid\":\"06a|
              00000120  65 33 38 61 32 2d 39 61  64 62 2d 34 37 66 32 2d  |e38a2-9adb-47f2-|
              00000130  39 61 39 65 2d 30 64 62  36 39 37 61 62 64 39 66  |9a9e-0db697abd9f|
              00000140  39 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |9\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225161,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885",
          (string) (len=3) "e2e": (string) (len=7) "testing"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0513 19:26:02.047304 19 deployment.go:67] Pod "test-deployment-8hntk-c8586b885-7b2zt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "test-deployment-8hntk-c8586b885-7b2zt",
      GenerateName: (string) (len=32) "test-deployment-8hntk-c8586b885-",
      Namespace: (string) (len=14) "deployment-850",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d94a7854-fa79-4854-b444-c2a69f4250f6",
      ResourceVersion: (string) (len=5) "52536",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851225159,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "test-deployment-8hntk-c8586b885",
          UID: (types.UID) (len=36) "6e4c7380-f25d-4a50-9824-67fed2f13942",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 36 65 34 63 37 33 38  30 2d 66 32 35 64 2d 34  |"6e4c7380-f25d-4|
              000000a0  61 35 30 2d 39 38 32 34  2d 36 37 66 65 64 32 66  |a50-9824-67fed2f|
              000000b0  31 33 39 34 32 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |13942\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225161,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 31 30  35 5c 22 7d 22 3a 7b 22  |.42.2.105\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gmlv4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gmlv4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-11-14.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225161,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225161,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225161,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225159,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.11.14",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.11.14"
        }
      },
      PodIP: (string) (len=11) "10.42.2.105",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.2.105"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851225159,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851225160,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c91819581a1f3ed219023089d56b113637f955d8f96a8a999deea73de176a6d2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 19:26:02.058564 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-850" for this suite. @ 05/13/24 19:26:02.064
• [2.261 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2240
  STEP: Creating a kubernetes client @ 05/13/24 19:26:02.083
  I0513 19:26:02.083724 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename services @ 05/13/24 19:26:02.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:26:02.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:26:02.135
  STEP: creating service in namespace services-7739 @ 05/13/24 19:26:02.142
  STEP: creating service affinity-nodeport-transition in namespace services-7739 @ 05/13/24 19:26:02.143
  STEP: creating replication controller affinity-nodeport-transition in namespace services-7739 @ 05/13/24 19:26:02.193
  I0513 19:26:02.219167      19 runners.go:198] Created replication controller with name: affinity-nodeport-transition, namespace: services-7739, replica count: 3
  I0513 19:26:05.270383      19 runners.go:198] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0513 19:26:05.285439 19 resource.go:361] Creating new exec pod
  I0513 19:26:08.331500 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-7739 exec execpod-affinityv6x4j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0513 19:26:08.520681 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  I0513 19:26:08.520746 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0513 19:26:08.520860 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-7739 exec execpod-affinityv6x4j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.200.75 80'
  I0513 19:26:08.667874 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.200.75 80\nConnection to 10.43.200.75 80 port [tcp/http] succeeded!\n"
  I0513 19:26:08.668029 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0513 19:26:08.668131 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-7739 exec execpod-affinityv6x4j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.14.0 31646'
  I0513 19:26:08.803682 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.14.0 31646\nConnection to 172.31.14.0 31646 port [tcp/*] succeeded!\n"
  I0513 19:26:08.803758 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0513 19:26:08.803859 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-7739 exec execpod-affinityv6x4j -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.11.14 31646'
  I0513 19:26:08.995177 19 builder.go:146] stderr: "+ echo+  hostNamenc\n -v -t -w 2 172.31.11.14 31646\nConnection to 172.31.11.14 31646 port [tcp/*] succeeded!\n"
  I0513 19:26:08.995242 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0513 19:26:09.019606 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-7739 exec execpod-affinityv6x4j -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.0.253:31646/ ; done'
  I0513 19:26:09.315573 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31646/\n"
  I0513 19:26:09.315648 19 builder.go:147] stdout: "\naffinity-nodeport-transition-5xr2j\naffinity-nodeport-transition-5xr2j\naffinity-nodeport-transition-5xr2j\naffinity-nodeport-transition-z5dh7\naffinity-nodeport-transition-5xr2j\naffinity-nodeport-transition-kqhb5\naffinity-nodeport-transition-kqhb5\naffinity-nodeport-transition-5xr2j\naffinity-nodeport-transition-z5dh7\naffinity-nodeport-transition-z5dh7\naffinity-nodeport-transition-5xr2j\naffinity-nodeport-transition-z5dh7\naffinity-nodeport-transition-z5dh7\naffinity-nodeport-transition-kqhb5\naffinity-nodeport-transition-kqhb5\naffinity-nodeport-transition-5xr2j"
  I0513 19:26:09.315674 19 service.go:242] Received response from host: affinity-nodeport-transition-5xr2j
  I0513 19:26:09.315800 19 service.go:242] Received response from host: affinity-nodeport-transition-5xr2j
  I0513 19:26:09.315821 19 service.go:242] Received response from host: affinity-nodeport-transition-5xr2j
  I0513 19:26:09.315836 19 service.go:242] Received response from host: affinity-nodeport-transition-z5dh7
  I0513 19:26:09.315969 19 service.go:242] Received response from host: affinity-nodeport-transition-5xr2j
  I0513 19:26:09.315986 19 service.go:242] Received response from host: affinity-nodeport-transition-kqhb5
  I0513 19:26:09.316000 19 service.go:242] Received response from host: affinity-nodeport-transition-kqhb5
  I0513 19:26:09.316014 19 service.go:242] Received response from host: affinity-nodeport-transition-5xr2j
  I0513 19:26:09.316029 19 service.go:242] Received response from host: affinity-nodeport-transition-z5dh7
  I0513 19:26:09.316045 19 service.go:242] Received response from host: affinity-nodeport-transition-z5dh7
  I0513 19:26:09.316058 19 service.go:242] Received response from host: affinity-nodeport-transition-5xr2j
  I0513 19:26:09.316069 19 service.go:242] Received response from host: affinity-nodeport-transition-z5dh7
  I0513 19:26:09.316081 19 service.go:242] Received response from host: affinity-nodeport-transition-z5dh7
  I0513 19:26:09.316096 19 service.go:242] Received response from host: affinity-nodeport-transition-kqhb5
  I0513 19:26:09.316109 19 service.go:242] Received response from host: affinity-nodeport-transition-kqhb5
  I0513 19:26:09.316123 19 service.go:242] Received response from host: affinity-nodeport-transition-5xr2j
  I0513 19:26:09.337887 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-7739 exec execpod-affinityv6x4j -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.0.253:31646/ ; done'
  I0513 19:26:09.594639 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31646/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31646/\n"
  I0513 19:26:09.594717 19 builder.go:147] stdout: "\naffinity-nodeport-transition-kqhb5\naffinity-nodeport-transition-kqhb5\naffinity-nodeport-transition-kqhb5\naffinity-nodeport-transition-kqhb5\naffinity-nodeport-transition-kqhb5\naffinity-nodeport-transition-kqhb5\naffinity-nodeport-transition-kqhb5\naffinity-nodeport-transition-kqhb5\naffinity-nodeport-transition-kqhb5\naffinity-nodeport-transition-kqhb5\naffinity-nodeport-transition-kqhb5\naffinity-nodeport-transition-kqhb5\naffinity-nodeport-transition-kqhb5\naffinity-nodeport-transition-kqhb5\naffinity-nodeport-transition-kqhb5\naffinity-nodeport-transition-kqhb5"
  I0513 19:26:09.594757 19 service.go:242] Received response from host: affinity-nodeport-transition-kqhb5
  I0513 19:26:09.594775 19 service.go:242] Received response from host: affinity-nodeport-transition-kqhb5
  I0513 19:26:09.594818 19 service.go:242] Received response from host: affinity-nodeport-transition-kqhb5
  I0513 19:26:09.594835 19 service.go:242] Received response from host: affinity-nodeport-transition-kqhb5
  I0513 19:26:09.594850 19 service.go:242] Received response from host: affinity-nodeport-transition-kqhb5
  I0513 19:26:09.594865 19 service.go:242] Received response from host: affinity-nodeport-transition-kqhb5
  I0513 19:26:09.594878 19 service.go:242] Received response from host: affinity-nodeport-transition-kqhb5
  I0513 19:26:09.594892 19 service.go:242] Received response from host: affinity-nodeport-transition-kqhb5
  I0513 19:26:09.594907 19 service.go:242] Received response from host: affinity-nodeport-transition-kqhb5
  I0513 19:26:09.594930 19 service.go:242] Received response from host: affinity-nodeport-transition-kqhb5
  I0513 19:26:09.594943 19 service.go:242] Received response from host: affinity-nodeport-transition-kqhb5
  I0513 19:26:09.594956 19 service.go:242] Received response from host: affinity-nodeport-transition-kqhb5
  I0513 19:26:09.594970 19 service.go:242] Received response from host: affinity-nodeport-transition-kqhb5
  I0513 19:26:09.594983 19 service.go:242] Received response from host: affinity-nodeport-transition-kqhb5
  I0513 19:26:09.594996 19 service.go:242] Received response from host: affinity-nodeport-transition-kqhb5
  I0513 19:26:09.595010 19 service.go:242] Received response from host: affinity-nodeport-transition-kqhb5
  I0513 19:26:09.595132 19 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-7739, will wait for the garbage collector to delete the pods @ 05/13/24 19:26:09.629
  I0513 19:26:09.724642 19 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 23.58884ms
  I0513 19:26:09.825892 19 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 101.247182ms
  I0513 19:26:12.892648 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7739" for this suite. @ 05/13/24 19:26:12.897
• [10.824 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 05/13/24 19:26:12.908
  I0513 19:26:12.908400 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename csistoragecapacity @ 05/13/24 19:26:12.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:26:13.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:26:13.01
  STEP: getting /apis @ 05/13/24 19:26:13.012
  STEP: getting /apis/storage.k8s.io @ 05/13/24 19:26:13.017
  STEP: getting /apis/storage.k8s.io/v1 @ 05/13/24 19:26:13.018
  STEP: creating @ 05/13/24 19:26:13.019
  STEP: watching @ 05/13/24 19:26:13.082
  I0513 19:26:13.082210 19 csistoragecapacity.go:143] starting watch
  STEP: getting @ 05/13/24 19:26:13.095
  STEP: listing in namespace @ 05/13/24 19:26:13.098
  STEP: listing across namespaces @ 05/13/24 19:26:13.102
  STEP: patching @ 05/13/24 19:26:13.106
  STEP: updating @ 05/13/24 19:26:13.116
  I0513 19:26:13.125749 19 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0513 19:26:13.125875 19 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 05/13/24 19:26:13.125
  STEP: deleting a collection @ 05/13/24 19:26:13.142
  I0513 19:26:13.170111 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-4055" for this suite. @ 05/13/24 19:26:13.174
• [0.285 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 05/13/24 19:26:13.194
  I0513 19:26:13.194198 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename container-probe @ 05/13/24 19:26:13.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:26:13.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:26:13.258
  I0513 19:27:13.286290 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3634" for this suite. @ 05/13/24 19:27:13.29
• [60.116 seconds]
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 05/13/24 19:27:13.31
  I0513 19:27:13.310225 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename csiinlinevolumes @ 05/13/24 19:27:13.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:27:13.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:27:13.35
  STEP: creating @ 05/13/24 19:27:13.359
  STEP: getting @ 05/13/24 19:27:13.446
  STEP: listing in namespace @ 05/13/24 19:27:13.457
  STEP: patching @ 05/13/24 19:27:13.469
  STEP: deleting @ 05/13/24 19:27:13.494
  I0513 19:27:13.525339 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-5084" for this suite. @ 05/13/24 19:27:13.531
• [0.239 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 05/13/24 19:27:13.55
  I0513 19:27:13.550856 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename webhook @ 05/13/24 19:27:13.552
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:27:13.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:27:13.659
  STEP: Setting up server cert @ 05/13/24 19:27:13.739
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/13/24 19:27:14.076
  STEP: Deploying the webhook pod @ 05/13/24 19:27:14.094
  STEP: Wait for the deployment to be ready @ 05/13/24 19:27:14.132
  I0513 19:27:14.140282 19 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 05/13/24 19:27:16.153
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 19:27:16.601
  I0513 19:27:17.601773 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0513 19:27:17.621511 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-8188-crds.webhook.example.com via the AdmissionRegistration API @ 05/13/24 19:27:18.142
  STEP: Creating a custom resource that should be mutated by the webhook @ 05/13/24 19:27:18.171
  I0513 19:27:20.862550 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8664" for this suite. @ 05/13/24 19:27:20.867
  STEP: Destroying namespace "webhook-markers-3777" for this suite. @ 05/13/24 19:27:20.878
• [7.344 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:707
  STEP: Creating a kubernetes client @ 05/13/24 19:27:20.897
  I0513 19:27:20.897172 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename sched-pred @ 05/13/24 19:27:20.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:27:20.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:27:20.951
  I0513 19:27:20.955392 19 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0513 19:27:20.984943 19 util.go:400] Waiting for terminating namespaces to be deleted...
  I0513 19:27:20.988485 19 predicates.go:121] 
  Logging pods the apiserver thinks is on node ip-172-31-0-253.us-east-2.compute.internal before test
  I0513 19:27:20.996633 19 predicates.go:887] svclb-traefik-d628025f-mwl96 from kube-system started at 2024-05-13 16:12:42 +0000 UTC (2 container statuses recorded)
  I0513 19:27:20.996678 19 predicates.go:889] 	Container lb-tcp-443 ready: true, restart count 0
  I0513 19:27:20.996696 19 predicates.go:889] 	Container lb-tcp-80 ready: true, restart count 0
  I0513 19:27:20.996712 19 predicates.go:887] sonobuoy from sonobuoy started at 2024-05-13 18:46:47 +0000 UTC (1 container statuses recorded)
  I0513 19:27:20.996724 19 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I0513 19:27:20.996739 19 predicates.go:887] sonobuoy-systemd-logs-daemon-set-241ff89d670448bb-z7g5j from sonobuoy started at 2024-05-13 18:46:51 +0000 UTC (2 container statuses recorded)
  I0513 19:27:20.996751 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0513 19:27:20.996763 19 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0513 19:27:20.996776 19 predicates.go:121] 
  Logging pods the apiserver thinks is on node ip-172-31-11-14.us-east-2.compute.internal before test
  I0513 19:27:21.002788 19 predicates.go:887] svclb-traefik-d628025f-kvhqn from kube-system started at 2024-05-13 18:51:52 +0000 UTC (2 container statuses recorded)
  I0513 19:27:21.003042 19 predicates.go:889] 	Container lb-tcp-443 ready: true, restart count 0
  I0513 19:27:21.003204 19 predicates.go:889] 	Container lb-tcp-80 ready: true, restart count 0
  I0513 19:27:21.003389 19 predicates.go:887] sonobuoy-systemd-logs-daemon-set-241ff89d670448bb-5w7td from sonobuoy started at 2024-05-13 18:46:51 +0000 UTC (2 container statuses recorded)
  I0513 19:27:21.003538 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0513 19:27:21.003714 19 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0513 19:27:21.003846 19 predicates.go:121] 
  Logging pods the apiserver thinks is on node ip-172-31-14-0.us-east-2.compute.internal before test
  I0513 19:27:21.010134 19 predicates.go:887] coredns-576bfc4dc7-jw24t from kube-system started at 2024-05-13 16:06:09 +0000 UTC (1 container statuses recorded)
  I0513 19:27:21.010486 19 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0513 19:27:21.010663 19 predicates.go:887] helm-install-traefik-crd-chqrn from kube-system started at 2024-05-13 16:06:09 +0000 UTC (1 container statuses recorded)
  I0513 19:27:21.010815 19 predicates.go:889] 	Container helm ready: false, restart count 0
  I0513 19:27:21.010949 19 predicates.go:887] helm-install-traefik-rwkmw from kube-system started at 2024-05-13 16:06:09 +0000 UTC (1 container statuses recorded)
  I0513 19:27:21.011105 19 predicates.go:889] 	Container helm ready: false, restart count 1
  I0513 19:27:21.011225 19 predicates.go:887] local-path-provisioner-75bb9ff978-29v65 from kube-system started at 2024-05-13 16:06:09 +0000 UTC (1 container statuses recorded)
  I0513 19:27:21.011563 19 predicates.go:889] 	Container local-path-provisioner ready: true, restart count 0
  I0513 19:27:21.011718 19 predicates.go:887] metrics-server-557ff575fb-jb8fw from kube-system started at 2024-05-13 16:06:09 +0000 UTC (1 container statuses recorded)
  I0513 19:27:21.011738 19 predicates.go:889] 	Container metrics-server ready: true, restart count 0
  I0513 19:27:21.011755 19 predicates.go:887] svclb-traefik-d628025f-7wqzj from kube-system started at 2024-05-13 16:06:25 +0000 UTC (2 container statuses recorded)
  I0513 19:27:21.011767 19 predicates.go:889] 	Container lb-tcp-443 ready: true, restart count 0
  I0513 19:27:21.011779 19 predicates.go:889] 	Container lb-tcp-80 ready: true, restart count 0
  I0513 19:27:21.011793 19 predicates.go:887] traefik-5fb479b77-7tbnm from kube-system started at 2024-05-13 16:06:24 +0000 UTC (1 container statuses recorded)
  I0513 19:27:21.011805 19 predicates.go:889] 	Container traefik ready: true, restart count 0
  I0513 19:27:21.011818 19 predicates.go:887] sonobuoy-systemd-logs-daemon-set-241ff89d670448bb-n9qjz from sonobuoy started at 2024-05-13 18:46:51 +0000 UTC (2 container statuses recorded)
  I0513 19:27:21.011829 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0513 19:27:21.011841 19 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0513 19:27:21.011853 19 predicates.go:121] 
  Logging pods the apiserver thinks is on node ip-172-31-3-33.us-east-2.compute.internal before test
  I0513 19:27:21.017289 19 predicates.go:887] svclb-traefik-d628025f-zktzm from kube-system started at 2024-05-13 16:09:19 +0000 UTC (2 container statuses recorded)
  I0513 19:27:21.017472 19 predicates.go:889] 	Container lb-tcp-443 ready: true, restart count 0
  I0513 19:27:21.017508 19 predicates.go:889] 	Container lb-tcp-80 ready: true, restart count 0
  I0513 19:27:21.017527 19 predicates.go:887] sonobuoy-e2e-job-badb71ff08654e5b from sonobuoy started at 2024-05-13 18:46:51 +0000 UTC (2 container statuses recorded)
  I0513 19:27:21.017540 19 predicates.go:889] 	Container e2e ready: true, restart count 0
  I0513 19:27:21.017552 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0513 19:27:21.017566 19 predicates.go:887] sonobuoy-systemd-logs-daemon-set-241ff89d670448bb-lrdx4 from sonobuoy started at 2024-05-13 18:46:51 +0000 UTC (2 container statuses recorded)
  I0513 19:27:21.017584 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0513 19:27:21.017597 19 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/13/24 19:27:21.017
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/13/24 19:27:23.051
  STEP: Trying to apply a random label on the found node. @ 05/13/24 19:27:23.088
  STEP: verifying the node has the label kubernetes.io/e2e-6976fadd-5b35-46ae-b58a-67f00598eb7c 95 @ 05/13/24 19:27:23.13
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 05/13/24 19:27:23.136
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.11.14 on the node which pod4 resides and expect not scheduled @ 05/13/24 19:27:25.168
  STEP: removing the label kubernetes.io/e2e-6976fadd-5b35-46ae-b58a-67f00598eb7c off the node ip-172-31-11-14.us-east-2.compute.internal @ 05/13/24 19:32:25.186
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-6976fadd-5b35-46ae-b58a-67f00598eb7c @ 05/13/24 19:32:25.219
  I0513 19:32:25.224636 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-9038" for this suite. @ 05/13/24 19:32:25.23
• [304.353 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 05/13/24 19:32:25.251
  I0513 19:32:25.251115 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename projected @ 05/13/24 19:32:25.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:32:25.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:32:25.297
  STEP: Creating a pod to test downward API volume plugin @ 05/13/24 19:32:25.303
  STEP: Saw pod success @ 05/13/24 19:32:29.369
  I0513 19:32:29.373178 19 output.go:196] Trying to get logs from node ip-172-31-0-253.us-east-2.compute.internal pod downwardapi-volume-1515e034-a54f-4598-b1de-c2aa89102b8b container client-container: <nil>
  STEP: delete the pod @ 05/13/24 19:32:29.397
  I0513 19:32:29.437923 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8488" for this suite. @ 05/13/24 19:32:29.444
• [4.208 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 05/13/24 19:32:29.462
  I0513 19:32:29.462371 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename projected @ 05/13/24 19:32:29.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:32:29.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:32:29.52
  STEP: Creating configMap with name configmap-projected-all-test-volume-a4491c81-d163-4ee7-b8f0-6c34eb23091b @ 05/13/24 19:32:29.526
  STEP: Creating secret with name secret-projected-all-test-volume-44073f6d-a807-431c-a718-44aa175ecb15 @ 05/13/24 19:32:29.566
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 05/13/24 19:32:29.592
  STEP: Saw pod success @ 05/13/24 19:32:33.638
  I0513 19:32:33.641780 19 output.go:196] Trying to get logs from node ip-172-31-0-253.us-east-2.compute.internal pod projected-volume-1a6de4a8-392c-4f5c-b762-c97a64fb4d31 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 05/13/24 19:32:33.651
  I0513 19:32:33.695807 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9340" for this suite. @ 05/13/24 19:32:33.702
• [4.252 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 05/13/24 19:32:33.714
  I0513 19:32:33.714453 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename var-expansion @ 05/13/24 19:32:33.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:32:33.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:32:33.769
  STEP: Creating a pod to test substitution in container's args @ 05/13/24 19:32:33.774
  STEP: Saw pod success @ 05/13/24 19:32:37.829
  I0513 19:32:37.834170 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod var-expansion-2d92d046-3dc8-44ff-8e74-71dce39c349e container dapi-container: <nil>
  STEP: delete the pod @ 05/13/24 19:32:37.854
  I0513 19:32:37.902211 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6229" for this suite. @ 05/13/24 19:32:37.911
• [4.212 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1693
  STEP: Creating a kubernetes client @ 05/13/24 19:32:37.927
  I0513 19:32:37.927584 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename kubectl @ 05/13/24 19:32:37.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:32:37.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:32:37.982
  STEP: creating Agnhost RC @ 05/13/24 19:32:37.985
  I0513 19:32:37.986219 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-7514 create -f -'
  I0513 19:32:38.198236 19 builder.go:146] stderr: ""
  I0513 19:32:38.198295 19 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/13/24 19:32:38.198
  I0513 19:32:39.207485 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0513 19:32:39.207565 19 framework.go:733] Found 0 / 1
  I0513 19:32:40.203027 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0513 19:32:40.203091 19 framework.go:733] Found 1 / 1
  I0513 19:32:40.203114 19 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 05/13/24 19:32:40.203
  I0513 19:32:40.206664 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0513 19:32:40.206751 19 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0513 19:32:40.206812 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-7514 patch pod agnhost-primary-9v2wn -p {"metadata":{"annotations":{"x":"y"}}}'
  I0513 19:32:40.413079 19 builder.go:146] stderr: ""
  I0513 19:32:40.413188 19 builder.go:147] stdout: "pod/agnhost-primary-9v2wn patched\n"
  STEP: checking annotations @ 05/13/24 19:32:40.413
  I0513 19:32:40.420619 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0513 19:32:40.420674 19 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0513 19:32:40.420778 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7514" for this suite. @ 05/13/24 19:32:40.425
• [2.523 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 05/13/24 19:32:40.45
  I0513 19:32:40.450797 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename secrets @ 05/13/24 19:32:40.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:32:40.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:32:40.495
  STEP: Creating secret with name secret-test-44e543dc-f3b6-4800-ac01-5ae6419f9ba6 @ 05/13/24 19:32:40.499
  STEP: Creating a pod to test consume secrets @ 05/13/24 19:32:40.522
  STEP: Saw pod success @ 05/13/24 19:32:44.549
  I0513 19:32:44.552993 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod pod-secrets-baca59bf-d995-4945-8b53-5ecea59085f5 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/13/24 19:32:44.56
  I0513 19:32:44.602307 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5138" for this suite. @ 05/13/24 19:32:44.607
• [4.174 seconds]
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 05/13/24 19:32:44.624
  I0513 19:32:44.624605 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename namespaces @ 05/13/24 19:32:44.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:32:44.672
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:32:44.676
  STEP: Creating namespace "e2e-ns-pm6dj" @ 05/13/24 19:32:44.681
  I0513 19:32:44.719609 19 namespace.go:411] Namespace "e2e-ns-pm6dj-7166" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-pm6dj-7166" @ 05/13/24 19:32:44.719
  I0513 19:32:44.733662 19 namespace.go:434] Namespace "e2e-ns-pm6dj-7166" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-pm6dj-7166" @ 05/13/24 19:32:44.733
  I0513 19:32:44.749897 19 namespace.go:463] Namespace "e2e-ns-pm6dj-7166" has []v1.FinalizerName{"kubernetes"}
  I0513 19:32:44.750026 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6108" for this suite. @ 05/13/24 19:32:44.754
  STEP: Destroying namespace "e2e-ns-pm6dj-7166" for this suite. @ 05/13/24 19:32:44.771
• [0.157 seconds]
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 05/13/24 19:32:44.782
  I0513 19:32:44.782502 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename prestop @ 05/13/24 19:32:44.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:32:44.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:32:44.834
  STEP: Creating server pod server in namespace prestop-138 @ 05/13/24 19:32:44.839
  STEP: Waiting for pods to come up. @ 05/13/24 19:32:44.858
  STEP: Creating tester pod tester in namespace prestop-138 @ 05/13/24 19:32:46.877
  STEP: Deleting pre-stop pod @ 05/13/24 19:32:48.913
  I0513 19:32:53.945004 19 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 05/13/24 19:32:53.945
  I0513 19:32:53.983741 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-138" for this suite. @ 05/13/24 19:32:53.99
• [9.227 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1833
  STEP: Creating a kubernetes client @ 05/13/24 19:32:54.01
  I0513 19:32:54.010454 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename kubectl @ 05/13/24 19:32:54.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:32:54.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:32:54.058
  STEP: starting the proxy server @ 05/13/24 19:32:54.062
  I0513 19:32:54.063053 19 util.go:592] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-7372 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 05/13/24 19:32:54.143
  I0513 19:32:54.151999 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0513 19:32:54.156184 19 kubectl.go:2228] kubectl proxy stderr: W0513 19:32:54.143295     360 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  I0513 19:32:54.156275 19 kubectl.go:2223] kubectl proxy stdout: Starting to serve on 127.0.0.1:46559

  STEP: Destroying namespace "kubectl-7372" for this suite. @ 05/13/24 19:32:54.158
• [0.165 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 05/13/24 19:32:54.176
  I0513 19:32:54.176405 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/13/24 19:32:54.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:32:54.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:32:54.221
  I0513 19:32:54.229662 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/13/24 19:32:56.41
  I0513 19:32:56.410405 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=crd-publish-openapi-7508 --namespace=crd-publish-openapi-7508 create -f -'
  I0513 19:32:56.618670 19 builder.go:146] stderr: ""
  I0513 19:32:56.618734 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8719-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0513 19:32:56.618797 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=crd-publish-openapi-7508 --namespace=crd-publish-openapi-7508 delete e2e-test-crd-publish-openapi-8719-crds test-cr'
  I0513 19:32:56.719792 19 builder.go:146] stderr: ""
  I0513 19:32:56.719846 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8719-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0513 19:32:56.720011 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=crd-publish-openapi-7508 --namespace=crd-publish-openapi-7508 apply -f -'
  I0513 19:32:56.827291 19 builder.go:146] stderr: ""
  I0513 19:32:56.827342 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8719-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0513 19:32:56.827463 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=crd-publish-openapi-7508 --namespace=crd-publish-openapi-7508 delete e2e-test-crd-publish-openapi-8719-crds test-cr'
  I0513 19:32:56.923475 19 builder.go:146] stderr: ""
  I0513 19:32:56.923538 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8719-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 05/13/24 19:32:56.923
  I0513 19:32:56.923885 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=crd-publish-openapi-7508 explain e2e-test-crd-publish-openapi-8719-crds'
  I0513 19:32:57.016011 19 builder.go:146] stderr: ""
  I0513 19:32:57.016087 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-8719-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  I0513 19:32:59.008790 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7508" for this suite. @ 05/13/24 19:32:59.017
• [4.859 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 05/13/24 19:32:59.036
  I0513 19:32:59.036594 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename ingressclass @ 05/13/24 19:32:59.037
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:32:59.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:32:59.082
  STEP: getting /apis @ 05/13/24 19:32:59.087
  STEP: getting /apis/networking.k8s.io @ 05/13/24 19:32:59.095
  STEP: getting /apis/networking.k8s.iov1 @ 05/13/24 19:32:59.097
  STEP: creating @ 05/13/24 19:32:59.099
  STEP: getting @ 05/13/24 19:32:59.636
  STEP: listing @ 05/13/24 19:32:59.639
  STEP: watching @ 05/13/24 19:32:59.642
  I0513 19:32:59.642355 19 ingressclass.go:348] starting watch
  STEP: patching @ 05/13/24 19:32:59.643
  STEP: updating @ 05/13/24 19:32:59.655
  I0513 19:32:59.666151 19 ingressclass.go:364] waiting for watch events with expected annotations
  I0513 19:32:59.666372 19 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 05/13/24 19:32:59.666
  STEP: deleting a collection @ 05/13/24 19:32:59.683
  I0513 19:32:59.714862 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-6252" for this suite. @ 05/13/24 19:32:59.719
• [0.699 seconds]
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 05/13/24 19:32:59.735
  I0513 19:32:59.735814 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename deployment @ 05/13/24 19:32:59.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:32:59.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:32:59.79
  I0513 19:32:59.794493 19 deployment.go:1645] Creating simple deployment test-new-deployment
  I0513 19:32:59.829034 19 deployment.go:222] new replicaset for deployment "test-new-deployment" is yet to be created
  STEP: getting scale subresource @ 05/13/24 19:33:01.877
  STEP: updating a scale subresource @ 05/13/24 19:33:01.881
  STEP: verifying the deployment Spec.Replicas was modified @ 05/13/24 19:33:01.893
  STEP: Patch a scale subresource @ 05/13/24 19:33:01.897
  I0513 19:33:01.953323 19 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5762",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9d6e0121-547e-4d48-8894-d9a6b26f9b2f",
      ResourceVersion: (string) (len=5) "54625",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851225579,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225581,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225581,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225581,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225581,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-77db57d8df\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0513 19:33:01.993249 19 deployment.go:39] New ReplicaSet "test-new-deployment-77db57d8df" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-77db57d8df",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5762",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "97cd89b5-8cad-4eb6-af9e-671ba765625c",
      ResourceVersion: (string) (len=5) "54629",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851225579,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "9d6e0121-547e-4d48-8894-d9a6b26f9b2f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225581,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 64 36 65 30 31  32 31 2d 35 34 37 65 2d  |\"9d6e0121-547e-|
              00000120  34 64 34 38 2d 38 38 39  34 2d 64 39 61 36 62 32  |4d48-8894-d9a6b2|
              00000130  36 66 39 62 32 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |6f9b2f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225581,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0513 19:33:02.006351 19 deployment.go:67] Pod "test-new-deployment-77db57d8df-r5msp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-77db57d8df-r5msp",
      GenerateName: (string) (len=31) "test-new-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5762",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "09cee367-0db1-4d26-8002-db5600abcaa9",
      ResourceVersion: (string) (len=5) "54616",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851225579,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-77db57d8df",
          UID: (types.UID) (len=36) "97cd89b5-8cad-4eb6-af9e-671ba765625c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 37  63 64 38 39 62 35 2d 38  |d\":\"97cd89b5-8|
              00000090  63 61 64 2d 34 65 62 36  2d 61 66 39 65 2d 36 37  |cad-4eb6-af9e-67|
              000000a0  31 62 61 37 36 35 36 32  35 63 5c 22 7d 22 3a 7b  |1ba765625c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225581,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 31 31  35 5c 22 7d 22 3a 7b 22  |.42.2.115\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l8rdp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l8rdp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-11-14.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225581,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225581,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225581,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225579,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.11.14",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.11.14"
        }
      },
      PodIP: (string) (len=11) "10.42.2.115",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.2.115"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851225579,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851225580,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d73d5b0ad4c4aa21d2e223e7d599165999f864b7bf05867cca6ba2733fdb63fe",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 19:33:02.009546 19 deployment.go:67] Pod "test-new-deployment-77db57d8df-s7qgh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-77db57d8df-s7qgh",
      GenerateName: (string) (len=31) "test-new-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5762",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9b9cd163-e9ea-463c-b1e3-e3f6452719da",
      ResourceVersion: (string) (len=5) "54628",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851225581,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-77db57d8df",
          UID: (types.UID) (len=36) "97cd89b5-8cad-4eb6-af9e-671ba765625c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225581,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 37  63 64 38 39 62 35 2d 38  |d\":\"97cd89b5-8|
              00000090  63 61 64 2d 34 65 62 36  2d 61 66 39 65 2d 36 37  |cad-4eb6-af9e-67|
              000000a0  31 62 61 37 36 35 36 32  35 63 5c 22 7d 22 3a 7b  |1ba765625c\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c57fx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c57fx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-0-253.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851225581,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 19:33:02.011375 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5762" for this suite. @ 05/13/24 19:33:02.028
• [2.331 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 05/13/24 19:33:02.066
  I0513 19:33:02.067012 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename containers @ 05/13/24 19:33:02.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:33:02.181
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:33:02.185
  STEP: Creating a pod to test override all @ 05/13/24 19:33:02.19
  STEP: Saw pod success @ 05/13/24 19:33:06.227
  I0513 19:33:06.230734 19 output.go:196] Trying to get logs from node ip-172-31-0-253.us-east-2.compute.internal pod client-containers-94c471da-247e-45ba-a0fd-7e1c62db37e7 container agnhost-container: <nil>
  STEP: delete the pod @ 05/13/24 19:33:06.238
  I0513 19:33:06.275298 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-2445" for this suite. @ 05/13/24 19:33:06.281
• [4.228 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 05/13/24 19:33:06.295
  I0513 19:33:06.295373 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/13/24 19:33:06.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:33:06.339
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:33:06.343
  STEP: set up a multi version CRD @ 05/13/24 19:33:06.348
  I0513 19:33:06.349813 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: mark a version not serverd @ 05/13/24 19:33:10.795
  STEP: check the unserved version gets removed @ 05/13/24 19:33:10.831
  STEP: check the other version is not changed @ 05/13/24 19:33:12.212
  I0513 19:33:15.714125 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3299" for this suite. @ 05/13/24 19:33:15.72
• [9.437 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 05/13/24 19:33:15.732
  I0513 19:33:15.732503 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename projected @ 05/13/24 19:33:15.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:33:15.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:33:15.782
  STEP: Creating a pod to test downward API volume plugin @ 05/13/24 19:33:15.786
  STEP: Saw pod success @ 05/13/24 19:33:19.82
  I0513 19:33:19.823209 19 output.go:196] Trying to get logs from node ip-172-31-0-253.us-east-2.compute.internal pod downwardapi-volume-16fdb0d0-f22c-4940-9344-da2a66a2e4ac container client-container: <nil>
  STEP: delete the pod @ 05/13/24 19:33:19.835
  I0513 19:33:19.878588 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5121" for this suite. @ 05/13/24 19:33:19.885
• [4.168 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 05/13/24 19:33:19.901
  I0513 19:33:19.902085 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename projected @ 05/13/24 19:33:19.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:33:19.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:33:19.956
  STEP: Creating a pod to test downward API volume plugin @ 05/13/24 19:33:19.961
  STEP: Saw pod success @ 05/13/24 19:33:24.012
  I0513 19:33:24.015523 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod downwardapi-volume-2a712f65-238f-4f60-b541-e3ce4e4b29b5 container client-container: <nil>
  STEP: delete the pod @ 05/13/24 19:33:24.025
  I0513 19:33:24.075658 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6688" for this suite. @ 05/13/24 19:33:24.08
• [4.195 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2203
  STEP: Creating a kubernetes client @ 05/13/24 19:33:24.102
  I0513 19:33:24.102540 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename services @ 05/13/24 19:33:24.103
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:33:24.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:33:24.169
  STEP: creating service in namespace services-7718 @ 05/13/24 19:33:24.174
  STEP: creating service affinity-clusterip-transition in namespace services-7718 @ 05/13/24 19:33:24.174
  STEP: creating replication controller affinity-clusterip-transition in namespace services-7718 @ 05/13/24 19:33:24.204
  I0513 19:33:24.240676      19 runners.go:198] Created replication controller with name: affinity-clusterip-transition, namespace: services-7718, replica count: 3
  I0513 19:33:27.292277      19 runners.go:198] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0513 19:33:27.307398 19 resource.go:361] Creating new exec pod
  I0513 19:33:30.336443 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-7718 exec execpod-affinity84kr8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0513 19:33:30.479223 19 builder.go:146] stderr: "+ + echonc -v hostName -t\n -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  I0513 19:33:30.479311 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0513 19:33:30.479412 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-7718 exec execpod-affinity84kr8 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.13.225 80'
  I0513 19:33:30.631819 19 builder.go:146] stderr: "+ + echonc hostName -v\n -t -w 2 10.43.13.225 80\nConnection to 10.43.13.225 80 port [tcp/http] succeeded!\n"
  I0513 19:33:30.631887 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0513 19:33:30.644355 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-7718 exec execpod-affinity84kr8 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.13.225:80/ ; done'
  I0513 19:33:30.882239 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.13.225:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.13.225:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.13.225:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.13.225:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.13.225:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.13.225:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.13.225:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.13.225:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.13.225:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.13.225:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.13.225:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.13.225:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.13.225:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.13.225:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.13.225:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.13.225:80/\n"
  I0513 19:33:30.882312 19 builder.go:147] stdout: "\naffinity-clusterip-transition-9h4lt\naffinity-clusterip-transition-dn9cm\naffinity-clusterip-transition-q55zc\naffinity-clusterip-transition-9h4lt\naffinity-clusterip-transition-q55zc\naffinity-clusterip-transition-dn9cm\naffinity-clusterip-transition-9h4lt\naffinity-clusterip-transition-9h4lt\naffinity-clusterip-transition-dn9cm\naffinity-clusterip-transition-dn9cm\naffinity-clusterip-transition-9h4lt\naffinity-clusterip-transition-9h4lt\naffinity-clusterip-transition-q55zc\naffinity-clusterip-transition-9h4lt\naffinity-clusterip-transition-q55zc\naffinity-clusterip-transition-dn9cm"
  I0513 19:33:30.882338 19 service.go:242] Received response from host: affinity-clusterip-transition-9h4lt
  I0513 19:33:30.882356 19 service.go:242] Received response from host: affinity-clusterip-transition-dn9cm
  I0513 19:33:30.882372 19 service.go:242] Received response from host: affinity-clusterip-transition-q55zc
  I0513 19:33:30.882386 19 service.go:242] Received response from host: affinity-clusterip-transition-9h4lt
  I0513 19:33:30.882400 19 service.go:242] Received response from host: affinity-clusterip-transition-q55zc
  I0513 19:33:30.882411 19 service.go:242] Received response from host: affinity-clusterip-transition-dn9cm
  I0513 19:33:30.882423 19 service.go:242] Received response from host: affinity-clusterip-transition-9h4lt
  I0513 19:33:30.882433 19 service.go:242] Received response from host: affinity-clusterip-transition-9h4lt
  I0513 19:33:30.882445 19 service.go:242] Received response from host: affinity-clusterip-transition-dn9cm
  I0513 19:33:30.882458 19 service.go:242] Received response from host: affinity-clusterip-transition-dn9cm
  I0513 19:33:30.882473 19 service.go:242] Received response from host: affinity-clusterip-transition-9h4lt
  I0513 19:33:30.882489 19 service.go:242] Received response from host: affinity-clusterip-transition-9h4lt
  I0513 19:33:30.882501 19 service.go:242] Received response from host: affinity-clusterip-transition-q55zc
  I0513 19:33:30.882511 19 service.go:242] Received response from host: affinity-clusterip-transition-9h4lt
  I0513 19:33:30.882521 19 service.go:242] Received response from host: affinity-clusterip-transition-q55zc
  I0513 19:33:30.882532 19 service.go:242] Received response from host: affinity-clusterip-transition-dn9cm
  I0513 19:33:30.895209 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-7718 exec execpod-affinity84kr8 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.13.225:80/ ; done'
  I0513 19:33:31.119207 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.13.225:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.13.225:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.13.225:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.13.225:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.13.225:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.13.225:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.13.225:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.13.225:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.13.225:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.13.225:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.13.225:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.13.225:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.13.225:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.13.225:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.13.225:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.13.225:80/\n"
  I0513 19:33:31.119284 19 builder.go:147] stdout: "\naffinity-clusterip-transition-dn9cm\naffinity-clusterip-transition-dn9cm\naffinity-clusterip-transition-dn9cm\naffinity-clusterip-transition-dn9cm\naffinity-clusterip-transition-dn9cm\naffinity-clusterip-transition-dn9cm\naffinity-clusterip-transition-dn9cm\naffinity-clusterip-transition-dn9cm\naffinity-clusterip-transition-dn9cm\naffinity-clusterip-transition-dn9cm\naffinity-clusterip-transition-dn9cm\naffinity-clusterip-transition-dn9cm\naffinity-clusterip-transition-dn9cm\naffinity-clusterip-transition-dn9cm\naffinity-clusterip-transition-dn9cm\naffinity-clusterip-transition-dn9cm"
  I0513 19:33:31.119315 19 service.go:242] Received response from host: affinity-clusterip-transition-dn9cm
  I0513 19:33:31.119333 19 service.go:242] Received response from host: affinity-clusterip-transition-dn9cm
  I0513 19:33:31.119348 19 service.go:242] Received response from host: affinity-clusterip-transition-dn9cm
  I0513 19:33:31.119362 19 service.go:242] Received response from host: affinity-clusterip-transition-dn9cm
  I0513 19:33:31.119379 19 service.go:242] Received response from host: affinity-clusterip-transition-dn9cm
  I0513 19:33:31.119393 19 service.go:242] Received response from host: affinity-clusterip-transition-dn9cm
  I0513 19:33:31.119408 19 service.go:242] Received response from host: affinity-clusterip-transition-dn9cm
  I0513 19:33:31.119422 19 service.go:242] Received response from host: affinity-clusterip-transition-dn9cm
  I0513 19:33:31.119538 19 service.go:242] Received response from host: affinity-clusterip-transition-dn9cm
  I0513 19:33:31.119603 19 service.go:242] Received response from host: affinity-clusterip-transition-dn9cm
  I0513 19:33:31.119618 19 service.go:242] Received response from host: affinity-clusterip-transition-dn9cm
  I0513 19:33:31.119632 19 service.go:242] Received response from host: affinity-clusterip-transition-dn9cm
  I0513 19:33:31.119646 19 service.go:242] Received response from host: affinity-clusterip-transition-dn9cm
  I0513 19:33:31.119726 19 service.go:242] Received response from host: affinity-clusterip-transition-dn9cm
  I0513 19:33:31.119740 19 service.go:242] Received response from host: affinity-clusterip-transition-dn9cm
  I0513 19:33:31.119808 19 service.go:242] Received response from host: affinity-clusterip-transition-dn9cm
  I0513 19:33:31.120083 19 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-7718, will wait for the garbage collector to delete the pods @ 05/13/24 19:33:31.154
  I0513 19:33:31.222479 19 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 13.196141ms
  I0513 19:33:31.323010 19 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 100.51952ms
  I0513 19:33:36.759361 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7718" for this suite. @ 05/13/24 19:33:36.765
• [12.678 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 05/13/24 19:33:36.781
  I0513 19:33:36.781299 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename init-container @ 05/13/24 19:33:36.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:33:36.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:33:36.811
  STEP: creating the pod @ 05/13/24 19:33:36.818
  I0513 19:33:36.819007 19 init_container.go:374] PodSpec: initContainers in spec.initContainers
  I0513 19:34:21.453840 19 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-1d37fbae-e98a-4f8b-9840-f96c37323676", GenerateName:"", Namespace:"init-container-5115", SelfLink:"", UID:"77f9bb3b-96f9-444e-8073-6d26356b1a42", ResourceVersion:"55198", Generation:0, CreationTimestamp:time.Date(2024, time.May, 13, 19, 33, 36, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"818992686"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 13, 19, 33, 36, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046f4420), Subresource:""}, v1.ManagedFieldsEntry{Manager:"k3s", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.May, 13, 19, 34, 21, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0046f4480), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-77ltz", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc000aa9240), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-77ltz", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-77ltz", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-77ltz", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc00420cf88), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-11-14.us-east-2.compute.internal", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc005552b80), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00420d000)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00420d020)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc00420d028), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00420d02c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc000fe3130), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 13, 19, 33, 38, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 13, 19, 33, 36, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 13, 19, 33, 36, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 13, 19, 33, 36, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.May, 13, 19, 33, 36, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.11.14", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.11.14"}}, PodIP:"10.42.2.119", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.42.2.119"}}, StartTime:time.Date(2024, time.May, 13, 19, 33, 36, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(0xc0046f44c8), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0001fa5b0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://11e4ce010a803c4d7d61393a287d501520a96d9ce0dc703cc7d10c6b1d7aa3f2", Started:(*bool)(0xc00420d0c5), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc000aa92a0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc00420d0cb), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc000aa9280), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc00420d0af), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0513 19:34:21.454537 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5115" for this suite. @ 05/13/24 19:34:21.46
• [44.693 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 05/13/24 19:34:21.474
  I0513 19:34:21.474413 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename emptydir-wrapper @ 05/13/24 19:34:21.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:34:21.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:34:21.512
  STEP: Creating 50 configmaps @ 05/13/24 19:34:21.517
  STEP: Creating RC which spawns configmap-volume pods @ 05/13/24 19:34:22.052
  I0513 19:34:22.078218 19 resource.go:87] Pod name wrapped-volume-race-4e569744-5538-4016-92ce-590d9039022e: Found 0 pods out of 5
  I0513 19:34:27.715138 19 resource.go:87] Pod name wrapped-volume-race-4e569744-5538-4016-92ce-590d9039022e: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/13/24 19:34:27.715
  STEP: Creating RC which spawns configmap-volume pods @ 05/13/24 19:34:27.769
  I0513 19:34:27.802308 19 resource.go:87] Pod name wrapped-volume-race-73cfa3ba-5728-418b-bfb1-9990d7b88f44: Found 0 pods out of 5
  I0513 19:34:32.995362 19 resource.go:87] Pod name wrapped-volume-race-73cfa3ba-5728-418b-bfb1-9990d7b88f44: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/13/24 19:34:33.003
  STEP: Creating RC which spawns configmap-volume pods @ 05/13/24 19:34:35.082
  I0513 19:34:35.109300 19 resource.go:87] Pod name wrapped-volume-race-65a96851-4f36-4f7f-a14e-183d9d79ebcc: Found 0 pods out of 5
  I0513 19:34:40.119660 19 resource.go:87] Pod name wrapped-volume-race-65a96851-4f36-4f7f-a14e-183d9d79ebcc: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 05/13/24 19:34:40.119
  STEP: deleting ReplicationController wrapped-volume-race-65a96851-4f36-4f7f-a14e-183d9d79ebcc in namespace emptydir-wrapper-9903, will wait for the garbage collector to delete the pods @ 05/13/24 19:34:40.141
  I0513 19:34:40.205192 19 resources.go:139] Deleting ReplicationController wrapped-volume-race-65a96851-4f36-4f7f-a14e-183d9d79ebcc took: 10.292309ms
  I0513 19:34:40.405831 19 resources.go:163] Terminating ReplicationController wrapped-volume-race-65a96851-4f36-4f7f-a14e-183d9d79ebcc pods took: 200.636603ms
  STEP: deleting ReplicationController wrapped-volume-race-73cfa3ba-5728-418b-bfb1-9990d7b88f44 in namespace emptydir-wrapper-9903, will wait for the garbage collector to delete the pods @ 05/13/24 19:34:42.606
  I0513 19:34:42.683249 19 resources.go:139] Deleting ReplicationController wrapped-volume-race-73cfa3ba-5728-418b-bfb1-9990d7b88f44 took: 16.960283ms
  I0513 19:34:42.884130 19 resources.go:163] Terminating ReplicationController wrapped-volume-race-73cfa3ba-5728-418b-bfb1-9990d7b88f44 pods took: 200.878807ms
  STEP: deleting ReplicationController wrapped-volume-race-4e569744-5538-4016-92ce-590d9039022e in namespace emptydir-wrapper-9903, will wait for the garbage collector to delete the pods @ 05/13/24 19:34:44.886
  I0513 19:34:44.966253 19 resources.go:139] Deleting ReplicationController wrapped-volume-race-4e569744-5538-4016-92ce-590d9039022e took: 12.981516ms
  I0513 19:34:45.066762 19 resources.go:163] Terminating ReplicationController wrapped-volume-race-4e569744-5538-4016-92ce-590d9039022e pods took: 100.508775ms
  STEP: Cleaning up the configMaps @ 05/13/24 19:34:47.367
  I0513 19:34:47.892259 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-9903" for this suite. @ 05/13/24 19:34:47.896
• [26.432 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 05/13/24 19:34:47.906
  I0513 19:34:47.906466 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename webhook @ 05/13/24 19:34:47.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:34:47.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:34:47.956
  STEP: Setting up server cert @ 05/13/24 19:34:48.001
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/13/24 19:34:48.371
  STEP: Deploying the webhook pod @ 05/13/24 19:34:48.386
  STEP: Wait for the deployment to be ready @ 05/13/24 19:34:48.411
  I0513 19:34:48.426664 19 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  I0513 19:34:50.436569 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 19, 34, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 34, 48, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 19, 34, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 19, 34, 48, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 05/13/24 19:34:52.442
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 19:34:52.466
  I0513 19:34:53.467310 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 05/13/24 19:34:53.671
  STEP: Creating a configMap that should be mutated @ 05/13/24 19:34:53.69
  STEP: Deleting the collection of validation webhooks @ 05/13/24 19:34:53.738
  STEP: Creating a configMap that should not be mutated @ 05/13/24 19:34:53.856
  I0513 19:34:53.970455 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8664" for this suite. @ 05/13/24 19:34:53.977
  STEP: Destroying namespace "webhook-markers-3745" for this suite. @ 05/13/24 19:34:53.998
• [6.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 05/13/24 19:34:54.034
  I0513 19:34:54.034206 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename containers @ 05/13/24 19:34:54.037
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:34:54.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:34:54.084
  STEP: Creating a pod to test override command @ 05/13/24 19:34:54.089
  STEP: Saw pod success @ 05/13/24 19:34:58.245
  I0513 19:34:58.248883 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod client-containers-3a542b1a-d300-401e-b310-7852ba33a004 container agnhost-container: <nil>
  STEP: delete the pod @ 05/13/24 19:34:58.259
  I0513 19:34:58.292007 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-2751" for this suite. @ 05/13/24 19:34:58.296
• [4.274 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3161
  STEP: Creating a kubernetes client @ 05/13/24 19:34:58.309
  I0513 19:34:58.309258 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename services @ 05/13/24 19:34:58.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:34:58.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:34:58.465
  STEP: creating an Endpoint @ 05/13/24 19:34:58.473
  STEP: waiting for available Endpoint @ 05/13/24 19:34:58.482
  STEP: listing all Endpoints @ 05/13/24 19:34:58.485
  STEP: updating the Endpoint @ 05/13/24 19:34:58.488
  STEP: fetching the Endpoint @ 05/13/24 19:34:58.499
  STEP: patching the Endpoint @ 05/13/24 19:34:58.501
  STEP: fetching the Endpoint @ 05/13/24 19:34:58.515
  STEP: deleting the Endpoint by Collection @ 05/13/24 19:34:58.518
  STEP: waiting for Endpoint deletion @ 05/13/24 19:34:58.529
  STEP: fetching the Endpoint @ 05/13/24 19:34:58.531
  I0513 19:34:58.534325 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-151" for this suite. @ 05/13/24 19:34:58.537
• [0.239 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 05/13/24 19:34:58.548
  I0513 19:34:58.548965 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename downward-api @ 05/13/24 19:34:58.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:34:58.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:34:58.588
  STEP: Creating a pod to test downward API volume plugin @ 05/13/24 19:34:58.594
  STEP: Saw pod success @ 05/13/24 19:35:03.012
  I0513 19:35:03.015821 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod downwardapi-volume-76e76a5f-6d4e-4a1b-8685-51076a9b3da8 container client-container: <nil>
  STEP: delete the pod @ 05/13/24 19:35:03.022
  I0513 19:35:03.055818 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-538" for this suite. @ 05/13/24 19:35:03.06
• [4.525 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 05/13/24 19:35:03.077
  I0513 19:35:03.077947 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename daemonsets @ 05/13/24 19:35:03.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:35:03.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:35:03.111
  STEP: Creating a simple DaemonSet "daemon-set" @ 05/13/24 19:35:03.145
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/13/24 19:35:03.157
  I0513 19:35:03.166382 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 19:35:03.166589 19 fixtures.go:130] Node ip-172-31-0-253.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 19:35:04.393393 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 19:35:04.393636 19 fixtures.go:130] Node ip-172-31-0-253.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 19:35:05.397965 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0513 19:35:05.398024 19 fixtures.go:130] Node ip-172-31-0-253.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 19:35:06.166946 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0513 19:35:06.167002 19 fixtures.go:135] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 05/13/24 19:35:06.169
  I0513 19:35:06.201024 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0513 19:35:06.201286 19 fixtures.go:135] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 05/13/24 19:35:06.201
  STEP: Deleting DaemonSet "daemon-set" @ 05/13/24 19:35:07.212
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8461, will wait for the garbage collector to delete the pods @ 05/13/24 19:35:07.212
  I0513 19:35:07.293725 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 23.98445ms
  I0513 19:35:07.494135 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 200.406548ms
  I0513 19:35:09.698439 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 19:35:09.698622 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0513 19:35:09.701656 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"56060"},"items":null}

  I0513 19:35:09.704223 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"56060"},"items":null}

  I0513 19:35:09.721372 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8461" for this suite. @ 05/13/24 19:35:09.725
• [6.659 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 05/13/24 19:35:09.737
  I0513 19:35:09.737619 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename subjectreview @ 05/13/24 19:35:09.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:35:09.771
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:35:09.774
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-2649" @ 05/13/24 19:35:09.778
  I0513 19:35:09.788693 19 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-2649:e2e"
  I0513 19:35:09.788926 19 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-2649"}
  I0513 19:35:09.789008 19 subjectreviews.go:71] saUID: "4a44e32e-a930-415a-8029-c5ea73209c7d"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-2649:e2e" @ 05/13/24 19:35:09.789
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-2649:e2e" @ 05/13/24 19:35:09.789
  I0513 19:35:09.791285 19 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-2649:e2e" api 'list' configmaps in "subjectreview-2649" namespace @ 05/13/24 19:35:09.791
  I0513 19:35:09.792631 19 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-2649:e2e" @ 05/13/24 19:35:09.792
  I0513 19:35:09.794775 19 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0513 19:35:09.794837 19 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0513 19:35:09.794927 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-2649" for this suite. @ 05/13/24 19:35:09.799
• [0.073 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1726
  STEP: Creating a kubernetes client @ 05/13/24 19:35:09.811
  I0513 19:35:09.811261 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename kubectl @ 05/13/24 19:35:09.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:35:09.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:35:09.852
  I0513 19:35:09.858413 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-8953 version'
  I0513 19:35:09.933044 19 builder.go:146] stderr: ""
  I0513 19:35:09.933198 19 builder.go:147] stdout: "Client Version: v1.30.0\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.30.0+k3s1\n"
  I0513 19:35:09.933404 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8953" for this suite. @ 05/13/24 19:35:09.937
• [0.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:669
  STEP: Creating a kubernetes client @ 05/13/24 19:35:09.949
  I0513 19:35:09.949752 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename pv @ 05/13/24 19:35:09.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:35:09.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:35:09.981
  STEP: Creating initial PV and PVC @ 05/13/24 19:35:09.985
  I0513 19:35:09.985283 19 pv.go:390] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-1849" @ 05/13/24 19:35:10.008
  STEP: Listing PVCs in namespace "pv-1849" @ 05/13/24 19:35:10.013
  STEP: Reading "pvc-pmpxh" Status @ 05/13/24 19:35:10.017
  STEP: Reading "pv-1849-4h5m4" Status @ 05/13/24 19:35:10.021
  STEP: Patching "pvc-pmpxh" Status @ 05/13/24 19:35:10.028
  STEP: Patching "pv-1849-4h5m4" Status @ 05/13/24 19:35:10.068
  STEP: Updating "pvc-pmpxh" Status @ 05/13/24 19:35:10.102
  STEP: Updating "pv-1849-4h5m4" Status @ 05/13/24 19:35:10.123
  I0513 19:35:10.160495 19 persistent_volumes.go:407] AfterEach: deleting 1 PVCs and 1 PVs...
  I0513 19:35:10.160596 19 pv.go:201] Deleting PersistentVolumeClaim "pvc-pmpxh"
  I0513 19:35:10.180029 19 pv.go:189] Deleting PersistentVolume "pv-1849-4h5m4"
  I0513 19:35:10.191628 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-1849" for this suite. @ 05/13/24 19:35:10.198
• [0.262 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:420
  STEP: Creating a kubernetes client @ 05/13/24 19:35:10.212
  I0513 19:35:10.212584 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename job @ 05/13/24 19:35:10.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:35:10.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:35:10.255
  STEP: Creating Indexed job @ 05/13/24 19:35:10.259
  STEP: Ensuring job reaches completions @ 05/13/24 19:35:10.269
  STEP: Ensuring pods with index for job exist @ 05/13/24 19:35:18.273
  I0513 19:35:18.277382 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-534" for this suite. @ 05/13/24 19:35:18.282
• [8.081 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 05/13/24 19:35:18.293
  I0513 19:35:18.293931 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename projected @ 05/13/24 19:35:18.294
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:35:18.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:35:18.323
  STEP: Creating configMap with name projected-configmap-test-volume-2afdac98-6968-4376-a15b-8514d6f90f18 @ 05/13/24 19:35:18.329
  STEP: Creating a pod to test consume configMaps @ 05/13/24 19:35:18.338
  STEP: Saw pod success @ 05/13/24 19:35:22.372
  I0513 19:35:22.379292 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod pod-projected-configmaps-6823703a-956f-4608-946a-bdec32b8d5ca container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 05/13/24 19:35:22.385
  I0513 19:35:22.415079 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4287" for this suite. @ 05/13/24 19:35:22.427
• [4.150 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 05/13/24 19:35:22.444
  I0513 19:35:22.444995 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename configmap @ 05/13/24 19:35:22.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:35:22.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:35:22.492
  STEP: Creating configMap with name configmap-test-upd-a8968f69-b29b-4565-bc52-a57881e8c83a @ 05/13/24 19:35:22.5
  STEP: Creating the pod @ 05/13/24 19:35:22.51
  STEP: Updating configmap configmap-test-upd-a8968f69-b29b-4565-bc52-a57881e8c83a @ 05/13/24 19:35:24.54
  STEP: waiting to observe update in volume @ 05/13/24 19:35:24.548
  I0513 19:36:54.111587 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6223" for this suite. @ 05/13/24 19:36:54.115
• [91.703 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 05/13/24 19:36:54.148
  I0513 19:36:54.148765 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename resourcequota @ 05/13/24 19:36:54.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:36:54.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:36:54.24
  STEP: Creating a ResourceQuota @ 05/13/24 19:36:54.251
  STEP: Getting a ResourceQuota @ 05/13/24 19:36:54.263
  STEP: Listing all ResourceQuotas with LabelSelector @ 05/13/24 19:36:54.272
  STEP: Patching the ResourceQuota @ 05/13/24 19:36:54.275
  STEP: Deleting a Collection of ResourceQuotas @ 05/13/24 19:36:54.29
  STEP: Verifying the deleted ResourceQuota @ 05/13/24 19:36:54.309
  I0513 19:36:54.312881 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7180" for this suite. @ 05/13/24 19:36:54.318
• [0.180 seconds]
------------------------------
S
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 05/13/24 19:36:54.328
  I0513 19:36:54.328741 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename sysctl @ 05/13/24 19:36:54.33
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:36:54.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:36:54.383
  STEP: Creating a pod with one valid and two invalid sysctls @ 05/13/24 19:36:54.387
  I0513 19:36:54.394469 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-636" for this suite. @ 05/13/24 19:36:54.398
• [0.095 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 05/13/24 19:36:54.424
  I0513 19:36:54.424032 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename pods @ 05/13/24 19:36:54.425
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:36:54.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:36:54.5
  I0513 19:36:54.504833 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: creating the pod @ 05/13/24 19:36:54.505
  STEP: submitting the pod to kubernetes @ 05/13/24 19:36:54.505
  I0513 19:36:56.551831 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9785" for this suite. @ 05/13/24 19:36:56.556
• [2.143 seconds]
------------------------------
S
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 05/13/24 19:36:56.566
  I0513 19:36:56.566846 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename init-container @ 05/13/24 19:36:56.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:36:56.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:36:56.66
  STEP: creating the pod @ 05/13/24 19:36:56.664
  I0513 19:36:56.664890 19 init_container.go:213] PodSpec: initContainers in spec.initContainers
  I0513 19:37:01.232987 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-774" for this suite. @ 05/13/24 19:37:01.238
• [5.123 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 05/13/24 19:37:01.69
  I0513 19:37:01.691092 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename downward-api @ 05/13/24 19:37:01.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:37:01.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:37:01.725
  STEP: Creating the pod @ 05/13/24 19:37:01.731
  I0513 19:37:04.287510 19 pod_client.go:141] Successfully updated pod "annotationupdate11b58ce0-751b-4c41-8c32-9687f7dd4bff"
  I0513 19:37:06.305921 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3925" for this suite. @ 05/13/24 19:37:06.31
• [4.630 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 05/13/24 19:37:06.321
  I0513 19:37:06.321302 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename projected @ 05/13/24 19:37:06.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:37:06.35
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:37:06.353
  STEP: Creating projection with secret that has name projected-secret-test-dcf06a9d-7076-471b-bb4d-766b99585520 @ 05/13/24 19:37:06.358
  STEP: Creating a pod to test consume secrets @ 05/13/24 19:37:06.368
  STEP: Saw pod success @ 05/13/24 19:37:10.398
  I0513 19:37:10.401537 19 output.go:196] Trying to get logs from node ip-172-31-0-253.us-east-2.compute.internal pod pod-projected-secrets-4b5f223f-8dca-4273-9ce8-8e0c2e4d0775 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/13/24 19:37:10.414
  I0513 19:37:10.450346 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9818" for this suite. @ 05/13/24 19:37:10.454
• [4.145 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 05/13/24 19:37:10.472
  I0513 19:37:10.473001 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename sched-preemption @ 05/13/24 19:37:10.474
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:37:11.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:37:11.089
  I0513 19:37:11.115060 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0513 19:38:11.123880 19 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 05/13/24 19:38:11.127
  I0513 19:38:11.181253 19 preemption.go:269] Created pod: pod0-0-sched-preemption-low-priority
  I0513 19:38:11.195809 19 preemption.go:269] Created pod: pod0-1-sched-preemption-medium-priority
  I0513 19:38:11.242603 19 preemption.go:269] Created pod: pod1-0-sched-preemption-medium-priority
  I0513 19:38:11.260786 19 preemption.go:269] Created pod: pod1-1-sched-preemption-medium-priority
  I0513 19:38:11.311182 19 preemption.go:269] Created pod: pod2-0-sched-preemption-medium-priority
  I0513 19:38:11.330915 19 preemption.go:269] Created pod: pod2-1-sched-preemption-medium-priority
  I0513 19:38:11.405561 19 preemption.go:269] Created pod: pod3-0-sched-preemption-medium-priority
  I0513 19:38:11.434163 19 preemption.go:269] Created pod: pod3-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 05/13/24 19:38:11.434
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 05/13/24 19:38:15.485
  I0513 19:38:19.676612 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3856" for this suite. @ 05/13/24 19:38:19.681
• [69.218 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 05/13/24 19:38:19.69
  I0513 19:38:19.691005 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename watch @ 05/13/24 19:38:19.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:38:19.727
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:38:19.731
  STEP: creating a watch on configmaps with label A @ 05/13/24 19:38:19.736
  STEP: creating a watch on configmaps with label B @ 05/13/24 19:38:19.738
  STEP: creating a watch on configmaps with label A or B @ 05/13/24 19:38:19.74
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 05/13/24 19:38:19.742
  I0513 19:38:19.774395 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9482  1ff7fb7a-1f94-47c2-aeba-a7320b81ce16 57186 0 2024-05-13 19:38:19 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-13 19:38:19 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0513 19:38:19.774735 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9482  1ff7fb7a-1f94-47c2-aeba-a7320b81ce16 57186 0 2024-05-13 19:38:19 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-13 19:38:19 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 05/13/24 19:38:19.774
  I0513 19:38:19.789590 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9482  1ff7fb7a-1f94-47c2-aeba-a7320b81ce16 57188 0 2024-05-13 19:38:19 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-13 19:38:19 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0513 19:38:19.789911 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9482  1ff7fb7a-1f94-47c2-aeba-a7320b81ce16 57188 0 2024-05-13 19:38:19 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-13 19:38:19 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 05/13/24 19:38:19.79
  I0513 19:38:19.805966 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9482  1ff7fb7a-1f94-47c2-aeba-a7320b81ce16 57189 0 2024-05-13 19:38:19 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-13 19:38:19 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0513 19:38:19.806342 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9482  1ff7fb7a-1f94-47c2-aeba-a7320b81ce16 57189 0 2024-05-13 19:38:19 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-13 19:38:19 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 05/13/24 19:38:19.806
  I0513 19:38:19.820737 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9482  1ff7fb7a-1f94-47c2-aeba-a7320b81ce16 57190 0 2024-05-13 19:38:19 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-13 19:38:19 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0513 19:38:19.820826 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9482  1ff7fb7a-1f94-47c2-aeba-a7320b81ce16 57190 0 2024-05-13 19:38:19 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-05-13 19:38:19 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 05/13/24 19:38:19.82
  I0513 19:38:19.830021 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9482  06b0f5be-26f8-4b60-9d69-dbc7407faeaf 57191 0 2024-05-13 19:38:19 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-13 19:38:19 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0513 19:38:19.830158 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9482  06b0f5be-26f8-4b60-9d69-dbc7407faeaf 57191 0 2024-05-13 19:38:19 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-13 19:38:19 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 05/13/24 19:38:29.83
  I0513 19:38:29.842222 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9482  06b0f5be-26f8-4b60-9d69-dbc7407faeaf 57303 0 2024-05-13 19:38:19 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-13 19:38:19 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0513 19:38:29.842304 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9482  06b0f5be-26f8-4b60-9d69-dbc7407faeaf 57303 0 2024-05-13 19:38:19 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-05-13 19:38:19 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0513 19:38:39.846898 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9482" for this suite. @ 05/13/24 19:38:39.852
• [20.178 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 05/13/24 19:38:39.869
  I0513 19:38:39.869768 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename lease-test @ 05/13/24 19:38:39.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:38:39.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:38:39.915
  I0513 19:38:40.051379 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-455" for this suite. @ 05/13/24 19:38:40.057
• [0.199 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 05/13/24 19:38:40.07
  I0513 19:38:40.070136 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename emptydir @ 05/13/24 19:38:40.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:38:40.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:38:40.108
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 05/13/24 19:38:40.113
  STEP: Saw pod success @ 05/13/24 19:38:44.154
  I0513 19:38:44.158411 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod pod-818da37d-cf0a-4d64-be6c-587fe5bd0508 container test-container: <nil>
  STEP: delete the pod @ 05/13/24 19:38:44.174
  I0513 19:38:44.241455 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1858" for this suite. @ 05/13/24 19:38:44.247
• [4.197 seconds]
------------------------------
SSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 05/13/24 19:38:44.267
  I0513 19:38:44.267830 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename downward-api @ 05/13/24 19:38:44.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:38:44.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:38:44.322
  STEP: Creating a pod to test downward api env vars @ 05/13/24 19:38:44.326
  STEP: Saw pod success @ 05/13/24 19:38:48.358
  I0513 19:38:48.361569 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod downward-api-d404283e-8ad8-4c5e-8d0c-cd9c61fd7fe8 container dapi-container: <nil>
  STEP: delete the pod @ 05/13/24 19:38:48.367
  I0513 19:38:48.403677 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9627" for this suite. @ 05/13/24 19:38:48.41
• [4.161 seconds]
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 05/13/24 19:38:48.429
  I0513 19:38:48.429280 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename var-expansion @ 05/13/24 19:38:48.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:38:48.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:38:48.471
  I0513 19:38:50.497615 19 delete.go:62] Deleting pod "var-expansion-45b6a15d-cc0a-45cf-9acf-819ba1d169c6" in namespace "var-expansion-1597"
  I0513 19:38:50.515320 19 delete.go:70] Wait up to 5m0s for pod "var-expansion-45b6a15d-cc0a-45cf-9acf-819ba1d169c6" to be fully deleted
  I0513 19:38:52.523587 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1597" for this suite. @ 05/13/24 19:38:52.527
• [4.109 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 05/13/24 19:38:52.538
  I0513 19:38:52.538582 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename container-probe @ 05/13/24 19:38:52.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:38:52.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:38:52.579
  STEP: Creating pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565 @ 05/13/24 19:38:52.59
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/13/24 19:38:54.614
  I0513 19:38:54.617636 19 container_probe.go:1749] Initial restart count of pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d is 0
  I0513 19:38:54.620936 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:38:56.625155 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:38:58.628572 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:39:00.634515 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:39:02.639267 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:39:04.643465 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:39:06.647933 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:39:08.653240 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:39:10.657290 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:39:12.667348 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:39:14.671142 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:39:16.675877 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:39:18.680695 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:39:20.685367 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:39:22.689258 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:39:24.693045 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:39:26.696805 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:39:28.701389 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:39:30.705962 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:39:32.710246 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:39:34.714285 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:39:36.719578 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:39:38.723358 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:39:40.727561 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:39:42.731458 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:39:44.735398 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:39:46.739323 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:39:48.743368 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:39:50.748094 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:39:52.754104 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:39:54.758601 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:39:56.763519 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:39:58.767713 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:40:00.774466 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:40:02.778722 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:40:04.783158 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:40:06.787555 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:40:08.791070 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:40:10.798243 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:40:12.803257 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:40:14.807443 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:40:16.811669 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:40:18.816536 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:40:20.820874 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:40:22.824362 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:40:24.830316 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:40:26.834060 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:40:28.838463 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:40:30.844469 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:40:32.850519 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:40:34.855025 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:40:36.858907 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:40:38.863817 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:40:40.868546 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:40:42.872453 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:40:44.877402 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:40:46.904194 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:40:48.907880 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:40:50.912956 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:40:52.916890 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:40:54.920937 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:40:56.927128 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:40:58.931190 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:41:00.935234 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:41:02.943550 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:41:04.948295 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:41:06.952809 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:41:08.957334 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:41:10.962326 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:41:12.974093 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:41:14.981838 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:41:16.985831 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:41:18.989643 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:41:20.994216 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:41:23.006985 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:41:25.012978 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:41:27.017325 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:41:29.022678 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:41:31.027763 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:41:33.031168 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:41:35.035018 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:41:37.039005 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:41:39.043528 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:41:41.051523 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:41:43.055934 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:41:45.060519 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:41:47.065318 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:41:49.069826 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:41:51.074970 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:41:53.081155 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:41:55.085982 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:41:57.089903 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:41:59.093671 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:42:01.098337 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:42:03.102003 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:42:05.106886 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:42:07.111021 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:42:09.116203 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:42:11.120887 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:42:13.124534 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:42:15.128662 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:42:17.133329 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:42:19.137535 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:42:21.174218 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:42:23.178182 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:42:25.182574 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:42:27.187188 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:42:29.190955 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:42:31.195448 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:42:33.199169 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:42:35.202589 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:42:37.207480 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:42:39.212225 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:42:41.217330 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:42:43.221268 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:42:45.224755 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:42:47.228547 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:42:49.234028 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:42:51.238896 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  I0513 19:42:53.245438 19 container_probe.go:1759] Get pod test-webserver-69dd436b-a1d0-4d33-ba8f-67ec9ed3d13d in namespace container-probe-2565
  STEP: deleting the pod @ 05/13/24 19:42:55.246
  I0513 19:42:55.271833 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2565" for this suite. @ 05/13/24 19:42:55.282
• [242.758 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 05/13/24 19:42:55.297
  I0513 19:42:55.297338 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename pods @ 05/13/24 19:42:55.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:42:55.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:42:55.334
  STEP: creating the pod @ 05/13/24 19:42:55.339
  STEP: submitting the pod to kubernetes @ 05/13/24 19:42:55.339
  W0513 19:42:55.361471      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 05/13/24 19:42:57.375
  STEP: updating the pod @ 05/13/24 19:42:57.383
  I0513 19:42:57.903154 19 pod_client.go:141] Successfully updated pod "pod-update-activedeadlineseconds-093b5a55-b4b0-4894-a6fb-cd3b5948a0e6"
  I0513 19:43:01.915359 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6229" for this suite. @ 05/13/24 19:43:01.921
• [6.634 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 05/13/24 19:43:01.933
  I0513 19:43:01.933976 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename deployment @ 05/13/24 19:43:01.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:43:01.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:43:01.982
  STEP: creating a Deployment @ 05/13/24 19:43:01.99
  STEP: waiting for Deployment to be created @ 05/13/24 19:43:02.002
  STEP: waiting for all Replicas to be Ready @ 05/13/24 19:43:02.005
  I0513 19:43:02.012506 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0513 19:43:02.012662 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0513 19:43:02.059925 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0513 19:43:02.060017 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0513 19:43:02.083510 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0513 19:43:02.083654 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0513 19:43:02.221369 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0513 19:43:02.221700 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0513 19:43:03.790010 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0513 19:43:03.790266 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0513 19:43:03.925111 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 05/13/24 19:43:03.925
  I0513 19:43:03.949131 19 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 05/13/24 19:43:03.949
  I0513 19:43:03.951836 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 0
  I0513 19:43:03.951995 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 0
  I0513 19:43:03.952181 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 0
  I0513 19:43:03.952292 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 0
  I0513 19:43:03.952462 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 0
  I0513 19:43:03.952814 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 0
  I0513 19:43:03.952972 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 0
  I0513 19:43:03.953080 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 0
  I0513 19:43:03.953766 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 1
  I0513 19:43:03.953809 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 1
  I0513 19:43:03.953826 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 2
  I0513 19:43:03.953840 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 2
  I0513 19:43:03.954086 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 2
  I0513 19:43:03.954237 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 2
  I0513 19:43:04.093733 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 2
  I0513 19:43:04.093874 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 2
  I0513 19:43:04.125625 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 2
  I0513 19:43:04.126101 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 2
  I0513 19:43:04.150055 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 1
  I0513 19:43:04.150269 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 1
  I0513 19:43:04.220663 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 1
  I0513 19:43:04.220840 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 1
  I0513 19:43:05.921891 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 2
  I0513 19:43:05.922096 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 2
  I0513 19:43:05.993365 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 1
  STEP: listing Deployments @ 05/13/24 19:43:05.993
  I0513 19:43:05.998410 19 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 05/13/24 19:43:05.998
  I0513 19:43:06.336978 19 deployment.go:360] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 05/13/24 19:43:06.337
  I0513 19:43:06.356597 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0513 19:43:06.356747 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0513 19:43:06.365723 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0513 19:43:06.407670 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0513 19:43:06.430412 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0513 19:43:07.876042 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0513 19:43:07.955195 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0513 19:43:07.991341 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0513 19:43:08.061870 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0513 19:43:08.999062 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 05/13/24 19:43:09.32
  STEP: fetching the DeploymentStatus @ 05/13/24 19:43:09.337
  I0513 19:43:09.347473 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 1
  I0513 19:43:09.347527 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 1
  I0513 19:43:09.347549 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 1
  I0513 19:43:09.347663 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 1
  I0513 19:43:09.347781 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 1
  I0513 19:43:09.347919 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 2
  I0513 19:43:09.348061 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 2
  I0513 19:43:09.348740 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 2
  I0513 19:43:09.348769 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 2
  I0513 19:43:09.348789 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-3684 with ReadyReplicas 3
  STEP: deleting the Deployment @ 05/13/24 19:43:09.348
  I0513 19:43:09.369202 19 deployment.go:475] observed event type MODIFIED
  I0513 19:43:09.369415 19 deployment.go:475] observed event type MODIFIED
  I0513 19:43:09.369458 19 deployment.go:475] observed event type MODIFIED
  I0513 19:43:09.370234 19 deployment.go:475] observed event type MODIFIED
  I0513 19:43:09.370278 19 deployment.go:475] observed event type MODIFIED
  I0513 19:43:09.370441 19 deployment.go:475] observed event type MODIFIED
  I0513 19:43:09.370484 19 deployment.go:475] observed event type MODIFIED
  I0513 19:43:09.370768 19 deployment.go:475] observed event type MODIFIED
  I0513 19:43:09.370829 19 deployment.go:475] observed event type MODIFIED
  I0513 19:43:09.371066 19 deployment.go:475] observed event type MODIFIED
  I0513 19:43:09.371108 19 deployment.go:475] observed event type MODIFIED
  I0513 19:43:09.371601 19 deployment.go:475] observed event type MODIFIED
  I0513 19:43:09.371628 19 deployment.go:475] observed event type MODIFIED
  I0513 19:43:09.374426 19 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I0513 19:43:09.378051 19 deployment.go:657] ReplicaSet "test-deployment-5bf4984755":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-5bf4984755",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3684",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8f18e60f-2e77-466f-a0e5-bb47c81199bf",
      ResourceVersion: (string) (len=5) "58473",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851226182,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5bf4984755",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "65e7141b-daed-417d-af1c-48461a9324ce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851226185,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 36 35 65 37  31 34 31 62 2d 64 61 65  |":\"65e7141b-dae|
              00000130  64 2d 34 31 37 64 2d 61  66 31 63 2d 34 38 34 36  |d-417d-af1c-4846|
              00000140  31 61 39 33 32 34 63 65  5c 22 7d 22 3a 7b 7d 7d  |1a9324ce\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851226185,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "5bf4984755",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "5bf4984755",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0513 19:43:09.383394 19 deployment.go:657] ReplicaSet "test-deployment-65fbf5b65d":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-65fbf5b65d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3684",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "55423a6b-6509-4c95-a0d0-3e4ac54c6982",
      ResourceVersion: (string) (len=5) "58575",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851226184,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "65fbf5b65d",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "65e7141b-daed-417d-af1c-48461a9324ce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851226188,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 36 35 65 37  31 34 31 62 2d 64 61 65  |":\"65e7141b-dae|
              00000130  64 2d 34 31 37 64 2d 61  66 31 63 2d 34 38 34 36  |d-417d-af1c-4846|
              00000140  31 61 39 33 32 34 63 65  5c 22 7d 22 3a 7b 7d 7d  |1a9324ce\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851226189,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "65fbf5b65d",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "65fbf5b65d",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0513 19:43:09.389635 19 deployment.go:669] pod: "test-deployment-65fbf5b65d-cxkf7":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-65fbf5b65d-cxkf7",
      GenerateName: (string) (len=27) "test-deployment-65fbf5b65d-",
      Namespace: (string) (len=15) "deployment-3684",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ca6ddf0e-31a7-42e6-92a0-38ddbd02f5b8",
      ResourceVersion: (string) (len=5) "58568",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851226184,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851226191,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "65fbf5b65d",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-65fbf5b65d",
          UID: (types.UID) (len=36) "55423a6b-6509-4c95-a0d0-3e4ac54c6982",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851226184,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  35 35 34 32 33 61 36 62  |uid\":\"55423a6b|
              000000a0  2d 36 35 30 39 2d 34 63  39 35 2d 61 30 64 30 2d  |-6509-4c95-a0d0-|
              000000b0  33 65 34 61 63 35 34 63  36 39 38 32 5c 22 7d 22  |3e4ac54c6982\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851226185,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 31 34  33 5c 22 7d 22 3a 7b 22  |.42.2.143\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r68wl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r68wl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-11-14.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851226185,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851226184,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851226185,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851226185,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851226184,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.11.14",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.11.14"
        }
      },
      PodIP: (string) (len=11) "10.42.2.143",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.2.143"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851226184,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851226184,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=77) "containerd://228224467c74a256a2469223b93a9231b8e4eff9b1dc30cfedd21dbe179078b7",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0513 19:43:09.398126 19 deployment.go:657] ReplicaSet "test-deployment-6b9f8f4d48":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-6b9f8f4d48",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3684",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8e03d7dd-bb44-4874-9a76-6f15f2ce3657",
      ResourceVersion: (string) (len=5) "58562",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851226186,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6b9f8f4d48",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "65e7141b-daed-417d-af1c-48461a9324ce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851226187,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 36 35 65 37  31 34 31 62 2d 64 61 65  |":\"65e7141b-dae|
              00000130  64 2d 34 31 37 64 2d 61  66 31 63 2d 34 38 34 36  |d-417d-af1c-4846|
              00000140  31 61 39 33 32 34 63 65  5c 22 7d 22 3a 7b 7d 7d  |1a9324ce\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851226188,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6b9f8f4d48",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6b9f8f4d48",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0513 19:43:09.407374 19 deployment.go:669] pod: "test-deployment-6b9f8f4d48-pncct":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6b9f8f4d48-pncct",
      GenerateName: (string) (len=27) "test-deployment-6b9f8f4d48-",
      Namespace: (string) (len=15) "deployment-3684",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1f363a8f-f852-4fd4-9d9e-8b724840bd7f",
      ResourceVersion: (string) (len=5) "58561",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851226187,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6b9f8f4d48",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6b9f8f4d48",
          UID: (types.UID) (len=36) "8e03d7dd-bb44-4874-9a76-6f15f2ce3657",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851226187,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  38 65 30 33 64 37 64 64  |uid\":\"8e03d7dd|
              000000a0  2d 62 62 34 34 2d 34 38  37 34 2d 39 61 37 36 2d  |-bb44-4874-9a76-|
              000000b0  36 66 31 35 66 32 63 65  33 36 35 37 5c 22 7d 22  |6f15f2ce3657\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851226188,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 36 39  5c 22 7d 22 3a 7b 22 2e  |.42.3.69\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mc9v7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mc9v7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-0-253.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851226188,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851226187,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851226188,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851226188,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851226187,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.0.253",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.0.253"
        }
      },
      PodIP: (string) (len=10) "10.42.3.69",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.3.69"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851226187,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851226188,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://70fc28b6c801733f143e65d3b9b1164fb39cc2f7e09819d896c5faca539a03c1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0513 19:43:09.414291 19 deployment.go:669] pod: "test-deployment-6b9f8f4d48-s7v5z":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6b9f8f4d48-s7v5z",
      GenerateName: (string) (len=27) "test-deployment-6b9f8f4d48-",
      Namespace: (string) (len=15) "deployment-3684",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8441c8de-d79a-4e0f-94bc-55a5e86873a9",
      ResourceVersion: (string) (len=5) "58532",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851226186,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6b9f8f4d48",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6b9f8f4d48",
          UID: (types.UID) (len=36) "8e03d7dd-bb44-4874-9a76-6f15f2ce3657",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851226186,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  38 65 30 33 64 37 64 64  |uid\":\"8e03d7dd|
              000000a0  2d 62 62 34 34 2d 34 38  37 34 2d 39 61 37 36 2d  |-bb44-4874-9a76-|
              000000b0  36 66 31 35 66 32 63 65  33 36 35 37 5c 22 7d 22  |6f15f2ce3657\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851226187,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 31 34  34 5c 22 7d 22 3a 7b 22  |.42.2.144\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sn2m6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sn2m6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-11-14.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851226187,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851226186,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851226187,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851226187,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851226186,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.11.14",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.11.14"
        }
      },
      PodIP: (string) (len=11) "10.42.2.144",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.2.144"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851226186,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851226187,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://a08d64cf9338f36ec4c363a64ac5686fc646f39d53e56bcbc04c04c4cb70c022",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0513 19:43:09.416905 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3684" for this suite. @ 05/13/24 19:43:09.453
• [7.531 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 05/13/24 19:43:09.465
  I0513 19:43:09.465738 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename field-validation @ 05/13/24 19:43:09.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:43:09.532
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:43:09.54
  STEP: apply creating a deployment @ 05/13/24 19:43:09.547
  I0513 19:43:09.577937 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1062" for this suite. @ 05/13/24 19:43:09.582
• [0.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 05/13/24 19:43:09.596
  I0513 19:43:09.596325 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename projected @ 05/13/24 19:43:09.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:43:09.644
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:43:09.649
  STEP: Creating the pod @ 05/13/24 19:43:09.656
  I0513 19:43:12.229653 19 pod_client.go:141] Successfully updated pod "annotationupdate4359eb86-2bb5-4efb-96e2-bd994dd0dd24"
  I0513 19:43:14.244570 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6812" for this suite. @ 05/13/24 19:43:14.248
• [4.662 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 05/13/24 19:43:14.258
  I0513 19:43:14.258381 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename replication-controller @ 05/13/24 19:43:14.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:43:14.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:43:14.32
  STEP: Given a ReplicationController is created @ 05/13/24 19:43:14.325
  STEP: When the matched label of one of its pods change @ 05/13/24 19:43:14.337
  I0513 19:43:14.340105 19 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  I0513 19:43:19.496067 19 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 05/13/24 19:43:19.512
  I0513 19:43:20.521127 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-347" for this suite. @ 05/13/24 19:43:20.531
• [6.283 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 05/13/24 19:43:20.542
  I0513 19:43:20.542213 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename pod-network-test @ 05/13/24 19:43:20.543
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:43:20.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:43:20.567
  STEP: Performing setup for networking test in namespace pod-network-test-7560 @ 05/13/24 19:43:20.57
  STEP: creating a selector @ 05/13/24 19:43:20.57
  STEP: Creating the service pods in kubernetes @ 05/13/24 19:43:20.57
  I0513 19:43:20.570603 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 05/13/24 19:43:42.744
  I0513 19:43:44.788157 19 utils.go:779] Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  I0513 19:43:44.788216 19 utils.go:472] Going to poll 10.42.3.71 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  I0513 19:43:44.792901 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.3.71 8081 | grep -v '^\s*$'] Namespace:pod-network-test-7560 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 19:43:44.792954 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 19:43:44.793589 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 19:43:44.793782 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-7560/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.3.71+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0513 19:43:45.856428 19 utils.go:489] Found all 1 expected endpoints: [netserver-0]
  I0513 19:43:45.856488 19 utils.go:472] Going to poll 10.42.2.147 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  I0513 19:43:45.860585 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.2.147 8081 | grep -v '^\s*$'] Namespace:pod-network-test-7560 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 19:43:45.860640 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 19:43:45.861292 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 19:43:45.861375 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-7560/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.2.147+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0513 19:43:46.917985 19 utils.go:489] Found all 1 expected endpoints: [netserver-1]
  I0513 19:43:46.918167 19 utils.go:472] Going to poll 10.42.0.21 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  I0513 19:43:46.921360 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.0.21 8081 | grep -v '^\s*$'] Namespace:pod-network-test-7560 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 19:43:46.921407 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 19:43:46.922047 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 19:43:46.922133 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-7560/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.0.21+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0513 19:43:47.984917 19 utils.go:489] Found all 1 expected endpoints: [netserver-2]
  I0513 19:43:47.985279 19 utils.go:472] Going to poll 10.42.1.46 on port 8081 at least 0 times, with a maximum of 46 tries before failing
  I0513 19:43:47.988377 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.1.46 8081 | grep -v '^\s*$'] Namespace:pod-network-test-7560 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 19:43:47.988424 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 19:43:47.989030 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 19:43:47.989142 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-7560/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.1.46+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0513 19:43:49.056590 19 utils.go:489] Found all 1 expected endpoints: [netserver-3]
  I0513 19:43:49.056720 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7560" for this suite. @ 05/13/24 19:43:49.061
• [28.535 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 05/13/24 19:43:49.079
  I0513 19:43:49.080013 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename svcaccounts @ 05/13/24 19:43:49.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:43:49.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:43:49.128
  I0513 19:43:49.171225 19 service_accounts.go:618] created pod
  STEP: Saw pod success @ 05/13/24 19:43:53.186
  I0513 19:44:23.188624 19 service_accounts.go:624] polling logs
  I0513 19:44:23.199551 19 service_accounts.go:634] Pod logs: 
  I0513 19:43:50.008250       1 log.go:245] OK: Got token
  I0513 19:43:50.008347       1 log.go:245] validating with in-cluster discovery
  I0513 19:43:50.008726       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0513 19:43:50.008766       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-4078:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000453070), NotBefore:(*jwt.NumericDate)(0xc000453160), IssuedAt:(*jwt.NumericDate)(0xc000453080), ID:"54f1a02c-2358-4e86-8f62-8b700ca1e939"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-4078", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"49e53526-80be-419a-ab91-46e33893cc8a"}}}
  I0513 19:43:50.019448       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0513 19:43:50.024008       1 log.go:245] OK: Validated signature on JWT
  I0513 19:43:50.024167       1 log.go:245] OK: Got valid claims from token!
  I0513 19:43:50.024199       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-4078:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000013258), NotBefore:(*jwt.NumericDate)(0xc000013280), IssuedAt:(*jwt.NumericDate)(0xc000013260), ID:"54f1a02c-2358-4e86-8f62-8b700ca1e939"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-4078", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"49e53526-80be-419a-ab91-46e33893cc8a"}}}

  I0513 19:44:23.199647 19 service_accounts.go:638] completed pod
  I0513 19:44:23.210328 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4078" for this suite. @ 05/13/24 19:44:23.214
• [34.146 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:334
  STEP: Creating a kubernetes client @ 05/13/24 19:44:23.226
  I0513 19:44:23.226544 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename sched-pred @ 05/13/24 19:44:23.231
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:44:23.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:44:23.275
  I0513 19:44:23.283479 19 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0513 19:44:23.299770 19 util.go:400] Waiting for terminating namespaces to be deleted...
  I0513 19:44:23.304539 19 predicates.go:121] 
  Logging pods the apiserver thinks is on node ip-172-31-0-253.us-east-2.compute.internal before test
  I0513 19:44:23.311228 19 predicates.go:887] svclb-traefik-d628025f-mwl96 from kube-system started at 2024-05-13 16:12:42 +0000 UTC (2 container statuses recorded)
  I0513 19:44:23.311276 19 predicates.go:889] 	Container lb-tcp-443 ready: true, restart count 0
  I0513 19:44:23.311291 19 predicates.go:889] 	Container lb-tcp-80 ready: true, restart count 0
  I0513 19:44:23.311307 19 predicates.go:887] sonobuoy from sonobuoy started at 2024-05-13 18:46:47 +0000 UTC (1 container statuses recorded)
  I0513 19:44:23.311320 19 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I0513 19:44:23.311336 19 predicates.go:887] sonobuoy-systemd-logs-daemon-set-241ff89d670448bb-z7g5j from sonobuoy started at 2024-05-13 18:46:51 +0000 UTC (2 container statuses recorded)
  I0513 19:44:23.311350 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0513 19:44:23.311362 19 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0513 19:44:23.311374 19 predicates.go:121] 
  Logging pods the apiserver thinks is on node ip-172-31-11-14.us-east-2.compute.internal before test
  I0513 19:44:23.318267 19 predicates.go:887] svclb-traefik-d628025f-kvhqn from kube-system started at 2024-05-13 18:51:52 +0000 UTC (2 container statuses recorded)
  I0513 19:44:23.318409 19 predicates.go:889] 	Container lb-tcp-443 ready: true, restart count 0
  I0513 19:44:23.318426 19 predicates.go:889] 	Container lb-tcp-80 ready: true, restart count 0
  I0513 19:44:23.318442 19 predicates.go:887] sonobuoy-systemd-logs-daemon-set-241ff89d670448bb-5w7td from sonobuoy started at 2024-05-13 18:46:51 +0000 UTC (2 container statuses recorded)
  I0513 19:44:23.318456 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0513 19:44:23.318468 19 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0513 19:44:23.318483 19 predicates.go:887] oidc-discovery-validator from svcaccounts-4078 started at 2024-05-13 19:43:49 +0000 UTC (1 container statuses recorded)
  I0513 19:44:23.318501 19 predicates.go:889] 	Container oidc-discovery-validator ready: false, restart count 0
  I0513 19:44:23.318515 19 predicates.go:121] 
  Logging pods the apiserver thinks is on node ip-172-31-14-0.us-east-2.compute.internal before test
  I0513 19:44:23.327484 19 predicates.go:887] coredns-576bfc4dc7-jw24t from kube-system started at 2024-05-13 16:06:09 +0000 UTC (1 container statuses recorded)
  I0513 19:44:23.327529 19 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0513 19:44:23.327548 19 predicates.go:887] helm-install-traefik-crd-chqrn from kube-system started at 2024-05-13 16:06:09 +0000 UTC (1 container statuses recorded)
  I0513 19:44:23.327561 19 predicates.go:889] 	Container helm ready: false, restart count 0
  I0513 19:44:23.327574 19 predicates.go:887] helm-install-traefik-rwkmw from kube-system started at 2024-05-13 16:06:09 +0000 UTC (1 container statuses recorded)
  I0513 19:44:23.327585 19 predicates.go:889] 	Container helm ready: false, restart count 1
  I0513 19:44:23.327599 19 predicates.go:887] local-path-provisioner-75bb9ff978-29v65 from kube-system started at 2024-05-13 16:06:09 +0000 UTC (1 container statuses recorded)
  I0513 19:44:23.327611 19 predicates.go:889] 	Container local-path-provisioner ready: true, restart count 0
  I0513 19:44:23.327627 19 predicates.go:887] metrics-server-557ff575fb-jb8fw from kube-system started at 2024-05-13 16:06:09 +0000 UTC (1 container statuses recorded)
  I0513 19:44:23.327638 19 predicates.go:889] 	Container metrics-server ready: true, restart count 0
  I0513 19:44:23.327651 19 predicates.go:887] svclb-traefik-d628025f-7wqzj from kube-system started at 2024-05-13 16:06:25 +0000 UTC (2 container statuses recorded)
  I0513 19:44:23.327663 19 predicates.go:889] 	Container lb-tcp-443 ready: true, restart count 0
  I0513 19:44:23.327674 19 predicates.go:889] 	Container lb-tcp-80 ready: true, restart count 0
  I0513 19:44:23.327688 19 predicates.go:887] traefik-5fb479b77-7tbnm from kube-system started at 2024-05-13 16:06:24 +0000 UTC (1 container statuses recorded)
  I0513 19:44:23.327699 19 predicates.go:889] 	Container traefik ready: true, restart count 0
  I0513 19:44:23.327713 19 predicates.go:887] sonobuoy-systemd-logs-daemon-set-241ff89d670448bb-n9qjz from sonobuoy started at 2024-05-13 18:46:51 +0000 UTC (2 container statuses recorded)
  I0513 19:44:23.327724 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0513 19:44:23.327735 19 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0513 19:44:23.327747 19 predicates.go:121] 
  Logging pods the apiserver thinks is on node ip-172-31-3-33.us-east-2.compute.internal before test
  I0513 19:44:23.334411 19 predicates.go:887] svclb-traefik-d628025f-zktzm from kube-system started at 2024-05-13 16:09:19 +0000 UTC (2 container statuses recorded)
  I0513 19:44:23.334444 19 predicates.go:889] 	Container lb-tcp-443 ready: true, restart count 0
  I0513 19:44:23.334457 19 predicates.go:889] 	Container lb-tcp-80 ready: true, restart count 0
  I0513 19:44:23.334471 19 predicates.go:887] sonobuoy-e2e-job-badb71ff08654e5b from sonobuoy started at 2024-05-13 18:46:51 +0000 UTC (2 container statuses recorded)
  I0513 19:44:23.334483 19 predicates.go:889] 	Container e2e ready: true, restart count 0
  I0513 19:44:23.334495 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0513 19:44:23.334509 19 predicates.go:887] sonobuoy-systemd-logs-daemon-set-241ff89d670448bb-lrdx4 from sonobuoy started at 2024-05-13 18:46:51 +0000 UTC (2 container statuses recorded)
  I0513 19:44:23.334521 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0513 19:44:23.334690 19 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-0-253.us-east-2.compute.internal @ 05/13/24 19:44:23.389
  STEP: verifying the node has the label node ip-172-31-11-14.us-east-2.compute.internal @ 05/13/24 19:44:23.418
  STEP: verifying the node has the label node ip-172-31-14-0.us-east-2.compute.internal @ 05/13/24 19:44:23.444
  STEP: verifying the node has the label node ip-172-31-3-33.us-east-2.compute.internal @ 05/13/24 19:44:23.47
  I0513 19:44:23.505405 19 predicates.go:374] Pod coredns-576bfc4dc7-jw24t requesting resource cpu=100m on Node ip-172-31-14-0.us-east-2.compute.internal
  I0513 19:44:23.505628 19 predicates.go:374] Pod local-path-provisioner-75bb9ff978-29v65 requesting resource cpu=0m on Node ip-172-31-14-0.us-east-2.compute.internal
  I0513 19:44:23.505774 19 predicates.go:374] Pod metrics-server-557ff575fb-jb8fw requesting resource cpu=100m on Node ip-172-31-14-0.us-east-2.compute.internal
  I0513 19:44:23.505897 19 predicates.go:374] Pod svclb-traefik-d628025f-7wqzj requesting resource cpu=0m on Node ip-172-31-14-0.us-east-2.compute.internal
  I0513 19:44:23.506068 19 predicates.go:374] Pod svclb-traefik-d628025f-kvhqn requesting resource cpu=0m on Node ip-172-31-11-14.us-east-2.compute.internal
  I0513 19:44:23.506203 19 predicates.go:374] Pod svclb-traefik-d628025f-mwl96 requesting resource cpu=0m on Node ip-172-31-0-253.us-east-2.compute.internal
  I0513 19:44:23.506311 19 predicates.go:374] Pod svclb-traefik-d628025f-zktzm requesting resource cpu=0m on Node ip-172-31-3-33.us-east-2.compute.internal
  I0513 19:44:23.506332 19 predicates.go:374] Pod traefik-5fb479b77-7tbnm requesting resource cpu=0m on Node ip-172-31-14-0.us-east-2.compute.internal
  I0513 19:44:23.506381 19 predicates.go:374] Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-0-253.us-east-2.compute.internal
  I0513 19:44:23.506397 19 predicates.go:374] Pod sonobuoy-e2e-job-badb71ff08654e5b requesting resource cpu=0m on Node ip-172-31-3-33.us-east-2.compute.internal
  I0513 19:44:23.506411 19 predicates.go:374] Pod sonobuoy-systemd-logs-daemon-set-241ff89d670448bb-5w7td requesting resource cpu=0m on Node ip-172-31-11-14.us-east-2.compute.internal
  I0513 19:44:23.506425 19 predicates.go:374] Pod sonobuoy-systemd-logs-daemon-set-241ff89d670448bb-lrdx4 requesting resource cpu=0m on Node ip-172-31-3-33.us-east-2.compute.internal
  I0513 19:44:23.506438 19 predicates.go:374] Pod sonobuoy-systemd-logs-daemon-set-241ff89d670448bb-n9qjz requesting resource cpu=0m on Node ip-172-31-14-0.us-east-2.compute.internal
  I0513 19:44:23.506451 19 predicates.go:374] Pod sonobuoy-systemd-logs-daemon-set-241ff89d670448bb-z7g5j requesting resource cpu=0m on Node ip-172-31-0-253.us-east-2.compute.internal
  STEP: Starting Pods to consume most of the cluster CPU. @ 05/13/24 19:44:23.506
  I0513 19:44:23.506513 19 predicates.go:384] Creating a pod which consumes cpu=1400m on Node ip-172-31-0-253.us-east-2.compute.internal
  I0513 19:44:23.524339 19 predicates.go:384] Creating a pod which consumes cpu=1400m on Node ip-172-31-11-14.us-east-2.compute.internal
  I0513 19:44:23.545542 19 predicates.go:384] Creating a pod which consumes cpu=1260m on Node ip-172-31-14-0.us-east-2.compute.internal
  I0513 19:44:23.574343 19 predicates.go:384] Creating a pod which consumes cpu=1400m on Node ip-172-31-3-33.us-east-2.compute.internal
  STEP: Creating another pod that requires unavailable amount of CPU. @ 05/13/24 19:44:25.62
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-233037e8-0317-41df-8d9e-15cb502a0771.17cf23e8448be257], Reason = [Scheduled], Message = [Successfully assigned sched-pred-2027/filler-pod-233037e8-0317-41df-8d9e-15cb502a0771 to ip-172-31-0-253.us-east-2.compute.internal] @ 05/13/24 19:44:25.624
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-233037e8-0317-41df-8d9e-15cb502a0771.17cf23e8666ef894], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 05/13/24 19:44:25.624
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-233037e8-0317-41df-8d9e-15cb502a0771.17cf23e88874112d], Reason = [Created], Message = [Created container filler-pod-233037e8-0317-41df-8d9e-15cb502a0771] @ 05/13/24 19:44:25.624
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-233037e8-0317-41df-8d9e-15cb502a0771.17cf23e88f924128], Reason = [Started], Message = [Started container filler-pod-233037e8-0317-41df-8d9e-15cb502a0771] @ 05/13/24 19:44:25.624
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9feebf6b-0918-40d2-8a36-6c0038f7215c.17cf23e84af68798], Reason = [Scheduled], Message = [Successfully assigned sched-pred-2027/filler-pod-9feebf6b-0918-40d2-8a36-6c0038f7215c to ip-172-31-3-33.us-east-2.compute.internal] @ 05/13/24 19:44:25.624
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9feebf6b-0918-40d2-8a36-6c0038f7215c.17cf23e875283d1c], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 05/13/24 19:44:25.624
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9feebf6b-0918-40d2-8a36-6c0038f7215c.17cf23e87a56656c], Reason = [Created], Message = [Created container filler-pod-9feebf6b-0918-40d2-8a36-6c0038f7215c] @ 05/13/24 19:44:25.624
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-9feebf6b-0918-40d2-8a36-6c0038f7215c.17cf23e881629a88], Reason = [Started], Message = [Started container filler-pod-9feebf6b-0918-40d2-8a36-6c0038f7215c] @ 05/13/24 19:44:25.624
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f7ddc04f-92b9-40c8-a120-6fd86aa52d08.17cf23e847f98fb9], Reason = [Scheduled], Message = [Successfully assigned sched-pred-2027/filler-pod-f7ddc04f-92b9-40c8-a120-6fd86aa52d08 to ip-172-31-11-14.us-east-2.compute.internal] @ 05/13/24 19:44:25.624
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f7ddc04f-92b9-40c8-a120-6fd86aa52d08.17cf23e86c16dab4], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 05/13/24 19:44:25.624
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f7ddc04f-92b9-40c8-a120-6fd86aa52d08.17cf23e871470bd9], Reason = [Created], Message = [Created container filler-pod-f7ddc04f-92b9-40c8-a120-6fd86aa52d08] @ 05/13/24 19:44:25.624
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f7ddc04f-92b9-40c8-a120-6fd86aa52d08.17cf23e877ea7283], Reason = [Started], Message = [Started container filler-pod-f7ddc04f-92b9-40c8-a120-6fd86aa52d08] @ 05/13/24 19:44:25.624
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f8edf9f5-8d8e-49cc-9e1d-a6e3c1584eb4.17cf23e84a4f22ea], Reason = [Scheduled], Message = [Successfully assigned sched-pred-2027/filler-pod-f8edf9f5-8d8e-49cc-9e1d-a6e3c1584eb4 to ip-172-31-14-0.us-east-2.compute.internal] @ 05/13/24 19:44:25.624
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f8edf9f5-8d8e-49cc-9e1d-a6e3c1584eb4.17cf23e870313d33], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 05/13/24 19:44:25.624
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f8edf9f5-8d8e-49cc-9e1d-a6e3c1584eb4.17cf23e875452284], Reason = [Created], Message = [Created container filler-pod-f8edf9f5-8d8e-49cc-9e1d-a6e3c1584eb4] @ 05/13/24 19:44:25.624
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f8edf9f5-8d8e-49cc-9e1d-a6e3c1584eb4.17cf23e87d67ec7e], Reason = [Started], Message = [Started container filler-pod-f8edf9f5-8d8e-49cc-9e1d-a6e3c1584eb4] @ 05/13/24 19:44:25.624
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17cf23e8c171d050], Reason = [FailedScheduling], Message = [0/4 nodes are available: 4 Insufficient cpu. preemption: 0/4 nodes are available: 4 No preemption victims found for incoming pod.] @ 05/13/24 19:44:25.652
  STEP: removing the label node off the node ip-172-31-11-14.us-east-2.compute.internal @ 05/13/24 19:44:26.642
  STEP: verifying the node doesn't have the label node @ 05/13/24 19:44:26.664
  STEP: removing the label node off the node ip-172-31-14-0.us-east-2.compute.internal @ 05/13/24 19:44:26.669
  STEP: verifying the node doesn't have the label node @ 05/13/24 19:44:26.69
  STEP: removing the label node off the node ip-172-31-3-33.us-east-2.compute.internal @ 05/13/24 19:44:26.694
  STEP: verifying the node doesn't have the label node @ 05/13/24 19:44:26.716
  STEP: removing the label node off the node ip-172-31-0-253.us-east-2.compute.internal @ 05/13/24 19:44:26.736
  STEP: verifying the node doesn't have the label node @ 05/13/24 19:44:26.758
  I0513 19:44:26.762661 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2027" for this suite. @ 05/13/24 19:44:26.767
• [3.558 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 05/13/24 19:44:26.785
  I0513 19:44:26.785265 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename namespaces @ 05/13/24 19:44:26.786
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:44:26.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:44:26.839
  STEP: Read namespace status @ 05/13/24 19:44:26.843
  I0513 19:44:26.847431 19 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 05/13/24 19:44:26.847
  I0513 19:44:26.867702 19 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 05/13/24 19:44:26.867
  I0513 19:44:26.885304 19 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0513 19:44:26.885435 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1493" for this suite. @ 05/13/24 19:44:26.889
• [0.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:177
  STEP: Creating a kubernetes client @ 05/13/24 19:44:26.903
  I0513 19:44:26.903843 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename crd-webhook @ 05/13/24 19:44:26.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:44:26.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:44:26.969
  STEP: Setting up server cert @ 05/13/24 19:44:26.996
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 05/13/24 19:44:27.648
  STEP: Deploying the custom resource conversion webhook pod @ 05/13/24 19:44:27.664
  STEP: Wait for the deployment to be ready @ 05/13/24 19:44:27.698
  I0513 19:44:27.714268 19 deployment.go:222] new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 05/13/24 19:44:29.724
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 19:44:29.748
  I0513 19:44:30.748929 19 util.go:427] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0513 19:44:30.754866 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Creating a v1 custom resource @ 05/13/24 19:44:33.354
  STEP: Create a v2 custom resource @ 05/13/24 19:44:33.385
  STEP: List CRs in v1 @ 05/13/24 19:44:33.435
  STEP: List CRs in v2 @ 05/13/24 19:44:33.578
  I0513 19:44:34.228018 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-1676" for this suite. @ 05/13/24 19:44:34.235
• [7.348 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 05/13/24 19:44:34.252
  I0513 19:44:34.252991 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename downward-api @ 05/13/24 19:44:34.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:44:34.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:44:34.289
  STEP: Creating a pod to test downward API volume plugin @ 05/13/24 19:44:34.295
  STEP: Saw pod success @ 05/13/24 19:44:38.318
  I0513 19:44:38.322121 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod downwardapi-volume-703aab21-80a4-4db3-9a13-c16ee34ca250 container client-container: <nil>
  STEP: delete the pod @ 05/13/24 19:44:38.328
  I0513 19:44:38.353575 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3105" for this suite. @ 05/13/24 19:44:38.359
• [4.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 05/13/24 19:44:38.37
  I0513 19:44:38.370245 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename projected @ 05/13/24 19:44:38.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:44:38.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:44:38.422
  STEP: Creating the pod @ 05/13/24 19:44:38.426
  I0513 19:44:40.997303 19 pod_client.go:141] Successfully updated pod "labelsupdate812fff30-0261-4e6a-8e79-3dd5a115f847"
  I0513 19:44:43.014684 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8460" for this suite. @ 05/13/24 19:44:43.02
• [4.659 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 05/13/24 19:44:43.031
  I0513 19:44:43.031176 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/13/24 19:44:43.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:44:43.094
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:44:43.098
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 05/13/24 19:44:43.102
  I0513 19:44:43.103654 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 19:44:45.028104 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 19:44:52.428269 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1969" for this suite. @ 05/13/24 19:44:52.435
• [9.416 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 05/13/24 19:44:52.447
  I0513 19:44:52.447394 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename container-runtime @ 05/13/24 19:44:52.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:44:52.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:44:52.486
  STEP: create the container @ 05/13/24 19:44:52.489
  W0513 19:44:52.502657      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 05/13/24 19:44:52.502
  STEP: get the container status @ 05/13/24 19:44:55.524
  STEP: the container should be terminated @ 05/13/24 19:44:55.527
  STEP: the termination message should be set @ 05/13/24 19:44:55.527
  I0513 19:44:55.527327 19 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 05/13/24 19:44:55.527
  I0513 19:44:55.560731 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3168" for this suite. @ 05/13/24 19:44:55.565
• [3.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 05/13/24 19:44:55.583
  I0513 19:44:55.583633 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename pods @ 05/13/24 19:44:55.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:44:55.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:44:55.623
  I0513 19:44:55.631736 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: creating the pod @ 05/13/24 19:44:55.632
  STEP: submitting the pod to kubernetes @ 05/13/24 19:44:55.632
  I0513 19:44:57.768319 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3573" for this suite. @ 05/13/24 19:44:57.774
• [2.202 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 05/13/24 19:44:57.788
  I0513 19:44:57.788614 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename emptydir @ 05/13/24 19:44:57.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:44:57.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:44:57.832
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 05/13/24 19:44:57.836
  STEP: Saw pod success @ 05/13/24 19:45:01.869
  I0513 19:45:01.871849 19 output.go:196] Trying to get logs from node ip-172-31-0-253.us-east-2.compute.internal pod pod-0be38864-1a83-4889-b45e-563664c5c05f container test-container: <nil>
  STEP: delete the pod @ 05/13/24 19:45:01.885
  I0513 19:45:01.934689 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-379" for this suite. @ 05/13/24 19:45:01.955
• [4.186 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 05/13/24 19:45:01.974
  I0513 19:45:01.974290 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/13/24 19:45:01.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:45:02.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:45:02.026
  STEP: create the container to handle the HTTPGet hook request. @ 05/13/24 19:45:02.044
  STEP: create the pod with lifecycle hook @ 05/13/24 19:45:04.07
  STEP: delete the pod with lifecycle hook @ 05/13/24 19:45:06.105
  STEP: check prestop hook @ 05/13/24 19:45:08.13
  I0513 19:45:08.136819 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6249" for this suite. @ 05/13/24 19:45:08.141
• [6.177 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:882
  STEP: Creating a kubernetes client @ 05/13/24 19:45:08.151
  I0513 19:45:08.151960 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename kubectl @ 05/13/24 19:45:08.152
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:45:08.178
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:45:08.181
  STEP: validating api versions @ 05/13/24 19:45:08.185
  I0513 19:45:08.185417 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-3763 api-versions'
  I0513 19:45:08.279597 19 builder.go:146] stderr: ""
  I0513 19:45:08.279660 19 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nhelm.cattle.io/v1\nk3s.cattle.io/v1\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\ntraefik.containo.us/v1alpha1\ntraefik.io/v1alpha1\nv1\n"
  I0513 19:45:08.279763 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3763" for this suite. @ 05/13/24 19:45:08.284
• [0.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 05/13/24 19:45:08.296
  I0513 19:45:08.296163 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename gc @ 05/13/24 19:45:08.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:45:08.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:45:08.329
  STEP: create the deployment @ 05/13/24 19:45:08.334
  W0513 19:45:08.343809      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 05/13/24 19:45:08.343
  STEP: delete the deployment @ 05/13/24 19:45:08.847
  STEP: wait for all rs to be garbage collected @ 05/13/24 19:45:08.859
  STEP: expected 0 rs, got 1 rs @ 05/13/24 19:45:08.866
  STEP: expected 0 pods, got 2 pods @ 05/13/24 19:45:08.87
  STEP: Gathering metrics @ 05/13/24 19:45:09.368
  W0513 19:45:09.373655      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0513 19:45:09.373731 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0513 19:45:09.373927 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8137" for this suite. @ 05/13/24 19:45:09.378
• [1.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:147
  STEP: Creating a kubernetes client @ 05/13/24 19:45:09.389
  I0513 19:45:09.389047 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename kubelet-test @ 05/13/24 19:45:09.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:45:09.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:45:09.423
  STEP: Waiting for pod completion @ 05/13/24 19:45:09.442
  I0513 19:45:13.461405 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7624" for this suite. @ 05/13/24 19:45:13.466
• [4.088 seconds]
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2181
  STEP: Creating a kubernetes client @ 05/13/24 19:45:13.476
  I0513 19:45:13.476732 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename services @ 05/13/24 19:45:13.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:45:13.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:45:13.516
  STEP: creating service in namespace services-3893 @ 05/13/24 19:45:13.522
  STEP: creating service affinity-clusterip in namespace services-3893 @ 05/13/24 19:45:13.522
  STEP: creating replication controller affinity-clusterip in namespace services-3893 @ 05/13/24 19:45:13.548
  I0513 19:45:13.571169      19 runners.go:198] Created replication controller with name: affinity-clusterip, namespace: services-3893, replica count: 3
  I0513 19:45:16.622762      19 runners.go:198] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0513 19:45:16.630351 19 resource.go:361] Creating new exec pod
  I0513 19:45:19.652470 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-3893 exec execpod-affinityclcrc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0513 19:45:19.811336 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  I0513 19:45:19.811405 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0513 19:45:19.811502 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-3893 exec execpod-affinityclcrc -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.76.107 80'
  I0513 19:45:19.962345 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.76.107 80\nConnection to 10.43.76.107 80 port [tcp/http] succeeded!\n"
  I0513 19:45:19.962409 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0513 19:45:19.962844 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-3893 exec execpod-affinityclcrc -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.76.107:80/ ; done'
  I0513 19:45:20.193723 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.76.107:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.76.107:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.76.107:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.76.107:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.76.107:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.76.107:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.76.107:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.76.107:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.76.107:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.76.107:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.76.107:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.76.107:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.76.107:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.76.107:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.76.107:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.76.107:80/\n"
  I0513 19:45:20.193939 19 builder.go:147] stdout: "\naffinity-clusterip-scn4c\naffinity-clusterip-scn4c\naffinity-clusterip-scn4c\naffinity-clusterip-scn4c\naffinity-clusterip-scn4c\naffinity-clusterip-scn4c\naffinity-clusterip-scn4c\naffinity-clusterip-scn4c\naffinity-clusterip-scn4c\naffinity-clusterip-scn4c\naffinity-clusterip-scn4c\naffinity-clusterip-scn4c\naffinity-clusterip-scn4c\naffinity-clusterip-scn4c\naffinity-clusterip-scn4c\naffinity-clusterip-scn4c"
  I0513 19:45:20.193966 19 service.go:242] Received response from host: affinity-clusterip-scn4c
  I0513 19:45:20.193987 19 service.go:242] Received response from host: affinity-clusterip-scn4c
  I0513 19:45:20.194002 19 service.go:242] Received response from host: affinity-clusterip-scn4c
  I0513 19:45:20.194015 19 service.go:242] Received response from host: affinity-clusterip-scn4c
  I0513 19:45:20.194156 19 service.go:242] Received response from host: affinity-clusterip-scn4c
  I0513 19:45:20.194230 19 service.go:242] Received response from host: affinity-clusterip-scn4c
  I0513 19:45:20.194247 19 service.go:242] Received response from host: affinity-clusterip-scn4c
  I0513 19:45:20.194262 19 service.go:242] Received response from host: affinity-clusterip-scn4c
  I0513 19:45:20.194283 19 service.go:242] Received response from host: affinity-clusterip-scn4c
  I0513 19:45:20.194313 19 service.go:242] Received response from host: affinity-clusterip-scn4c
  I0513 19:45:20.194329 19 service.go:242] Received response from host: affinity-clusterip-scn4c
  I0513 19:45:20.194343 19 service.go:242] Received response from host: affinity-clusterip-scn4c
  I0513 19:45:20.194405 19 service.go:242] Received response from host: affinity-clusterip-scn4c
  I0513 19:45:20.194423 19 service.go:242] Received response from host: affinity-clusterip-scn4c
  I0513 19:45:20.194590 19 service.go:242] Received response from host: affinity-clusterip-scn4c
  I0513 19:45:20.194647 19 service.go:242] Received response from host: affinity-clusterip-scn4c
  I0513 19:45:20.194723 19 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-3893, will wait for the garbage collector to delete the pods @ 05/13/24 19:45:20.219
  I0513 19:45:20.298383 19 resources.go:139] Deleting ReplicationController affinity-clusterip took: 15.428542ms
  I0513 19:45:20.398569 19 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 100.181816ms
  I0513 19:45:23.531912 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3893" for this suite. @ 05/13/24 19:45:23.537
• [10.092 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1793
  STEP: Creating a kubernetes client @ 05/13/24 19:45:23.569
  I0513 19:45:23.569664 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename kubectl @ 05/13/24 19:45:23.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:45:23.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:45:23.614
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/13/24 19:45:23.62
  I0513 19:45:23.620715 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-7626 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0513 19:45:23.756240 19 builder.go:146] stderr: ""
  I0513 19:45:23.756287 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 05/13/24 19:45:23.756
  STEP: verifying the pod e2e-test-httpd-pod was created @ 05/13/24 19:45:28.809
  I0513 19:45:28.809858 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-7626 get pod e2e-test-httpd-pod -o json'
  I0513 19:45:28.909479 19 builder.go:146] stderr: ""
  I0513 19:45:28.909639 19 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-05-13T19:45:23Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-7626\",\n        \"resourceVersion\": \"59884\",\n        \"uid\": \"0bbcce1d-303b-4b9a-8210-7d1ffe26269d\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-bvg7b\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-0-253.us-east-2.compute.internal\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-bvg7b\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-13T19:45:25Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-13T19:45:23Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-13T19:45:25Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-13T19:45:25Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-05-13T19:45:23Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://e964efdba1e8badac9acef101fb759dc6eb3ea2ece9903742557d5173b5a94f9\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-05-13T19:45:24Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.31.0.253\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.0.253\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.42.3.78\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.42.3.78\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-05-13T19:45:23Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 05/13/24 19:45:28.909
  I0513 19:45:28.909765 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-7626 replace -f -'
  I0513 19:45:29.147457 19 builder.go:146] stderr: ""
  I0513 19:45:29.147518 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 05/13/24 19:45:29.147
  I0513 19:45:29.154342 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-7626 delete pods e2e-test-httpd-pod'
  I0513 19:45:31.383485 19 builder.go:146] stderr: ""
  I0513 19:45:31.383547 19 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0513 19:45:31.383800 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7626" for this suite. @ 05/13/24 19:45:31.394
• [7.837 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 05/13/24 19:45:31.407
  I0513 19:45:31.407875 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename secrets @ 05/13/24 19:45:31.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:45:31.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:45:31.448
  STEP: Creating secret with name secret-test-6563fa0a-7636-4137-a68f-d4d620dae707 @ 05/13/24 19:45:31.454
  STEP: Creating a pod to test consume secrets @ 05/13/24 19:45:31.465
  STEP: Saw pod success @ 05/13/24 19:45:35.515
  I0513 19:45:35.521855 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod pod-secrets-b9bb9d28-1c2c-41e8-b8d0-755d0c02eefc container secret-volume-test: <nil>
  STEP: delete the pod @ 05/13/24 19:45:35.539
  I0513 19:45:35.590653 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5052" for this suite. @ 05/13/24 19:45:35.596
• [4.227 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:234
  STEP: Creating a kubernetes client @ 05/13/24 19:45:35.636
  I0513 19:45:35.636165 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename resourcequota @ 05/13/24 19:45:35.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:45:35.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:45:35.705
  STEP: Counting existing ResourceQuota @ 05/13/24 19:45:35.711
  STEP: Creating a ResourceQuota @ 05/13/24 19:45:40.714
  STEP: Ensuring resource quota status is calculated @ 05/13/24 19:45:40.724
  STEP: Creating a Pod that fits quota @ 05/13/24 19:45:42.728
  STEP: Ensuring ResourceQuota status captures the pod usage @ 05/13/24 19:45:42.756
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 05/13/24 19:45:44.76
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 05/13/24 19:45:44.763
  STEP: Ensuring a pod cannot update its resource requirements @ 05/13/24 19:45:44.766
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 05/13/24 19:45:44.77
  STEP: Deleting the pod @ 05/13/24 19:45:46.783
  STEP: Ensuring resource quota status released the pod usage @ 05/13/24 19:45:46.844
  I0513 19:45:48.848708 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1845" for this suite. @ 05/13/24 19:45:48.853
• [13.234 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 05/13/24 19:45:48.87
  I0513 19:45:48.870633 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename cronjob @ 05/13/24 19:45:48.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:45:48.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:45:48.925
  STEP: Creating a ReplaceConcurrent cronjob @ 05/13/24 19:45:48.929
  STEP: Ensuring a job is scheduled @ 05/13/24 19:45:48.945
  STEP: Ensuring exactly one is scheduled @ 05/13/24 19:46:00.949
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 05/13/24 19:46:00.952
  STEP: Ensuring the job is replaced with a new one @ 05/13/24 19:46:00.957
  STEP: Removing cronjob @ 05/13/24 19:47:00.968
  I0513 19:47:00.981924 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9960" for this suite. @ 05/13/24 19:47:00.989
• [72.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 05/13/24 19:47:01.01
  I0513 19:47:01.010815 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename disruption @ 05/13/24 19:47:01.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:47:01.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:47:01.095
  STEP: creating the pdb @ 05/13/24 19:47:01.101
  STEP: Waiting for the pdb to be processed @ 05/13/24 19:47:01.113
  STEP: updating the pdb @ 05/13/24 19:47:03.117
  STEP: Waiting for the pdb to be processed @ 05/13/24 19:47:03.129
  STEP: patching the pdb @ 05/13/24 19:47:05.133
  STEP: Waiting for the pdb to be processed @ 05/13/24 19:47:05.151
  STEP: Waiting for the pdb to be deleted @ 05/13/24 19:47:05.182
  I0513 19:47:05.192531 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4886" for this suite. @ 05/13/24 19:47:05.196
• [4.197 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 05/13/24 19:47:05.209
  I0513 19:47:05.209635 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename replication-controller @ 05/13/24 19:47:05.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:47:05.265
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:47:05.279
  STEP: Creating replication controller my-hostname-basic-83efcd24-f937-40ad-9ca9-7d561fe1c151 @ 05/13/24 19:47:05.285
  I0513 19:47:05.312312 19 resource.go:87] Pod name my-hostname-basic-83efcd24-f937-40ad-9ca9-7d561fe1c151: Found 0 pods out of 1
  I0513 19:47:10.316946 19 resource.go:87] Pod name my-hostname-basic-83efcd24-f937-40ad-9ca9-7d561fe1c151: Found 1 pods out of 1
  I0513 19:47:10.317160 19 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-83efcd24-f937-40ad-9ca9-7d561fe1c151" are running
  I0513 19:47:10.320722 19 rc.go:523] Pod "my-hostname-basic-83efcd24-f937-40ad-9ca9-7d561fe1c151-tz65t" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-13 19:47:06 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-13 19:47:05 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-13 19:47:06 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-13 19:47:06 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-05-13 19:47:05 +0000 UTC Reason: Message:}])
  I0513 19:47:10.320941 19 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 05/13/24 19:47:10.322
  I0513 19:47:10.339606 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8119" for this suite. @ 05/13/24 19:47:10.348
• [5.154 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 05/13/24 19:47:10.368
  I0513 19:47:10.368865 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/13/24 19:47:10.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:47:10.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:47:10.424
  I0513 19:47:10.428522 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/13/24 19:47:12.133
  I0513 19:47:12.133943 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=crd-publish-openapi-4119 --namespace=crd-publish-openapi-4119 create -f -'
  I0513 19:47:12.241661 19 builder.go:146] stderr: ""
  I0513 19:47:12.241713 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-257-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0513 19:47:12.242137 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=crd-publish-openapi-4119 --namespace=crd-publish-openapi-4119 delete e2e-test-crd-publish-openapi-257-crds test-cr'
  I0513 19:47:12.334445 19 builder.go:146] stderr: ""
  I0513 19:47:12.334504 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-257-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0513 19:47:12.334584 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=crd-publish-openapi-4119 --namespace=crd-publish-openapi-4119 apply -f -'
  I0513 19:47:12.449167 19 builder.go:146] stderr: ""
  I0513 19:47:12.449226 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-257-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0513 19:47:12.449291 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=crd-publish-openapi-4119 --namespace=crd-publish-openapi-4119 delete e2e-test-crd-publish-openapi-257-crds test-cr'
  I0513 19:47:12.547010 19 builder.go:146] stderr: ""
  I0513 19:47:12.547059 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-257-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 05/13/24 19:47:12.547
  I0513 19:47:12.547158 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=crd-publish-openapi-4119 explain e2e-test-crd-publish-openapi-257-crds'
  I0513 19:47:12.636572 19 builder.go:146] stderr: ""
  I0513 19:47:12.636652 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-257-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0513 19:47:14.401751 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4119" for this suite. @ 05/13/24 19:47:14.411
• [4.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 05/13/24 19:47:14.429
  I0513 19:47:14.429263 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename emptydir @ 05/13/24 19:47:14.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:47:14.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:47:14.471
  STEP: Creating a pod to test emptydir volume type on node default medium @ 05/13/24 19:47:14.476
  STEP: Saw pod success @ 05/13/24 19:47:18.512
  I0513 19:47:18.516649 19 output.go:196] Trying to get logs from node ip-172-31-3-33.us-east-2.compute.internal pod pod-c3391332-c929-48a7-a002-1f01ed5fba4b container test-container: <nil>
  STEP: delete the pod @ 05/13/24 19:47:18.53
  I0513 19:47:18.577241 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2189" for this suite. @ 05/13/24 19:47:18.582
• [4.171 seconds]
------------------------------
SS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:134
  STEP: Creating a kubernetes client @ 05/13/24 19:47:18.6
  I0513 19:47:18.600979 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename kubelet-test @ 05/13/24 19:47:18.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:47:18.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:47:18.638
  I0513 19:47:18.687046 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-477" for this suite. @ 05/13/24 19:47:18.695
• [0.130 seconds]
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 05/13/24 19:47:18.73
  I0513 19:47:18.730559 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename disruption @ 05/13/24 19:47:18.731
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:47:18.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:47:18.782
  STEP: Creating a kubernetes client @ 05/13/24 19:47:18.788
  I0513 19:47:18.788340 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename disruption-2 @ 05/13/24 19:47:18.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:47:18.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:47:18.843
  STEP: Waiting for the pdb to be processed @ 05/13/24 19:47:18.859
  STEP: Waiting for the pdb to be processed @ 05/13/24 19:47:20.872
  STEP: Waiting for the pdb to be processed @ 05/13/24 19:47:22.893
  STEP: listing a collection of PDBs across all namespaces @ 05/13/24 19:47:22.917
  STEP: listing a collection of PDBs in namespace disruption-538 @ 05/13/24 19:47:22.927
  STEP: deleting a collection of PDBs @ 05/13/24 19:47:22.931
  STEP: Waiting for the PDB collection to be deleted @ 05/13/24 19:47:22.951
  I0513 19:47:22.955418 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-1075" for this suite. @ 05/13/24 19:47:22.96
  I0513 19:47:22.973789 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-538" for this suite. @ 05/13/24 19:47:22.978
• [4.259 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 05/13/24 19:47:22.989
  I0513 19:47:22.989966 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename projected @ 05/13/24 19:47:22.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:47:23.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:47:23.048
  STEP: Creating configMap with name cm-test-opt-del-22a4260a-1b70-4dbb-b390-bc0a3178dd14 @ 05/13/24 19:47:23.056
  STEP: Creating configMap with name cm-test-opt-upd-d570986d-27de-43b0-971e-6d328d5cf4bb @ 05/13/24 19:47:23.068
  STEP: Creating the pod @ 05/13/24 19:47:23.078
  STEP: Deleting configmap cm-test-opt-del-22a4260a-1b70-4dbb-b390-bc0a3178dd14 @ 05/13/24 19:47:25.152
  STEP: Updating configmap cm-test-opt-upd-d570986d-27de-43b0-971e-6d328d5cf4bb @ 05/13/24 19:47:25.164
  STEP: Creating configMap with name cm-test-opt-create-da67a53b-fc14-4418-891d-26aa24640c4e @ 05/13/24 19:47:25.174
  STEP: waiting to observe update in volume @ 05/13/24 19:47:25.196
  I0513 19:48:37.694601 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6483" for this suite. @ 05/13/24 19:48:37.699
• [74.723 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 05/13/24 19:48:37.712
  I0513 19:48:37.712974 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename webhook @ 05/13/24 19:48:37.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:48:37.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:48:37.772
  STEP: Setting up server cert @ 05/13/24 19:48:37.846
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/13/24 19:48:38.716
  STEP: Deploying the webhook pod @ 05/13/24 19:48:38.731
  STEP: Wait for the deployment to be ready @ 05/13/24 19:48:38.766
  I0513 19:48:38.801285 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/13/24 19:48:40.82
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 19:48:40.856
  I0513 19:48:41.856318 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 05/13/24 19:48:41.866
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/13/24 19:48:41.902
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 05/13/24 19:48:41.922
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/13/24 19:48:41.947
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 05/13/24 19:48:41.978
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 05/13/24 19:48:42.007
  I0513 19:48:42.171448 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8264" for this suite. @ 05/13/24 19:48:42.191
  STEP: Destroying namespace "webhook-markers-2250" for this suite. @ 05/13/24 19:48:42.218
• [4.525 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 05/13/24 19:48:42.237
  I0513 19:48:42.237887 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename projected @ 05/13/24 19:48:42.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:48:42.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:48:42.288
  STEP: Creating a pod to test downward API volume plugin @ 05/13/24 19:48:42.292
  STEP: Saw pod success @ 05/13/24 19:48:46.34
  I0513 19:48:46.344023 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod downwardapi-volume-80fd1c74-9f9f-4d8a-aa9b-51e19fb68d53 container client-container: <nil>
  STEP: delete the pod @ 05/13/24 19:48:46.356
  I0513 19:48:46.399040 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5340" for this suite. @ 05/13/24 19:48:46.406
• [4.206 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 05/13/24 19:48:46.444
  I0513 19:48:46.444783 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename svcaccounts @ 05/13/24 19:48:46.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:48:46.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:48:46.5
  I0513 19:48:46.507725 19 service_accounts.go:754] Got root ca configmap in namespace "svcaccounts-431"
  I0513 19:48:46.525728 19 service_accounts.go:757] Deleted root ca configmap in namespace "svcaccounts-431"
  STEP: waiting for a new root ca configmap created @ 05/13/24 19:48:47.026
  I0513 19:48:47.036259 19 service_accounts.go:771] Recreated root ca configmap in namespace "svcaccounts-431"
  I0513 19:48:47.046668 19 service_accounts.go:782] Updated root ca configmap in namespace "svcaccounts-431"
  STEP: waiting for the root ca configmap reconciled @ 05/13/24 19:48:47.547
  I0513 19:48:47.551950 19 service_accounts.go:800] Reconciled root ca configmap in namespace "svcaccounts-431"
  I0513 19:48:47.552255 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-431" for this suite. @ 05/13/24 19:48:47.557
• [1.131 seconds]
------------------------------
S
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 05/13/24 19:48:47.575
  I0513 19:48:47.575389 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename certificates @ 05/13/24 19:48:47.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:48:47.635
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:48:47.64
  STEP: getting /apis @ 05/13/24 19:48:48.429
  STEP: getting /apis/certificates.k8s.io @ 05/13/24 19:48:48.436
  STEP: getting /apis/certificates.k8s.io/v1 @ 05/13/24 19:48:48.437
  STEP: creating @ 05/13/24 19:48:48.439
  STEP: getting @ 05/13/24 19:48:48.482
  STEP: listing @ 05/13/24 19:48:48.485
  STEP: watching @ 05/13/24 19:48:48.489
  I0513 19:48:48.489549 19 certificates.go:316] starting watch
  STEP: patching @ 05/13/24 19:48:48.491
  STEP: updating @ 05/13/24 19:48:48.502
  I0513 19:48:48.518626 19 certificates.go:332] waiting for watch events with expected annotations
  I0513 19:48:48.518698 19 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 05/13/24 19:48:48.518
  STEP: patching /approval @ 05/13/24 19:48:48.522
  STEP: updating /approval @ 05/13/24 19:48:48.538
  STEP: getting /status @ 05/13/24 19:48:48.553
  STEP: patching /status @ 05/13/24 19:48:48.556
  STEP: updating /status @ 05/13/24 19:48:48.574
  STEP: deleting @ 05/13/24 19:48:48.591
  STEP: deleting a collection @ 05/13/24 19:48:48.607
  I0513 19:48:48.643009 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-8629" for this suite. @ 05/13/24 19:48:48.647
• [1.088 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 05/13/24 19:48:48.663
  I0513 19:48:48.663890 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename projected @ 05/13/24 19:48:48.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:48:48.698
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:48:48.702
  STEP: Creating configMap with name projected-configmap-test-volume-map-22496c3f-645c-4751-b843-9659b8529d4e @ 05/13/24 19:48:48.741
  STEP: Creating a pod to test consume configMaps @ 05/13/24 19:48:48.752
  STEP: Saw pod success @ 05/13/24 19:48:52.801
  I0513 19:48:52.807833 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod pod-projected-configmaps-924487f3-d36e-4c9d-8888-25f84b236865 container agnhost-container: <nil>
  STEP: delete the pod @ 05/13/24 19:48:52.816
  I0513 19:48:52.852542 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-732" for this suite. @ 05/13/24 19:48:52.858
• [4.215 seconds]
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 05/13/24 19:48:52.879
  I0513 19:48:52.879122 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename projected @ 05/13/24 19:48:52.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:48:52.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:48:52.927
  STEP: Creating a pod to test downward API volume plugin @ 05/13/24 19:48:52.932
  STEP: Saw pod success @ 05/13/24 19:48:56.972
  I0513 19:48:56.978321 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod downwardapi-volume-c8940862-861c-456f-90f5-ed2e637cdad9 container client-container: <nil>
  STEP: delete the pod @ 05/13/24 19:48:56.992
  I0513 19:48:57.055385 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7413" for this suite. @ 05/13/24 19:48:57.076
• [4.211 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 05/13/24 19:48:57.091
  I0513 19:48:57.091408 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename endpointslice @ 05/13/24 19:48:57.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:48:57.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:48:57.141
  I0513 19:48:59.448796 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4067" for this suite. @ 05/13/24 19:48:59.453
• [2.391 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:397
  STEP: Creating a kubernetes client @ 05/13/24 19:48:59.483
  I0513 19:48:59.483085 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename kubectl @ 05/13/24 19:48:59.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:48:59.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:48:59.531
  STEP: creating all guestbook components @ 05/13/24 19:48:59.544
  I0513 19:48:59.544315 19 kubectl.go:403] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0513 19:48:59.544426 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-5807 create -f -'
  I0513 19:48:59.764115 19 builder.go:146] stderr: ""
  I0513 19:48:59.764172 19 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0513 19:48:59.764224 19 kubectl.go:403] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0513 19:48:59.764678 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-5807 create -f -'
  I0513 19:48:59.975213 19 builder.go:146] stderr: ""
  I0513 19:48:59.975380 19 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0513 19:48:59.975440 19 kubectl.go:403] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0513 19:48:59.975580 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-5807 create -f -'
  I0513 19:49:00.169358 19 builder.go:146] stderr: ""
  I0513 19:49:00.169410 19 builder.go:147] stdout: "service/frontend created\n"
  I0513 19:49:00.169494 19 kubectl.go:403] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0513 19:49:00.169981 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-5807 create -f -'
  I0513 19:49:00.307695 19 builder.go:146] stderr: ""
  I0513 19:49:00.307760 19 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0513 19:49:00.307832 19 kubectl.go:403] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0513 19:49:00.308006 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-5807 create -f -'
  I0513 19:49:00.494081 19 builder.go:146] stderr: ""
  I0513 19:49:00.494132 19 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0513 19:49:00.494204 19 kubectl.go:403] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0513 19:49:00.494371 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-5807 create -f -'
  I0513 19:49:00.704232 19 builder.go:146] stderr: ""
  I0513 19:49:00.704275 19 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 05/13/24 19:49:00.704
  I0513 19:49:00.704322 19 kubectl.go:2271] Waiting for all frontend pods to be Running.
  I0513 19:49:05.754935 19 kubectl.go:2275] Waiting for frontend to serve content.
  I0513 19:49:05.770785 19 kubectl.go:2280] Trying to add a new entry to the guestbook.
  I0513 19:49:05.790957 19 kubectl.go:2285] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 05/13/24 19:49:05.8
  I0513 19:49:05.800899 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-5807 delete --grace-period=0 --force -f -'
  I0513 19:49:05.934511 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0513 19:49:05.934572 19 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 05/13/24 19:49:05.934
  I0513 19:49:05.934703 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-5807 delete --grace-period=0 --force -f -'
  I0513 19:49:06.064151 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0513 19:49:06.064201 19 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 05/13/24 19:49:06.064
  I0513 19:49:06.064345 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-5807 delete --grace-period=0 --force -f -'
  I0513 19:49:06.187184 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0513 19:49:06.187245 19 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 05/13/24 19:49:06.187
  I0513 19:49:06.187413 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-5807 delete --grace-period=0 --force -f -'
  I0513 19:49:06.292135 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0513 19:49:06.292213 19 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 05/13/24 19:49:06.292
  I0513 19:49:06.292663 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-5807 delete --grace-period=0 --force -f -'
  I0513 19:49:06.433990 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0513 19:49:06.434054 19 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 05/13/24 19:49:06.434
  I0513 19:49:06.434220 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-5807 delete --grace-period=0 --force -f -'
  I0513 19:49:06.554660 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0513 19:49:06.554720 19 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0513 19:49:06.554825 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5807" for this suite. @ 05/13/24 19:49:06.56
• [7.093 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 05/13/24 19:49:06.575
  I0513 19:49:06.575968 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename secrets @ 05/13/24 19:49:06.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:49:06.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:49:06.68
  STEP: Creating secret with name secret-test-1c5dfa9e-6e74-4aa5-9838-4410fc0a00d4 @ 05/13/24 19:49:06.684
  STEP: Creating a pod to test consume secrets @ 05/13/24 19:49:06.761
  STEP: Saw pod success @ 05/13/24 19:49:10.875
  I0513 19:49:10.881559 19 output.go:196] Trying to get logs from node ip-172-31-3-33.us-east-2.compute.internal pod pod-secrets-7472c663-cba8-4e55-8fbe-8ab31f4d42f3 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/13/24 19:49:10.897
  I0513 19:49:10.931573 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8323" for this suite. @ 05/13/24 19:49:10.94
• [4.376 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 05/13/24 19:49:10.956
  I0513 19:49:10.956443 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename csi-storageclass @ 05/13/24 19:49:10.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:49:11.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:49:11.041
  STEP: Creating a StorageClass @ 05/13/24 19:49:11.048
  STEP: Get StorageClass "e2e-k9bzl" @ 05/13/24 19:49:11.067
  STEP: Patching the StorageClass "e2e-k9bzl" @ 05/13/24 19:49:11.07
  STEP: Delete StorageClass "e2e-k9bzl" @ 05/13/24 19:49:11.087
  STEP: Confirm deletion of StorageClass "e2e-k9bzl" @ 05/13/24 19:49:11.111
  STEP: Create a replacement StorageClass @ 05/13/24 19:49:11.115
  STEP: Updating StorageClass "e2e-v2-nswtm" @ 05/13/24 19:49:11.13
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-nswtm=updated" @ 05/13/24 19:49:11.146
  STEP: Deleting StorageClass "e2e-v2-nswtm" via DeleteCollection @ 05/13/24 19:49:11.15
  STEP: Confirm deletion of StorageClass "e2e-v2-nswtm" @ 05/13/24 19:49:11.166
  I0513 19:49:11.170443 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-1459" for this suite. @ 05/13/24 19:49:11.183
• [0.262 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 05/13/24 19:49:11.219
  I0513 19:49:11.219258 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename var-expansion @ 05/13/24 19:49:11.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:49:11.276
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:49:11.282
  STEP: creating the pod with failed condition @ 05/13/24 19:49:11.286
  STEP: updating the pod @ 05/13/24 19:51:11.33
  I0513 19:51:11.854283 19 pod_client.go:141] Successfully updated pod "var-expansion-10dc4a79-678c-4592-912c-74fb92c1fde8"
  STEP: waiting for pod running @ 05/13/24 19:51:11.854
  STEP: deleting the pod gracefully @ 05/13/24 19:51:13.862
  I0513 19:51:13.862127 19 delete.go:62] Deleting pod "var-expansion-10dc4a79-678c-4592-912c-74fb92c1fde8" in namespace "var-expansion-3047"
  I0513 19:51:13.878778 19 delete.go:70] Wait up to 5m0s for pod "var-expansion-10dc4a79-678c-4592-912c-74fb92c1fde8" to be fully deleted
  I0513 19:51:45.971742 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3047" for this suite. @ 05/13/24 19:51:45.977
• [154.775 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:183
  STEP: Creating a kubernetes client @ 05/13/24 19:51:46.002
  I0513 19:51:46.002621 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename kubelet-test @ 05/13/24 19:51:46.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:51:46.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:51:46.092
  I0513 19:51:48.167226 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8736" for this suite. @ 05/13/24 19:51:48.171
• [2.185 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 05/13/24 19:51:48.187
  I0513 19:51:48.187758 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename configmap @ 05/13/24 19:51:48.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:51:48.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:51:48.224
  STEP: creating a ConfigMap @ 05/13/24 19:51:48.228
  STEP: fetching the ConfigMap @ 05/13/24 19:51:48.241
  STEP: patching the ConfigMap @ 05/13/24 19:51:48.245
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 05/13/24 19:51:48.26
  STEP: deleting the ConfigMap by collection with a label selector @ 05/13/24 19:51:48.264
  STEP: listing all ConfigMaps in test namespace @ 05/13/24 19:51:48.284
  I0513 19:51:48.288212 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4575" for this suite. @ 05/13/24 19:51:48.292
• [0.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 05/13/24 19:51:48.326
  I0513 19:51:48.326270 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename sysctl @ 05/13/24 19:51:48.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:51:48.363
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:51:48.367
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 05/13/24 19:51:48.371
  STEP: Watching for error events or started pod @ 05/13/24 19:51:48.392
  STEP: Waiting for pod completion @ 05/13/24 19:51:50.397
  STEP: Checking that the pod succeeded @ 05/13/24 19:51:52.416
  STEP: Getting logs from the pod @ 05/13/24 19:51:52.416
  STEP: Checking that the sysctl is actually updated @ 05/13/24 19:51:52.44
  I0513 19:51:52.440707 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-5021" for this suite. @ 05/13/24 19:51:52.446
• [4.137 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 05/13/24 19:51:52.463
  I0513 19:51:52.463526 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename emptydir @ 05/13/24 19:51:52.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:51:52.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:51:52.5
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 05/13/24 19:51:52.504
  STEP: Saw pod success @ 05/13/24 19:51:56.57
  I0513 19:51:56.574365 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod pod-0801ee5e-e1b2-4968-9fbb-63afdefb66c6 container test-container: <nil>
  STEP: delete the pod @ 05/13/24 19:51:56.58
  I0513 19:51:56.617879 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6729" for this suite. @ 05/13/24 19:51:56.629
• [4.187 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 05/13/24 19:51:56.651
  I0513 19:51:56.651284 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename sched-preemption @ 05/13/24 19:51:56.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:51:56.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:51:56.709
  I0513 19:51:56.759077 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0513 19:52:56.764979 19 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 05/13/24 19:52:56.768
  I0513 19:52:56.795872 19 preemption.go:178] Created pod: pod0-0-sched-preemption-low-priority
  I0513 19:52:56.818458 19 preemption.go:178] Created pod: pod0-1-sched-preemption-medium-priority
  I0513 19:52:56.860827 19 preemption.go:178] Created pod: pod1-0-sched-preemption-medium-priority
  I0513 19:52:56.894930 19 preemption.go:178] Created pod: pod1-1-sched-preemption-medium-priority
  I0513 19:52:56.986206 19 preemption.go:178] Created pod: pod2-0-sched-preemption-medium-priority
  I0513 19:52:57.019793 19 preemption.go:178] Created pod: pod2-1-sched-preemption-medium-priority
  I0513 19:52:57.107526 19 preemption.go:178] Created pod: pod3-0-sched-preemption-medium-priority
  I0513 19:52:57.134467 19 preemption.go:178] Created pod: pod3-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 05/13/24 19:52:57.134
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 05/13/24 19:52:59.224
  I0513 19:53:03.441800 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5250" for this suite. @ 05/13/24 19:53:03.45
• [66.816 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 05/13/24 19:53:03.467
  I0513 19:53:03.467682 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename projected @ 05/13/24 19:53:03.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:53:03.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:53:03.54
  STEP: Creating secret with name projected-secret-test-a633b48b-da8f-4b50-b008-0da7a61ad471 @ 05/13/24 19:53:03.544
  STEP: Creating a pod to test consume secrets @ 05/13/24 19:53:03.555
  STEP: Saw pod success @ 05/13/24 19:53:07.627
  I0513 19:53:07.630739 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod pod-projected-secrets-fd6916aa-fa80-4671-b49e-67d96e0a4678 container secret-volume-test: <nil>
  STEP: delete the pod @ 05/13/24 19:53:07.642
  I0513 19:53:07.686877 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1930" for this suite. @ 05/13/24 19:53:07.691
• [4.240 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 05/13/24 19:53:07.707
  I0513 19:53:07.707475 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename validating-admission-policy @ 05/13/24 19:53:07.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:53:07.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:53:07.758
  STEP: creating a policy with variables @ 05/13/24 19:53:07.773
  STEP: waiting until the marker is denied @ 05/13/24 19:53:07.812
  STEP: testing a replicated Deployment to be allowed @ 05/13/24 19:53:08.021
  STEP: testing a non-replicated ReplicaSet not to be denied @ 05/13/24 19:53:08.078
  I0513 19:53:08.212952 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-9037" for this suite. @ 05/13/24 19:53:08.233
• [0.564 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 05/13/24 19:53:08.271
  I0513 19:53:08.271518 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename webhook @ 05/13/24 19:53:08.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:53:08.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:53:08.376
  STEP: Setting up server cert @ 05/13/24 19:53:08.444
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/13/24 19:53:09.06
  STEP: Deploying the webhook pod @ 05/13/24 19:53:09.578
  STEP: Wait for the deployment to be ready @ 05/13/24 19:53:09.64
  I0513 19:53:09.735372 19 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 05/13/24 19:53:11.756
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 19:53:11.803
  I0513 19:53:12.803623 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0513 19:53:12.813652 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2278-crds.webhook.example.com via the AdmissionRegistration API @ 05/13/24 19:53:13.339
  STEP: Creating a custom resource while v1 is storage version @ 05/13/24 19:53:13.369
  STEP: Patching Custom Resource Definition to set v2 as storage @ 05/13/24 19:53:15.407
  STEP: Patching the custom resource while v2 is storage version @ 05/13/24 19:53:15.452
  I0513 19:53:16.195478 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3098" for this suite. @ 05/13/24 19:53:16.199
  STEP: Destroying namespace "webhook-markers-9015" for this suite. @ 05/13/24 19:53:16.21
• [7.961 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 05/13/24 19:53:16.232
  I0513 19:53:16.232496 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename projected @ 05/13/24 19:53:16.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:53:16.281
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:53:16.286
  STEP: Creating a pod to test downward API volume plugin @ 05/13/24 19:53:16.29
  STEP: Saw pod success @ 05/13/24 19:53:20.332
  I0513 19:53:20.337051 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod downwardapi-volume-6703c515-417f-49ab-bd7f-b5a566d564c4 container client-container: <nil>
  STEP: delete the pod @ 05/13/24 19:53:20.344
  I0513 19:53:20.405518 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7367" for this suite. @ 05/13/24 19:53:20.412
• [4.195 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 05/13/24 19:53:20.427
  I0513 19:53:20.427880 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename limitrange @ 05/13/24 19:53:20.428
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:53:20.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:53:20.47
  STEP: Creating LimitRange "e2e-limitrange-s9c2d" in namespace "limitrange-2261" @ 05/13/24 19:53:20.482
  STEP: Creating another limitRange in another namespace @ 05/13/24 19:53:20.508
  I0513 19:53:20.547484 19 limit_range.go:299] Namespace "e2e-limitrange-s9c2d-8403" created
  I0513 19:53:20.547536 19 limit_range.go:300] Creating LimitRange "e2e-limitrange-s9c2d" in namespace "e2e-limitrange-s9c2d-8403"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-s9c2d" @ 05/13/24 19:53:20.578
  I0513 19:53:20.588215 19 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-s9c2d" in "limitrange-2261" namespace @ 05/13/24 19:53:20.588
  I0513 19:53:20.607996 19 limit_range.go:335] LimitRange "e2e-limitrange-s9c2d" has been patched
  STEP: Delete LimitRange "e2e-limitrange-s9c2d" by Collection with labelSelector: "e2e-limitrange-s9c2d=patched" @ 05/13/24 19:53:20.608
  STEP: Confirm that the limitRange "e2e-limitrange-s9c2d" has been deleted @ 05/13/24 19:53:20.632
  I0513 19:53:20.632210 19 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0513 19:53:20.635546 19 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-s9c2d=patched"
  I0513 19:53:20.635915 19 limit_range.go:344] LimitRange "e2e-limitrange-s9c2d" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-s9c2d" @ 05/13/24 19:53:20.636
  I0513 19:53:20.640909 19 limit_range.go:350] Found 1 limitRange
  I0513 19:53:20.641334 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-2261" for this suite. @ 05/13/24 19:53:20.647
  STEP: Destroying namespace "e2e-limitrange-s9c2d-8403" for this suite. @ 05/13/24 19:53:20.667
• [0.268 seconds]
------------------------------
SSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 05/13/24 19:53:20.696
  I0513 19:53:20.696256 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename csiinlinevolumes @ 05/13/24 19:53:20.697
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:53:20.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:53:20.747
  STEP: Creating two CSIDrivers @ 05/13/24 19:53:20.751
  STEP: Getting "inline-driver-7752fdf2-4719-4af0-b5f1-d8194e63eaa9" & "inline-driver-fc244807-2480-4e8b-a2e0-f3e743cd6060" @ 05/13/24 19:53:20.795
  STEP: Patching the CSIDriver "inline-driver-fc244807-2480-4e8b-a2e0-f3e743cd6060" @ 05/13/24 19:53:20.805
  STEP: Updating the CSIDriver "inline-driver-fc244807-2480-4e8b-a2e0-f3e743cd6060" @ 05/13/24 19:53:20.818
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-1850" @ 05/13/24 19:53:20.834
  STEP: Deleting CSIDriver "inline-driver-7752fdf2-4719-4af0-b5f1-d8194e63eaa9" @ 05/13/24 19:53:20.838
  STEP: Confirm deletion of CSIDriver "inline-driver-7752fdf2-4719-4af0-b5f1-d8194e63eaa9" @ 05/13/24 19:53:20.852
  STEP: Deleting CSIDriver "inline-driver-fc244807-2480-4e8b-a2e0-f3e743cd6060" via DeleteCollection @ 05/13/24 19:53:20.86
  STEP: Confirm deletion of CSIDriver "inline-driver-fc244807-2480-4e8b-a2e0-f3e743cd6060" @ 05/13/24 19:53:20.878
  I0513 19:53:20.885244 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-1850" for this suite. @ 05/13/24 19:53:20.895
• [0.224 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 05/13/24 19:53:20.923
  I0513 19:53:20.923517 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename secrets @ 05/13/24 19:53:20.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:53:20.974
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:53:20.979
  I0513 19:53:21.082517 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1930" for this suite. @ 05/13/24 19:53:21.087
• [0.176 seconds]
------------------------------
SS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 05/13/24 19:53:21.099
  I0513 19:53:21.099736 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename subpath @ 05/13/24 19:53:21.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:53:21.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:53:21.196
  STEP: Setting up data @ 05/13/24 19:53:21.203
  STEP: Creating pod pod-subpath-test-configmap-brpn @ 05/13/24 19:53:21.228
  STEP: Creating a pod to test atomic-volume-subpath @ 05/13/24 19:53:21.229
  STEP: Saw pod success @ 05/13/24 19:53:45.342
  I0513 19:53:45.346123 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod pod-subpath-test-configmap-brpn container test-container-subpath-configmap-brpn: <nil>
  STEP: delete the pod @ 05/13/24 19:53:45.354
  STEP: Deleting pod pod-subpath-test-configmap-brpn @ 05/13/24 19:53:45.393
  I0513 19:53:45.393229 19 delete.go:62] Deleting pod "pod-subpath-test-configmap-brpn" in namespace "subpath-2086"
  I0513 19:53:45.398976 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2086" for this suite. @ 05/13/24 19:53:45.407
• [24.320 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 05/13/24 19:53:45.421
  I0513 19:53:45.421177 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename runtimeclass @ 05/13/24 19:53:45.422
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:53:45.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:53:45.461
  I0513 19:53:45.480389 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3470" for this suite. @ 05/13/24 19:53:45.485
• [0.082 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 05/13/24 19:53:45.503
  I0513 19:53:45.503390 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename gc @ 05/13/24 19:53:45.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:53:45.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:53:45.561
  STEP: create the rc @ 05/13/24 19:53:45.571
  W0513 19:53:45.583882      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 05/13/24 19:53:51.691
  STEP: wait for the rc to be deleted @ 05/13/24 19:53:52.241
  I0513 19:53:53.502261 19 garbage_collector.go:670] 100 pods remaining
  I0513 19:53:53.502339 19 garbage_collector.go:677] 100 pods has nil DeletionTimestamp
  I0513 19:53:53.502355 19 garbage_collector.go:678] 
  I0513 19:53:54.351921 19 garbage_collector.go:670] 98 pods remaining
  I0513 19:53:54.352216 19 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I0513 19:53:54.352388 19 garbage_collector.go:678] 
  I0513 19:53:55.422651 19 garbage_collector.go:670] 80 pods remaining
  I0513 19:53:55.422933 19 garbage_collector.go:677] 75 pods has nil DeletionTimestamp
  I0513 19:53:55.423077 19 garbage_collector.go:678] 
  I0513 19:53:56.547542 19 garbage_collector.go:670] 60 pods remaining
  I0513 19:53:56.547821 19 garbage_collector.go:677] 59 pods has nil DeletionTimestamp
  I0513 19:53:56.547989 19 garbage_collector.go:678] 
  I0513 19:53:57.892085 19 garbage_collector.go:670] 40 pods remaining
  I0513 19:53:57.892333 19 garbage_collector.go:677] 39 pods has nil DeletionTimestamp
  I0513 19:53:57.892497 19 garbage_collector.go:678] 
  I0513 19:53:58.380870 19 garbage_collector.go:670] 38 pods remaining
  I0513 19:53:58.381143 19 garbage_collector.go:677] 37 pods has nil DeletionTimestamp
  I0513 19:53:58.381315 19 garbage_collector.go:678] 
  I0513 19:54:00.039006 19 garbage_collector.go:670] 17 pods remaining
  I0513 19:54:00.039243 19 garbage_collector.go:677] 16 pods has nil DeletionTimestamp
  I0513 19:54:00.039430 19 garbage_collector.go:678] 
  I0513 19:54:00.574381 19 garbage_collector.go:670] 2 pods remaining
  I0513 19:54:00.574625 19 garbage_collector.go:677] 0 pods has nil DeletionTimestamp
  I0513 19:54:00.574788 19 garbage_collector.go:678] 
  STEP: Gathering metrics @ 05/13/24 19:54:01.41
  W0513 19:54:01.464799      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0513 19:54:01.464852 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0513 19:54:01.465582 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4928" for this suite. @ 05/13/24 19:54:01.524
• [16.205 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 05/13/24 19:54:01.712
  I0513 19:54:01.712502 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename webhook @ 05/13/24 19:54:01.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:54:01.93
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:54:01.948
  STEP: Setting up server cert @ 05/13/24 19:54:02.414
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/13/24 19:54:03.007
  STEP: Deploying the webhook pod @ 05/13/24 19:54:03.031
  STEP: Wait for the deployment to be ready @ 05/13/24 19:54:03.08
  I0513 19:54:03.116351 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/13/24 19:54:05.169
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 19:54:05.201
  I0513 19:54:06.202052 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 05/13/24 19:54:06.21
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 05/13/24 19:54:06.212
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 05/13/24 19:54:06.212
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 05/13/24 19:54:06.212
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 05/13/24 19:54:06.214
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 05/13/24 19:54:06.214
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 05/13/24 19:54:06.216
  I0513 19:54:06.331147 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5072" for this suite. @ 05/13/24 19:54:06.338
  STEP: Destroying namespace "webhook-markers-7453" for this suite. @ 05/13/24 19:54:06.357
• [4.660 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:641
  STEP: Creating a kubernetes client @ 05/13/24 19:54:06.373
  I0513 19:54:06.373706 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename statefulset @ 05/13/24 19:54:06.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:54:06.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:54:06.469
  STEP: Creating service test in namespace statefulset-767 @ 05/13/24 19:54:06.474
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 05/13/24 19:54:06.492
  STEP: Creating stateful set ss in namespace statefulset-767 @ 05/13/24 19:54:06.502
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-767 @ 05/13/24 19:54:06.519
  I0513 19:54:06.522695 19 wait.go:40] Found 0 stateful pods, waiting for 1
  I0513 19:54:16.524551 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 05/13/24 19:54:16.524
  I0513 19:54:16.529061 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=statefulset-767 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0513 19:54:16.683046 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0513 19:54:16.683122 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0513 19:54:16.683145 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0513 19:54:16.688146 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0513 19:54:26.689114 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0513 19:54:26.689181 19 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0513 19:54:26.723409 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 9.99999963s
  I0513 19:54:27.728088 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 8.990241601s
  I0513 19:54:28.732025 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 7.985576986s
  I0513 19:54:29.735764 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 6.981641271s
  I0513 19:54:30.740844 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 5.97721209s
  I0513 19:54:31.758175 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 4.972029586s
  I0513 19:54:32.762809 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 3.955021561s
  I0513 19:54:33.766903 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 2.950752231s
  I0513 19:54:34.772542 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 1.94577345s
  I0513 19:54:35.777800 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 940.155409ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-767 @ 05/13/24 19:54:36.778
  I0513 19:54:36.786658 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=statefulset-767 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0513 19:54:36.994893 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0513 19:54:36.994958 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0513 19:54:36.994981 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0513 19:54:37.004265 19 wait.go:40] Found 1 stateful pods, waiting for 3
  I0513 19:54:47.003290 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0513 19:54:47.003351 19 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0513 19:54:47.003370 19 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 05/13/24 19:54:47.003
  STEP: Scale down will halt with unhealthy stateful pod @ 05/13/24 19:54:47.003
  I0513 19:54:47.011151 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=statefulset-767 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0513 19:54:47.173286 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0513 19:54:47.173342 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0513 19:54:47.173364 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0513 19:54:47.173570 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=statefulset-767 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0513 19:54:47.347285 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0513 19:54:47.347447 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0513 19:54:47.347482 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0513 19:54:47.347575 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=statefulset-767 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0513 19:54:47.510690 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0513 19:54:47.510748 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0513 19:54:47.510767 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0513 19:54:47.510784 19 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0513 19:54:47.514588 19 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I0513 19:54:57.530135 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0513 19:54:57.530198 19 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0513 19:54:57.530219 19 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0513 19:54:57.554122 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 9.99999958s
  I0513 19:54:58.558591 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 8.996061785s
  I0513 19:54:59.563273 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 7.991611972s
  I0513 19:55:00.584629 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 6.98591285s
  I0513 19:55:01.590807 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 5.964867497s
  I0513 19:55:02.597646 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 4.959336468s
  I0513 19:55:03.603646 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 3.952062784s
  I0513 19:55:04.612598 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 2.945868735s
  I0513 19:55:05.618142 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 1.937154582s
  I0513 19:55:06.623156 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 931.715213ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-767 @ 05/13/24 19:55:07.623
  I0513 19:55:07.629760 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=statefulset-767 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0513 19:55:07.774938 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0513 19:55:07.774995 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0513 19:55:07.775015 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0513 19:55:07.775080 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=statefulset-767 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0513 19:55:08.008302 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0513 19:55:08.008368 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0513 19:55:08.008390 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0513 19:55:08.008452 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=statefulset-767 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0513 19:55:08.137750 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0513 19:55:08.137848 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0513 19:55:08.137869 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0513 19:55:08.137886 19 rest.go:150] Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 05/13/24 19:55:18.185
  I0513 19:55:18.185412 19 statefulset.go:135] Deleting all statefulset in ns statefulset-767
  I0513 19:55:18.197928 19 rest.go:150] Scaling statefulset ss to 0
  I0513 19:55:18.224079 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0513 19:55:18.227569 19 rest.go:88] Deleting statefulset ss
  I0513 19:55:18.246494 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-767" for this suite. @ 05/13/24 19:55:18.251
• [71.900 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1497
  STEP: Creating a kubernetes client @ 05/13/24 19:55:18.274
  I0513 19:55:18.274659 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename services @ 05/13/24 19:55:18.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:55:18.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:55:18.324
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-4415 @ 05/13/24 19:55:18.329
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 05/13/24 19:55:18.356
  STEP: creating service externalsvc in namespace services-4415 @ 05/13/24 19:55:18.356
  STEP: creating replication controller externalsvc in namespace services-4415 @ 05/13/24 19:55:18.434
  I0513 19:55:18.462458      19 runners.go:198] Created replication controller with name: externalsvc, namespace: services-4415, replica count: 2
  I0513 19:55:21.512876      19 runners.go:198] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 05/13/24 19:55:21.517
  I0513 19:55:21.545927 19 resource.go:361] Creating new exec pod
  I0513 19:55:23.737248 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-4415 exec execpodbhnxm -- /bin/sh -x -c nslookup clusterip-service.services-4415.svc.cluster.local'
  I0513 19:55:23.925832 19 builder.go:146] stderr: "+ nslookup clusterip-service.services-4415.svc.cluster.local\n"
  I0513 19:55:23.925901 19 builder.go:147] stdout: "Server:\t\t10.43.0.10\nAddress:\t10.43.0.10#53\n\nclusterip-service.services-4415.svc.cluster.local\tcanonical name = externalsvc.services-4415.svc.cluster.local.\nName:\texternalsvc.services-4415.svc.cluster.local\nAddress: 10.43.58.194\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-4415, will wait for the garbage collector to delete the pods @ 05/13/24 19:55:23.926
  I0513 19:55:24.002636 19 resources.go:139] Deleting ReplicationController externalsvc took: 16.686042ms
  I0513 19:55:24.103235 19 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.568655ms
  I0513 19:55:27.458641 19 service.go:1506] Cleaning up the ClusterIP to ExternalName test service
  I0513 19:55:27.484797 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4415" for this suite. @ 05/13/24 19:55:27.495
• [9.241 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 05/13/24 19:55:27.515
  I0513 19:55:27.515352 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename aggregateddiscovery @ 05/13/24 19:55:27.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:55:27.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:55:27.542
  I0513 19:55:27.546967 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 19:55:30.666901 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-2093" for this suite. @ 05/13/24 19:55:30.672
• [3.169 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 05/13/24 19:55:30.684
  I0513 19:55:30.684922 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename kubectl-logs @ 05/13/24 19:55:30.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:55:30.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:55:30.733
  STEP: creating an pod @ 05/13/24 19:55:30.737
  I0513 19:55:30.737994 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-logs-2160 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.47 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0513 19:55:30.855491 19 builder.go:146] stderr: ""
  I0513 19:55:30.855535 19 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 05/13/24 19:55:30.855
  I0513 19:55:30.855905 19 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I0513 19:55:32.884966 19 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 05/13/24 19:55:32.885
  I0513 19:55:32.885104 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-logs-2160 logs logs-generator logs-generator'
  I0513 19:55:33.035106 19 builder.go:146] stderr: ""
  I0513 19:55:33.035172 19 builder.go:147] stdout: "I0513 19:55:31.672864       1 logs_generator.go:76] 0 POST /api/v1/namespaces/default/pods/9ng 412\nI0513 19:55:31.873192       1 logs_generator.go:76] 1 POST /api/v1/namespaces/kube-system/pods/v2c 297\nI0513 19:55:32.073364       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/kube-system/pods/shh 278\nI0513 19:55:32.273728       1 logs_generator.go:76] 3 POST /api/v1/namespaces/default/pods/jfl 403\nI0513 19:55:32.472989       1 logs_generator.go:76] 4 GET /api/v1/namespaces/ns/pods/ljzq 514\nI0513 19:55:32.673257       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/default/pods/kd7 556\nI0513 19:55:32.873761       1 logs_generator.go:76] 6 GET /api/v1/namespaces/default/pods/j52 539\n"
  STEP: limiting log lines @ 05/13/24 19:55:33.035
  I0513 19:55:33.035300 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-logs-2160 logs logs-generator logs-generator --tail=1'
  I0513 19:55:33.162938 19 builder.go:146] stderr: ""
  I0513 19:55:33.162985 19 builder.go:147] stdout: "I0513 19:55:33.073609       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/vvbt 439\n"
  I0513 19:55:33.163004 19 logs.go:127] got output "I0513 19:55:33.073609       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/vvbt 439\n"
  STEP: limiting log bytes @ 05/13/24 19:55:33.163
  I0513 19:55:33.163102 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-logs-2160 logs logs-generator logs-generator --limit-bytes=1'
  I0513 19:55:33.284957 19 builder.go:146] stderr: ""
  I0513 19:55:33.285014 19 builder.go:147] stdout: "I"
  I0513 19:55:33.285032 19 logs.go:133] got output "I"
  STEP: exposing timestamps @ 05/13/24 19:55:33.285
  I0513 19:55:33.285158 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-logs-2160 logs logs-generator logs-generator --tail=1 --timestamps'
  I0513 19:55:33.379844 19 builder.go:146] stderr: ""
  I0513 19:55:33.379903 19 builder.go:147] stdout: "2024-05-13T19:55:33.273037252Z I0513 19:55:33.272920       1 logs_generator.go:76] 8 GET /api/v1/namespaces/default/pods/fwcj 357\n"
  I0513 19:55:33.379924 19 logs.go:139] got output "2024-05-13T19:55:33.273037252Z I0513 19:55:33.272920       1 logs_generator.go:76] 8 GET /api/v1/namespaces/default/pods/fwcj 357\n"
  STEP: restricting to a time range @ 05/13/24 19:55:33.379
  I0513 19:55:35.880179 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-logs-2160 logs logs-generator logs-generator --since=1s'
  I0513 19:55:35.970500 19 builder.go:146] stderr: ""
  I0513 19:55:35.970579 19 builder.go:147] stdout: "I0513 19:55:35.072996       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/kube-system/pods/8kgq 242\nI0513 19:55:35.273312       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/default/pods/qnl 366\nI0513 19:55:35.473750       1 logs_generator.go:76] 19 POST /api/v1/namespaces/default/pods/wnw 422\nI0513 19:55:35.673014       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/default/pods/vt4 373\nI0513 19:55:35.873182       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/ns/pods/bn2 483\n"
  I0513 19:55:35.970643 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-logs-2160 logs logs-generator logs-generator --since=24h'
  I0513 19:55:36.086663 19 builder.go:146] stderr: ""
  I0513 19:55:36.086985 19 builder.go:147] stdout: "I0513 19:55:31.672864       1 logs_generator.go:76] 0 POST /api/v1/namespaces/default/pods/9ng 412\nI0513 19:55:31.873192       1 logs_generator.go:76] 1 POST /api/v1/namespaces/kube-system/pods/v2c 297\nI0513 19:55:32.073364       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/kube-system/pods/shh 278\nI0513 19:55:32.273728       1 logs_generator.go:76] 3 POST /api/v1/namespaces/default/pods/jfl 403\nI0513 19:55:32.472989       1 logs_generator.go:76] 4 GET /api/v1/namespaces/ns/pods/ljzq 514\nI0513 19:55:32.673257       1 logs_generator.go:76] 5 PUT /api/v1/namespaces/default/pods/kd7 556\nI0513 19:55:32.873761       1 logs_generator.go:76] 6 GET /api/v1/namespaces/default/pods/j52 539\nI0513 19:55:33.073609       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/kube-system/pods/vvbt 439\nI0513 19:55:33.272920       1 logs_generator.go:76] 8 GET /api/v1/namespaces/default/pods/fwcj 357\nI0513 19:55:33.473194       1 logs_generator.go:76] 9 GET /api/v1/namespaces/kube-system/pods/j7mt 374\nI0513 19:55:33.673513       1 logs_generator.go:76] 10 POST /api/v1/namespaces/kube-system/pods/pt78 226\nI0513 19:55:33.873899       1 logs_generator.go:76] 11 GET /api/v1/namespaces/kube-system/pods/svgf 323\nI0513 19:55:34.073191       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/kube-system/pods/mls 290\nI0513 19:55:34.273583       1 logs_generator.go:76] 13 GET /api/v1/namespaces/ns/pods/kzct 412\nI0513 19:55:34.472860       1 logs_generator.go:76] 14 GET /api/v1/namespaces/ns/pods/5sr 505\nI0513 19:55:34.673248       1 logs_generator.go:76] 15 POST /api/v1/namespaces/ns/pods/2pxn 557\nI0513 19:55:34.873688       1 logs_generator.go:76] 16 POST /api/v1/namespaces/kube-system/pods/wwn9 354\nI0513 19:55:35.072996       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/kube-system/pods/8kgq 242\nI0513 19:55:35.273312       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/default/pods/qnl 366\nI0513 19:55:35.473750       1 logs_generator.go:76] 19 POST /api/v1/namespaces/default/pods/wnw 422\nI0513 19:55:35.673014       1 logs_generator.go:76] 20 PUT /api/v1/namespaces/default/pods/vt4 373\nI0513 19:55:35.873182       1 logs_generator.go:76] 21 PUT /api/v1/namespaces/ns/pods/bn2 483\nI0513 19:55:36.073486       1 logs_generator.go:76] 22 GET /api/v1/namespaces/ns/pods/qzk 370\n"
  I0513 19:55:36.087150 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-logs-2160 delete pod logs-generator'
  I0513 19:55:37.348722 19 builder.go:146] stderr: ""
  I0513 19:55:37.348795 19 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0513 19:55:37.348911 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-2160" for this suite. @ 05/13/24 19:55:37.357
• [6.699 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 05/13/24 19:55:37.384
  I0513 19:55:37.384228 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename pod-network-test @ 05/13/24 19:55:37.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:55:37.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:55:37.421
  STEP: Performing setup for networking test in namespace pod-network-test-6192 @ 05/13/24 19:55:37.425
  STEP: creating a selector @ 05/13/24 19:55:37.425
  STEP: Creating the service pods in kubernetes @ 05/13/24 19:55:37.425
  I0513 19:55:37.425326 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 05/13/24 19:55:59.647
  I0513 19:56:01.672584 19 utils.go:779] Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  I0513 19:56:01.672636 19 networking.go:42] Breadth first check of 10.42.3.115 on host 172.31.0.253...
  I0513 19:56:01.677681 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.2.208:9080/dial?request=hostname&protocol=udp&host=10.42.3.115&port=8081&tries=1'] Namespace:pod-network-test-6192 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 19:56:01.677729 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 19:56:01.678562 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 19:56:01.678662 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-6192/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.2.208%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.3.115%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0513 19:56:01.737689 19 utils.go:331] Waiting for responses: map[]
  I0513 19:56:01.737991 19 utils.go:335] reached 10.42.3.115 after 0/1 tries
  I0513 19:56:01.738133 19 networking.go:42] Breadth first check of 10.42.2.207 on host 172.31.11.14...
  I0513 19:56:01.742221 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.2.208:9080/dial?request=hostname&protocol=udp&host=10.42.2.207&port=8081&tries=1'] Namespace:pod-network-test-6192 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 19:56:01.742263 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 19:56:01.743040 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 19:56:01.743125 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-6192/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.2.208%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.2.207%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0513 19:56:01.802529 19 utils.go:331] Waiting for responses: map[]
  I0513 19:56:01.802748 19 utils.go:335] reached 10.42.2.207 after 0/1 tries
  I0513 19:56:01.802916 19 networking.go:42] Breadth first check of 10.42.0.50 on host 172.31.14.0...
  I0513 19:56:01.807311 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.2.208:9080/dial?request=hostname&protocol=udp&host=10.42.0.50&port=8081&tries=1'] Namespace:pod-network-test-6192 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 19:56:01.807390 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 19:56:01.808150 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 19:56:01.808233 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-6192/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.2.208%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.0.50%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0513 19:56:01.862911 19 utils.go:331] Waiting for responses: map[]
  I0513 19:56:01.863263 19 utils.go:335] reached 10.42.0.50 after 0/1 tries
  I0513 19:56:01.863568 19 networking.go:42] Breadth first check of 10.42.1.81 on host 172.31.3.33...
  I0513 19:56:01.867627 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.2.208:9080/dial?request=hostname&protocol=udp&host=10.42.1.81&port=8081&tries=1'] Namespace:pod-network-test-6192 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 19:56:01.867678 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 19:56:01.868369 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 19:56:01.868448 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-6192/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.2.208%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.1.81%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0513 19:56:01.920702 19 utils.go:331] Waiting for responses: map[]
  I0513 19:56:01.920997 19 utils.go:335] reached 10.42.1.81 after 0/1 tries
  I0513 19:56:01.921414 19 networking.go:53] Going to retry 0 out of 4 pods....
  I0513 19:56:01.921958 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6192" for this suite. @ 05/13/24 19:56:01.928
• [24.557 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 05/13/24 19:56:01.942
  I0513 19:56:01.942794 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename secrets @ 05/13/24 19:56:01.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:56:01.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:56:01.998
  STEP: creating secret secrets-8238/secret-test-ec094f8d-b6da-45b0-b2e8-91223d6f7c44 @ 05/13/24 19:56:02.003
  STEP: Creating a pod to test consume secrets @ 05/13/24 19:56:02.017
  STEP: Saw pod success @ 05/13/24 19:56:06.047
  I0513 19:56:06.052444 19 output.go:196] Trying to get logs from node ip-172-31-0-253.us-east-2.compute.internal pod pod-configmaps-a7473345-e37d-4609-b6cc-553513d8ca0b container env-test: <nil>
  STEP: delete the pod @ 05/13/24 19:56:06.078
  I0513 19:56:06.121271 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8238" for this suite. @ 05/13/24 19:56:06.126
• [4.205 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 05/13/24 19:56:06.148
  I0513 19:56:06.148539 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename gc @ 05/13/24 19:56:06.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:56:06.213
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:56:06.218
  I0513 19:56:06.349462 19 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"a98b612f-3a9a-407a-b440-43d356f4f164", Controller:(*bool)(0xc00687e7b6), BlockOwnerDeletion:(*bool)(0xc00687e7b7)}}
  I0513 19:56:06.382227 19 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"7780a229-5998-415e-a675-dae6495fff06", Controller:(*bool)(0xc00355142e), BlockOwnerDeletion:(*bool)(0xc00355142f)}}
  I0513 19:56:06.415731 19 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"b4289063-f859-4cef-9d07-b31236cab4c9", Controller:(*bool)(0xc0035518fa), BlockOwnerDeletion:(*bool)(0xc0035518fb)}}
  I0513 19:56:11.453914 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7797" for this suite. @ 05/13/24 19:56:11.458
• [5.322 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 05/13/24 19:56:11.471
  I0513 19:56:11.471134 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename webhook @ 05/13/24 19:56:11.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:56:11.57
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:56:11.573
  STEP: Setting up server cert @ 05/13/24 19:56:11.647
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/13/24 19:56:12.223
  STEP: Deploying the webhook pod @ 05/13/24 19:56:12.237
  STEP: Wait for the deployment to be ready @ 05/13/24 19:56:12.283
  I0513 19:56:12.323804 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/13/24 19:56:14.345
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 19:56:14.375
  I0513 19:56:15.376937 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 05/13/24 19:56:15.385
  STEP: create a pod that should be denied by the webhook @ 05/13/24 19:56:15.421
  STEP: create a pod that causes the webhook to hang @ 05/13/24 19:56:15.44
  STEP: create a configmap that should be denied by the webhook @ 05/13/24 19:56:25.448
  STEP: create a configmap that should be admitted by the webhook @ 05/13/24 19:56:25.461
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 05/13/24 19:56:25.478
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 05/13/24 19:56:25.487
  STEP: create a namespace that bypass the webhook @ 05/13/24 19:56:25.492
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 05/13/24 19:56:25.579
  I0513 19:56:25.753015 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6889" for this suite. @ 05/13/24 19:56:25.768
  STEP: Destroying namespace "webhook-markers-2902" for this suite. @ 05/13/24 19:56:25.779
  STEP: Destroying namespace "exempted-namespace-4270" for this suite. @ 05/13/24 19:56:25.792
• [14.333 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 05/13/24 19:56:25.804
  I0513 19:56:25.804354 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename gc @ 05/13/24 19:56:25.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:56:25.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:56:25.996
  STEP: create the rc @ 05/13/24 19:56:26.005
  W0513 19:56:26.016199      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 05/13/24 19:56:32.077
  STEP: wait for the rc to be deleted @ 05/13/24 19:56:32.277
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 05/13/24 19:56:37.281
  STEP: Gathering metrics @ 05/13/24 19:57:07.304
  W0513 19:57:07.311118      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0513 19:57:07.311188 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0513 19:57:07.311791 19 delete.go:95] Deleting pod "simpletest.rc-24gzq" in namespace "gc-4461"
  I0513 19:57:07.355771 19 delete.go:95] Deleting pod "simpletest.rc-27qjw" in namespace "gc-4461"
  I0513 19:57:07.407428 19 delete.go:95] Deleting pod "simpletest.rc-2mf9w" in namespace "gc-4461"
  I0513 19:57:07.436628 19 delete.go:95] Deleting pod "simpletest.rc-4cqs6" in namespace "gc-4461"
  I0513 19:57:07.544908 19 delete.go:95] Deleting pod "simpletest.rc-4ng7t" in namespace "gc-4461"
  I0513 19:57:07.591587 19 delete.go:95] Deleting pod "simpletest.rc-5cn8g" in namespace "gc-4461"
  I0513 19:57:07.679087 19 delete.go:95] Deleting pod "simpletest.rc-5sgns" in namespace "gc-4461"
  I0513 19:57:07.784161 19 delete.go:95] Deleting pod "simpletest.rc-5tr4v" in namespace "gc-4461"
  I0513 19:57:07.840096 19 delete.go:95] Deleting pod "simpletest.rc-65czx" in namespace "gc-4461"
  I0513 19:57:07.891189 19 delete.go:95] Deleting pod "simpletest.rc-65nz2" in namespace "gc-4461"
  I0513 19:57:07.947694 19 delete.go:95] Deleting pod "simpletest.rc-669r8" in namespace "gc-4461"
  I0513 19:57:07.995101 19 delete.go:95] Deleting pod "simpletest.rc-68mz2" in namespace "gc-4461"
  I0513 19:57:08.058060 19 delete.go:95] Deleting pod "simpletest.rc-6bfdp" in namespace "gc-4461"
  I0513 19:57:08.138045 19 delete.go:95] Deleting pod "simpletest.rc-6lcb5" in namespace "gc-4461"
  I0513 19:57:08.208983 19 delete.go:95] Deleting pod "simpletest.rc-6ww59" in namespace "gc-4461"
  I0513 19:57:08.311319 19 delete.go:95] Deleting pod "simpletest.rc-7487l" in namespace "gc-4461"
  I0513 19:57:08.420368 19 delete.go:95] Deleting pod "simpletest.rc-77kz8" in namespace "gc-4461"
  I0513 19:57:08.548865 19 delete.go:95] Deleting pod "simpletest.rc-7b7fb" in namespace "gc-4461"
  I0513 19:57:08.588175 19 delete.go:95] Deleting pod "simpletest.rc-7nqks" in namespace "gc-4461"
  I0513 19:57:08.635132 19 delete.go:95] Deleting pod "simpletest.rc-84cps" in namespace "gc-4461"
  I0513 19:57:08.670529 19 delete.go:95] Deleting pod "simpletest.rc-87s6d" in namespace "gc-4461"
  I0513 19:57:09.162191 19 delete.go:95] Deleting pod "simpletest.rc-8hj7l" in namespace "gc-4461"
  I0513 19:57:09.298706 19 delete.go:95] Deleting pod "simpletest.rc-8jqzz" in namespace "gc-4461"
  I0513 19:57:09.383647 19 delete.go:95] Deleting pod "simpletest.rc-8ptxz" in namespace "gc-4461"
  I0513 19:57:09.438123 19 delete.go:95] Deleting pod "simpletest.rc-926wm" in namespace "gc-4461"
  I0513 19:57:09.487274 19 delete.go:95] Deleting pod "simpletest.rc-9gsrq" in namespace "gc-4461"
  I0513 19:57:09.525394 19 delete.go:95] Deleting pod "simpletest.rc-9q88t" in namespace "gc-4461"
  I0513 19:57:09.569904 19 delete.go:95] Deleting pod "simpletest.rc-9shx4" in namespace "gc-4461"
  I0513 19:57:09.637641 19 delete.go:95] Deleting pod "simpletest.rc-9tmhg" in namespace "gc-4461"
  I0513 19:57:09.728527 19 delete.go:95] Deleting pod "simpletest.rc-9z5fc" in namespace "gc-4461"
  I0513 19:57:09.818423 19 delete.go:95] Deleting pod "simpletest.rc-b28ft" in namespace "gc-4461"
  I0513 19:57:09.878353 19 delete.go:95] Deleting pod "simpletest.rc-d6wcd" in namespace "gc-4461"
  I0513 19:57:09.918053 19 delete.go:95] Deleting pod "simpletest.rc-d7ckc" in namespace "gc-4461"
  I0513 19:57:09.995624 19 delete.go:95] Deleting pod "simpletest.rc-dlgnq" in namespace "gc-4461"
  I0513 19:57:10.060026 19 delete.go:95] Deleting pod "simpletest.rc-dqcgw" in namespace "gc-4461"
  I0513 19:57:10.200073 19 delete.go:95] Deleting pod "simpletest.rc-dqks5" in namespace "gc-4461"
  I0513 19:57:10.259609 19 delete.go:95] Deleting pod "simpletest.rc-ds4dt" in namespace "gc-4461"
  I0513 19:57:10.360360 19 delete.go:95] Deleting pod "simpletest.rc-f6n8w" in namespace "gc-4461"
  I0513 19:57:10.452109 19 delete.go:95] Deleting pod "simpletest.rc-f6vps" in namespace "gc-4461"
  I0513 19:57:10.556869 19 delete.go:95] Deleting pod "simpletest.rc-fkf28" in namespace "gc-4461"
  I0513 19:57:10.635107 19 delete.go:95] Deleting pod "simpletest.rc-fs2lg" in namespace "gc-4461"
  I0513 19:57:10.698759 19 delete.go:95] Deleting pod "simpletest.rc-fv8x6" in namespace "gc-4461"
  I0513 19:57:10.840719 19 delete.go:95] Deleting pod "simpletest.rc-fwt8h" in namespace "gc-4461"
  I0513 19:57:10.983938 19 delete.go:95] Deleting pod "simpletest.rc-g928s" in namespace "gc-4461"
  I0513 19:57:11.038353 19 delete.go:95] Deleting pod "simpletest.rc-gkqpz" in namespace "gc-4461"
  I0513 19:57:11.084962 19 delete.go:95] Deleting pod "simpletest.rc-gs8f2" in namespace "gc-4461"
  I0513 19:57:11.160973 19 delete.go:95] Deleting pod "simpletest.rc-h46mk" in namespace "gc-4461"
  I0513 19:57:11.243037 19 delete.go:95] Deleting pod "simpletest.rc-h6dmf" in namespace "gc-4461"
  I0513 19:57:11.335442 19 delete.go:95] Deleting pod "simpletest.rc-hdqb2" in namespace "gc-4461"
  I0513 19:57:11.389718 19 delete.go:95] Deleting pod "simpletest.rc-hf9dg" in namespace "gc-4461"
  I0513 19:57:11.462360 19 delete.go:95] Deleting pod "simpletest.rc-hstmm" in namespace "gc-4461"
  I0513 19:57:11.552961 19 delete.go:95] Deleting pod "simpletest.rc-hzfcx" in namespace "gc-4461"
  I0513 19:57:11.616315 19 delete.go:95] Deleting pod "simpletest.rc-j9qlm" in namespace "gc-4461"
  I0513 19:57:11.698873 19 delete.go:95] Deleting pod "simpletest.rc-jgrx2" in namespace "gc-4461"
  I0513 19:57:11.759344 19 delete.go:95] Deleting pod "simpletest.rc-jj5ph" in namespace "gc-4461"
  I0513 19:57:11.828334 19 delete.go:95] Deleting pod "simpletest.rc-jnblv" in namespace "gc-4461"
  I0513 19:57:11.931222 19 delete.go:95] Deleting pod "simpletest.rc-jsp88" in namespace "gc-4461"
  I0513 19:57:11.989199 19 delete.go:95] Deleting pod "simpletest.rc-k75tg" in namespace "gc-4461"
  I0513 19:57:12.071554 19 delete.go:95] Deleting pod "simpletest.rc-kmtx4" in namespace "gc-4461"
  I0513 19:57:12.205311 19 delete.go:95] Deleting pod "simpletest.rc-kxngg" in namespace "gc-4461"
  I0513 19:57:12.288402 19 delete.go:95] Deleting pod "simpletest.rc-kz5gc" in namespace "gc-4461"
  I0513 19:57:12.476015 19 delete.go:95] Deleting pod "simpletest.rc-lhj94" in namespace "gc-4461"
  I0513 19:57:12.659543 19 delete.go:95] Deleting pod "simpletest.rc-lsbnn" in namespace "gc-4461"
  I0513 19:57:12.732086 19 delete.go:95] Deleting pod "simpletest.rc-n5zd6" in namespace "gc-4461"
  I0513 19:57:12.821760 19 delete.go:95] Deleting pod "simpletest.rc-nl7x2" in namespace "gc-4461"
  I0513 19:57:12.884026 19 delete.go:95] Deleting pod "simpletest.rc-nlhkh" in namespace "gc-4461"
  I0513 19:57:12.954134 19 delete.go:95] Deleting pod "simpletest.rc-nlltd" in namespace "gc-4461"
  I0513 19:57:13.014975 19 delete.go:95] Deleting pod "simpletest.rc-nsbdj" in namespace "gc-4461"
  I0513 19:57:13.148502 19 delete.go:95] Deleting pod "simpletest.rc-nztlq" in namespace "gc-4461"
  I0513 19:57:13.217199 19 delete.go:95] Deleting pod "simpletest.rc-pg582" in namespace "gc-4461"
  I0513 19:57:13.331848 19 delete.go:95] Deleting pod "simpletest.rc-pg6k9" in namespace "gc-4461"
  I0513 19:57:13.438600 19 delete.go:95] Deleting pod "simpletest.rc-pm497" in namespace "gc-4461"
  I0513 19:57:13.484966 19 delete.go:95] Deleting pod "simpletest.rc-pzpwm" in namespace "gc-4461"
  I0513 19:57:13.559028 19 delete.go:95] Deleting pod "simpletest.rc-qhh7n" in namespace "gc-4461"
  I0513 19:57:13.596563 19 delete.go:95] Deleting pod "simpletest.rc-qr8p6" in namespace "gc-4461"
  I0513 19:57:13.678264 19 delete.go:95] Deleting pod "simpletest.rc-qrctx" in namespace "gc-4461"
  I0513 19:57:13.796348 19 delete.go:95] Deleting pod "simpletest.rc-qrf4h" in namespace "gc-4461"
  I0513 19:57:13.876442 19 delete.go:95] Deleting pod "simpletest.rc-rjq74" in namespace "gc-4461"
  I0513 19:57:13.925586 19 delete.go:95] Deleting pod "simpletest.rc-rjzzj" in namespace "gc-4461"
  I0513 19:57:14.004201 19 delete.go:95] Deleting pod "simpletest.rc-rkfj4" in namespace "gc-4461"
  I0513 19:57:14.042099 19 delete.go:95] Deleting pod "simpletest.rc-rmnjq" in namespace "gc-4461"
  I0513 19:57:14.150121 19 delete.go:95] Deleting pod "simpletest.rc-sfvt6" in namespace "gc-4461"
  I0513 19:57:14.767492 19 delete.go:95] Deleting pod "simpletest.rc-sj5v2" in namespace "gc-4461"
  I0513 19:57:14.809813 19 delete.go:95] Deleting pod "simpletest.rc-t725s" in namespace "gc-4461"
  I0513 19:57:14.893806 19 delete.go:95] Deleting pod "simpletest.rc-tvznc" in namespace "gc-4461"
  I0513 19:57:14.960460 19 delete.go:95] Deleting pod "simpletest.rc-vcggv" in namespace "gc-4461"
  I0513 19:57:15.030113 19 delete.go:95] Deleting pod "simpletest.rc-vddb9" in namespace "gc-4461"
  I0513 19:57:15.129225 19 delete.go:95] Deleting pod "simpletest.rc-wbx2g" in namespace "gc-4461"
  I0513 19:57:15.234826 19 delete.go:95] Deleting pod "simpletest.rc-whpwg" in namespace "gc-4461"
  I0513 19:57:15.329929 19 delete.go:95] Deleting pod "simpletest.rc-wtgkq" in namespace "gc-4461"
  I0513 19:57:15.424048 19 delete.go:95] Deleting pod "simpletest.rc-wxbpg" in namespace "gc-4461"
  I0513 19:57:15.479031 19 delete.go:95] Deleting pod "simpletest.rc-x75xg" in namespace "gc-4461"
  I0513 19:57:15.543988 19 delete.go:95] Deleting pod "simpletest.rc-x7hdj" in namespace "gc-4461"
  I0513 19:57:15.645686 19 delete.go:95] Deleting pod "simpletest.rc-xbwbm" in namespace "gc-4461"
  I0513 19:57:15.710914 19 delete.go:95] Deleting pod "simpletest.rc-xflsp" in namespace "gc-4461"
  I0513 19:57:15.780873 19 delete.go:95] Deleting pod "simpletest.rc-xrzsn" in namespace "gc-4461"
  I0513 19:57:15.863271 19 delete.go:95] Deleting pod "simpletest.rc-z629z" in namespace "gc-4461"
  I0513 19:57:15.953979 19 delete.go:95] Deleting pod "simpletest.rc-zf5x7" in namespace "gc-4461"
  I0513 19:57:16.040074 19 delete.go:95] Deleting pod "simpletest.rc-zfh7h" in namespace "gc-4461"
  I0513 19:57:16.163461 19 delete.go:95] Deleting pod "simpletest.rc-zst6v" in namespace "gc-4461"
  I0513 19:57:16.278998 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4461" for this suite. @ 05/13/24 19:57:16.288
• [50.576 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 05/13/24 19:57:16.381
  I0513 19:57:16.382069 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename subpath @ 05/13/24 19:57:16.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:57:16.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:57:16.605
  STEP: Setting up data @ 05/13/24 19:57:16.64
  STEP: Creating pod pod-subpath-test-projected-t7p9 @ 05/13/24 19:57:16.717
  STEP: Creating a pod to test atomic-volume-subpath @ 05/13/24 19:57:16.717
  STEP: Saw pod success @ 05/13/24 19:57:40.958
  I0513 19:57:40.963088 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod pod-subpath-test-projected-t7p9 container test-container-subpath-projected-t7p9: <nil>
  STEP: delete the pod @ 05/13/24 19:57:40.986
  STEP: Deleting pod pod-subpath-test-projected-t7p9 @ 05/13/24 19:57:41.018
  I0513 19:57:41.019031 19 delete.go:62] Deleting pod "pod-subpath-test-projected-t7p9" in namespace "subpath-2934"
  I0513 19:57:41.022741 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2934" for this suite. @ 05/13/24 19:57:41.027
• [24.662 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:469
  STEP: Creating a kubernetes client @ 05/13/24 19:57:41.047
  I0513 19:57:41.047462 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename sched-pred @ 05/13/24 19:57:41.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:57:41.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:57:41.088
  I0513 19:57:41.091556 19 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0513 19:57:41.100888 19 util.go:400] Waiting for terminating namespaces to be deleted...
  I0513 19:57:41.104274 19 predicates.go:121] 
  Logging pods the apiserver thinks is on node ip-172-31-0-253.us-east-2.compute.internal before test
  I0513 19:57:41.110542 19 predicates.go:887] svclb-traefik-d628025f-mwl96 from kube-system started at 2024-05-13 16:12:42 +0000 UTC (2 container statuses recorded)
  I0513 19:57:41.110730 19 predicates.go:889] 	Container lb-tcp-443 ready: true, restart count 0
  I0513 19:57:41.110822 19 predicates.go:889] 	Container lb-tcp-80 ready: true, restart count 0
  I0513 19:57:41.110942 19 predicates.go:887] sonobuoy from sonobuoy started at 2024-05-13 18:46:47 +0000 UTC (1 container statuses recorded)
  I0513 19:57:41.111029 19 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I0513 19:57:41.111118 19 predicates.go:887] sonobuoy-systemd-logs-daemon-set-241ff89d670448bb-z7g5j from sonobuoy started at 2024-05-13 18:46:51 +0000 UTC (2 container statuses recorded)
  I0513 19:57:41.111221 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0513 19:57:41.111316 19 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0513 19:57:41.111390 19 predicates.go:121] 
  Logging pods the apiserver thinks is on node ip-172-31-11-14.us-east-2.compute.internal before test
  I0513 19:57:41.116779 19 predicates.go:887] svclb-traefik-d628025f-kvhqn from kube-system started at 2024-05-13 18:51:52 +0000 UTC (2 container statuses recorded)
  I0513 19:57:41.116826 19 predicates.go:889] 	Container lb-tcp-443 ready: true, restart count 0
  I0513 19:57:41.116841 19 predicates.go:889] 	Container lb-tcp-80 ready: true, restart count 0
  I0513 19:57:41.116895 19 predicates.go:887] sonobuoy-systemd-logs-daemon-set-241ff89d670448bb-5w7td from sonobuoy started at 2024-05-13 18:46:51 +0000 UTC (2 container statuses recorded)
  I0513 19:57:41.117828 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0513 19:57:41.117999 19 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0513 19:57:41.118142 19 predicates.go:121] 
  Logging pods the apiserver thinks is on node ip-172-31-14-0.us-east-2.compute.internal before test
  I0513 19:57:41.132598 19 predicates.go:887] coredns-576bfc4dc7-jw24t from kube-system started at 2024-05-13 16:06:09 +0000 UTC (1 container statuses recorded)
  I0513 19:57:41.132835 19 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0513 19:57:41.133012 19 predicates.go:887] helm-install-traefik-crd-chqrn from kube-system started at 2024-05-13 16:06:09 +0000 UTC (1 container statuses recorded)
  I0513 19:57:41.133450 19 predicates.go:889] 	Container helm ready: false, restart count 0
  I0513 19:57:41.133614 19 predicates.go:887] helm-install-traefik-rwkmw from kube-system started at 2024-05-13 16:06:09 +0000 UTC (1 container statuses recorded)
  I0513 19:57:41.133796 19 predicates.go:889] 	Container helm ready: false, restart count 1
  I0513 19:57:41.133966 19 predicates.go:887] local-path-provisioner-75bb9ff978-29v65 from kube-system started at 2024-05-13 16:06:09 +0000 UTC (1 container statuses recorded)
  I0513 19:57:41.134163 19 predicates.go:889] 	Container local-path-provisioner ready: true, restart count 0
  I0513 19:57:41.134346 19 predicates.go:887] metrics-server-557ff575fb-jb8fw from kube-system started at 2024-05-13 16:06:09 +0000 UTC (1 container statuses recorded)
  I0513 19:57:41.134494 19 predicates.go:889] 	Container metrics-server ready: true, restart count 0
  I0513 19:57:41.134676 19 predicates.go:887] svclb-traefik-d628025f-7wqzj from kube-system started at 2024-05-13 16:06:25 +0000 UTC (2 container statuses recorded)
  I0513 19:57:41.134819 19 predicates.go:889] 	Container lb-tcp-443 ready: true, restart count 0
  I0513 19:57:41.135046 19 predicates.go:889] 	Container lb-tcp-80 ready: true, restart count 0
  I0513 19:57:41.135228 19 predicates.go:887] traefik-5fb479b77-7tbnm from kube-system started at 2024-05-13 16:06:24 +0000 UTC (1 container statuses recorded)
  I0513 19:57:41.135389 19 predicates.go:889] 	Container traefik ready: true, restart count 0
  I0513 19:57:41.135568 19 predicates.go:887] sonobuoy-systemd-logs-daemon-set-241ff89d670448bb-n9qjz from sonobuoy started at 2024-05-13 18:46:51 +0000 UTC (2 container statuses recorded)
  I0513 19:57:41.135757 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0513 19:57:41.135922 19 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0513 19:57:41.136073 19 predicates.go:121] 
  Logging pods the apiserver thinks is on node ip-172-31-3-33.us-east-2.compute.internal before test
  I0513 19:57:41.141902 19 predicates.go:887] svclb-traefik-d628025f-zktzm from kube-system started at 2024-05-13 16:09:19 +0000 UTC (2 container statuses recorded)
  I0513 19:57:41.142128 19 predicates.go:889] 	Container lb-tcp-443 ready: true, restart count 0
  I0513 19:57:41.142251 19 predicates.go:889] 	Container lb-tcp-80 ready: true, restart count 0
  I0513 19:57:41.142272 19 predicates.go:887] sonobuoy-e2e-job-badb71ff08654e5b from sonobuoy started at 2024-05-13 18:46:51 +0000 UTC (2 container statuses recorded)
  I0513 19:57:41.142285 19 predicates.go:889] 	Container e2e ready: true, restart count 0
  I0513 19:57:41.142299 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0513 19:57:41.142333 19 predicates.go:887] sonobuoy-systemd-logs-daemon-set-241ff89d670448bb-lrdx4 from sonobuoy started at 2024-05-13 18:46:51 +0000 UTC (2 container statuses recorded)
  I0513 19:57:41.142346 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0513 19:57:41.142358 19 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/13/24 19:57:41.142
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/13/24 19:57:43.171
  STEP: Trying to apply a random label on the found node. @ 05/13/24 19:57:43.204
  STEP: verifying the node has the label kubernetes.io/e2e-d3a44b8d-0894-4548-b829-6c978581bbc9 42 @ 05/13/24 19:57:43.239
  STEP: Trying to relaunch the pod, now with labels. @ 05/13/24 19:57:43.262
  STEP: removing the label kubernetes.io/e2e-d3a44b8d-0894-4548-b829-6c978581bbc9 off the node ip-172-31-11-14.us-east-2.compute.internal @ 05/13/24 19:57:45.289
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-d3a44b8d-0894-4548-b829-6c978581bbc9 @ 05/13/24 19:57:45.314
  I0513 19:57:45.318377 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4064" for this suite. @ 05/13/24 19:57:45.323
• [4.291 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 05/13/24 19:57:45.339
  I0513 19:57:45.339274 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename podtemplate @ 05/13/24 19:57:45.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:57:45.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:57:45.399
  I0513 19:57:45.451968 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-8876" for this suite. @ 05/13/24 19:57:45.465
• [0.290 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 05/13/24 19:57:45.63
  I0513 19:57:45.630297 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename deployment @ 05/13/24 19:57:45.631
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:57:45.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:57:45.704
  I0513 19:57:45.715433 19 deployment.go:792] Creating deployment "test-recreate-deployment"
  I0513 19:57:45.727960 19 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0513 19:57:45.742239 19 deployment.go:222] deployment "test-recreate-deployment" doesn't have the required revision set
  I0513 19:57:47.752102 19 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I0513 19:57:47.755036 19 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I0513 19:57:47.780301 19 deployment.go:313] Updating deployment test-recreate-deployment
  I0513 19:57:47.780358 19 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0513 19:57:48.064996 19 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9345",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2cb0e002-751f-4378-a8e7-df3544a6a6fc",
      ResourceVersion: (string) (len=5) "67859",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227065,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227067,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227068,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227068,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227068,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227068,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227065,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-66b65d9f8f\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0513 19:57:48.074965 19 deployment.go:39] New ReplicaSet "test-recreate-deployment-66b65d9f8f" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-66b65d9f8f",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9345",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "be0f7679-afcc-4f45-b4f4-209a3fd03cce",
      ResourceVersion: (string) (len=5) "67856",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227067,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "2cb0e002-751f-4378-a8e7-df3544a6a6fc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227067,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 63 62 30 65 30  30 32 2d 37 35 31 66 2d  |\"2cb0e002-751f-|
              00000120  34 33 37 38 2d 61 38 65  37 2d 64 66 33 35 34 34  |4378-a8e7-df3544|
              00000130  61 36 61 36 66 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a6a6fc\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227068,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0513 19:57:48.076310 19 deployment.go:44] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0513 19:57:48.076608 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-6b6d9cd7b6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9345",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "afba45eb-aa34-4a89-b18a-1ec8a0e9887e",
      ResourceVersion: (string) (len=5) "67846",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227065,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6b6d9cd7b6",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "2cb0e002-751f-4378-a8e7-df3544a6a6fc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227067,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 32 63 62 30 65 30  30 32 2d 37 35 31 66 2d  |\"2cb0e002-751f-|
              00000120  34 33 37 38 2d 61 38 65  37 2d 64 66 33 35 34 34  |4378-a8e7-df3544|
              00000130  61 36 61 36 66 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a6a6fc\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227067,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6b6d9cd7b6"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6b6d9cd7b6"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0513 19:57:48.082050 19 deployment.go:67] Pod "test-recreate-deployment-66b65d9f8f-xsl6p" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-66b65d9f8f-xsl6p",
      GenerateName: (string) (len=36) "test-recreate-deployment-66b65d9f8f-",
      Namespace: (string) (len=15) "deployment-9345",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c7b454b9-78d7-4fcf-9c86-849cc794b450",
      ResourceVersion: (string) (len=5) "67858",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227067,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-66b65d9f8f",
          UID: (types.UID) (len=36) "be0f7679-afcc-4f45-b4f4-209a3fd03cce",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227067,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 65  30 66 37 36 37 39 2d 61  |d\":\"be0f7679-a|
              00000090  66 63 63 2d 34 66 34 35  2d 62 34 66 34 2d 32 30  |fcc-4f45-b4f4-20|
              000000a0  39 61 33 66 64 30 33 63  63 65 5c 22 7d 22 3a 7b  |9a3fd03cce\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227068,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dkdhp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dkdhp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-0-253.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227068,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227068,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227068,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227068,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227067,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.0.253",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.0.253"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227068,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 19:57:48.084780 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9345" for this suite. @ 05/13/24 19:57:48.09
• [2.472 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 05/13/24 19:57:48.102
  I0513 19:57:48.102490 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename gc @ 05/13/24 19:57:48.103
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:57:48.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:57:48.164
  STEP: create the rc1 @ 05/13/24 19:57:48.175
  STEP: create the rc2 @ 05/13/24 19:57:48.197
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 05/13/24 19:57:54.547
  STEP: delete the rc simpletest-rc-to-be-deleted @ 05/13/24 19:57:59.302
  STEP: wait for the rc to be deleted @ 05/13/24 19:57:59.54
  I0513 19:58:04.603761 19 garbage_collector.go:762] 68 pods remaining
  I0513 19:58:04.603842 19 garbage_collector.go:769] 68 pods has nil DeletionTimestamp
  I0513 19:58:04.603860 19 garbage_collector.go:770] 
  STEP: Gathering metrics @ 05/13/24 19:58:09.556
  W0513 19:58:09.561319      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0513 19:58:09.561373 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0513 19:58:09.563054 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2kx47" in namespace "gc-2480"
  I0513 19:58:09.611611 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2sczc" in namespace "gc-2480"
  I0513 19:58:09.653950 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4cscm" in namespace "gc-2480"
  I0513 19:58:09.682554 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4rrrq" in namespace "gc-2480"
  I0513 19:58:09.733998 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4wrr7" in namespace "gc-2480"
  I0513 19:58:09.779706 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-542jh" in namespace "gc-2480"
  I0513 19:58:09.838412 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5f9wz" in namespace "gc-2480"
  I0513 19:58:09.875092 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5ndfd" in namespace "gc-2480"
  I0513 19:58:09.920124 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5qkcl" in namespace "gc-2480"
  I0513 19:58:10.005894 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5sbvk" in namespace "gc-2480"
  I0513 19:58:10.083910 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5w8ht" in namespace "gc-2480"
  I0513 19:58:10.134985 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5wz5b" in namespace "gc-2480"
  I0513 19:58:10.204743 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5zm9q" in namespace "gc-2480"
  I0513 19:58:10.248714 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-67dzm" in namespace "gc-2480"
  I0513 19:58:10.358507 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6bj42" in namespace "gc-2480"
  I0513 19:58:10.473441 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6f9ph" in namespace "gc-2480"
  I0513 19:58:10.553276 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6jk44" in namespace "gc-2480"
  I0513 19:58:10.654012 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6tfhj" in namespace "gc-2480"
  I0513 19:58:10.731815 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-74bzt" in namespace "gc-2480"
  I0513 19:58:10.926895 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-76jbp" in namespace "gc-2480"
  I0513 19:58:11.100886 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7bkfp" in namespace "gc-2480"
  I0513 19:58:11.150577 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7jm7r" in namespace "gc-2480"
  I0513 19:58:11.263433 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-855pt" in namespace "gc-2480"
  I0513 19:58:11.382238 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-89w75" in namespace "gc-2480"
  I0513 19:58:11.449189 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8b6dq" in namespace "gc-2480"
  I0513 19:58:11.540223 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8g67f" in namespace "gc-2480"
  I0513 19:58:11.564248 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8pmrr" in namespace "gc-2480"
  I0513 19:58:11.650294 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9j89h" in namespace "gc-2480"
  I0513 19:58:11.779969 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9pvsj" in namespace "gc-2480"
  I0513 19:58:11.878658 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9zxzp" in namespace "gc-2480"
  I0513 19:58:11.994853 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b4d9q" in namespace "gc-2480"
  I0513 19:58:12.209852 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bvcwv" in namespace "gc-2480"
  I0513 19:58:12.292152 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c79dm" in namespace "gc-2480"
  I0513 19:58:12.361567 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cvn76" in namespace "gc-2480"
  I0513 19:58:12.403715 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dhnvm" in namespace "gc-2480"
  I0513 19:58:12.464884 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dnhwb" in namespace "gc-2480"
  I0513 19:58:12.539303 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dplcl" in namespace "gc-2480"
  I0513 19:58:12.635931 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-drgqv" in namespace "gc-2480"
  I0513 19:58:12.748399 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dsn5j" in namespace "gc-2480"
  I0513 19:58:12.835360 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f5xn5" in namespace "gc-2480"
  I0513 19:58:12.911952 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ffldx" in namespace "gc-2480"
  I0513 19:58:12.977724 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fk2tf" in namespace "gc-2480"
  I0513 19:58:13.108171 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fmk9t" in namespace "gc-2480"
  I0513 19:58:13.242986 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fz5zd" in namespace "gc-2480"
  I0513 19:58:13.364610 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g95l6" in namespace "gc-2480"
  I0513 19:58:13.490184 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gnxv2" in namespace "gc-2480"
  I0513 19:58:13.549529 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gpfdv" in namespace "gc-2480"
  I0513 19:58:13.649936 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-h7tqt" in namespace "gc-2480"
  I0513 19:58:13.747586 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hldcg" in namespace "gc-2480"
  I0513 19:58:14.105345 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hpbbl" in namespace "gc-2480"
  I0513 19:58:14.232486 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2480" for this suite. @ 05/13/24 19:58:14.314
• [26.269 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:697
  STEP: Creating a kubernetes client @ 05/13/24 19:58:14.374
  I0513 19:58:14.374717 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename job @ 05/13/24 19:58:14.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:58:14.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:58:14.66
  STEP: Creating a job @ 05/13/24 19:58:14.683
  STEP: Ensuring active pods == parallelism @ 05/13/24 19:58:14.783
  STEP: Orphaning one of the Job's Pods @ 05/13/24 19:58:16.787
  I0513 19:58:17.325778 19 pod_client.go:141] Successfully updated pod "adopt-release-f4txc"
  STEP: Checking that the Job readopts the Pod @ 05/13/24 19:58:17.325
  STEP: Removing the labels from the Job's Pod @ 05/13/24 19:58:19.346
  I0513 19:58:19.880507 19 pod_client.go:141] Successfully updated pod "adopt-release-f4txc"
  STEP: Checking that the Job releases the Pod @ 05/13/24 19:58:19.88
  I0513 19:58:21.888417 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7495" for this suite. @ 05/13/24 19:58:21.892
• [7.533 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 05/13/24 19:58:21.907
  I0513 19:58:21.907766 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename container-probe @ 05/13/24 19:58:21.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 19:58:21.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 19:58:21.999
  STEP: Creating pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425 @ 05/13/24 19:58:22.004
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/13/24 19:58:24.058
  I0513 19:58:24.067701 19 container_probe.go:1749] Initial restart count of pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e is 0
  I0513 19:58:24.071357 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:58:26.078213 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:58:28.082676 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:58:30.088605 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:58:32.094016 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:58:34.099367 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:58:36.104331 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:58:38.109896 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:58:40.114564 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:58:42.123830 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:58:44.129640 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:58:46.134294 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:58:48.142781 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:58:50.152003 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:58:52.157748 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:58:54.163130 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:58:56.168959 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:58:58.173040 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:59:00.176906 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:59:02.180785 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:59:04.185388 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:59:06.191913 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:59:08.196998 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:59:10.200267 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:59:12.213936 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:59:14.218194 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:59:16.226846 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:59:18.231535 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:59:20.235817 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:59:22.240243 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:59:24.244752 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:59:26.248855 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:59:28.266593 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:59:30.291638 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:59:32.339690 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:59:34.344325 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:59:36.349729 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:59:38.354795 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:59:40.360198 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:59:42.365482 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:59:44.372482 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:59:46.377781 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:59:48.388064 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:59:50.393440 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:59:52.399371 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:59:54.405482 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:59:56.409880 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 19:59:58.425057 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:00:00.430167 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:00:02.436631 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:00:04.446591 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:00:06.453278 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:00:08.462357 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:00:10.466995 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:00:12.480151 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:00:14.510351 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:00:16.515832 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:00:18.527434 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:00:20.532619 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:00:22.539693 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:00:24.544515 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:00:26.691423 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:00:28.695919 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:00:30.701558 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:00:32.708097 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:00:34.717706 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:00:36.776144 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:00:38.783338 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:00:40.787425 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:00:42.792399 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:00:44.797514 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:00:46.802250 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:00:48.809338 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:00:50.814299 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:00:52.818532 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:00:54.822950 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:00:56.828071 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:00:58.833660 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:01:00.837948 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:01:02.843083 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:01:04.848246 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:01:06.853229 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:01:08.858356 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:01:10.863716 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:01:12.875793 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:01:14.880247 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:01:16.885443 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:01:18.891266 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:01:20.895563 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:01:22.900020 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:01:24.905925 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:01:26.910618 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:01:28.914999 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:01:30.919874 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:01:32.928698 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:01:34.936061 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:01:36.942078 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:01:38.946124 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:01:40.951229 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:01:42.956803 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:01:44.960673 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:01:46.964962 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:01:48.969503 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:01:50.974424 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:01:52.979176 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:01:54.986699 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:01:56.993083 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:01:59.003322 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:02:01.008804 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:02:03.013474 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:02:05.020023 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:02:07.027577 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:02:09.031379 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:02:11.036041 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:02:13.041030 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:02:15.045948 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:02:17.055378 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:02:19.059742 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:02:21.064234 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  I0513 20:02:23.068661 19 container_probe.go:1759] Get pod busybox-186cc2a4-a089-4c20-8b18-65b37455a04e in namespace container-probe-5425
  STEP: deleting the pod @ 05/13/24 20:02:25.069
  I0513 20:02:25.144234 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5425" for this suite. @ 05/13/24 20:02:25.152
• [243.275 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 05/13/24 20:02:25.183
  I0513 20:02:25.183256 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename gc @ 05/13/24 20:02:25.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:02:25.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:02:25.24
  STEP: create the rc @ 05/13/24 20:02:25.248
  W0513 20:02:25.266462      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 05/13/24 20:02:30.273
  STEP: wait for all pods to be garbage collected @ 05/13/24 20:02:30.287
  STEP: Gathering metrics @ 05/13/24 20:02:35.295
  W0513 20:02:35.301132      19 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0513 20:02:35.301331 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0513 20:02:35.301788 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-415" for this suite. @ 05/13/24 20:02:35.307
• [10.136 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 05/13/24 20:02:35.319
  I0513 20:02:35.319520 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename container-probe @ 05/13/24 20:02:35.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:02:35.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:02:35.37
  STEP: Creating pod test-grpc-0e124a1a-f322-4ab2-83db-120da9d54f02 in namespace container-probe-6512 @ 05/13/24 20:02:35.374
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/13/24 20:02:37.413
  I0513 20:02:37.417378 19 container_probe.go:1749] Initial restart count of pod test-grpc-0e124a1a-f322-4ab2-83db-120da9d54f02 is 0
  I0513 20:02:37.420937 19 container_probe.go:1759] Get pod test-grpc-0e124a1a-f322-4ab2-83db-120da9d54f02 in namespace container-probe-6512
  I0513 20:02:39.426782 19 container_probe.go:1759] Get pod test-grpc-0e124a1a-f322-4ab2-83db-120da9d54f02 in namespace container-probe-6512
  I0513 20:02:41.432056 19 container_probe.go:1759] Get pod test-grpc-0e124a1a-f322-4ab2-83db-120da9d54f02 in namespace container-probe-6512
  I0513 20:02:43.436607 19 container_probe.go:1759] Get pod test-grpc-0e124a1a-f322-4ab2-83db-120da9d54f02 in namespace container-probe-6512
  I0513 20:02:45.440809 19 container_probe.go:1759] Get pod test-grpc-0e124a1a-f322-4ab2-83db-120da9d54f02 in namespace container-probe-6512
  I0513 20:02:47.446052 19 container_probe.go:1759] Get pod test-grpc-0e124a1a-f322-4ab2-83db-120da9d54f02 in namespace container-probe-6512
  I0513 20:02:49.451819 19 container_probe.go:1759] Get pod test-grpc-0e124a1a-f322-4ab2-83db-120da9d54f02 in namespace container-probe-6512
  I0513 20:02:51.457297 19 container_probe.go:1759] Get pod test-grpc-0e124a1a-f322-4ab2-83db-120da9d54f02 in namespace container-probe-6512
  I0513 20:02:53.461452 19 container_probe.go:1759] Get pod test-grpc-0e124a1a-f322-4ab2-83db-120da9d54f02 in namespace container-probe-6512
  I0513 20:02:55.466713 19 container_probe.go:1759] Get pod test-grpc-0e124a1a-f322-4ab2-83db-120da9d54f02 in namespace container-probe-6512
  I0513 20:02:57.472142 19 container_probe.go:1759] Get pod test-grpc-0e124a1a-f322-4ab2-83db-120da9d54f02 in namespace container-probe-6512
  I0513 20:02:59.476885 19 container_probe.go:1759] Get pod test-grpc-0e124a1a-f322-4ab2-83db-120da9d54f02 in namespace container-probe-6512
  I0513 20:03:01.482865 19 container_probe.go:1759] Get pod test-grpc-0e124a1a-f322-4ab2-83db-120da9d54f02 in namespace container-probe-6512
  I0513 20:03:03.490129 19 container_probe.go:1759] Get pod test-grpc-0e124a1a-f322-4ab2-83db-120da9d54f02 in namespace container-probe-6512
  I0513 20:03:05.495059 19 container_probe.go:1759] Get pod test-grpc-0e124a1a-f322-4ab2-83db-120da9d54f02 in namespace container-probe-6512
  I0513 20:03:07.499354 19 container_probe.go:1759] Get pod test-grpc-0e124a1a-f322-4ab2-83db-120da9d54f02 in namespace container-probe-6512
  I0513 20:03:09.504084 19 container_probe.go:1759] Get pod test-grpc-0e124a1a-f322-4ab2-83db-120da9d54f02 in namespace container-probe-6512
  I0513 20:03:11.510188 19 container_probe.go:1759] Get pod test-grpc-0e124a1a-f322-4ab2-83db-120da9d54f02 in namespace container-probe-6512
  I0513 20:03:13.516652 19 container_probe.go:1759] Get pod test-grpc-0e124a1a-f322-4ab2-83db-120da9d54f02 in namespace container-probe-6512
  I0513 20:03:15.521131 19 container_probe.go:1759] Get pod test-grpc-0e124a1a-f322-4ab2-83db-120da9d54f02 in namespace container-probe-6512
  I0513 20:03:17.525951 19 container_probe.go:1759] Get pod test-grpc-0e124a1a-f322-4ab2-83db-120da9d54f02 in namespace container-probe-6512
  I0513 20:03:19.533866 19 container_probe.go:1759] Get pod test-grpc-0e124a1a-f322-4ab2-83db-120da9d54f02 in namespace container-probe-6512
  I0513 20:03:21.539429 19 container_probe.go:1759] Get pod test-grpc-0e124a1a-f322-4ab2-83db-120da9d54f02 in namespace container-probe-6512
  I0513 20:03:23.544550 19 container_probe.go:1759] Get pod test-grpc-0e124a1a-f322-4ab2-83db-120da9d54f02 in namespace container-probe-6512
  I0513 20:03:25.549214 19 container_probe.go:1759] Get pod test-grpc-0e124a1a-f322-4ab2-83db-120da9d54f02 in namespace container-probe-6512
  I0513 20:03:27.555043 19 container_probe.go:1759] Get pod test-grpc-0e124a1a-f322-4ab2-83db-120da9d54f02 in namespace container-probe-6512
  I0513 20:03:29.558605 19 container_probe.go:1759] Get pod test-grpc-0e124a1a-f322-4ab2-83db-120da9d54f02 in namespace container-probe-6512
  I0513 20:03:31.564294 19 container_probe.go:1759] Get pod test-grpc-0e124a1a-f322-4ab2-83db-120da9d54f02 in namespace container-probe-6512
  I0513 20:03:33.569027 19 container_probe.go:1759] Get pod test-grpc-0e124a1a-f322-4ab2-83db-120da9d54f02 in namespace container-probe-6512
  I0513 20:03:35.573611 19 container_probe.go:1759] Get pod test-grpc-0e124a1a-f322-4ab2-83db-120da9d54f02 in namespace container-probe-6512
  I0513 20:03:37.581520 19 container_probe.go:1759] Get pod test-grpc-0e124a1a-f322-4ab2-83db-120da9d54f02 in namespace container-probe-6512
  I0513 20:03:39.598379 19 container_probe.go:1759] Get pod test-grpc-0e124a1a-f322-4ab2-83db-120da9d54f02 in namespace container-probe-6512
  I0513 20:03:41.610070 19 container_probe.go:1759] Get pod test-grpc-0e124a1a-f322-4ab2-83db-120da9d54f02 in namespace container-probe-6512
  I0513 20:03:43.618772 19 container_probe.go:1759] Get pod test-grpc-0e124a1a-f322-4ab2-83db-120da9d54f02 in namespace container-probe-6512
  I0513 20:03:45.633417 19 container_probe.go:1759] Get pod test-grpc-0e124a1a-f322-4ab2-83db-120da9d54f02 in namespace container-probe-6512
  I0513 20:03:47.637530 19 container_probe.go:1759] Get pod test-grpc-0e124a1a-f322-4ab2-83db-120da9d54f02 in namespace container-probe-6512
  I0513 20:03:49.642716 19 container_probe.go:1759] Get pod test-grpc-0e124a1a-f322-4ab2-83db-120da9d54f02 in namespace container-probe-6512
  I0513 20:03:51.649299 19 container_probe.go:1759] Get pod test-grpc-0e124a1a-f322-4ab2-83db-120da9d54f02 in namespace container-probe-6512
  I0513 20:03:53.654335 19 container_probe.go:1759] Get pod test-grpc-0e124a1a-f322-4ab2-83db-120da9d54f02 in namespace container-probe-6512
  I0513 20:03:53.654394 19 container_probe.go:1763] Restart count of pod container-probe-6512/test-grpc-0e124a1a-f322-4ab2-83db-120da9d54f02 is now 1 (1m16.236854813s elapsed)
  STEP: deleting the pod @ 05/13/24 20:03:53.654
  I0513 20:03:53.702255 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6512" for this suite. @ 05/13/24 20:03:53.708
• [78.403 seconds]
------------------------------
SS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 05/13/24 20:03:53.723
  I0513 20:03:53.723232 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename dns @ 05/13/24 20:03:53.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:03:53.768
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:03:53.772
  STEP: Creating a test headless service @ 05/13/24 20:03:53.775
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8237 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8237;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8237 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8237;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8237.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-8237.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8237.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-8237.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8237.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-8237.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8237.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-8237.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8237.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-8237.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8237.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-8237.svc;check="$$(dig +notcp +noall +answer +search 115.170.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.170.115_udp@PTR;check="$$(dig +tcp +noall +answer +search 115.170.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.170.115_tcp@PTR;sleep 1; done
   @ 05/13/24 20:03:53.834
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8237 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8237;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8237 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8237;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-8237.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-8237.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-8237.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-8237.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-8237.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-8237.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-8237.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-8237.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-8237.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-8237.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-8237.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-8237.svc;check="$$(dig +notcp +noall +answer +search 115.170.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.170.115_udp@PTR;check="$$(dig +tcp +noall +answer +search 115.170.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.170.115_tcp@PTR;sleep 1; done
   @ 05/13/24 20:03:53.834
  STEP: creating a pod to probe DNS @ 05/13/24 20:03:53.834
  STEP: submitting the pod to kubernetes @ 05/13/24 20:03:53.834
  STEP: retrieving the pod @ 05/13/24 20:03:57.875
  STEP: looking for the results for each expected name from probers @ 05/13/24 20:03:57.878
  I0513 20:03:57.887298 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-8237/dns-test-6ee86329-ef2f-4517-95a2-73cb5f14b209: the server could not find the requested resource (get pods dns-test-6ee86329-ef2f-4517-95a2-73cb5f14b209)
  I0513 20:03:57.891501 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-8237/dns-test-6ee86329-ef2f-4517-95a2-73cb5f14b209: the server could not find the requested resource (get pods dns-test-6ee86329-ef2f-4517-95a2-73cb5f14b209)
  I0513 20:03:57.895746 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-8237 from pod dns-8237/dns-test-6ee86329-ef2f-4517-95a2-73cb5f14b209: the server could not find the requested resource (get pods dns-test-6ee86329-ef2f-4517-95a2-73cb5f14b209)
  I0513 20:03:57.900315 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-8237 from pod dns-8237/dns-test-6ee86329-ef2f-4517-95a2-73cb5f14b209: the server could not find the requested resource (get pods dns-test-6ee86329-ef2f-4517-95a2-73cb5f14b209)
  I0513 20:03:57.905007 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-8237.svc from pod dns-8237/dns-test-6ee86329-ef2f-4517-95a2-73cb5f14b209: the server could not find the requested resource (get pods dns-test-6ee86329-ef2f-4517-95a2-73cb5f14b209)
  I0513 20:03:57.909495 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-8237.svc from pod dns-8237/dns-test-6ee86329-ef2f-4517-95a2-73cb5f14b209: the server could not find the requested resource (get pods dns-test-6ee86329-ef2f-4517-95a2-73cb5f14b209)
  I0513 20:03:57.914473 19 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-8237.svc from pod dns-8237/dns-test-6ee86329-ef2f-4517-95a2-73cb5f14b209: the server could not find the requested resource (get pods dns-test-6ee86329-ef2f-4517-95a2-73cb5f14b209)
  I0513 20:03:57.919190 19 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-8237.svc from pod dns-8237/dns-test-6ee86329-ef2f-4517-95a2-73cb5f14b209: the server could not find the requested resource (get pods dns-test-6ee86329-ef2f-4517-95a2-73cb5f14b209)
  I0513 20:03:57.942445 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-8237/dns-test-6ee86329-ef2f-4517-95a2-73cb5f14b209: the server could not find the requested resource (get pods dns-test-6ee86329-ef2f-4517-95a2-73cb5f14b209)
  I0513 20:03:57.947490 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-8237/dns-test-6ee86329-ef2f-4517-95a2-73cb5f14b209: the server could not find the requested resource (get pods dns-test-6ee86329-ef2f-4517-95a2-73cb5f14b209)
  I0513 20:03:57.952443 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-8237 from pod dns-8237/dns-test-6ee86329-ef2f-4517-95a2-73cb5f14b209: the server could not find the requested resource (get pods dns-test-6ee86329-ef2f-4517-95a2-73cb5f14b209)
  I0513 20:03:57.956350 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-8237 from pod dns-8237/dns-test-6ee86329-ef2f-4517-95a2-73cb5f14b209: the server could not find the requested resource (get pods dns-test-6ee86329-ef2f-4517-95a2-73cb5f14b209)
  I0513 20:03:57.960249 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-8237.svc from pod dns-8237/dns-test-6ee86329-ef2f-4517-95a2-73cb5f14b209: the server could not find the requested resource (get pods dns-test-6ee86329-ef2f-4517-95a2-73cb5f14b209)
  I0513 20:03:57.964515 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-8237.svc from pod dns-8237/dns-test-6ee86329-ef2f-4517-95a2-73cb5f14b209: the server could not find the requested resource (get pods dns-test-6ee86329-ef2f-4517-95a2-73cb5f14b209)
  I0513 20:03:57.969575 19 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-8237.svc from pod dns-8237/dns-test-6ee86329-ef2f-4517-95a2-73cb5f14b209: the server could not find the requested resource (get pods dns-test-6ee86329-ef2f-4517-95a2-73cb5f14b209)
  I0513 20:03:57.973646 19 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-8237.svc from pod dns-8237/dns-test-6ee86329-ef2f-4517-95a2-73cb5f14b209: the server could not find the requested resource (get pods dns-test-6ee86329-ef2f-4517-95a2-73cb5f14b209)
  I0513 20:03:57.992420 19 dns_common.go:489] Lookups using dns-8237/dns-test-6ee86329-ef2f-4517-95a2-73cb5f14b209 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-8237 wheezy_tcp@dns-test-service.dns-8237 wheezy_udp@dns-test-service.dns-8237.svc wheezy_tcp@dns-test-service.dns-8237.svc wheezy_udp@_http._tcp.dns-test-service.dns-8237.svc wheezy_tcp@_http._tcp.dns-test-service.dns-8237.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-8237 jessie_tcp@dns-test-service.dns-8237 jessie_udp@dns-test-service.dns-8237.svc jessie_tcp@dns-test-service.dns-8237.svc jessie_udp@_http._tcp.dns-test-service.dns-8237.svc jessie_tcp@_http._tcp.dns-test-service.dns-8237.svc]

  I0513 20:03:58.010988 19 dns_common.go:495] Pod client logs for webserver: 
  I0513 20:03:58.020352 19 dns_common.go:495] Pod client logs for querier: 
  I0513 20:03:58.031357 19 dns_common.go:495] Pod client logs for jessie-querier: 
  I0513 20:04:03.015838 19 dns_common.go:527] DNS probes using dns-8237/dns-test-6ee86329-ef2f-4517-95a2-73cb5f14b209 succeeded

  STEP: deleting the pod @ 05/13/24 20:04:03.015
  STEP: deleting the test service @ 05/13/24 20:04:03.056
  STEP: deleting the test headless service @ 05/13/24 20:04:03.155
  I0513 20:04:03.187673 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8237" for this suite. @ 05/13/24 20:04:03.207
• [9.507 seconds]
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 05/13/24 20:04:03.231
  I0513 20:04:03.231699 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename dns @ 05/13/24 20:04:03.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:04:03.274
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:04:03.283
  STEP: Creating a test externalName service @ 05/13/24 20:04:03.29
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3707.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-3707.svc.cluster.local; sleep 1; done
   @ 05/13/24 20:04:03.32
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3707.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-3707.svc.cluster.local; sleep 1; done
   @ 05/13/24 20:04:03.32
  STEP: creating a pod to probe DNS @ 05/13/24 20:04:03.32
  STEP: submitting the pod to kubernetes @ 05/13/24 20:04:03.32
  STEP: retrieving the pod @ 05/13/24 20:04:05.377
  STEP: looking for the results for each expected name from probers @ 05/13/24 20:04:05.381
  I0513 20:04:05.393001 19 dns_common.go:552] DNS probes using dns-test-163e88f1-1b16-4b53-a709-5803fabcaac3 succeeded

  STEP: changing the externalName to bar.example.com @ 05/13/24 20:04:05.393
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3707.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-3707.svc.cluster.local; sleep 1; done
   @ 05/13/24 20:04:05.413
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3707.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-3707.svc.cluster.local; sleep 1; done
   @ 05/13/24 20:04:05.413
  STEP: creating a second pod to probe DNS @ 05/13/24 20:04:05.413
  STEP: submitting the pod to kubernetes @ 05/13/24 20:04:05.413
  STEP: retrieving the pod @ 05/13/24 20:04:19.466
  STEP: looking for the results for each expected name from probers @ 05/13/24 20:04:19.469
  I0513 20:04:19.492661 19 dns_common.go:552] DNS probes using dns-test-d826f380-4176-4b85-b0b2-b8772b6b4506 succeeded

  STEP: changing the service to type=ClusterIP @ 05/13/24 20:04:19.492
  W0513 20:04:19.530270      19 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3707.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-3707.svc.cluster.local; sleep 1; done
   @ 05/13/24 20:04:19.53
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3707.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-3707.svc.cluster.local; sleep 1; done
   @ 05/13/24 20:04:19.53
  STEP: creating a third pod to probe DNS @ 05/13/24 20:04:19.53
  STEP: submitting the pod to kubernetes @ 05/13/24 20:04:19.535
  STEP: retrieving the pod @ 05/13/24 20:04:36.259
  STEP: looking for the results for each expected name from probers @ 05/13/24 20:04:36.265
  I0513 20:04:36.289987 19 dns_common.go:552] DNS probes using dns-test-462c8b33-cc37-49e1-bed8-6b1f97f48608 succeeded

  STEP: deleting the pod @ 05/13/24 20:04:36.29
  STEP: deleting the pod @ 05/13/24 20:04:36.335
  STEP: deleting the pod @ 05/13/24 20:04:36.402
  STEP: deleting the test externalName service @ 05/13/24 20:04:36.444
  I0513 20:04:36.496557 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3707" for this suite. @ 05/13/24 20:04:36.501
• [33.292 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 05/13/24 20:04:36.524
  I0513 20:04:36.524485 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename apf @ 05/13/24 20:04:36.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:04:36.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:04:36.592
  STEP: getting /apis @ 05/13/24 20:04:36.596
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 05/13/24 20:04:36.602
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 05/13/24 20:04:36.604
  STEP: creating @ 05/13/24 20:04:36.605
  STEP: getting @ 05/13/24 20:04:36.706
  STEP: listing @ 05/13/24 20:04:36.732
  STEP: watching @ 05/13/24 20:04:36.737
  I0513 20:04:36.737278 19 flowcontrol.go:394] starting watch
  STEP: patching @ 05/13/24 20:04:36.739
  STEP: updating @ 05/13/24 20:04:36.75
  I0513 20:04:36.770769 19 flowcontrol.go:422] waiting for watch events with expected annotations
  STEP: getting /status @ 05/13/24 20:04:36.77
  STEP: patching /status @ 05/13/24 20:04:36.776
  STEP: updating /status @ 05/13/24 20:04:36.791
  STEP: deleting @ 05/13/24 20:04:36.832
  STEP: deleting a collection @ 05/13/24 20:04:36.849
  I0513 20:04:36.886293 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-3414" for this suite. @ 05/13/24 20:04:36.89
• [0.382 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:866
  STEP: Creating a kubernetes client @ 05/13/24 20:04:36.906
  I0513 20:04:36.906897 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename webhook @ 05/13/24 20:04:36.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:04:36.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:04:36.949
  STEP: Setting up server cert @ 05/13/24 20:04:37.03
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/13/24 20:04:37.725
  STEP: Deploying the webhook pod @ 05/13/24 20:04:37.738
  STEP: Wait for the deployment to be ready @ 05/13/24 20:04:37.784
  I0513 20:04:37.791355 19 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  I0513 20:04:40.546480 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 20, 4, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 4, 37, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 20, 4, 38, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 4, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 05/13/24 20:04:42.589
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 20:04:42.643
  I0513 20:04:43.643618 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 05/13/24 20:04:43.651
  STEP: create the configmap with a random name @ 05/13/24 20:04:43.73
  STEP: verify the configmap is mutated @ 05/13/24 20:04:43.756
  STEP: create the configmap with 'skip-me' name @ 05/13/24 20:04:43.756
  I0513 20:04:43.915602 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3521" for this suite. @ 05/13/24 20:04:43.926
  STEP: Destroying namespace "webhook-markers-6815" for this suite. @ 05/13/24 20:04:43.944
• [7.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 05/13/24 20:04:43.966
  I0513 20:04:43.966459 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename events @ 05/13/24 20:04:43.967
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:04:44.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:04:44.022
  STEP: Create set of events @ 05/13/24 20:04:44.026
  I0513 20:04:44.046885 19 core_events.go:198] created test-event-1
  I0513 20:04:44.058752 19 core_events.go:198] created test-event-2
  I0513 20:04:44.069145 19 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 05/13/24 20:04:44.069
  STEP: delete collection of events @ 05/13/24 20:04:44.074
  I0513 20:04:44.074279 19 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 05/13/24 20:04:44.119
  I0513 20:04:44.119972 19 core_events.go:230] requesting list of events to confirm quantity
  I0513 20:04:44.124386 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9098" for this suite. @ 05/13/24 20:04:44.129
• [0.175 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 05/13/24 20:04:44.142
  I0513 20:04:44.142231 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename runtimeclass @ 05/13/24 20:04:44.143
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:04:44.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:04:44.194
  STEP: getting /apis @ 05/13/24 20:04:44.199
  STEP: getting /apis/node.k8s.io @ 05/13/24 20:04:44.205
  STEP: getting /apis/node.k8s.io/v1 @ 05/13/24 20:04:44.22
  STEP: creating @ 05/13/24 20:04:44.222
  STEP: watching @ 05/13/24 20:04:44.255
  I0513 20:04:44.255726 19 runtimeclass.go:275] starting watch
  STEP: getting @ 05/13/24 20:04:44.273
  STEP: listing @ 05/13/24 20:04:44.276
  STEP: patching @ 05/13/24 20:04:44.28
  STEP: updating @ 05/13/24 20:04:44.29
  I0513 20:04:44.299829 19 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 05/13/24 20:04:44.3
  STEP: deleting a collection @ 05/13/24 20:04:44.316
  I0513 20:04:44.352887 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-656" for this suite. @ 05/13/24 20:04:44.359
• [0.230 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 05/13/24 20:04:44.373
  I0513 20:04:44.374011 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename var-expansion @ 05/13/24 20:04:44.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:04:44.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:04:44.417
  STEP: Creating a pod to test substitution in volume subpath @ 05/13/24 20:04:44.423
  STEP: Saw pod success @ 05/13/24 20:04:48.482
  I0513 20:04:48.485503 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod var-expansion-12ba9a7c-2cc3-4749-b23f-aad4feacd6a5 container dapi-container: <nil>
  STEP: delete the pod @ 05/13/24 20:04:48.492
  I0513 20:04:48.544765 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1928" for this suite. @ 05/13/24 20:04:48.55
• [4.191 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 05/13/24 20:04:48.564
  I0513 20:04:48.564954 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename field-validation @ 05/13/24 20:04:48.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:04:48.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:04:48.612
  STEP: apply creating a deployment @ 05/13/24 20:04:48.617
  I0513 20:04:48.644620 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1628" for this suite. @ 05/13/24 20:04:48.651
• [0.100 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 05/13/24 20:04:48.664
  I0513 20:04:48.665011 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename configmap @ 05/13/24 20:04:48.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:04:48.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:04:48.712
  STEP: Creating configMap with name configmap-test-volume-map-0987c905-ec59-4c2f-b840-6cd210e0c133 @ 05/13/24 20:04:48.716
  STEP: Creating a pod to test consume configMaps @ 05/13/24 20:04:48.727
  STEP: Saw pod success @ 05/13/24 20:04:52.785
  I0513 20:04:52.789011 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod pod-configmaps-366bd79b-9650-4367-994a-65dd8cbea4b5 container agnhost-container: <nil>
  STEP: delete the pod @ 05/13/24 20:04:52.796
  I0513 20:04:52.855672 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3580" for this suite. @ 05/13/24 20:04:52.86
• [4.213 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 05/13/24 20:04:52.878
  I0513 20:04:52.878563 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename projected @ 05/13/24 20:04:52.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:04:52.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:04:52.936
  STEP: Creating configMap with name projected-configmap-test-volume-5e3007e6-1bde-470e-8e69-375cf11b2af7 @ 05/13/24 20:04:52.942
  STEP: Creating a pod to test consume configMaps @ 05/13/24 20:04:52.953
  STEP: Saw pod success @ 05/13/24 20:04:57.173
  I0513 20:04:57.183323 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod pod-projected-configmaps-f1ca4992-8943-498f-952e-0e87f8634298 container agnhost-container: <nil>
  STEP: delete the pod @ 05/13/24 20:04:57.206
  I0513 20:04:57.239661 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1524" for this suite. @ 05/13/24 20:04:57.245
• [4.382 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:962
  STEP: Creating a kubernetes client @ 05/13/24 20:04:57.264
  I0513 20:04:57.267398 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename statefulset @ 05/13/24 20:04:57.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:04:57.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:04:57.321
  STEP: Creating service test in namespace statefulset-8868 @ 05/13/24 20:04:57.325
  I0513 20:04:57.363526 19 wait.go:40] Found 0 stateful pods, waiting for 1
  I0513 20:05:07.364854 19 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 05/13/24 20:05:07.374
  W0513 20:05:07.392625      19 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  I0513 20:05:07.423923 19 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0513 20:05:07.423986 19 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  I0513 20:05:17.417427 19 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0513 20:05:17.417472 19 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 05/13/24 20:05:17.425
  STEP: Delete all of the StatefulSets @ 05/13/24 20:05:17.431
  STEP: Verify that StatefulSets have been deleted @ 05/13/24 20:05:17.444
  I0513 20:05:17.448520 19 statefulset.go:135] Deleting all statefulset in ns statefulset-8868
  I0513 20:05:17.458834 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8868" for this suite. @ 05/13/24 20:05:17.482
• [20.252 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 05/13/24 20:05:17.517
  I0513 20:05:17.517392 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename containers @ 05/13/24 20:05:17.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:05:17.579
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:05:17.584
  STEP: Creating a pod to test override arguments @ 05/13/24 20:05:17.588
  STEP: Saw pod success @ 05/13/24 20:05:21.814
  I0513 20:05:21.817398 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod client-containers-d137a071-75c2-47a2-a2dd-3cbd8abaa994 container agnhost-container: <nil>
  STEP: delete the pod @ 05/13/24 20:05:21.824
  I0513 20:05:21.850575 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8553" for this suite. @ 05/13/24 20:05:21.855
• [4.356 seconds]
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 05/13/24 20:05:21.873
  I0513 20:05:21.873458 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename container-runtime @ 05/13/24 20:05:21.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:05:21.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:05:21.919
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 05/13/24 20:05:21.941
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 05/13/24 20:05:41.135
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 05/13/24 20:05:41.139
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 05/13/24 20:05:41.146
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 05/13/24 20:05:41.146
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 05/13/24 20:05:41.208
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 05/13/24 20:05:44.228
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 05/13/24 20:05:45.237
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 05/13/24 20:05:45.244
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 05/13/24 20:05:45.244
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 05/13/24 20:05:45.286
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 05/13/24 20:05:46.296
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 05/13/24 20:05:48.311
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 05/13/24 20:05:48.318
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 05/13/24 20:05:48.318
  I0513 20:05:48.359242 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8145" for this suite. @ 05/13/24 20:05:48.364
• [26.523 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 05/13/24 20:05:48.396
  I0513 20:05:48.396583 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/13/24 20:05:48.397
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:05:48.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:05:48.438
  I0513 20:05:48.443332 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 20:05:49.488758 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4130" for this suite. @ 05/13/24 20:05:49.493
• [1.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 05/13/24 20:05:49.504
  I0513 20:05:49.504319 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename dns @ 05/13/24 20:05:49.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:05:49.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:05:49.569
  STEP: Creating a test headless service @ 05/13/24 20:05:49.574
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-38.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-38.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-38.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-38.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-38.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-38.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-38.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-38.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-38.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-38.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-38.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-38.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 27.97.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.97.27_udp@PTR;check="$$(dig +tcp +noall +answer +search 27.97.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.97.27_tcp@PTR;sleep 1; done
   @ 05/13/24 20:05:49.663
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-38.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-38.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-38.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-38.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-38.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-38.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-38.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-38.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-38.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-38.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-38.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-38.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 27.97.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.97.27_udp@PTR;check="$$(dig +tcp +noall +answer +search 27.97.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.97.27_tcp@PTR;sleep 1; done
   @ 05/13/24 20:05:49.663
  STEP: creating a pod to probe DNS @ 05/13/24 20:05:49.663
  STEP: submitting the pod to kubernetes @ 05/13/24 20:05:49.663
  STEP: retrieving the pod @ 05/13/24 20:05:51.709
  STEP: looking for the results for each expected name from probers @ 05/13/24 20:05:51.713
  I0513 20:05:51.720734 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-38.svc.cluster.local from pod dns-38/dns-test-c68581ca-dbdd-48d1-9a60-9192095870cd: the server could not find the requested resource (get pods dns-test-c68581ca-dbdd-48d1-9a60-9192095870cd)
  I0513 20:05:51.724678 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-38.svc.cluster.local from pod dns-38/dns-test-c68581ca-dbdd-48d1-9a60-9192095870cd: the server could not find the requested resource (get pods dns-test-c68581ca-dbdd-48d1-9a60-9192095870cd)
  I0513 20:05:51.728677 19 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-38.svc.cluster.local from pod dns-38/dns-test-c68581ca-dbdd-48d1-9a60-9192095870cd: the server could not find the requested resource (get pods dns-test-c68581ca-dbdd-48d1-9a60-9192095870cd)
  I0513 20:05:51.735283 19 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-38.svc.cluster.local from pod dns-38/dns-test-c68581ca-dbdd-48d1-9a60-9192095870cd: the server could not find the requested resource (get pods dns-test-c68581ca-dbdd-48d1-9a60-9192095870cd)
  I0513 20:05:51.754717 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-38.svc.cluster.local from pod dns-38/dns-test-c68581ca-dbdd-48d1-9a60-9192095870cd: the server could not find the requested resource (get pods dns-test-c68581ca-dbdd-48d1-9a60-9192095870cd)
  I0513 20:05:51.759628 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-38.svc.cluster.local from pod dns-38/dns-test-c68581ca-dbdd-48d1-9a60-9192095870cd: the server could not find the requested resource (get pods dns-test-c68581ca-dbdd-48d1-9a60-9192095870cd)
  I0513 20:05:51.765534 19 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-38.svc.cluster.local from pod dns-38/dns-test-c68581ca-dbdd-48d1-9a60-9192095870cd: the server could not find the requested resource (get pods dns-test-c68581ca-dbdd-48d1-9a60-9192095870cd)
  I0513 20:05:51.769539 19 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-38.svc.cluster.local from pod dns-38/dns-test-c68581ca-dbdd-48d1-9a60-9192095870cd: the server could not find the requested resource (get pods dns-test-c68581ca-dbdd-48d1-9a60-9192095870cd)
  I0513 20:05:51.784073 19 dns_common.go:489] Lookups using dns-38/dns-test-c68581ca-dbdd-48d1-9a60-9192095870cd failed for: [wheezy_udp@dns-test-service.dns-38.svc.cluster.local wheezy_tcp@dns-test-service.dns-38.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-38.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-38.svc.cluster.local jessie_udp@dns-test-service.dns-38.svc.cluster.local jessie_tcp@dns-test-service.dns-38.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-38.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-38.svc.cluster.local]

  I0513 20:05:51.791436 19 dns_common.go:495] Pod client logs for webserver: 
  I0513 20:05:51.798205 19 dns_common.go:495] Pod client logs for querier: 
  I0513 20:05:51.805327 19 dns_common.go:495] Pod client logs for jessie-querier: 
  I0513 20:05:56.799347 19 dns_common.go:527] DNS probes using dns-38/dns-test-c68581ca-dbdd-48d1-9a60-9192095870cd succeeded

  STEP: deleting the pod @ 05/13/24 20:05:56.799
  STEP: deleting the test service @ 05/13/24 20:05:56.827
  STEP: deleting the test headless service @ 05/13/24 20:05:56.959
  I0513 20:05:57.213717 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-38" for this suite. @ 05/13/24 20:05:57.491
• [8.016 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 05/13/24 20:05:57.521
  I0513 20:05:57.521616 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename sched-preemption @ 05/13/24 20:05:57.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:05:57.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:05:57.553
  I0513 20:05:57.600611 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0513 20:06:57.606066 19 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 05/13/24 20:06:57.611
  I0513 20:06:57.611055 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename sched-preemption-path @ 05/13/24 20:06:57.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:06:57.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:06:57.691
  STEP: Finding an available node @ 05/13/24 20:06:57.7
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 05/13/24 20:06:57.7
  STEP: Explicitly delete pod here to free the resource it takes. @ 05/13/24 20:06:59.772
  I0513 20:06:59.814607 19 preemption.go:583] found a healthy node: ip-172-31-11-14.us-east-2.compute.internal
  I0513 20:07:06.011568 19 preemption.go:706] pods created so far: [1 1 1]
  I0513 20:07:06.011620 19 preemption.go:707] length of pods created so far: 3
  I0513 20:07:08.551985 19 preemption.go:724] pods created so far: [2 2 1]
  I0513 20:07:15.737767 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-9505" for this suite. @ 05/13/24 20:07:15.742
  I0513 20:07:15.753001 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-995" for this suite. @ 05/13/24 20:07:15.757
• [78.246 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:751
  STEP: Creating a kubernetes client @ 05/13/24 20:07:15.767
  I0513 20:07:15.767482 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename statefulset @ 05/13/24 20:07:15.768
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:07:15.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:07:15.825
  STEP: Creating service test in namespace statefulset-9724 @ 05/13/24 20:07:15.828
  STEP: Creating stateful set ss in namespace statefulset-9724 @ 05/13/24 20:07:15.841
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-9724 @ 05/13/24 20:07:15.864
  I0513 20:07:15.882707 19 wait.go:40] Found 0 stateful pods, waiting for 1
  I0513 20:07:25.869760 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 05/13/24 20:07:25.869
  I0513 20:07:25.874018 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=statefulset-9724 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0513 20:07:26.060873 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0513 20:07:26.060962 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0513 20:07:26.060982 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0513 20:07:26.064966 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0513 20:07:36.066124 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0513 20:07:36.066189 19 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0513 20:07:36.131883 19 resource.go:168] POD   NODE                                        PHASE    GRACE  CONDITIONS
  I0513 20:07:36.131981 19 resource.go:175] ss-0  ip-172-31-0-253.us-east-2.compute.internal  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 20:07:17 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 20:07:15 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-13 20:07:26 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-13 20:07:26 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 20:07:15 +0000 UTC  }]
  I0513 20:07:36.131997 19 resource.go:178] 
  I0513 20:07:36.132011 19 statefulset.go:2147] StatefulSet ss has not reached scale 3, at 1
  I0513 20:07:37.140117 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 8.975037668s
  I0513 20:07:38.146366 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 7.966021779s
  I0513 20:07:39.151409 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 6.960561646s
  I0513 20:07:40.156618 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 5.955625238s
  I0513 20:07:41.162146 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 4.949455397s
  I0513 20:07:42.169387 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 3.944854693s
  I0513 20:07:43.175223 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 2.936861634s
  I0513 20:07:44.180856 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 1.931770904s
  I0513 20:07:45.185815 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 926.16778ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-9724 @ 05/13/24 20:07:46.186
  I0513 20:07:46.191783 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=statefulset-9724 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0513 20:07:46.370757 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0513 20:07:46.370818 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0513 20:07:46.370848 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0513 20:07:46.371416 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=statefulset-9724 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0513 20:07:46.550858 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0513 20:07:46.550942 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0513 20:07:46.550965 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0513 20:07:46.551061 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=statefulset-9724 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0513 20:07:46.721535 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0513 20:07:46.721601 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0513 20:07:46.721734 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0513 20:07:46.726293 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  I0513 20:07:56.727698 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0513 20:07:56.727753 19 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0513 20:07:56.727773 19 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 05/13/24 20:07:56.727
  I0513 20:07:56.731671 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=statefulset-9724 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0513 20:07:56.889295 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0513 20:07:56.889683 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0513 20:07:56.889972 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0513 20:07:56.890496 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=statefulset-9724 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0513 20:07:57.055373 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0513 20:07:57.055432 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0513 20:07:57.055454 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0513 20:07:57.055522 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=statefulset-9724 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0513 20:07:57.215417 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0513 20:07:57.215467 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0513 20:07:57.215589 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0513 20:07:57.215606 19 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0513 20:07:57.219348 19 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I0513 20:08:07.283087 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0513 20:08:07.283169 19 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0513 20:08:07.283189 19 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0513 20:08:07.315455 19 resource.go:168] POD   NODE                                        PHASE    GRACE  CONDITIONS
  I0513 20:08:07.315573 19 resource.go:175] ss-0  ip-172-31-0-253.us-east-2.compute.internal  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 20:07:17 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 20:07:15 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-13 20:07:57 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-13 20:07:57 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 20:07:15 +0000 UTC  }]
  I0513 20:08:07.315612 19 resource.go:175] ss-1  ip-172-31-11-14.us-east-2.compute.internal  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 20:07:37 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 20:07:36 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-13 20:07:57 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-13 20:07:57 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 20:07:36 +0000 UTC  }]
  I0513 20:08:07.315656 19 resource.go:175] ss-2  ip-172-31-3-33.us-east-2.compute.internal   Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 20:07:37 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 20:07:36 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-13 20:07:57 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-13 20:07:57 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 20:07:36 +0000 UTC  }]
  I0513 20:08:07.315686 19 resource.go:178] 
  I0513 20:08:07.315702 19 statefulset.go:2147] StatefulSet ss has not reached scale 0, at 3
  I0513 20:08:08.319773 19 resource.go:168] POD   NODE                                        PHASE      GRACE  CONDITIONS
  I0513 20:08:08.319944 19 resource.go:175] ss-0  ip-172-31-0-253.us-east-2.compute.internal  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-05-13 20:08:07 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 20:07:15 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-05-13 20:07:57 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-05-13 20:07:57 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-05-13 20:07:15 +0000 UTC  }]
  I0513 20:08:08.320045 19 resource.go:178] 
  I0513 20:08:08.320065 19 statefulset.go:2147] StatefulSet ss has not reached scale 0, at 1
  I0513 20:08:09.324570 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 7.990503125s
  I0513 20:08:10.328269 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 6.986657131s
  I0513 20:08:11.331772 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 5.982907809s
  I0513 20:08:12.339544 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 4.979048336s
  I0513 20:08:13.343427 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 3.971461778s
  I0513 20:08:14.348608 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 2.967597025s
  I0513 20:08:15.362197 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 1.961715303s
  I0513 20:08:16.366893 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 948.297721ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-9724 @ 05/13/24 20:08:17.367
  I0513 20:08:17.380846 19 rest.go:150] Scaling statefulset ss to 0
  I0513 20:08:17.393550 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0513 20:08:17.397328 19 statefulset.go:135] Deleting all statefulset in ns statefulset-9724
  I0513 20:08:17.400989 19 rest.go:150] Scaling statefulset ss to 0
  I0513 20:08:17.411869 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0513 20:08:17.415170 19 rest.go:88] Deleting statefulset ss
  I0513 20:08:17.431932 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9724" for this suite. @ 05/13/24 20:08:17.436
• [61.693 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:430
  STEP: Creating a kubernetes client @ 05/13/24 20:08:17.461
  I0513 20:08:17.461938 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename pv @ 05/13/24 20:08:17.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:08:17.507
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:08:17.513
  STEP: Creating initial PV and PVC @ 05/13/24 20:08:17.517
  I0513 20:08:17.517404 19 pv.go:390] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-3093" @ 05/13/24 20:08:17.567
  STEP: Listing PVCs in namespace "pv-3093" @ 05/13/24 20:08:17.57
  STEP: Patching the PV "pv-3093-dvp2z" @ 05/13/24 20:08:17.574
  STEP: Patching the PVC "pvc-dpjdk" @ 05/13/24 20:08:17.621
  STEP: Getting PV "pv-3093-dvp2z" @ 05/13/24 20:08:17.678
  STEP: Getting PVC "pvc-dpjdk" @ 05/13/24 20:08:17.684
  STEP: Deleting PVC "pvc-dpjdk" @ 05/13/24 20:08:17.688
  STEP: Confirm deletion of PVC "pvc-dpjdk" @ 05/13/24 20:08:17.716
  STEP: Deleting PV "pv-3093-dvp2z" @ 05/13/24 20:08:17.722
  STEP: Confirm deletion of PV "pv-3093-dvp2z" @ 05/13/24 20:08:17.743
  STEP: Recreating another PV & PVC @ 05/13/24 20:08:19.752
  I0513 20:08:19.752747 19 pv.go:390] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-3093-gs7lv" @ 05/13/24 20:08:19.783
  STEP: Updating the PVC "pvc-dmmvs" @ 05/13/24 20:08:19.816
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-dmmvs=updated" @ 05/13/24 20:08:19.835
  STEP: Deleting PVC "pvc-dmmvs" via DeleteCollection @ 05/13/24 20:08:19.84
  STEP: Confirm deletion of PVC "pvc-dmmvs" @ 05/13/24 20:08:19.871
  STEP: Deleting PV "pv-3093-gs7lv" via DeleteCollection @ 05/13/24 20:08:21.881
  STEP: Confirm deletion of PV "pv-3093-gs7lv" @ 05/13/24 20:08:21.896
  I0513 20:08:23.942002 19 persistent_volumes.go:407] AfterEach: deleting 1 PVCs and 1 PVs...
  I0513 20:08:23.942228 19 pv.go:201] Deleting PersistentVolumeClaim "pvc-dmmvs"
  I0513 20:08:23.975390 19 pv.go:189] Deleting PersistentVolume "pv-3093-gs7lv"
  I0513 20:08:23.991197 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-3093" for this suite. @ 05/13/24 20:08:23.997
• [6.563 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1627
  STEP: Creating a kubernetes client @ 05/13/24 20:08:24.025
  I0513 20:08:24.025946 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename kubectl @ 05/13/24 20:08:24.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:08:24.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:08:24.085
  STEP: creating the pod @ 05/13/24 20:08:24.09
  I0513 20:08:24.091001 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-4986 create -f -'
  I0513 20:08:24.273922 19 builder.go:146] stderr: ""
  I0513 20:08:24.274095 19 builder.go:147] stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 05/13/24 20:08:26.293
  I0513 20:08:26.293565 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-4986 label pods pause testing-label=testing-label-value'
  I0513 20:08:26.411478 19 builder.go:146] stderr: ""
  I0513 20:08:26.411644 19 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 05/13/24 20:08:26.411
  I0513 20:08:26.411758 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-4986 get pod pause -L testing-label'
  I0513 20:08:26.542775 19 builder.go:146] stderr: ""
  I0513 20:08:26.542829 19 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 05/13/24 20:08:26.542
  I0513 20:08:26.542942 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-4986 label pods pause testing-label-'
  I0513 20:08:26.643219 19 builder.go:146] stderr: ""
  I0513 20:08:26.643269 19 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 05/13/24 20:08:26.643
  I0513 20:08:26.643356 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-4986 get pod pause -L testing-label'
  I0513 20:08:26.762873 19 builder.go:146] stderr: ""
  I0513 20:08:26.762943 19 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 05/13/24 20:08:26.763
  I0513 20:08:26.763089 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-4986 delete --grace-period=0 --force -f -'
  I0513 20:08:26.955750 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0513 20:08:26.955806 19 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0513 20:08:26.955871 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-4986 get rc,svc -l name=pause --no-headers'
  I0513 20:08:27.081899 19 builder.go:146] stderr: "No resources found in kubectl-4986 namespace.\n"
  I0513 20:08:27.081949 19 builder.go:147] stdout: ""
  I0513 20:08:27.082016 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-4986 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0513 20:08:27.186812 19 builder.go:146] stderr: ""
  I0513 20:08:27.186862 19 builder.go:147] stdout: ""
  I0513 20:08:27.186980 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4986" for this suite. @ 05/13/24 20:08:27.192
• [3.183 seconds]
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 05/13/24 20:08:27.209
  I0513 20:08:27.209181 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename secrets @ 05/13/24 20:08:27.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:08:27.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:08:27.262
  STEP: creating a secret @ 05/13/24 20:08:27.265
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 05/13/24 20:08:27.28
  STEP: patching the secret @ 05/13/24 20:08:27.288
  STEP: deleting the secret using a LabelSelector @ 05/13/24 20:08:27.308
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 05/13/24 20:08:27.322
  I0513 20:08:27.332789 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4386" for this suite. @ 05/13/24 20:08:27.338
• [0.148 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 05/13/24 20:08:27.357
  I0513 20:08:27.357909 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename webhook @ 05/13/24 20:08:27.358
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:08:27.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:08:27.403
  STEP: Setting up server cert @ 05/13/24 20:08:27.473
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/13/24 20:08:27.92
  STEP: Deploying the webhook pod @ 05/13/24 20:08:27.932
  STEP: Wait for the deployment to be ready @ 05/13/24 20:08:27.964
  I0513 20:08:27.998141 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/13/24 20:08:30.01
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 20:08:30.038
  I0513 20:08:31.039615 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 05/13/24 20:08:31.047
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/13/24 20:08:31.048
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 05/13/24 20:08:31.079
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 05/13/24 20:08:32.094
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/13/24 20:08:32.094
  STEP: Having no error when timeout is longer than webhook latency @ 05/13/24 20:08:33.153
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/13/24 20:08:33.153
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 05/13/24 20:08:38.215
  STEP: Registering slow webhook via the AdmissionRegistration API @ 05/13/24 20:08:38.215
  I0513 20:08:43.429062 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8456" for this suite. @ 05/13/24 20:08:43.434
  STEP: Destroying namespace "webhook-markers-5081" for this suite. @ 05/13/24 20:08:43.446
• [16.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:342
  STEP: Creating a kubernetes client @ 05/13/24 20:08:43.462
  I0513 20:08:43.463023 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename kubectl @ 05/13/24 20:08:43.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:08:43.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:08:43.53
  STEP: creating a replication controller @ 05/13/24 20:08:43.533
  I0513 20:08:43.533675 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-636 create -f -'
  I0513 20:08:43.735608 19 builder.go:146] stderr: ""
  I0513 20:08:43.735803 19 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 05/13/24 20:08:43.735
  I0513 20:08:43.735918 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-636 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0513 20:08:43.848848 19 builder.go:146] stderr: ""
  I0513 20:08:43.848897 19 builder.go:147] stdout: "update-demo-nautilus-mr9dm update-demo-nautilus-t2rd5 "
  I0513 20:08:43.848957 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-636 get pods update-demo-nautilus-mr9dm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0513 20:08:43.960600 19 builder.go:146] stderr: ""
  I0513 20:08:43.960780 19 builder.go:147] stdout: ""
  I0513 20:08:43.960807 19 kubectl.go:2501] update-demo-nautilus-mr9dm is created but not running
  I0513 20:08:48.961201 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-636 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0513 20:08:49.097771 19 builder.go:146] stderr: ""
  I0513 20:08:49.097821 19 builder.go:147] stdout: "update-demo-nautilus-mr9dm update-demo-nautilus-t2rd5 "
  I0513 20:08:49.097882 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-636 get pods update-demo-nautilus-mr9dm -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0513 20:08:49.191595 19 builder.go:146] stderr: ""
  I0513 20:08:49.191645 19 builder.go:147] stdout: "true"
  I0513 20:08:49.191712 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-636 get pods update-demo-nautilus-mr9dm -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0513 20:08:49.274512 19 builder.go:146] stderr: ""
  I0513 20:08:49.274570 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0513 20:08:49.274592 19 kubectl.go:2392] validating pod update-demo-nautilus-mr9dm
  I0513 20:08:49.281827 19 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0513 20:08:49.281907 19 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0513 20:08:49.281927 19 kubectl.go:2519] update-demo-nautilus-mr9dm is verified up and running
  I0513 20:08:49.282122 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-636 get pods update-demo-nautilus-t2rd5 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0513 20:08:49.360879 19 builder.go:146] stderr: ""
  I0513 20:08:49.361033 19 builder.go:147] stdout: "true"
  I0513 20:08:49.361134 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-636 get pods update-demo-nautilus-t2rd5 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0513 20:08:49.440924 19 builder.go:146] stderr: ""
  I0513 20:08:49.440974 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0513 20:08:49.440996 19 kubectl.go:2392] validating pod update-demo-nautilus-t2rd5
  I0513 20:08:49.448413 19 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0513 20:08:49.448482 19 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0513 20:08:49.448501 19 kubectl.go:2519] update-demo-nautilus-t2rd5 is verified up and running
  STEP: using delete to clean up resources @ 05/13/24 20:08:49.448
  I0513 20:08:49.448622 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-636 delete --grace-period=0 --force -f -'
  I0513 20:08:49.543899 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0513 20:08:49.543961 19 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0513 20:08:49.544023 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-636 get rc,svc -l name=update-demo --no-headers'
  I0513 20:08:49.642012 19 builder.go:146] stderr: "No resources found in kubectl-636 namespace.\n"
  I0513 20:08:49.642070 19 builder.go:147] stdout: ""
  I0513 20:08:49.642133 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-636 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0513 20:08:49.723409 19 builder.go:146] stderr: ""
  I0513 20:08:49.723477 19 builder.go:147] stdout: ""
  I0513 20:08:49.723763 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-636" for this suite. @ 05/13/24 20:08:49.73
• [6.279 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 05/13/24 20:08:49.742
  I0513 20:08:49.742910 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename downward-api @ 05/13/24 20:08:49.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:08:49.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:08:49.784
  STEP: Creating a pod to test downward api env vars @ 05/13/24 20:08:49.824
  STEP: Saw pod success @ 05/13/24 20:08:53.886
  I0513 20:08:53.890003 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod downward-api-9525af83-9f0d-47ef-b21f-c2afb33703b4 container dapi-container: <nil>
  STEP: delete the pod @ 05/13/24 20:08:53.903
  I0513 20:08:53.939039 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2609" for this suite. @ 05/13/24 20:08:53.944
• [4.225 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 05/13/24 20:08:53.968
  I0513 20:08:53.968363 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename webhook @ 05/13/24 20:08:53.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:08:54.019
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:08:54.023
  STEP: Setting up server cert @ 05/13/24 20:08:54.082
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/13/24 20:08:54.801
  STEP: Deploying the webhook pod @ 05/13/24 20:08:54.813
  STEP: Wait for the deployment to be ready @ 05/13/24 20:08:54.87
  I0513 20:08:54.891079 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 05/13/24 20:08:56.903
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 20:08:56.93
  I0513 20:08:57.931247 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 05/13/24 20:08:57.938
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 05/13/24 20:08:57.965
  STEP: Creating a dummy validating-webhook-configuration object @ 05/13/24 20:08:57.992
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 05/13/24 20:08:58.013
  STEP: Creating a dummy mutating-webhook-configuration object @ 05/13/24 20:08:58.025
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 05/13/24 20:08:58.045
  I0513 20:08:58.216660 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2867" for this suite. @ 05/13/24 20:08:58.222
  STEP: Destroying namespace "webhook-markers-7960" for this suite. @ 05/13/24 20:08:58.233
• [4.283 seconds]
------------------------------
SSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 05/13/24 20:08:58.251
  I0513 20:08:58.251962 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename pod-network-test @ 05/13/24 20:08:58.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:08:58.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:08:58.291
  STEP: Performing setup for networking test in namespace pod-network-test-969 @ 05/13/24 20:08:58.294
  STEP: creating a selector @ 05/13/24 20:08:58.294
  STEP: Creating the service pods in kubernetes @ 05/13/24 20:08:58.294
  I0513 20:08:58.294816 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 05/13/24 20:09:20.647
  I0513 20:09:22.734876 19 utils.go:779] Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  I0513 20:09:22.734932 19 utils.go:472] Going to poll 10.42.3.175 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  I0513 20:09:22.738138 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.3.175:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-969 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 20:09:22.738183 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 20:09:22.739064 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 20:09:22.739144 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-969/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.3.175%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0513 20:09:22.799149 19 utils.go:489] Found all 1 expected endpoints: [netserver-0]
  I0513 20:09:22.799328 19 utils.go:472] Going to poll 10.42.2.39 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  I0513 20:09:22.802775 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.2.39:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-969 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 20:09:22.802816 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 20:09:22.803720 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 20:09:22.804076 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-969/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.2.39%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0513 20:09:22.866687 19 utils.go:489] Found all 1 expected endpoints: [netserver-1]
  I0513 20:09:22.869268 19 utils.go:472] Going to poll 10.42.0.101 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  I0513 20:09:22.873130 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.0.101:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-969 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 20:09:22.873184 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 20:09:22.873901 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 20:09:22.874007 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-969/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.0.101%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0513 20:09:22.936130 19 utils.go:489] Found all 1 expected endpoints: [netserver-2]
  I0513 20:09:22.936364 19 utils.go:472] Going to poll 10.42.1.134 on port 8083 at least 0 times, with a maximum of 46 tries before failing
  I0513 20:09:22.943579 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.1.134:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-969 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 20:09:22.943633 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 20:09:22.944567 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 20:09:22.944818 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-969/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.1.134%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0513 20:09:23.002668 19 utils.go:489] Found all 1 expected endpoints: [netserver-3]
  I0513 20:09:23.002818 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-969" for this suite. @ 05/13/24 20:09:23.008
• [24.770 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 05/13/24 20:09:23.022
  I0513 20:09:23.022410 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename proxy @ 05/13/24 20:09:23.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:09:23.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:09:23.073
  STEP: starting an echo server on multiple ports @ 05/13/24 20:09:23.125
  STEP: creating replication controller proxy-service-qxjq2 in namespace proxy-6176 @ 05/13/24 20:09:23.125
  I0513 20:09:23.156826      19 runners.go:198] Created replication controller with name: proxy-service-qxjq2, namespace: proxy-6176, replica count: 1
  I0513 20:09:24.208504      19 runners.go:198] proxy-service-qxjq2 Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0513 20:09:25.209228      19 runners.go:198] proxy-service-qxjq2 Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0513 20:09:25.213407 19 proxy.go:230] setup took 2.135682666s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 05/13/24 20:09:25.213
  I0513 20:09:25.243380 19 proxy.go:558] (0) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:162/proxy/: bar (200; 29.657654ms)
  I0513 20:09:25.252746 19 proxy.go:558] (0) /api/v1/namespaces/proxy-6176/services/proxy-service-qxjq2:portname2/proxy/: bar (200; 38.934108ms)
  I0513 20:09:25.252746 19 proxy.go:558] (0) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:162/proxy/: bar (200; 38.120237ms)
  I0513 20:09:25.252820 19 proxy.go:558] (0) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:160/proxy/: foo (200; 39.233692ms)
  I0513 20:09:25.252783 19 proxy.go:558] (0) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb/proxy/rewriteme">test</a> (200; 38.509763ms)
  I0513 20:09:25.257730 19 proxy.go:558] (0) /api/v1/namespaces/proxy-6176/services/proxy-service-qxjq2:portname1/proxy/: foo (200; 43.561169ms)
  I0513 20:09:25.259153 19 proxy.go:558] (0) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:160/proxy/: foo (200; 45.073299ms)
  I0513 20:09:25.259520 19 proxy.go:558] (0) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:1080/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:1080/proxy/rewriteme">test<... (200; 44.979338ms)
  I0513 20:09:25.260111 19 proxy.go:558] (0) /api/v1/namespaces/proxy-6176/services/http:proxy-service-qxjq2:portname2/proxy/: bar (200; 46.210135ms)
  I0513 20:09:25.260146 19 proxy.go:558] (0) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:1080/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:1080/proxy/rewriteme">... (200; 46.611279ms)
  I0513 20:09:25.264789 19 proxy.go:558] (0) /api/v1/namespaces/proxy-6176/services/http:proxy-service-qxjq2:portname1/proxy/: foo (200; 49.966344ms)
  I0513 20:09:25.266196 19 proxy.go:558] (0) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:460/proxy/: tls baz (200; 51.287332ms)
  I0513 20:09:25.266244 19 proxy.go:558] (0) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:443/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:443/proxy/tlsrewritem... (200; 51.880769ms)
  I0513 20:09:25.266435 19 proxy.go:558] (0) /api/v1/namespaces/proxy-6176/services/https:proxy-service-qxjq2:tlsportname1/proxy/: tls baz (200; 51.436204ms)
  I0513 20:09:25.266480 19 proxy.go:558] (0) /api/v1/namespaces/proxy-6176/services/https:proxy-service-qxjq2:tlsportname2/proxy/: tls qux (200; 52.490638ms)
  I0513 20:09:25.266550 19 proxy.go:558] (0) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:462/proxy/: tls qux (200; 52.106063ms)
  I0513 20:09:25.274293 19 proxy.go:558] (1) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:443/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:443/proxy/tlsrewritem... (200; 7.436829ms)
  I0513 20:09:25.274896 19 proxy.go:558] (1) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb/proxy/rewriteme">test</a> (200; 8.30393ms)
  I0513 20:09:25.276288 19 proxy.go:558] (1) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:160/proxy/: foo (200; 8.332391ms)
  I0513 20:09:25.279179 19 proxy.go:558] (1) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:460/proxy/: tls baz (200; 12.226152ms)
  I0513 20:09:25.279239 19 proxy.go:558] (1) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:162/proxy/: bar (200; 12.0466ms)
  I0513 20:09:25.281048 19 proxy.go:558] (1) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:1080/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:1080/proxy/rewriteme">test<... (200; 13.938525ms)
  I0513 20:09:25.281121 19 proxy.go:558] (1) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:162/proxy/: bar (200; 13.407508ms)
  I0513 20:09:25.281977 19 proxy.go:558] (1) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:160/proxy/: foo (200; 14.34748ms)
  I0513 20:09:25.281977 19 proxy.go:558] (1) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:1080/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:1080/proxy/rewriteme">... (200; 14.681885ms)
  I0513 20:09:25.282440 19 proxy.go:558] (1) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:462/proxy/: tls qux (200; 15.415585ms)
  I0513 20:09:25.282438 19 proxy.go:558] (1) /api/v1/namespaces/proxy-6176/services/https:proxy-service-qxjq2:tlsportname1/proxy/: tls baz (200; 14.966129ms)
  I0513 20:09:25.282819 19 proxy.go:558] (1) /api/v1/namespaces/proxy-6176/services/http:proxy-service-qxjq2:portname1/proxy/: foo (200; 15.418484ms)
  I0513 20:09:25.283235 19 proxy.go:558] (1) /api/v1/namespaces/proxy-6176/services/proxy-service-qxjq2:portname2/proxy/: bar (200; 15.438965ms)
  I0513 20:09:25.283376 19 proxy.go:558] (1) /api/v1/namespaces/proxy-6176/services/https:proxy-service-qxjq2:tlsportname2/proxy/: tls qux (200; 15.8244ms)
  I0513 20:09:25.283592 19 proxy.go:558] (1) /api/v1/namespaces/proxy-6176/services/http:proxy-service-qxjq2:portname2/proxy/: bar (200; 15.715399ms)
  I0513 20:09:25.283924 19 proxy.go:558] (1) /api/v1/namespaces/proxy-6176/services/proxy-service-qxjq2:portname1/proxy/: foo (200; 15.896541ms)
  I0513 20:09:25.294047 19 proxy.go:558] (2) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:1080/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:1080/proxy/rewriteme">test<... (200; 9.554637ms)
  I0513 20:09:25.294491 19 proxy.go:558] (2) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:162/proxy/: bar (200; 9.832211ms)
  I0513 20:09:25.294706 19 proxy.go:558] (2) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:160/proxy/: foo (200; 10.712973ms)
  I0513 20:09:25.294874 19 proxy.go:558] (2) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:160/proxy/: foo (200; 10.470239ms)
  I0513 20:09:25.295768 19 proxy.go:558] (2) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb/proxy/rewriteme">test</a> (200; 11.456322ms)
  I0513 20:09:25.295988 19 proxy.go:558] (2) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:1080/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:1080/proxy/rewriteme">... (200; 11.359651ms)
  I0513 20:09:25.296004 19 proxy.go:558] (2) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:162/proxy/: bar (200; 11.482663ms)
  I0513 20:09:25.296030 19 proxy.go:558] (2) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:443/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:443/proxy/tlsrewritem... (200; 11.470582ms)
  I0513 20:09:25.296054 19 proxy.go:558] (2) /api/v1/namespaces/proxy-6176/services/proxy-service-qxjq2:portname2/proxy/: bar (200; 11.457873ms)
  I0513 20:09:25.296084 19 proxy.go:558] (2) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:460/proxy/: tls baz (200; 11.936849ms)
  I0513 20:09:25.296111 19 proxy.go:558] (2) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:462/proxy/: tls qux (200; 11.673425ms)
  I0513 20:09:25.298955 19 proxy.go:558] (2) /api/v1/namespaces/proxy-6176/services/http:proxy-service-qxjq2:portname2/proxy/: bar (200; 14.254529ms)
  I0513 20:09:25.298952 19 proxy.go:558] (2) /api/v1/namespaces/proxy-6176/services/proxy-service-qxjq2:portname1/proxy/: foo (200; 14.762016ms)
  I0513 20:09:25.299572 19 proxy.go:558] (2) /api/v1/namespaces/proxy-6176/services/https:proxy-service-qxjq2:tlsportname2/proxy/: tls qux (200; 14.837257ms)
  I0513 20:09:25.299570 19 proxy.go:558] (2) /api/v1/namespaces/proxy-6176/services/https:proxy-service-qxjq2:tlsportname1/proxy/: tls baz (200; 15.208852ms)
  I0513 20:09:25.299598 19 proxy.go:558] (2) /api/v1/namespaces/proxy-6176/services/http:proxy-service-qxjq2:portname1/proxy/: foo (200; 15.330064ms)
  I0513 20:09:25.307802 19 proxy.go:558] (3) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:443/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:443/proxy/tlsrewritem... (200; 8.092558ms)
  I0513 20:09:25.318653 19 proxy.go:558] (3) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb/proxy/rewriteme">test</a> (200; 18.672118ms)
  I0513 20:09:25.319210 19 proxy.go:558] (3) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:162/proxy/: bar (200; 18.83587ms)
  I0513 20:09:25.319444 19 proxy.go:558] (3) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:1080/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:1080/proxy/rewriteme">... (200; 19.148924ms)
  I0513 20:09:25.320162 19 proxy.go:558] (3) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:1080/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:1080/proxy/rewriteme">test<... (200; 20.029136ms)
  I0513 20:09:25.320206 19 proxy.go:558] (3) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:162/proxy/: bar (200; 20.046306ms)
  I0513 20:09:25.320276 19 proxy.go:558] (3) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:160/proxy/: foo (200; 20.082116ms)
  I0513 20:09:25.321201 19 proxy.go:558] (3) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:160/proxy/: foo (200; 21.190422ms)
  I0513 20:09:25.321589 19 proxy.go:558] (3) /api/v1/namespaces/proxy-6176/services/http:proxy-service-qxjq2:portname1/proxy/: foo (200; 21.360224ms)
  I0513 20:09:25.322248 19 proxy.go:558] (3) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:462/proxy/: tls qux (200; 22.147535ms)
  I0513 20:09:25.322883 19 proxy.go:558] (3) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:460/proxy/: tls baz (200; 22.820963ms)
  I0513 20:09:25.323347 19 proxy.go:558] (3) /api/v1/namespaces/proxy-6176/services/https:proxy-service-qxjq2:tlsportname1/proxy/: tls baz (200; 23.087087ms)
  I0513 20:09:25.323847 19 proxy.go:558] (3) /api/v1/namespaces/proxy-6176/services/proxy-service-qxjq2:portname2/proxy/: bar (200; 23.509713ms)
  I0513 20:09:25.324024 19 proxy.go:558] (3) /api/v1/namespaces/proxy-6176/services/proxy-service-qxjq2:portname1/proxy/: foo (200; 24.08218ms)
  I0513 20:09:25.324380 19 proxy.go:558] (3) /api/v1/namespaces/proxy-6176/services/http:proxy-service-qxjq2:portname2/proxy/: bar (200; 23.973279ms)
  I0513 20:09:25.324760 19 proxy.go:558] (3) /api/v1/namespaces/proxy-6176/services/https:proxy-service-qxjq2:tlsportname2/proxy/: tls qux (200; 25.046743ms)
  I0513 20:09:25.334852 19 proxy.go:558] (4) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:1080/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:1080/proxy/rewriteme">... (200; 9.7975ms)
  I0513 20:09:25.335301 19 proxy.go:558] (4) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:160/proxy/: foo (200; 9.834731ms)
  I0513 20:09:25.335443 19 proxy.go:558] (4) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:1080/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:1080/proxy/rewriteme">test<... (200; 9.202332ms)
  I0513 20:09:25.335638 19 proxy.go:558] (4) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:162/proxy/: bar (200; 10.089154ms)
  I0513 20:09:25.339959 19 proxy.go:558] (4) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:162/proxy/: bar (200; 15.08048ms)
  I0513 20:09:25.340216 19 proxy.go:558] (4) /api/v1/namespaces/proxy-6176/services/http:proxy-service-qxjq2:portname2/proxy/: bar (200; 15.279124ms)
  I0513 20:09:25.340729 19 proxy.go:558] (4) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:443/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:443/proxy/tlsrewritem... (200; 15.00269ms)
  I0513 20:09:25.340765 19 proxy.go:558] (4) /api/v1/namespaces/proxy-6176/services/https:proxy-service-qxjq2:tlsportname1/proxy/: tls baz (200; 15.502936ms)
  I0513 20:09:25.340955 19 proxy.go:558] (4) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:460/proxy/: tls baz (200; 14.811988ms)
  I0513 20:09:25.341714 19 proxy.go:558] (4) /api/v1/namespaces/proxy-6176/services/https:proxy-service-qxjq2:tlsportname2/proxy/: tls qux (200; 16.341168ms)
  I0513 20:09:25.341738 19 proxy.go:558] (4) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:462/proxy/: tls qux (200; 15.674419ms)
  I0513 20:09:25.342136 19 proxy.go:558] (4) /api/v1/namespaces/proxy-6176/services/http:proxy-service-qxjq2:portname1/proxy/: foo (200; 16.974136ms)
  I0513 20:09:25.342186 19 proxy.go:558] (4) /api/v1/namespaces/proxy-6176/services/proxy-service-qxjq2:portname1/proxy/: foo (200; 16.292757ms)
  I0513 20:09:25.342616 19 proxy.go:558] (4) /api/v1/namespaces/proxy-6176/services/proxy-service-qxjq2:portname2/proxy/: bar (200; 16.979356ms)
  I0513 20:09:25.342838 19 proxy.go:558] (4) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb/proxy/rewriteme">test</a> (200; 16.861304ms)
  I0513 20:09:25.343007 19 proxy.go:558] (4) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:160/proxy/: foo (200; 17.196279ms)
  I0513 20:09:25.354083 19 proxy.go:558] (5) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:1080/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:1080/proxy/rewriteme">... (200; 10.374898ms)
  I0513 20:09:25.356360 19 proxy.go:558] (5) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:162/proxy/: bar (200; 12.06646ms)
  I0513 20:09:25.356333 19 proxy.go:558] (5) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:160/proxy/: foo (200; 12.135542ms)
  I0513 20:09:25.356789 19 proxy.go:558] (5) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:160/proxy/: foo (200; 12.397195ms)
  I0513 20:09:25.356843 19 proxy.go:558] (5) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:1080/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:1080/proxy/rewriteme">test<... (200; 13.309017ms)
  I0513 20:09:25.356877 19 proxy.go:558] (5) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:162/proxy/: bar (200; 13.261356ms)
  I0513 20:09:25.356902 19 proxy.go:558] (5) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb/proxy/rewriteme">test</a> (200; 12.231442ms)
  I0513 20:09:25.357555 19 proxy.go:558] (5) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:462/proxy/: tls qux (200; 14.106417ms)
  I0513 20:09:25.357649 19 proxy.go:558] (5) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:443/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:443/proxy/tlsrewritem... (200; 14.33526ms)
  I0513 20:09:25.360302 19 proxy.go:558] (5) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:460/proxy/: tls baz (200; 16.950286ms)
  I0513 20:09:25.363177 19 proxy.go:558] (5) /api/v1/namespaces/proxy-6176/services/https:proxy-service-qxjq2:tlsportname1/proxy/: tls baz (200; 20.090857ms)
  I0513 20:09:25.364034 19 proxy.go:558] (5) /api/v1/namespaces/proxy-6176/services/proxy-service-qxjq2:portname1/proxy/: foo (200; 19.469049ms)
  I0513 20:09:25.364249 19 proxy.go:558] (5) /api/v1/namespaces/proxy-6176/services/proxy-service-qxjq2:portname2/proxy/: bar (200; 20.213159ms)
  I0513 20:09:25.364286 19 proxy.go:558] (5) /api/v1/namespaces/proxy-6176/services/https:proxy-service-qxjq2:tlsportname2/proxy/: tls qux (200; 20.175708ms)
  I0513 20:09:25.364304 19 proxy.go:558] (5) /api/v1/namespaces/proxy-6176/services/http:proxy-service-qxjq2:portname2/proxy/: bar (200; 19.824444ms)
  I0513 20:09:25.364475 19 proxy.go:558] (5) /api/v1/namespaces/proxy-6176/services/http:proxy-service-qxjq2:portname1/proxy/: foo (200; 20.681785ms)
  I0513 20:09:25.373368 19 proxy.go:558] (6) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:160/proxy/: foo (200; 8.749336ms)
  I0513 20:09:25.377320 19 proxy.go:558] (6) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:1080/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:1080/proxy/rewriteme">test<... (200; 12.584028ms)
  I0513 20:09:25.377855 19 proxy.go:558] (6) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb/proxy/rewriteme">test</a> (200; 12.846331ms)
  I0513 20:09:25.378051 19 proxy.go:558] (6) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:460/proxy/: tls baz (200; 13.003693ms)
  I0513 20:09:25.378156 19 proxy.go:558] (6) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:1080/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:1080/proxy/rewriteme">... (200; 13.52748ms)
  I0513 20:09:25.378234 19 proxy.go:558] (6) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:162/proxy/: bar (200; 13.438758ms)
  I0513 20:09:25.378261 19 proxy.go:558] (6) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:160/proxy/: foo (200; 13.348857ms)
  I0513 20:09:25.378281 19 proxy.go:558] (6) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:443/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:443/proxy/tlsrewritem... (200; 13.144694ms)
  I0513 20:09:25.378330 19 proxy.go:558] (6) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:462/proxy/: tls qux (200; 13.654972ms)
  I0513 20:09:25.378392 19 proxy.go:558] (6) /api/v1/namespaces/proxy-6176/services/proxy-service-qxjq2:portname1/proxy/: foo (200; 13.421359ms)
  I0513 20:09:25.378415 19 proxy.go:558] (6) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:162/proxy/: bar (200; 13.335247ms)
  I0513 20:09:25.378444 19 proxy.go:558] (6) /api/v1/namespaces/proxy-6176/services/proxy-service-qxjq2:portname2/proxy/: bar (200; 13.634952ms)
  I0513 20:09:25.379235 19 proxy.go:558] (6) /api/v1/namespaces/proxy-6176/services/http:proxy-service-qxjq2:portname1/proxy/: foo (200; 14.059417ms)
  I0513 20:09:25.379264 19 proxy.go:558] (6) /api/v1/namespaces/proxy-6176/services/http:proxy-service-qxjq2:portname2/proxy/: bar (200; 14.422312ms)
  I0513 20:09:25.379284 19 proxy.go:558] (6) /api/v1/namespaces/proxy-6176/services/https:proxy-service-qxjq2:tlsportname2/proxy/: tls qux (200; 14.406552ms)
  I0513 20:09:25.382594 19 proxy.go:558] (6) /api/v1/namespaces/proxy-6176/services/https:proxy-service-qxjq2:tlsportname1/proxy/: tls baz (200; 17.384101ms)
  I0513 20:09:25.389852 19 proxy.go:558] (7) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:160/proxy/: foo (200; 6.960242ms)
  I0513 20:09:25.392179 19 proxy.go:558] (7) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:162/proxy/: bar (200; 9.151801ms)
  I0513 20:09:25.392511 19 proxy.go:558] (7) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:460/proxy/: tls baz (200; 9.378365ms)
  I0513 20:09:25.393461 19 proxy.go:558] (7) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:1080/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:1080/proxy/rewriteme">... (200; 10.50846ms)
  I0513 20:09:25.393913 19 proxy.go:558] (7) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:1080/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:1080/proxy/rewriteme">test<... (200; 10.941725ms)
  I0513 20:09:25.394392 19 proxy.go:558] (7) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:443/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:443/proxy/tlsrewritem... (200; 11.314781ms)
  I0513 20:09:25.394694 19 proxy.go:558] (7) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:162/proxy/: bar (200; 11.380771ms)
  I0513 20:09:25.394781 19 proxy.go:558] (7) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:160/proxy/: foo (200; 11.502273ms)
  I0513 20:09:25.395068 19 proxy.go:558] (7) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb/proxy/rewriteme">test</a> (200; 11.683606ms)
  I0513 20:09:25.395759 19 proxy.go:558] (7) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:462/proxy/: tls qux (200; 12.301264ms)
  I0513 20:09:25.395765 19 proxy.go:558] (7) /api/v1/namespaces/proxy-6176/services/https:proxy-service-qxjq2:tlsportname2/proxy/: tls qux (200; 12.521056ms)
  I0513 20:09:25.396774 19 proxy.go:558] (7) /api/v1/namespaces/proxy-6176/services/http:proxy-service-qxjq2:portname1/proxy/: foo (200; 13.351318ms)
  I0513 20:09:25.397065 19 proxy.go:558] (7) /api/v1/namespaces/proxy-6176/services/proxy-service-qxjq2:portname1/proxy/: foo (200; 13.720272ms)
  I0513 20:09:25.397139 19 proxy.go:558] (7) /api/v1/namespaces/proxy-6176/services/proxy-service-qxjq2:portname2/proxy/: bar (200; 13.968555ms)
  I0513 20:09:25.397239 19 proxy.go:558] (7) /api/v1/namespaces/proxy-6176/services/https:proxy-service-qxjq2:tlsportname1/proxy/: tls baz (200; 13.748503ms)
  I0513 20:09:25.397425 19 proxy.go:558] (7) /api/v1/namespaces/proxy-6176/services/http:proxy-service-qxjq2:portname2/proxy/: bar (200; 14.216989ms)
  I0513 20:09:25.406196 19 proxy.go:558] (8) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:160/proxy/: foo (200; 7.800234ms)
  I0513 20:09:25.406338 19 proxy.go:558] (8) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:1080/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:1080/proxy/rewriteme">... (200; 8.164198ms)
  I0513 20:09:25.407226 19 proxy.go:558] (8) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb/proxy/rewriteme">test</a> (200; 8.621064ms)
  I0513 20:09:25.407583 19 proxy.go:558] (8) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:443/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:443/proxy/tlsrewritem... (200; 8.388471ms)
  I0513 20:09:25.407998 19 proxy.go:558] (8) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:162/proxy/: bar (200; 9.530016ms)
  I0513 20:09:25.408410 19 proxy.go:558] (8) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:462/proxy/: tls qux (200; 10.816534ms)
  I0513 20:09:25.408455 19 proxy.go:558] (8) /api/v1/namespaces/proxy-6176/services/https:proxy-service-qxjq2:tlsportname1/proxy/: tls baz (200; 10.490309ms)
  I0513 20:09:25.409866 19 proxy.go:558] (8) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:160/proxy/: foo (200; 11.182638ms)
  I0513 20:09:25.410327 19 proxy.go:558] (8) /api/v1/namespaces/proxy-6176/services/proxy-service-qxjq2:portname2/proxy/: bar (200; 12.183411ms)
  I0513 20:09:25.411465 19 proxy.go:558] (8) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:460/proxy/: tls baz (200; 12.10655ms)
  I0513 20:09:25.411562 19 proxy.go:558] (8) /api/v1/namespaces/proxy-6176/services/http:proxy-service-qxjq2:portname1/proxy/: foo (200; 13.664461ms)
  I0513 20:09:25.412178 19 proxy.go:558] (8) /api/v1/namespaces/proxy-6176/services/http:proxy-service-qxjq2:portname2/proxy/: bar (200; 13.951125ms)
  I0513 20:09:25.412182 19 proxy.go:558] (8) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:1080/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:1080/proxy/rewriteme">test<... (200; 13.388148ms)
  I0513 20:09:25.412596 19 proxy.go:558] (8) /api/v1/namespaces/proxy-6176/services/proxy-service-qxjq2:portname1/proxy/: foo (200; 14.058247ms)
  I0513 20:09:25.413227 19 proxy.go:558] (8) /api/v1/namespaces/proxy-6176/services/https:proxy-service-qxjq2:tlsportname2/proxy/: tls qux (200; 14.912858ms)
  I0513 20:09:25.413237 19 proxy.go:558] (8) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:162/proxy/: bar (200; 14.368501ms)
  I0513 20:09:25.421864 19 proxy.go:558] (9) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:160/proxy/: foo (200; 8.385032ms)
  I0513 20:09:25.422592 19 proxy.go:558] (9) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb/proxy/rewriteme">test</a> (200; 9.150501ms)
  I0513 20:09:25.422646 19 proxy.go:558] (9) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:160/proxy/: foo (200; 9.005089ms)
  I0513 20:09:25.422917 19 proxy.go:558] (9) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:1080/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:1080/proxy/rewriteme">test<... (200; 9.342104ms)
  I0513 20:09:25.423376 19 proxy.go:558] (9) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:162/proxy/: bar (200; 9.77036ms)
  I0513 20:09:25.423435 19 proxy.go:558] (9) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:462/proxy/: tls qux (200; 9.892912ms)
  I0513 20:09:25.423463 19 proxy.go:558] (9) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:460/proxy/: tls baz (200; 9.957792ms)
  I0513 20:09:25.424231 19 proxy.go:558] (9) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:162/proxy/: bar (200; 10.424368ms)
  I0513 20:09:25.424272 19 proxy.go:558] (9) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:1080/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:1080/proxy/rewriteme">... (200; 10.53172ms)
  I0513 20:09:25.425401 19 proxy.go:558] (9) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:443/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:443/proxy/tlsrewritem... (200; 12.118691ms)
  I0513 20:09:25.426232 19 proxy.go:558] (9) /api/v1/namespaces/proxy-6176/services/proxy-service-qxjq2:portname2/proxy/: bar (200; 12.457476ms)
  I0513 20:09:25.426799 19 proxy.go:558] (9) /api/v1/namespaces/proxy-6176/services/proxy-service-qxjq2:portname1/proxy/: foo (200; 13.395428ms)
  I0513 20:09:25.427249 19 proxy.go:558] (9) /api/v1/namespaces/proxy-6176/services/https:proxy-service-qxjq2:tlsportname1/proxy/: tls baz (200; 13.53966ms)
  I0513 20:09:25.427287 19 proxy.go:558] (9) /api/v1/namespaces/proxy-6176/services/http:proxy-service-qxjq2:portname1/proxy/: foo (200; 13.612151ms)
  I0513 20:09:25.427296 19 proxy.go:558] (9) /api/v1/namespaces/proxy-6176/services/https:proxy-service-qxjq2:tlsportname2/proxy/: tls qux (200; 13.953675ms)
  I0513 20:09:25.427318 19 proxy.go:558] (9) /api/v1/namespaces/proxy-6176/services/http:proxy-service-qxjq2:portname2/proxy/: bar (200; 13.481289ms)
  I0513 20:09:25.437518 19 proxy.go:558] (10) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:160/proxy/: foo (200; 10.047874ms)
  I0513 20:09:25.438085 19 proxy.go:558] (10) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:443/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:443/proxy/tlsrewritem... (200; 9.527676ms)
  I0513 20:09:25.438098 19 proxy.go:558] (10) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:1080/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:1080/proxy/rewriteme">... (200; 10.698052ms)
  I0513 20:09:25.439401 19 proxy.go:558] (10) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:162/proxy/: bar (200; 10.919965ms)
  I0513 20:09:25.439606 19 proxy.go:558] (10) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:160/proxy/: foo (200; 11.611474ms)
  I0513 20:09:25.439635 19 proxy.go:558] (10) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb/proxy/rewriteme">test</a> (200; 11.402861ms)
  I0513 20:09:25.439658 19 proxy.go:558] (10) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:162/proxy/: bar (200; 11.587604ms)
  I0513 20:09:25.439687 19 proxy.go:558] (10) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:460/proxy/: tls baz (200; 11.375431ms)
  I0513 20:09:25.439704 19 proxy.go:558] (10) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:1080/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:1080/proxy/rewriteme">test<... (200; 11.30896ms)
  I0513 20:09:25.439832 19 proxy.go:558] (10) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:462/proxy/: tls qux (200; 11.025776ms)
  I0513 20:09:25.443922 19 proxy.go:558] (10) /api/v1/namespaces/proxy-6176/services/proxy-service-qxjq2:portname2/proxy/: bar (200; 16.337237ms)
  I0513 20:09:25.444136 19 proxy.go:558] (10) /api/v1/namespaces/proxy-6176/services/https:proxy-service-qxjq2:tlsportname1/proxy/: tls baz (200; 15.250873ms)
  I0513 20:09:25.445005 19 proxy.go:558] (10) /api/v1/namespaces/proxy-6176/services/proxy-service-qxjq2:portname1/proxy/: foo (200; 16.852813ms)
  I0513 20:09:25.445005 19 proxy.go:558] (10) /api/v1/namespaces/proxy-6176/services/http:proxy-service-qxjq2:portname2/proxy/: bar (200; 17.188088ms)
  I0513 20:09:25.445034 19 proxy.go:558] (10) /api/v1/namespaces/proxy-6176/services/http:proxy-service-qxjq2:portname1/proxy/: foo (200; 16.394068ms)
  I0513 20:09:25.445305 19 proxy.go:558] (10) /api/v1/namespaces/proxy-6176/services/https:proxy-service-qxjq2:tlsportname2/proxy/: tls qux (200; 17.394511ms)
  I0513 20:09:25.454220 19 proxy.go:558] (11) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb/proxy/rewriteme">test</a> (200; 7.938576ms)
  I0513 20:09:25.455188 19 proxy.go:558] (11) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:160/proxy/: foo (200; 9.065581ms)
  I0513 20:09:25.456871 19 proxy.go:558] (11) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:460/proxy/: tls baz (200; 10.444489ms)
  I0513 20:09:25.457025 19 proxy.go:558] (11) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:462/proxy/: tls qux (200; 10.52024ms)
  I0513 20:09:25.457055 19 proxy.go:558] (11) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:1080/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:1080/proxy/rewriteme">... (200; 10.162695ms)
  I0513 20:09:25.457112 19 proxy.go:558] (11) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:162/proxy/: bar (200; 10.319327ms)
  I0513 20:09:25.457689 19 proxy.go:558] (11) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:1080/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:1080/proxy/rewriteme">test<... (200; 11.107308ms)
  I0513 20:09:25.457718 19 proxy.go:558] (11) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:160/proxy/: foo (200; 10.311527ms)
  I0513 20:09:25.457748 19 proxy.go:558] (11) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:443/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:443/proxy/tlsrewritem... (200; 11.400232ms)
  I0513 20:09:25.457978 19 proxy.go:558] (11) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:162/proxy/: bar (200; 10.48859ms)
  I0513 20:09:25.458396 19 proxy.go:558] (11) /api/v1/namespaces/proxy-6176/services/http:proxy-service-qxjq2:portname2/proxy/: bar (200; 12.420255ms)
  I0513 20:09:25.459434 19 proxy.go:558] (11) /api/v1/namespaces/proxy-6176/services/https:proxy-service-qxjq2:tlsportname1/proxy/: tls baz (200; 12.286263ms)
  I0513 20:09:25.461410 19 proxy.go:558] (11) /api/v1/namespaces/proxy-6176/services/http:proxy-service-qxjq2:portname1/proxy/: foo (200; 14.341001ms)
  I0513 20:09:25.461549 19 proxy.go:558] (11) /api/v1/namespaces/proxy-6176/services/proxy-service-qxjq2:portname1/proxy/: foo (200; 15.347054ms)
  I0513 20:09:25.461828 19 proxy.go:558] (11) /api/v1/namespaces/proxy-6176/services/proxy-service-qxjq2:portname2/proxy/: bar (200; 14.224579ms)
  I0513 20:09:25.461885 19 proxy.go:558] (11) /api/v1/namespaces/proxy-6176/services/https:proxy-service-qxjq2:tlsportname2/proxy/: tls qux (200; 14.571384ms)
  I0513 20:09:25.469732 19 proxy.go:558] (12) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:162/proxy/: bar (200; 7.442689ms)
  I0513 20:09:25.470700 19 proxy.go:558] (12) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:460/proxy/: tls baz (200; 8.26561ms)
  I0513 20:09:25.471260 19 proxy.go:558] (12) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:462/proxy/: tls qux (200; 8.745286ms)
  I0513 20:09:25.471279 19 proxy.go:558] (12) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:1080/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:1080/proxy/rewriteme">... (200; 8.22371ms)
  I0513 20:09:25.471646 19 proxy.go:558] (12) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:1080/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:1080/proxy/rewriteme">test<... (200; 8.814238ms)
  I0513 20:09:25.471956 19 proxy.go:558] (12) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:160/proxy/: foo (200; 8.506183ms)
  I0513 20:09:25.471976 19 proxy.go:558] (12) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:162/proxy/: bar (200; 8.802817ms)
  I0513 20:09:25.472574 19 proxy.go:558] (12) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:443/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:443/proxy/tlsrewritem... (200; 10.223416ms)
  I0513 20:09:25.472578 19 proxy.go:558] (12) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb/proxy/rewriteme">test</a> (200; 9.04461ms)
  I0513 20:09:25.473563 19 proxy.go:558] (12) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:160/proxy/: foo (200; 9.855861ms)
  I0513 20:09:25.476030 19 proxy.go:558] (12) /api/v1/namespaces/proxy-6176/services/http:proxy-service-qxjq2:portname2/proxy/: bar (200; 12.75703ms)
  I0513 20:09:25.476312 19 proxy.go:558] (12) /api/v1/namespaces/proxy-6176/services/http:proxy-service-qxjq2:portname1/proxy/: foo (200; 14.297569ms)
  I0513 20:09:25.476415 19 proxy.go:558] (12) /api/v1/namespaces/proxy-6176/services/https:proxy-service-qxjq2:tlsportname1/proxy/: tls baz (200; 13.465939ms)
  I0513 20:09:25.476348 19 proxy.go:558] (12) /api/v1/namespaces/proxy-6176/services/https:proxy-service-qxjq2:tlsportname2/proxy/: tls qux (200; 12.986273ms)
  I0513 20:09:25.479166 19 proxy.go:558] (12) /api/v1/namespaces/proxy-6176/services/proxy-service-qxjq2:portname2/proxy/: bar (200; 15.542756ms)
  I0513 20:09:25.479624 19 proxy.go:558] (12) /api/v1/namespaces/proxy-6176/services/proxy-service-qxjq2:portname1/proxy/: foo (200; 17.646465ms)
  I0513 20:09:25.489797 19 proxy.go:558] (13) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:1080/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:1080/proxy/rewriteme">test<... (200; 9.922312ms)
  I0513 20:09:25.489970 19 proxy.go:558] (13) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:1080/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:1080/proxy/rewriteme">... (200; 10.263906ms)
  I0513 20:09:25.490408 19 proxy.go:558] (13) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:162/proxy/: bar (200; 10.441049ms)
  I0513 20:09:25.490694 19 proxy.go:558] (13) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:162/proxy/: bar (200; 9.803171ms)
  I0513 20:09:25.490945 19 proxy.go:558] (13) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:460/proxy/: tls baz (200; 10.812614ms)
  I0513 20:09:25.490990 19 proxy.go:558] (13) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:443/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:443/proxy/tlsrewritem... (200; 10.933336ms)
  I0513 20:09:25.491016 19 proxy.go:558] (13) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:462/proxy/: tls qux (200; 10.803164ms)
  I0513 20:09:25.497631 19 proxy.go:558] (13) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:160/proxy/: foo (200; 17.944069ms)
  I0513 20:09:25.497645 19 proxy.go:558] (13) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:160/proxy/: foo (200; 17.145538ms)
  I0513 20:09:25.498945 19 proxy.go:558] (13) /api/v1/namespaces/proxy-6176/services/proxy-service-qxjq2:portname1/proxy/: foo (200; 18.136841ms)
  I0513 20:09:25.498964 19 proxy.go:558] (13) /api/v1/namespaces/proxy-6176/services/https:proxy-service-qxjq2:tlsportname2/proxy/: tls qux (200; 18.239352ms)
  I0513 20:09:25.498987 19 proxy.go:558] (13) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb/proxy/rewriteme">test</a> (200; 18.02029ms)
  I0513 20:09:25.499347 19 proxy.go:558] (13) /api/v1/namespaces/proxy-6176/services/http:proxy-service-qxjq2:portname1/proxy/: foo (200; 19.052554ms)
  I0513 20:09:25.499874 19 proxy.go:558] (13) /api/v1/namespaces/proxy-6176/services/http:proxy-service-qxjq2:portname2/proxy/: bar (200; 19.233786ms)
  I0513 20:09:25.500254 19 proxy.go:558] (13) /api/v1/namespaces/proxy-6176/services/https:proxy-service-qxjq2:tlsportname1/proxy/: tls baz (200; 19.882234ms)
  I0513 20:09:25.500666 19 proxy.go:558] (13) /api/v1/namespaces/proxy-6176/services/proxy-service-qxjq2:portname2/proxy/: bar (200; 20.104517ms)
  I0513 20:09:25.506661 19 proxy.go:558] (14) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:1080/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:1080/proxy/rewriteme">... (200; 5.534054ms)
  I0513 20:09:25.509078 19 proxy.go:558] (14) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:160/proxy/: foo (200; 6.78872ms)
  I0513 20:09:25.509642 19 proxy.go:558] (14) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:1080/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:1080/proxy/rewriteme">test<... (200; 7.143154ms)
  I0513 20:09:25.510179 19 proxy.go:558] (14) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:160/proxy/: foo (200; 8.388972ms)
  I0513 20:09:25.510351 19 proxy.go:558] (14) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb/proxy/rewriteme">test</a> (200; 8.29347ms)
  I0513 20:09:25.510611 19 proxy.go:558] (14) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:462/proxy/: tls qux (200; 9.83326ms)
  I0513 20:09:25.511110 19 proxy.go:558] (14) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:162/proxy/: bar (200; 8.499393ms)
  I0513 20:09:25.511110 19 proxy.go:558] (14) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:162/proxy/: bar (200; 9.224403ms)
  I0513 20:09:25.511856 19 proxy.go:558] (14) /api/v1/namespaces/proxy-6176/services/https:proxy-service-qxjq2:tlsportname1/proxy/: tls baz (200; 10.860884ms)
  I0513 20:09:25.511885 19 proxy.go:558] (14) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:443/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:443/proxy/tlsrewritem... (200; 9.159961ms)
  I0513 20:09:25.512282 19 proxy.go:558] (14) /api/v1/namespaces/proxy-6176/services/proxy-service-qxjq2:portname1/proxy/: foo (200; 10.315087ms)
  I0513 20:09:25.512280 19 proxy.go:558] (14) /api/v1/namespaces/proxy-6176/services/https:proxy-service-qxjq2:tlsportname2/proxy/: tls qux (200; 10.579971ms)
  I0513 20:09:25.512479 19 proxy.go:558] (14) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:460/proxy/: tls baz (200; 9.643878ms)
  I0513 20:09:25.512908 19 proxy.go:558] (14) /api/v1/namespaces/proxy-6176/services/proxy-service-qxjq2:portname2/proxy/: bar (200; 11.545624ms)
  I0513 20:09:25.512956 19 proxy.go:558] (14) /api/v1/namespaces/proxy-6176/services/http:proxy-service-qxjq2:portname2/proxy/: bar (200; 11.473903ms)
  I0513 20:09:25.513140 19 proxy.go:558] (14) /api/v1/namespaces/proxy-6176/services/http:proxy-service-qxjq2:portname1/proxy/: foo (200; 12.241323ms)
  I0513 20:09:25.529320 19 proxy.go:558] (15) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:162/proxy/: bar (200; 15.280723ms)
  I0513 20:09:25.529476 19 proxy.go:558] (15) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:460/proxy/: tls baz (200; 14.937738ms)
  I0513 20:09:25.530272 19 proxy.go:558] (15) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:1080/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:1080/proxy/rewriteme">... (200; 16.609131ms)
  I0513 20:09:25.530405 19 proxy.go:558] (15) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:443/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:443/proxy/tlsrewritem... (200; 15.938081ms)
  I0513 20:09:25.530433 19 proxy.go:558] (15) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:160/proxy/: foo (200; 16.187595ms)
  I0513 20:09:25.531112 19 proxy.go:558] (15) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:1080/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:1080/proxy/rewriteme">test<... (200; 16.788273ms)
  I0513 20:09:25.531204 19 proxy.go:558] (15) /api/v1/namespaces/proxy-6176/services/http:proxy-service-qxjq2:portname2/proxy/: bar (200; 17.394041ms)
  I0513 20:09:25.531225 19 proxy.go:558] (15) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:160/proxy/: foo (200; 17.265999ms)
  I0513 20:09:25.531250 19 proxy.go:558] (15) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:162/proxy/: bar (200; 16.855504ms)
  I0513 20:09:25.531272 19 proxy.go:558] (15) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb/proxy/rewriteme">test</a> (200; 17.096737ms)
  I0513 20:09:25.531295 19 proxy.go:558] (15) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:462/proxy/: tls qux (200; 17.930998ms)
  I0513 20:09:25.534090 19 proxy.go:558] (15) /api/v1/namespaces/proxy-6176/services/proxy-service-qxjq2:portname1/proxy/: foo (200; 19.982175ms)
  I0513 20:09:25.534569 19 proxy.go:558] (15) /api/v1/namespaces/proxy-6176/services/http:proxy-service-qxjq2:portname1/proxy/: foo (200; 21.0718ms)
  I0513 20:09:25.534670 19 proxy.go:558] (15) /api/v1/namespaces/proxy-6176/services/https:proxy-service-qxjq2:tlsportname2/proxy/: tls qux (200; 20.789396ms)
  I0513 20:09:25.534816 19 proxy.go:558] (15) /api/v1/namespaces/proxy-6176/services/proxy-service-qxjq2:portname2/proxy/: bar (200; 21.07999ms)
  I0513 20:09:25.535141 19 proxy.go:558] (15) /api/v1/namespaces/proxy-6176/services/https:proxy-service-qxjq2:tlsportname1/proxy/: tls baz (200; 21.561476ms)
  I0513 20:09:25.544726 19 proxy.go:558] (16) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:162/proxy/: bar (200; 8.747996ms)
  I0513 20:09:25.548651 19 proxy.go:558] (16) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:462/proxy/: tls qux (200; 11.730306ms)
  I0513 20:09:25.549113 19 proxy.go:558] (16) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:160/proxy/: foo (200; 13.224456ms)
  I0513 20:09:25.549554 19 proxy.go:558] (16) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:1080/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:1080/proxy/rewriteme">... (200; 12.353364ms)
  I0513 20:09:25.549558 19 proxy.go:558] (16) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb/proxy/rewriteme">test</a> (200; 12.883461ms)
  I0513 20:09:25.549628 19 proxy.go:558] (16) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:1080/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:1080/proxy/rewriteme">test<... (200; 12.599308ms)
  I0513 20:09:25.549831 19 proxy.go:558] (16) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:162/proxy/: bar (200; 12.717909ms)
  I0513 20:09:25.550327 19 proxy.go:558] (16) /api/v1/namespaces/proxy-6176/services/http:proxy-service-qxjq2:portname1/proxy/: foo (200; 13.051183ms)
  I0513 20:09:25.550412 19 proxy.go:558] (16) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:443/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:443/proxy/tlsrewritem... (200; 13.653981ms)
  I0513 20:09:25.550433 19 proxy.go:558] (16) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:460/proxy/: tls baz (200; 13.596311ms)
  I0513 20:09:25.550454 19 proxy.go:558] (16) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:160/proxy/: foo (200; 14.055367ms)
  I0513 20:09:25.553269 19 proxy.go:558] (16) /api/v1/namespaces/proxy-6176/services/proxy-service-qxjq2:portname2/proxy/: bar (200; 17.208818ms)
  I0513 20:09:25.553308 19 proxy.go:558] (16) /api/v1/namespaces/proxy-6176/services/http:proxy-service-qxjq2:portname2/proxy/: bar (200; 17.159938ms)
  I0513 20:09:25.553517 19 proxy.go:558] (16) /api/v1/namespaces/proxy-6176/services/https:proxy-service-qxjq2:tlsportname1/proxy/: tls baz (200; 17.936479ms)
  I0513 20:09:25.553583 19 proxy.go:558] (16) /api/v1/namespaces/proxy-6176/services/https:proxy-service-qxjq2:tlsportname2/proxy/: tls qux (200; 17.785816ms)
  I0513 20:09:25.553942 19 proxy.go:558] (16) /api/v1/namespaces/proxy-6176/services/proxy-service-qxjq2:portname1/proxy/: foo (200; 17.456572ms)
  I0513 20:09:25.563051 19 proxy.go:558] (17) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:1080/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:1080/proxy/rewriteme">... (200; 7.753023ms)
  I0513 20:09:25.565837 19 proxy.go:558] (17) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:443/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:443/proxy/tlsrewritem... (200; 10.972085ms)
  I0513 20:09:25.566491 19 proxy.go:558] (17) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:1080/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:1080/proxy/rewriteme">test<... (200; 12.01268ms)
  I0513 20:09:25.566580 19 proxy.go:558] (17) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:160/proxy/: foo (200; 12.192622ms)
  I0513 20:09:25.566771 19 proxy.go:558] (17) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:162/proxy/: bar (200; 11.99186ms)
  I0513 20:09:25.566804 19 proxy.go:558] (17) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb/proxy/rewriteme">test</a> (200; 12.516196ms)
  I0513 20:09:25.566830 19 proxy.go:558] (17) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:162/proxy/: bar (200; 12.844061ms)
  I0513 20:09:25.566926 19 proxy.go:558] (17) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:460/proxy/: tls baz (200; 11.981269ms)
  I0513 20:09:25.567354 19 proxy.go:558] (17) /api/v1/namespaces/proxy-6176/services/proxy-service-qxjq2:portname1/proxy/: foo (200; 13.248557ms)
  I0513 20:09:25.567608 19 proxy.go:558] (17) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:160/proxy/: foo (200; 11.973429ms)
  I0513 20:09:25.567701 19 proxy.go:558] (17) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:462/proxy/: tls qux (200; 12.676478ms)
  I0513 20:09:25.568031 19 proxy.go:558] (17) /api/v1/namespaces/proxy-6176/services/https:proxy-service-qxjq2:tlsportname2/proxy/: tls qux (200; 12.476066ms)
  I0513 20:09:25.569502 19 proxy.go:558] (17) /api/v1/namespaces/proxy-6176/services/http:proxy-service-qxjq2:portname2/proxy/: bar (200; 14.049507ms)
  I0513 20:09:25.569839 19 proxy.go:558] (17) /api/v1/namespaces/proxy-6176/services/http:proxy-service-qxjq2:portname1/proxy/: foo (200; 14.673375ms)
  I0513 20:09:25.569935 19 proxy.go:558] (17) /api/v1/namespaces/proxy-6176/services/https:proxy-service-qxjq2:tlsportname1/proxy/: tls baz (200; 14.727206ms)
  I0513 20:09:25.570286 19 proxy.go:558] (17) /api/v1/namespaces/proxy-6176/services/proxy-service-qxjq2:portname2/proxy/: bar (200; 14.916999ms)
  I0513 20:09:25.578549 19 proxy.go:558] (18) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:160/proxy/: foo (200; 8.203709ms)
  I0513 20:09:25.579940 19 proxy.go:558] (18) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:160/proxy/: foo (200; 9.085541ms)
  I0513 20:09:25.580109 19 proxy.go:558] (18) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:1080/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:1080/proxy/rewriteme">test<... (200; 9.605338ms)
  I0513 20:09:25.580141 19 proxy.go:558] (18) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:462/proxy/: tls qux (200; 9.335945ms)
  I0513 20:09:25.580999 19 proxy.go:558] (18) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:162/proxy/: bar (200; 10.455999ms)
  I0513 20:09:25.580999 19 proxy.go:558] (18) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:162/proxy/: bar (200; 10.111944ms)
  I0513 20:09:25.581991 19 proxy.go:558] (18) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb/proxy/rewriteme">test</a> (200; 11.035017ms)
  I0513 20:09:25.582018 19 proxy.go:558] (18) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:1080/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:1080/proxy/rewriteme">... (200; 11.622735ms)
  I0513 20:09:25.582054 19 proxy.go:558] (18) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:460/proxy/: tls baz (200; 11.373051ms)
  I0513 20:09:25.582520 19 proxy.go:558] (18) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:443/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:443/proxy/tlsrewritem... (200; 11.929948ms)
  I0513 20:09:25.582722 19 proxy.go:558] (18) /api/v1/namespaces/proxy-6176/services/http:proxy-service-qxjq2:portname2/proxy/: bar (200; 12.075691ms)
  I0513 20:09:25.583264 19 proxy.go:558] (18) /api/v1/namespaces/proxy-6176/services/http:proxy-service-qxjq2:portname1/proxy/: foo (200; 12.268903ms)
  I0513 20:09:25.583527 19 proxy.go:558] (18) /api/v1/namespaces/proxy-6176/services/proxy-service-qxjq2:portname2/proxy/: bar (200; 13.065624ms)
  I0513 20:09:25.583716 19 proxy.go:558] (18) /api/v1/namespaces/proxy-6176/services/proxy-service-qxjq2:portname1/proxy/: foo (200; 12.79361ms)
  I0513 20:09:25.584153 19 proxy.go:558] (18) /api/v1/namespaces/proxy-6176/services/https:proxy-service-qxjq2:tlsportname2/proxy/: tls qux (200; 13.430859ms)
  I0513 20:09:25.584476 19 proxy.go:558] (18) /api/v1/namespaces/proxy-6176/services/https:proxy-service-qxjq2:tlsportname1/proxy/: tls baz (200; 13.446039ms)
  I0513 20:09:25.595769 19 proxy.go:558] (19) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:162/proxy/: bar (200; 10.202646ms)
  I0513 20:09:25.595942 19 proxy.go:558] (19) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:160/proxy/: foo (200; 9.105212ms)
  I0513 20:09:25.595987 19 proxy.go:558] (19) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:460/proxy/: tls baz (200; 10.257746ms)
  I0513 20:09:25.596006 19 proxy.go:558] (19) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:1080/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:1080/proxy/rewriteme">test<... (200; 10.118375ms)
  I0513 20:09:25.596028 19 proxy.go:558] (19) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:443/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:443/proxy/tlsrewritem... (200; 10.381928ms)
  I0513 20:09:25.596057 19 proxy.go:558] (19) /api/v1/namespaces/proxy-6176/pods/https:proxy-service-qxjq2-6d2xb:462/proxy/: tls qux (200; 10.246606ms)
  I0513 20:09:25.600621 19 proxy.go:558] (19) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:162/proxy/: bar (200; 14.038647ms)
  I0513 20:09:25.600797 19 proxy.go:558] (19) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb/proxy/rewriteme">test</a> (200; 14.042877ms)
  I0513 20:09:25.600830 19 proxy.go:558] (19) /api/v1/namespaces/proxy-6176/services/proxy-service-qxjq2:portname1/proxy/: foo (200; 15.943203ms)
  I0513 20:09:25.601207 19 proxy.go:558] (19) /api/v1/namespaces/proxy-6176/services/https:proxy-service-qxjq2:tlsportname1/proxy/: tls baz (200; 15.234253ms)
  I0513 20:09:25.601292 19 proxy.go:558] (19) /api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:1080/proxy/: <a href="/api/v1/namespaces/proxy-6176/pods/http:proxy-service-qxjq2-6d2xb:1080/proxy/rewriteme">... (200; 15.240313ms)
  I0513 20:09:25.601472 19 proxy.go:558] (19) /api/v1/namespaces/proxy-6176/pods/proxy-service-qxjq2-6d2xb:160/proxy/: foo (200; 14.975999ms)
  I0513 20:09:25.602622 19 proxy.go:558] (19) /api/v1/namespaces/proxy-6176/services/http:proxy-service-qxjq2:portname1/proxy/: foo (200; 16.479779ms)
  I0513 20:09:25.603002 19 proxy.go:558] (19) /api/v1/namespaces/proxy-6176/services/http:proxy-service-qxjq2:portname2/proxy/: bar (200; 16.778443ms)
  I0513 20:09:25.603349 19 proxy.go:558] (19) /api/v1/namespaces/proxy-6176/services/https:proxy-service-qxjq2:tlsportname2/proxy/: tls qux (200; 16.933375ms)
  I0513 20:09:25.603756 19 proxy.go:558] (19) /api/v1/namespaces/proxy-6176/services/proxy-service-qxjq2:portname2/proxy/: bar (200; 17.099477ms)
  STEP: deleting ReplicationController proxy-service-qxjq2 in namespace proxy-6176, will wait for the garbage collector to delete the pods @ 05/13/24 20:09:25.603
  I0513 20:09:25.669373 19 resources.go:139] Deleting ReplicationController proxy-service-qxjq2 took: 11.613035ms
  I0513 20:09:25.769559 19 resources.go:163] Terminating ReplicationController proxy-service-qxjq2 pods took: 100.183701ms
  I0513 20:09:28.070441 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-6176" for this suite. @ 05/13/24 20:09:28.076
• [5.070 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 05/13/24 20:09:28.092
  I0513 20:09:28.092502 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename webhook @ 05/13/24 20:09:28.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:09:28.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:09:28.172
  STEP: Setting up server cert @ 05/13/24 20:09:28.239
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/13/24 20:09:29.374
  STEP: Deploying the webhook pod @ 05/13/24 20:09:29.41
  STEP: Wait for the deployment to be ready @ 05/13/24 20:09:29.473
  I0513 20:09:29.506827 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0513 20:09:31.518975 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 20, 9, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 9, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 20, 9, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 9, 29, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 20:09:33.522855 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 20, 9, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 9, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 20, 9, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 9, 29, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 20:09:35.524932 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 20, 9, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 9, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 20, 9, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 9, 29, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 20:09:37.524907 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 20, 9, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 9, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 20, 9, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 9, 29, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 20:09:39.524977 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 20, 9, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 9, 29, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 20, 9, 29, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 9, 29, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 05/13/24 20:09:41.527
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 20:09:41.554
  I0513 20:09:42.554275 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 05/13/24 20:09:42.561
  STEP: create a namespace for the webhook @ 05/13/24 20:09:42.591
  STEP: create a configmap should be unconditionally rejected by the webhook @ 05/13/24 20:09:42.637
  I0513 20:09:42.793386 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-642" for this suite. @ 05/13/24 20:09:42.802
  STEP: Destroying namespace "webhook-markers-352" for this suite. @ 05/13/24 20:09:42.846
  STEP: Destroying namespace "fail-closed-namespace-266" for this suite. @ 05/13/24 20:09:42.877
• [14.808 seconds]
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 05/13/24 20:09:42.9
  I0513 20:09:42.900503 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/13/24 20:09:42.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:09:42.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:09:42.947
  STEP: create the container to handle the HTTPGet hook request. @ 05/13/24 20:09:42.962
  STEP: create the pod with lifecycle hook @ 05/13/24 20:09:45.011
  STEP: delete the pod with lifecycle hook @ 05/13/24 20:09:47.038
  STEP: check prestop hook @ 05/13/24 20:09:49.093
  I0513 20:09:49.110637 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2184" for this suite. @ 05/13/24 20:09:49.119
• [6.245 seconds]
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 05/13/24 20:09:49.145
  I0513 20:09:49.145695 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename podtemplate @ 05/13/24 20:09:49.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:09:49.221
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:09:49.224
  STEP: Create a pod template @ 05/13/24 20:09:49.227
  STEP: Replace a pod template @ 05/13/24 20:09:49.243
  I0513 20:09:49.263229 19 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0513 20:09:49.263362 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-2995" for this suite. @ 05/13/24 20:09:49.267
• [0.133 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 05/13/24 20:09:49.279
  I0513 20:09:49.279811 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename configmap @ 05/13/24 20:09:49.28
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:09:49.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:09:49.325
  STEP: Creating configMap with name cm-test-opt-del-be44d435-f6d6-426a-bb58-e17930198d64 @ 05/13/24 20:09:49.334
  STEP: Creating configMap with name cm-test-opt-upd-bad88f10-9176-43f9-8a02-b60f1072e83a @ 05/13/24 20:09:49.354
  STEP: Creating the pod @ 05/13/24 20:09:49.368
  STEP: Deleting configmap cm-test-opt-del-be44d435-f6d6-426a-bb58-e17930198d64 @ 05/13/24 20:09:51.461
  STEP: Updating configmap cm-test-opt-upd-bad88f10-9176-43f9-8a02-b60f1072e83a @ 05/13/24 20:09:51.477
  STEP: Creating configMap with name cm-test-opt-create-fef55fd1-7420-4bc5-887b-ee7ad5c5b20c @ 05/13/24 20:09:51.497
  STEP: waiting to observe update in volume @ 05/13/24 20:09:51.506
  I0513 20:09:53.537843 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5955" for this suite. @ 05/13/24 20:09:53.545
• [4.283 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 05/13/24 20:09:53.563
  I0513 20:09:53.563069 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename disruption @ 05/13/24 20:09:53.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:09:53.635
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:09:53.647
  STEP: Waiting for the pdb to be processed @ 05/13/24 20:09:53.675
  STEP: Waiting for all pods to be running @ 05/13/24 20:09:55.738
  I0513 20:09:56.273401 19 disruption.go:578] running pods: 0 < 3
  I0513 20:09:57.751765 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9841" for this suite. @ 05/13/24 20:09:57.757
• [4.213 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 05/13/24 20:09:57.779
  I0513 20:09:57.779483 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename replicaset @ 05/13/24 20:09:57.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:09:57.832
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:09:57.836
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 05/13/24 20:09:57.84
  STEP: When a replicaset with a matching selector is created @ 05/13/24 20:09:59.889
  STEP: Then the orphan pod is adopted @ 05/13/24 20:10:00.262
  STEP: When the matched label of one of its pods change @ 05/13/24 20:10:01.276
  I0513 20:10:01.284648 19 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 05/13/24 20:10:01.308
  I0513 20:10:02.318201 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-4693" for this suite. @ 05/13/24 20:10:02.324
• [4.559 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 05/13/24 20:10:02.338
  I0513 20:10:02.338830 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename daemonsets @ 05/13/24 20:10:02.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:10:02.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:10:02.402
  I0513 20:10:02.451348 19 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 05/13/24 20:10:02.467
  I0513 20:10:02.483291 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 20:10:02.483342 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 05/13/24 20:10:02.483
  I0513 20:10:02.523851 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 20:10:02.523906 19 fixtures.go:130] Node ip-172-31-11-14.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 20:10:03.538732 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 20:10:03.538795 19 fixtures.go:130] Node ip-172-31-11-14.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 20:10:04.523280 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0513 20:10:04.523480 19 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 05/13/24 20:10:04.529
  I0513 20:10:04.579467 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0513 20:10:04.579543 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  I0513 20:10:05.561709 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 20:10:05.562156 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 05/13/24 20:10:05.564
  I0513 20:10:05.592824 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 20:10:05.592871 19 fixtures.go:130] Node ip-172-31-11-14.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 20:10:06.777724 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 20:10:06.777807 19 fixtures.go:130] Node ip-172-31-11-14.us-east-2.compute.internal is running 0 daemon pod, expected 1
  I0513 20:10:07.675508 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0513 20:10:07.675561 19 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/13/24 20:10:07.687
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1712, will wait for the garbage collector to delete the pods @ 05/13/24 20:10:07.687
  I0513 20:10:07.753627 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 11.064819ms
  I0513 20:10:07.855733 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 102.104046ms
  I0513 20:10:09.261703 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 20:10:09.261895 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0513 20:10:09.268447 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"74405"},"items":null}

  I0513 20:10:09.275125 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"74405"},"items":null}

  I0513 20:10:09.339116 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1712" for this suite. @ 05/13/24 20:10:09.343
• [7.017 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 05/13/24 20:10:09.355
  I0513 20:10:09.355861 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 05/13/24 20:10:09.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:10:09.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:10:09.399
  STEP: create the container to handle the HTTPGet hook request. @ 05/13/24 20:10:09.41
  STEP: create the pod with lifecycle hook @ 05/13/24 20:10:11.452
  STEP: check poststart hook @ 05/13/24 20:10:13.488
  STEP: delete the pod with lifecycle hook @ 05/13/24 20:10:13.506
  I0513 20:10:15.532365 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7250" for this suite. @ 05/13/24 20:10:15.537
• [6.193 seconds]
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 05/13/24 20:10:15.548
  I0513 20:10:15.548808 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename replicaset @ 05/13/24 20:10:15.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:10:15.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:10:15.607
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 05/13/24 20:10:15.611
  I0513 20:10:15.625333 19 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0513 20:10:20.630220 19 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/13/24 20:10:20.63
  STEP: getting scale subresource @ 05/13/24 20:10:20.63
  STEP: updating a scale subresource @ 05/13/24 20:10:20.634
  STEP: verifying the replicaset Spec.Replicas was modified @ 05/13/24 20:10:20.649
  STEP: Patch a scale subresource @ 05/13/24 20:10:20.654
  I0513 20:10:20.710676 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-949" for this suite. @ 05/13/24 20:10:20.715
• [5.182 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 05/13/24 20:10:20.739
  I0513 20:10:20.740032 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename deployment @ 05/13/24 20:10:20.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:10:20.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:10:20.869
  I0513 20:10:20.909228 19 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  I0513 20:10:25.936357 19 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/13/24 20:10:25.936
  I0513 20:10:25.936507 19 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  I0513 20:10:27.942973 19 deployment.go:921] Creating deployment "test-rollover-deployment"
  I0513 20:10:27.973879 19 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  I0513 20:10:29.982791 19 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I0513 20:10:29.990033 19 deployment.go:943] Ensure that both replica sets have 1 created replica
  I0513 20:10:30.001367 19 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0513 20:10:30.028324 19 deployment.go:313] Updating deployment test-rollover-deployment
  I0513 20:10:30.028385 19 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  I0513 20:10:32.042535 19 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0513 20:10:32.050827 19 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I0513 20:10:32.058978 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0513 20:10:32.059156 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 20, 10, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 10, 28, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 20, 10, 30, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 10, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 20:10:34.078395 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0513 20:10:34.078476 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 20, 10, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 10, 28, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 20, 10, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 10, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 20:10:36.067612 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0513 20:10:36.067704 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 20, 10, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 10, 28, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 20, 10, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 10, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 20:10:38.068622 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0513 20:10:38.068716 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 20, 10, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 10, 28, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 20, 10, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 10, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 20:10:40.066759 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0513 20:10:40.067412 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 20, 10, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 10, 28, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 20, 10, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 10, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 20:10:42.067962 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0513 20:10:42.068052 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 20, 10, 28, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 10, 28, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 20, 10, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 10, 28, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 20:10:44.079698 19 deployment.go:94] 
  I0513 20:10:44.079766 19 deployment.go:974] Ensure that both old replica sets have no replicas
  I0513 20:10:44.091391 19 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3198",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "dd6bc36a-7619-4156-b890-2fea3dec396f",
      ResourceVersion: (string) (len=5) "74718",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227827,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227828,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-679c966bdf\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0513 20:10:44.098600 19 deployment.go:39] New ReplicaSet "test-rollover-deployment-679c966bdf" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-679c966bdf",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3198",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "efbe514d-753b-4516-8a2d-aa8537c77bb3",
      ResourceVersion: (string) (len=5) "74708",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227830,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "dd6bc36a-7619-4156-b890-2fea3dec396f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 64 36 62 63 33  36 61 2d 37 36 31 39 2d  |\"dd6bc36a-7619-|
              00000120  34 31 35 36 2d 62 38 39  30 2d 32 66 65 61 33 64  |4156-b890-2fea3d|
              00000130  65 63 33 39 36 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |ec396f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0513 20:10:44.107513 19 deployment.go:44] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0513 20:10:44.108142 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3198",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f159a38c-7195-403a-b4f5-a05468669e74",
      ResourceVersion: (string) (len=5) "74717",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227820,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "dd6bc36a-7619-4156-b890-2fea3dec396f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227820,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  64 64 36 62 63 33 36 61  2d 37 36 31 39 2d 34 31  |dd6bc36a-7619-41|
              000000c0  35 36 2d 62 38 39 30 2d  32 66 65 61 33 64 65 63  |56-b890-2fea3dec|
              000000d0  33 39 36 66 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |396f\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227842,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "pod": (string) (len=5) "httpd",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0513 20:10:44.110023 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-65bd487b4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3198",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c610b845-5750-4149-b975-657c6f09845c",
      ResourceVersion: (string) (len=5) "74652",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227827,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "65bd487b4b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "dd6bc36a-7619-4156-b890-2fea3dec396f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 64 36 62 63 33  36 61 2d 37 36 31 39 2d  |\"dd6bc36a-7619-|
              00000120  34 31 35 36 2d 62 38 39  30 2d 32 66 65 61 33 64  |4156-b890-2fea3d|
              00000130  65 63 33 39 36 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |ec396f\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "65bd487b4b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "65bd487b4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0513 20:10:44.118137 19 deployment.go:67] Pod "test-rollover-deployment-679c966bdf-qsvns" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-679c966bdf-qsvns",
      GenerateName: (string) (len=36) "test-rollover-deployment-679c966bdf-",
      Namespace: (string) (len=15) "deployment-3198",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4bee27f5-c67e-4963-8f16-da7325d93ba6",
      ResourceVersion: (string) (len=5) "74670",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227830,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-679c966bdf",
          UID: (types.UID) (len=36) "efbe514d-753b-4516-8a2d-aa8537c77bb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 66  62 65 35 31 34 64 2d 37  |d\":\"efbe514d-7|
              00000090  35 33 62 2d 34 35 31 36  2d 38 61 32 64 2d 61 61  |53b-4516-8a2d-aa|
              000000a0  38 35 33 37 63 37 37 62  62 33 5c 22 7d 22 3a 7b  |8537c77bb3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 35 30  5c 22 7d 22 3a 7b 22 2e  |.42.2.50\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wkwbx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wkwbx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-11-14.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227832,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227830,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.11.14",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.11.14"
        }
      },
      PodIP: (string) (len=10) "10.42.2.50",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.50"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227830,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851227831,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://82335e29359b1c3d10d9937421ab5ae2523d5a6f1c4a3b2185f2ba58101913a1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 20:10:44.123563 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3198" for this suite. @ 05/13/24 20:10:44.129
• [23.789 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:109
  STEP: Creating a kubernetes client @ 05/13/24 20:10:44.529
  I0513 20:10:44.529955 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename kubelet-test @ 05/13/24 20:10:44.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:10:44.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:10:44.573
  I0513 20:10:48.625974 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8232" for this suite. @ 05/13/24 20:10:48.631
• [4.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 05/13/24 20:10:48.644
  I0513 20:10:48.644223 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename replicaset @ 05/13/24 20:10:48.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:10:48.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:10:48.684
  STEP: Create a Replicaset @ 05/13/24 20:10:48.691
  STEP: Verify that the required pods have come up. @ 05/13/24 20:10:48.703
  I0513 20:10:48.718047 19 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0513 20:10:53.725444 19 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/13/24 20:10:53.725
  STEP: Getting /status @ 05/13/24 20:10:53.725
  I0513 20:10:53.729571 19 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 05/13/24 20:10:53.729
  I0513 20:10:53.752495 19 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 05/13/24 20:10:53.752
  I0513 20:10:53.754975 19 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I0513 20:10:53.755112 19 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0513 20:10:53.755238 19 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0513 20:10:53.755480 19 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0513 20:10:53.755517 19 replica_set.go:682] Found replicaset test-rs in namespace replicaset-7353 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0513 20:10:53.755537 19 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 05/13/24 20:10:53.755
  I0513 20:10:53.755581 19 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0513 20:10:53.772413 19 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 05/13/24 20:10:53.772
  I0513 20:10:53.774776 19 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I0513 20:10:53.775075 19 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0513 20:10:53.775384 19 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0513 20:10:53.775660 19 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0513 20:10:53.775696 19 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-7353 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0513 20:10:53.775985 19 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0513 20:10:53.776105 19 replica_set.go:718] Found replicaset test-rs in namespace replicaset-7353 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0513 20:10:53.776233 19 replica_set.go:729] Replicaset test-rs has a patched status
  I0513 20:10:53.776848 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7353" for this suite. @ 05/13/24 20:10:53.781
• [5.149 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 05/13/24 20:10:53.793
  I0513 20:10:53.793047 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename configmap @ 05/13/24 20:10:53.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:10:53.855
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:10:53.86
  STEP: Creating configMap configmap-9684/configmap-test-c5107870-e64c-435e-80dc-dc17cc3f57b8 @ 05/13/24 20:10:53.866
  STEP: Creating a pod to test consume configMaps @ 05/13/24 20:10:53.88
  STEP: Saw pod success @ 05/13/24 20:10:57.909
  I0513 20:10:57.913966 19 output.go:196] Trying to get logs from node ip-172-31-0-253.us-east-2.compute.internal pod pod-configmaps-49faaf6d-51bd-4521-9f37-42f5cb55f524 container env-test: <nil>
  STEP: delete the pod @ 05/13/24 20:10:57.932
  I0513 20:10:57.978485 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9684" for this suite. @ 05/13/24 20:10:57.985
• [4.210 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 05/13/24 20:10:58.004
  I0513 20:10:58.004773 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename dns @ 05/13/24 20:10:58.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:10:58.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:10:58.057
  STEP: Creating a test headless service @ 05/13/24 20:10:58.06
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-102.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-102.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 05/13/24 20:10:58.087
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-102.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-102.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 05/13/24 20:10:58.087
  STEP: creating a pod to probe DNS @ 05/13/24 20:10:58.088
  STEP: submitting the pod to kubernetes @ 05/13/24 20:10:58.088
  STEP: retrieving the pod @ 05/13/24 20:11:02.138
  STEP: looking for the results for each expected name from probers @ 05/13/24 20:11:02.143
  I0513 20:11:02.168617 19 dns_common.go:527] DNS probes using dns-102/dns-test-4366e72e-af2d-4a5c-9e76-6ea8a69ed80c succeeded

  STEP: deleting the pod @ 05/13/24 20:11:02.168
  STEP: deleting the test headless service @ 05/13/24 20:11:02.232
  I0513 20:11:02.292170 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-102" for this suite. @ 05/13/24 20:11:02.299
• [4.338 seconds]
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 05/13/24 20:11:02.342
  I0513 20:11:02.342691 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename downward-api @ 05/13/24 20:11:02.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:11:02.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:11:02.426
  STEP: Creating a pod to test downward API volume plugin @ 05/13/24 20:11:02.431
  STEP: Saw pod success @ 05/13/24 20:11:06.465
  I0513 20:11:06.468981 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod downwardapi-volume-49d86fc9-898f-40c7-bce3-54d2b02b957d container client-container: <nil>
  STEP: delete the pod @ 05/13/24 20:11:06.476
  I0513 20:11:06.527571 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-729" for this suite. @ 05/13/24 20:11:06.533
• [4.205 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 05/13/24 20:11:06.549
  I0513 20:11:06.549950 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename watch @ 05/13/24 20:11:06.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:11:06.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:11:06.606
  STEP: creating a new configmap @ 05/13/24 20:11:06.61
  STEP: modifying the configmap once @ 05/13/24 20:11:06.62
  STEP: modifying the configmap a second time @ 05/13/24 20:11:06.638
  STEP: deleting the configmap @ 05/13/24 20:11:06.656
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 05/13/24 20:11:06.682
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 05/13/24 20:11:06.684
  I0513 20:11:06.684393 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-5124  0fb38439-51a1-4a25-82ce-963e379f1cfb 74970 0 2024-05-13 20:11:06 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-05-13 20:11:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0513 20:11:06.684592 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-5124  0fb38439-51a1-4a25-82ce-963e379f1cfb 74971 0 2024-05-13 20:11:06 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-05-13 20:11:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0513 20:11:06.684678 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5124" for this suite. @ 05/13/24 20:11:06.69
• [0.162 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 05/13/24 20:11:06.714
  I0513 20:11:06.714656 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename watch @ 05/13/24 20:11:06.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:11:06.789
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:11:06.792
  STEP: creating a watch on configmaps @ 05/13/24 20:11:06.795
  STEP: creating a new configmap @ 05/13/24 20:11:06.797
  STEP: modifying the configmap once @ 05/13/24 20:11:06.807
  STEP: closing the watch once it receives two notifications @ 05/13/24 20:11:06.837
  I0513 20:11:06.837428 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8323  de5c6196-074b-4a2c-a2c3-284ef7d9ae26 74977 0 2024-05-13 20:11:06 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-13 20:11:06 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0513 20:11:06.837655 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8323  de5c6196-074b-4a2c-a2c3-284ef7d9ae26 74978 0 2024-05-13 20:11:06 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-13 20:11:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 05/13/24 20:11:06.837
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 05/13/24 20:11:06.869
  STEP: deleting the configmap @ 05/13/24 20:11:06.871
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 05/13/24 20:11:06.883
  I0513 20:11:06.884113 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8323  de5c6196-074b-4a2c-a2c3-284ef7d9ae26 74979 0 2024-05-13 20:11:06 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-13 20:11:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0513 20:11:06.884292 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-8323  de5c6196-074b-4a2c-a2c3-284ef7d9ae26 74980 0 2024-05-13 20:11:06 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-05-13 20:11:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0513 20:11:06.884392 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-8323" for this suite. @ 05/13/24 20:11:06.888
• [0.184 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1394
  STEP: Creating a kubernetes client @ 05/13/24 20:11:06.898
  I0513 20:11:06.898882 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename kubectl @ 05/13/24 20:11:06.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:11:06.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:11:06.964
  I0513 20:11:06.968122 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-4144 create -f -'
  I0513 20:11:07.177384 19 builder.go:146] stderr: ""
  I0513 20:11:07.177704 19 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0513 20:11:07.177900 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-4144 create -f -'
  I0513 20:11:07.404243 19 builder.go:146] stderr: ""
  I0513 20:11:07.404302 19 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/13/24 20:11:07.404
  I0513 20:11:08.441427 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0513 20:11:08.441487 19 framework.go:733] Found 1 / 1
  I0513 20:11:08.441522 19 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0513 20:11:08.478328 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0513 20:11:08.478371 19 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0513 20:11:08.478598 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-4144 describe pod agnhost-primary-6559x'
  I0513 20:11:08.578817 19 builder.go:146] stderr: ""
  I0513 20:11:08.578950 19 builder.go:147] stdout: "Name:             agnhost-primary-6559x\nNamespace:        kubectl-4144\nPriority:         0\nService Account:  default\nNode:             ip-172-31-11-14.us-east-2.compute.internal/172.31.11.14\nStart Time:       Mon, 13 May 2024 20:11:07 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.42.2.55\nIPs:\n  IP:           10.42.2.55\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://7eafd12957daae20928d594d5faf4a861d0df263123a620ae8e2d699fee5f9cc\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Mon, 13 May 2024 20:11:08 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-5mp74 (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-5mp74:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  1s    default-scheduler  Successfully assigned kubectl-4144/agnhost-primary-6559x to ip-172-31-11-14.us-east-2.compute.internal\n  Normal  Pulled     1s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    1s    kubelet            Created container agnhost-primary\n  Normal  Started    0s    kubelet            Started container agnhost-primary\n"
  I0513 20:11:08.579504 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-4144 describe rc agnhost-primary'
  I0513 20:11:08.680356 19 builder.go:146] stderr: ""
  I0513 20:11:08.680573 19 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-4144\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.47\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  1s    replication-controller  Created pod: agnhost-primary-6559x\n"
  I0513 20:11:08.680698 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-4144 describe service agnhost-primary'
  I0513 20:11:08.771780 19 builder.go:146] stderr: ""
  I0513 20:11:08.771853 19 builder.go:147] stdout: "Name:              agnhost-primary\nNamespace:         kubectl-4144\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.43.143.75\nIPs:               10.43.143.75\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.42.2.55:6379\nSession Affinity:  None\nEvents:            <none>\n"
  I0513 20:11:08.790799 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-4144 describe node ip-172-31-0-253.us-east-2.compute.internal'
  I0513 20:11:08.908183 19 builder.go:146] stderr: ""
  I0513 20:11:08.908321 19 builder.go:147] stdout: "Name:               ip-172-31-0-253.us-east-2.compute.internal\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/instance-type=k3s\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-0-253.us-east-2.compute.internal\n                    kubernetes.io/os=linux\n                    node.kubernetes.io/instance-type=k3s\n                    role-worker=true\nAnnotations:        alpha.kubernetes.io/provided-node-ip: 172.31.0.253\n                    flannel.alpha.coreos.com/backend-data: {\"VNI\":1,\"VtepMAC\":\"1e:cc:f9:a6:92:cb\"}\n                    flannel.alpha.coreos.com/backend-type: vxlan\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 172.31.0.253\n                    k3s.io/external-ip: 3.144.244.238\n                    k3s.io/hostname: ip-172-31-0-253\n                    k3s.io/internal-ip: 172.31.0.253\n                    k3s.io/node-args:\n                      [\"agent\",\"--server\",\"https://3.135.218.159:6443\",\"--token\",\"********\",\"--node-label\",\"role-worker=true\",\"--node-name\",\"ip-172-31-0-253.us-...\n                    k3s.io/node-config-hash: S623QAGIDYSSRGWY5Z5LES3I4PLNZA7N3PLLFIVU3LCMKRAOYGFQ====\n                    k3s.io/node-env: {\"K3S_DATA_DIR\":\"/var/lib/rancher/k3s/data/f9f37b05ac205a3ca783d075d40c4ba8be73efd8caf83a27add3ed0ab8035e96\"}\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Mon, 13 May 2024 16:12:41 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-0-253.us-east-2.compute.internal\n  AcquireTime:     <unset>\n  RenewTime:       Mon, 13 May 2024 20:10:58 +0000\nConditions:\n  Type             Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----             ------  -----------------                 ------------------                ------                       -------\n  MemoryPressure   False   Mon, 13 May 2024 20:09:56 +0000   Mon, 13 May 2024 16:12:41 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure     False   Mon, 13 May 2024 20:09:56 +0000   Mon, 13 May 2024 16:12:41 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure      False   Mon, 13 May 2024 20:09:56 +0000   Mon, 13 May 2024 16:12:41 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready            True    Mon, 13 May 2024 20:09:56 +0000   Mon, 13 May 2024 16:12:42 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  172.31.0.253\n  ExternalIP:  3.144.244.238\n  Hostname:    ip-172-31-0-253\nCapacity:\n  cpu:                2\n  ephemeral-storage:  20937708Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             3937656Ki\n  pods:               110\nAllocatable:\n  cpu:                2\n  ephemeral-storage:  20368202327\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             3937656Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 ec2e6bace408e045cbb542c685125f54\n  System UUID:                ec2e6bac-e408-e045-cbb5-42c685125f54\n  Boot ID:                    ccade0d7-4d19-42f1-965f-19ef6707d854\n  Kernel Version:             5.14.21-150500.55.44-default\n  OS Image:                   SUSE Linux Enterprise Server 15 SP5\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.7.15-k3s1\n  Kubelet Version:            v1.30.0+k3s1\n  Kube-Proxy Version:         v1.30.0+k3s1\nPodCIDR:                      10.42.3.0/24\nPodCIDRs:                     10.42.3.0/24\nProviderID:                   k3s://ip-172-31-0-253.us-east-2.compute.internal\nNon-terminated Pods:          (3 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 svclb-traefik-d628025f-mwl96                               0 (0%)        0 (0%)      0 (0%)           0 (0%)         3h58m\n  sonobuoy                    sonobuoy                                                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         84m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-241ff89d670448bb-z7g5j    0 (0%)        0 (0%)      0 (0%)           0 (0%)         84m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests  Limits\n  --------           --------  ------\n  cpu                0 (0%)    0 (0%)\n  memory             0 (0%)    0 (0%)\n  ephemeral-storage  0 (0%)    0 (0%)\n  hugepages-1Gi      0 (0%)    0 (0%)\n  hugepages-2Mi      0 (0%)    0 (0%)\nEvents:              <none>\n"
  I0513 20:11:08.908429 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-4144 describe namespace kubectl-4144'
  I0513 20:11:09.015461 19 builder.go:146] stderr: ""
  I0513 20:11:09.015522 19 builder.go:147] stdout: "Name:         kubectl-4144\nLabels:       e2e-framework=kubectl\n              e2e-run=1efc8422-a312-4f5d-a85f-65948e7420c3\n              kubernetes.io/metadata.name=kubectl-4144\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0513 20:11:09.015625 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4144" for this suite. @ 05/13/24 20:11:09.02
• [2.142 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 05/13/24 20:11:09.04
  I0513 20:11:09.040905 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename webhook @ 05/13/24 20:11:09.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:11:09.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:11:09.093
  STEP: Setting up server cert @ 05/13/24 20:11:09.159
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/13/24 20:11:09.495
  STEP: Deploying the webhook pod @ 05/13/24 20:11:09.511
  STEP: Wait for the deployment to be ready @ 05/13/24 20:11:09.559
  I0513 20:11:09.569578 19 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 05/13/24 20:11:11.582
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 20:11:11.632
  I0513 20:11:12.633191 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 05/13/24 20:11:12.641
  STEP: create a pod @ 05/13/24 20:11:12.673
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 05/13/24 20:11:14.724
  I0513 20:11:14.725059 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=webhook-3677 attach --namespace=webhook-3677 to-be-attached-pod -i -c=container1'
  I0513 20:11:14.873695 19 builder.go:135] rc: 1
  I0513 20:11:15.026031 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3677" for this suite. @ 05/13/24 20:11:15.038
  STEP: Destroying namespace "webhook-markers-583" for this suite. @ 05/13/24 20:11:15.059
• [6.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 05/13/24 20:11:15.082
  I0513 20:11:15.082268 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename watch @ 05/13/24 20:11:15.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:11:15.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:11:15.122
  STEP: creating a watch on configmaps with a certain label @ 05/13/24 20:11:15.127
  STEP: creating a new configmap @ 05/13/24 20:11:15.129
  STEP: modifying the configmap once @ 05/13/24 20:11:15.14
  STEP: changing the label value of the configmap @ 05/13/24 20:11:15.154
  STEP: Expecting to observe a delete notification for the watched object @ 05/13/24 20:11:15.174
  I0513 20:11:15.174213 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3931  fcbc1966-e866-491b-91ed-f8e5d1a68233 75139 0 2024-05-13 20:11:15 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-13 20:11:15 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0513 20:11:15.174388 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3931  fcbc1966-e866-491b-91ed-f8e5d1a68233 75140 0 2024-05-13 20:11:15 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-13 20:11:15 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0513 20:11:15.174492 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3931  fcbc1966-e866-491b-91ed-f8e5d1a68233 75141 0 2024-05-13 20:11:15 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-13 20:11:15 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 05/13/24 20:11:15.174
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 05/13/24 20:11:15.192
  STEP: changing the label value of the configmap back @ 05/13/24 20:11:25.193
  STEP: modifying the configmap a third time @ 05/13/24 20:11:25.212
  STEP: deleting the configmap @ 05/13/24 20:11:25.225
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 05/13/24 20:11:25.237
  I0513 20:11:25.237888 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3931  fcbc1966-e866-491b-91ed-f8e5d1a68233 75207 0 2024-05-13 20:11:15 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-13 20:11:25 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0513 20:11:25.238113 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3931  fcbc1966-e866-491b-91ed-f8e5d1a68233 75208 0 2024-05-13 20:11:15 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-13 20:11:25 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0513 20:11:25.238360 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-3931  fcbc1966-e866-491b-91ed-f8e5d1a68233 75209 0 2024-05-13 20:11:15 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-05-13 20:11:25 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0513 20:11:25.238674 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3931" for this suite. @ 05/13/24 20:11:25.243
• [10.173 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3136
  STEP: Creating a kubernetes client @ 05/13/24 20:11:25.256
  I0513 20:11:25.256320 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename services @ 05/13/24 20:11:25.257
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:11:25.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:11:25.326
  STEP: fetching services @ 05/13/24 20:11:25.33
  I0513 20:11:25.333573 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9130" for this suite. @ 05/13/24 20:11:25.338
• [0.100 seconds]
------------------------------
SSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 05/13/24 20:11:25.358
  I0513 20:11:25.358159 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename conformance-tests @ 05/13/24 20:11:25.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:11:25.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:11:25.418
  STEP: Getting node addresses @ 05/13/24 20:11:25.422
  I0513 20:11:25.422655 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0513 20:11:25.432314 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-5320" for this suite. @ 05/13/24 20:11:25.437
• [0.096 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:902
  STEP: Creating a kubernetes client @ 05/13/24 20:11:25.453
  I0513 20:11:25.454020 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename statefulset @ 05/13/24 20:11:25.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:11:25.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:11:25.495
  STEP: Creating service test in namespace statefulset-8546 @ 05/13/24 20:11:25.499
  STEP: Creating statefulset ss in namespace statefulset-8546 @ 05/13/24 20:11:25.51
  I0513 20:11:25.544645 19 wait.go:40] Found 0 stateful pods, waiting for 1
  I0513 20:11:35.544266 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  I0513 20:11:45.542701 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 05/13/24 20:11:45.55
  STEP: updating a scale subresource @ 05/13/24 20:11:45.553
  STEP: verifying the statefulset Spec.Replicas was modified @ 05/13/24 20:11:45.574
  STEP: Patch a scale subresource @ 05/13/24 20:11:45.603
  STEP: verifying the statefulset Spec.Replicas was modified @ 05/13/24 20:11:45.69
  I0513 20:11:45.693696 19 statefulset.go:135] Deleting all statefulset in ns statefulset-8546
  I0513 20:11:45.726500 19 rest.go:150] Scaling statefulset ss to 0
  I0513 20:11:55.755264 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0513 20:11:55.758141 19 rest.go:88] Deleting statefulset ss
  I0513 20:11:55.775493 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8546" for this suite. @ 05/13/24 20:11:55.78
• [30.342 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 05/13/24 20:11:55.796
  I0513 20:11:55.796764 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename svcaccounts @ 05/13/24 20:11:55.798
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:11:55.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:11:55.842
  I0513 20:11:55.911290 19 service_accounts.go:253] created pod pod-service-account-defaultsa
  I0513 20:11:55.911347 19 service_accounts.go:267] pod pod-service-account-defaultsa service account token volume mount: true
  I0513 20:11:55.922890 19 service_accounts.go:253] created pod pod-service-account-mountsa
  I0513 20:11:55.922940 19 service_accounts.go:267] pod pod-service-account-mountsa service account token volume mount: true
  I0513 20:11:55.943314 19 service_accounts.go:253] created pod pod-service-account-nomountsa
  I0513 20:11:55.943408 19 service_accounts.go:267] pod pod-service-account-nomountsa service account token volume mount: false
  I0513 20:11:55.972257 19 service_accounts.go:253] created pod pod-service-account-defaultsa-mountspec
  I0513 20:11:55.972431 19 service_accounts.go:267] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0513 20:11:56.002678 19 service_accounts.go:253] created pod pod-service-account-mountsa-mountspec
  I0513 20:11:56.002738 19 service_accounts.go:267] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0513 20:11:56.066610 19 service_accounts.go:253] created pod pod-service-account-nomountsa-mountspec
  I0513 20:11:56.066667 19 service_accounts.go:267] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0513 20:11:56.103745 19 service_accounts.go:253] created pod pod-service-account-defaultsa-nomountspec
  I0513 20:11:56.103982 19 service_accounts.go:267] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0513 20:11:56.139967 19 service_accounts.go:253] created pod pod-service-account-mountsa-nomountspec
  I0513 20:11:56.140153 19 service_accounts.go:267] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0513 20:11:56.186823 19 service_accounts.go:253] created pod pod-service-account-nomountsa-nomountspec
  I0513 20:11:56.187023 19 service_accounts.go:267] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0513 20:11:56.187360 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6429" for this suite. @ 05/13/24 20:11:56.241
• [0.466 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3572
  STEP: Creating a kubernetes client @ 05/13/24 20:11:56.263
  I0513 20:11:56.263158 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename services @ 05/13/24 20:11:56.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:11:56.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:11:56.424
  STEP: creating a collection of services @ 05/13/24 20:11:56.437
  I0513 20:11:56.437449 19 service.go:3608] Creating e2e-svc-a-dqfcv
  I0513 20:11:56.489760 19 service.go:3608] Creating e2e-svc-b-w7txr
  I0513 20:11:56.601022 19 service.go:3608] Creating e2e-svc-c-c8pvc
  STEP: deleting service collection @ 05/13/24 20:11:56.651
  I0513 20:11:56.724359 19 service.go:3643] Collection of services has been deleted
  I0513 20:11:56.724660 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7689" for this suite. @ 05/13/24 20:11:56.728
• [0.478 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 05/13/24 20:11:56.741
  I0513 20:11:56.741527 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename deployment @ 05/13/24 20:11:56.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:11:56.825
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:11:56.829
  I0513 20:11:56.832770 19 deployment.go:1196] Creating deployment "webserver-deployment"
  I0513 20:11:56.871855 19 deployment.go:1200] Waiting for observed generation 1
  I0513 20:11:58.920987 19 deployment.go:1205] Waiting for all required pods to come up
  I0513 20:11:58.939849 19 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 05/13/24 20:11:58.94
  I0513 20:12:01.034156 19 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I0513 20:12:01.042674 19 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I0513 20:12:01.062904 19 deployment.go:313] Updating deployment webserver-deployment
  I0513 20:12:01.062961 19 deployment.go:1224] Waiting for observed generation 2
  I0513 20:12:03.086192 19 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0513 20:12:03.089676 19 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0513 20:12:03.116428 19 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0513 20:12:03.160660 19 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0513 20:12:03.160869 19 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0513 20:12:03.165351 19 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0513 20:12:03.176868 19 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0513 20:12:03.177044 19 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0513 20:12:03.198708 19 deployment.go:313] Updating deployment webserver-deployment
  I0513 20:12:03.198897 19 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0513 20:12:03.213287 19 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0513 20:12:03.217693 19 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0513 20:12:05.303649 19 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6617",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ad1793a0-450d-4624-aa2b-c7324f74a113",
      ResourceVersion: (string) (len=5) "75884",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227916,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 9,
      AvailableReplicas: (int32) 9,
      UnavailableReplicas: (int32) 24,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227916,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-67c89d485c\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0513 20:12:05.339234 19 deployment.go:39] New ReplicaSet "webserver-deployment-67c89d485c" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-67c89d485c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6617",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e9e30845-b8f2-4b5b-8a45-e0c664ad2b6e",
      ResourceVersion: (string) (len=5) "75830",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227921,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "ad1793a0-450d-4624-aa2b-c7324f74a113",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 64 31 37 39 33  61 30 2d 34 35 30 64 2d  |\"ad1793a0-450d-|
              00000120  34 36 32 34 2d 61 61 32  62 2d 63 37 33 32 34 66  |4624-aa2b-c7324f|
              00000130  37 34 61 31 31 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |74a113\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0513 20:12:05.340435 19 deployment.go:44] All old ReplicaSets of Deployment "webserver-deployment":
  I0513 20:12:05.340692 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-77db57d8df",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6617",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3a562978-0493-475b-8149-de34a2edf2fa",
      ResourceVersion: (string) (len=5) "75881",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227916,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "ad1793a0-450d-4624-aa2b-c7324f74a113",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 64 31 37 39 33  61 30 2d 34 35 30 64 2d  |\"ad1793a0-450d-|
              00000120  34 36 32 34 2d 61 61 32  62 2d 63 37 33 32 34 66  |4624-aa2b-c7324f|
              00000130  37 34 61 31 31 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |74a113\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 9,
      AvailableReplicas: (int32) 9,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0513 20:12:05.404741 19 deployment.go:67] Pod "webserver-deployment-67c89d485c-47qzt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-47qzt",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-6617",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3dc95e0b-6c92-4580-aef7-83f6fad6d05c",
      ResourceVersion: (string) (len=5) "75716",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227921,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "e9e30845-b8f2-4b5b-8a45-e0c664ad2b6e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  65 33 30 38 34 35 2d 62  |d\":\"e9e30845-b|
              00000090  38 66 32 2d 34 62 35 62  2d 38 61 34 35 2d 65 30  |8f2-4b5b-8a45-e0|
              000000a0  63 36 36 34 61 64 32 62  36 65 5c 22 7d 22 3a 7b  |c664ad2b6e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 31 2e 31 34 34 5c 22  7d 22 3a 7b 22 2e 22 3a  |.1.144\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bxncw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bxncw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-3-33.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.3.33",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.3.33"
        }
      },
      PodIP: (string) (len=11) "10.42.1.144",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.144"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227921,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 20:12:05.409073 19 deployment.go:67] Pod "webserver-deployment-67c89d485c-49fns" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-49fns",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-6617",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "14361798-c1ef-4625-9884-04cd812e425f",
      ResourceVersion: (string) (len=5) "75802",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "e9e30845-b8f2-4b5b-8a45-e0c664ad2b6e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  65 33 30 38 34 35 2d 62  |d\":\"e9e30845-b|
              00000090  38 66 32 2d 34 62 35 62  2d 38 61 34 35 2d 65 30  |8f2-4b5b-8a45-e0|
              000000a0  63 36 36 34 61 64 32 62  36 65 5c 22 7d 22 3a 7b  |c664ad2b6e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xb4cp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xb4cp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-3-33.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.3.33",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.3.33"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 20:12:05.412412 19 deployment.go:67] Pod "webserver-deployment-67c89d485c-58d5k" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-58d5k",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-6617",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e5394a77-c49c-4182-a75a-96c024c93986",
      ResourceVersion: (string) (len=5) "75824",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "e9e30845-b8f2-4b5b-8a45-e0c664ad2b6e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  65 33 30 38 34 35 2d 62  |d\":\"e9e30845-b|
              00000090  38 66 32 2d 34 62 35 62  2d 38 61 34 35 2d 65 30  |8f2-4b5b-8a45-e0|
              000000a0  63 36 36 34 61 64 32 62  36 65 5c 22 7d 22 3a 7b  |c664ad2b6e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r4cz2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r4cz2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-11-14.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 20:12:05.414651 19 deployment.go:67] Pod "webserver-deployment-67c89d485c-7t2g8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-7t2g8",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-6617",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "266456b7-bc68-4b41-a2dc-b24015dade61",
      ResourceVersion: (string) (len=5) "75846",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "e9e30845-b8f2-4b5b-8a45-e0c664ad2b6e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  65 33 30 38 34 35 2d 62  |d\":\"e9e30845-b|
              00000090  38 66 32 2d 34 62 35 62  2d 38 61 34 35 2d 65 30  |8f2-4b5b-8a45-e0|
              000000a0  63 36 36 34 61 64 32 62  36 65 5c 22 7d 22 3a 7b  |c664ad2b6e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tsf9s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tsf9s",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-0-253.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.0.253",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.0.253"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 20:12:05.419491 19 deployment.go:67] Pod "webserver-deployment-67c89d485c-bg4vr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-bg4vr",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-6617",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8035f4a8-559f-420a-b7ee-0ae562e33173",
      ResourceVersion: (string) (len=5) "75849",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "e9e30845-b8f2-4b5b-8a45-e0c664ad2b6e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  65 33 30 38 34 35 2d 62  |d\":\"e9e30845-b|
              00000090  38 66 32 2d 34 62 35 62  2d 38 61 34 35 2d 65 30  |8f2-4b5b-8a45-e0|
              000000a0  63 36 36 34 61 64 32 62  36 65 5c 22 7d 22 3a 7b  |c664ad2b6e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fwp9g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fwp9g",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-14-0.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.14.0",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.14.0"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 20:12:05.424176 19 deployment.go:67] Pod "webserver-deployment-67c89d485c-bgpb6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-bgpb6",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-6617",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ac64a31a-3252-4ac6-8ddf-0fc9fe71e403",
      ResourceVersion: (string) (len=5) "75734",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227921,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "e9e30845-b8f2-4b5b-8a45-e0c664ad2b6e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  65 33 30 38 34 35 2d 62  |d\":\"e9e30845-b|
              00000090  38 66 32 2d 34 62 35 62  2d 38 61 34 35 2d 65 30  |8f2-4b5b-8a45-e0|
              000000a0  63 36 36 34 61 64 32 62  36 65 5c 22 7d 22 3a 7b  |c664ad2b6e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 30 2e 31 30 36 5c 22  7d 22 3a 7b 22 2e 22 3a  |.0.106\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7l6g2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7l6g2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-14-0.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.14.0",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.14.0"
        }
      },
      PodIP: (string) (len=11) "10.42.0.106",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.0.106"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227921,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 20:12:05.427343 19 deployment.go:67] Pod "webserver-deployment-67c89d485c-fxk2s" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-fxk2s",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-6617",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "127c1897-4a91-4476-bc6a-0f3166d87f3a",
      ResourceVersion: (string) (len=5) "75867",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "e9e30845-b8f2-4b5b-8a45-e0c664ad2b6e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  65 33 30 38 34 35 2d 62  |d\":\"e9e30845-b|
              00000090  38 66 32 2d 34 62 35 62  2d 38 61 34 35 2d 65 30  |8f2-4b5b-8a45-e0|
              000000a0  63 36 36 34 61 64 32 62  36 65 5c 22 7d 22 3a 7b  |c664ad2b6e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v26b6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v26b6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-11-14.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.11.14",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.11.14"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 20:12:05.438280 19 deployment.go:67] Pod "webserver-deployment-67c89d485c-hbjmw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-hbjmw",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-6617",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ebaeb6a3-d3d7-4f62-bef9-67bb1429441c",
      ResourceVersion: (string) (len=5) "75737",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227921,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "e9e30845-b8f2-4b5b-8a45-e0c664ad2b6e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  65 33 30 38 34 35 2d 62  |d\":\"e9e30845-b|
              00000090  38 66 32 2d 34 62 35 62  2d 38 61 34 35 2d 65 30  |8f2-4b5b-8a45-e0|
              000000a0  63 36 36 34 61 64 32 62  36 65 5c 22 7d 22 3a 7b  |c664ad2b6e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 33 2e 31 38 36 5c 22  7d 22 3a 7b 22 2e 22 3a  |.3.186\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fxq59",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fxq59",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-0-253.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.0.253",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.0.253"
        }
      },
      PodIP: (string) (len=11) "10.42.3.186",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.3.186"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227921,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 20:12:05.447348 19 deployment.go:67] Pod "webserver-deployment-67c89d485c-nbmlj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-nbmlj",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-6617",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d34d9d3f-8d05-4fde-97fd-a82a741e890c",
      ResourceVersion: (string) (len=5) "75723",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227921,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "e9e30845-b8f2-4b5b-8a45-e0c664ad2b6e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  65 33 30 38 34 35 2d 62  |d\":\"e9e30845-b|
              00000090  38 66 32 2d 34 62 35 62  2d 38 61 34 35 2d 65 30  |8f2-4b5b-8a45-e0|
              000000a0  63 36 36 34 61 64 32 62  36 65 5c 22 7d 22 3a 7b  |c664ad2b6e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=705) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 30 2e 31 30 35 5c 22  7d 22 3a 7b 22 2e 22 3a  |.0.105\"}":{".":|
              000002a0  7b 7d 2c 22 66 3a 69 70  22 3a 7b 7d 7d 7d 2c 22  |{},"f:ip":{}}},"|
              000002b0  66 3a 73 74 61 72 74 54  69 6d 65 22 3a 7b 7d 7d  |f:startTime":{}}|
              000002c0  7d                                                |}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dxn2z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dxn2z",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-14-0.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227922,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.14.0",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.14.0"
        }
      },
      PodIP: (string) (len=11) "10.42.0.105",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.0.105"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227921,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 20:12:05.453779 19 deployment.go:67] Pod "webserver-deployment-67c89d485c-pm8gt" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-pm8gt",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-6617",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bc2307af-5854-4f38-9c10-cc744f51ad4e",
      ResourceVersion: (string) (len=5) "75861",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227921,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "e9e30845-b8f2-4b5b-8a45-e0c664ad2b6e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  65 33 30 38 34 35 2d 62  |d\":\"e9e30845-b|
              00000090  38 66 32 2d 34 62 35 62  2d 38 61 34 35 2d 65 30  |8f2-4b5b-8a45-e0|
              000000a0  63 36 36 34 61 64 32 62  36 65 5c 22 7d 22 3a 7b  |c664ad2b6e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 34 32  |:{\"ip\":\"10.42|
              00000290  2e 32 2e 36 34 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |.2.64\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gstcn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gstcn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-11-14.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227921,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.11.14",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.11.14"
        }
      },
      PodIP: (string) (len=10) "10.42.2.64",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.64"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227921,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 20:12:05.460035 19 deployment.go:67] Pod "webserver-deployment-67c89d485c-wnbck" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-wnbck",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-6617",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "83d5ceb6-ecfe-4167-87ae-21afd062f091",
      ResourceVersion: (string) (len=5) "75863",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "e9e30845-b8f2-4b5b-8a45-e0c664ad2b6e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  65 33 30 38 34 35 2d 62  |d\":\"e9e30845-b|
              00000090  38 66 32 2d 34 62 35 62  2d 38 61 34 35 2d 65 30  |8f2-4b5b-8a45-e0|
              000000a0  63 36 36 34 61 64 32 62  36 65 5c 22 7d 22 3a 7b  |c664ad2b6e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-48rz4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-48rz4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-0-253.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.0.253",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.0.253"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 20:12:05.464471 19 deployment.go:67] Pod "webserver-deployment-67c89d485c-xhwlk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-xhwlk",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-6617",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b09ab388-8047-4d19-8bad-d5df1c037379",
      ResourceVersion: (string) (len=5) "75811",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "e9e30845-b8f2-4b5b-8a45-e0c664ad2b6e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  65 33 30 38 34 35 2d 62  |d\":\"e9e30845-b|
              00000090  38 66 32 2d 34 62 35 62  2d 38 61 34 35 2d 65 30  |8f2-4b5b-8a45-e0|
              000000a0  63 36 36 34 61 64 32 62  36 65 5c 22 7d 22 3a 7b  |c664ad2b6e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2wt9m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2wt9m",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-11-14.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.11.14",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.11.14"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 20:12:05.468133 19 deployment.go:67] Pod "webserver-deployment-67c89d485c-zk79v" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-zk79v",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-6617",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "84e0f139-1685-4c2e-a13f-0c0a64b4f3e6",
      ResourceVersion: (string) (len=5) "75837",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "e9e30845-b8f2-4b5b-8a45-e0c664ad2b6e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 39  65 33 30 38 34 35 2d 62  |d\":\"e9e30845-b|
              00000090  38 66 32 2d 34 62 35 62  2d 38 61 34 35 2d 65 30  |8f2-4b5b-8a45-e0|
              000000a0  63 36 36 34 61 64 32 62  36 65 5c 22 7d 22 3a 7b  |c664ad2b6e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-njx5p",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-njx5p",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-3-33.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.3.33",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.3.33"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 20:12:05.471424 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-2697t" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-2697t",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6617",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "20c87dc8-7721-4501-99d5-380b76559f28",
      ResourceVersion: (string) (len=5) "75845",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "3a562978-0493-475b-8149-de34a2edf2fa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  35 36 32 39 37 38 2d 30  |d\":\"3a562978-0|
              00000090  34 39 33 2d 34 37 35 62  2d 38 31 34 39 2d 64 65  |493-475b-8149-de|
              000000a0  33 34 61 32 65 64 66 32  66 61 5c 22 7d 22 3a 7b  |34a2edf2fa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b8t5n",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b8t5n",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-14-0.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.14.0",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.14.0"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 20:12:05.474585 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-42thq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-42thq",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6617",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9314bfba-ee33-44b0-83c1-0a90a49f4b84",
      ResourceVersion: (string) (len=5) "75835",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "3a562978-0493-475b-8149-de34a2edf2fa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  35 36 32 39 37 38 2d 30  |d\":\"3a562978-0|
              00000090  34 39 33 2d 34 37 35 62  2d 38 31 34 39 2d 64 65  |493-475b-8149-de|
              000000a0  33 34 61 32 65 64 66 32  66 61 5c 22 7d 22 3a 7b  |34a2edf2fa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5q462",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5q462",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-11-14.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.11.14",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.11.14"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 20:12:05.480840 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-4rd29" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-4rd29",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6617",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "810fecdc-cefa-4a9b-b341-a2298f36fd69",
      ResourceVersion: (string) (len=5) "75597",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227917,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "3a562978-0493-475b-8149-de34a2edf2fa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227917,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  35 36 32 39 37 38 2d 30  |d\":\"3a562978-0|
              00000090  34 39 33 2d 34 37 35 62  2d 38 31 34 39 2d 64 65  |493-475b-8149-de|
              000000a0  33 34 61 32 65 64 66 32  66 61 5c 22 7d 22 3a 7b  |34a2edf2fa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227919,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 36 33  5c 22 7d 22 3a 7b 22 2e  |.42.2.63\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b7bk6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b7bk6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-11-14.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227919,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227917,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227919,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227919,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227917,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.11.14",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.11.14"
        }
      },
      PodIP: (string) (len=10) "10.42.2.63",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.63"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227917,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851227918,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5e0e41dfe92412770270ebca6b8542e19029aa2c8b5eaef4dfa0becf13b3bb5c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 20:12:05.487489 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-4tzdz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-4tzdz",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6617",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2ac2c255-6d8f-4311-8236-aa7b83f5213a",
      ResourceVersion: (string) (len=5) "75853",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "3a562978-0493-475b-8149-de34a2edf2fa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  35 36 32 39 37 38 2d 30  |d\":\"3a562978-0|
              00000090  34 39 33 2d 34 37 35 62  2d 38 31 34 39 2d 64 65  |493-475b-8149-de|
              000000a0  33 34 61 32 65 64 66 32  66 61 5c 22 7d 22 3a 7b  |34a2edf2fa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cpwj4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cpwj4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-0-253.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.0.253",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.0.253"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 20:12:05.492031 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-58knz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-58knz",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6617",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "edd662a8-878f-4513-bcd5-aa02a36bcea7",
      ResourceVersion: (string) (len=5) "75825",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "3a562978-0493-475b-8149-de34a2edf2fa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  35 36 32 39 37 38 2d 30  |d\":\"3a562978-0|
              00000090  34 39 33 2d 34 37 35 62  2d 38 31 34 39 2d 64 65  |493-475b-8149-de|
              000000a0  33 34 61 32 65 64 66 32  66 61 5c 22 7d 22 3a 7b  |34a2edf2fa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qlnt7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qlnt7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-14-0.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.14.0",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.14.0"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 20:12:05.496640 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-86tvt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-86tvt",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6617",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "80130214-5162-4aaa-a4b2-7b5cd27c30cc",
      ResourceVersion: (string) (len=5) "75577",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227917,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "3a562978-0493-475b-8149-de34a2edf2fa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227917,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  35 36 32 39 37 38 2d 30  |d\":\"3a562978-0|
              00000090  34 39 33 2d 34 37 35 62  2d 38 31 34 39 2d 64 65  |493-475b-8149-de|
              000000a0  33 34 61 32 65 64 66 32  66 61 5c 22 7d 22 3a 7b  |34a2edf2fa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227918,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 31 30  33 5c 22 7d 22 3a 7b 22  |.42.0.103\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9gmqp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9gmqp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-14-0.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227918,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227917,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227918,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227918,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227917,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.14.0",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.14.0"
        }
      },
      PodIP: (string) (len=11) "10.42.0.103",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.0.103"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227917,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851227918,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7696423da460357bd39dd0ee34093739cebcb83098c7ba8a66d9d0448737f142",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 20:12:05.499865 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-9p26x" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-9p26x",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6617",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bae4cc2c-ad16-4a40-866f-f5eae6c3036d",
      ResourceVersion: (string) (len=5) "75858",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "3a562978-0493-475b-8149-de34a2edf2fa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  35 36 32 39 37 38 2d 30  |d\":\"3a562978-0|
              00000090  34 39 33 2d 34 37 35 62  2d 38 31 34 39 2d 64 65  |493-475b-8149-de|
              000000a0  33 34 61 32 65 64 66 32  66 61 5c 22 7d 22 3a 7b  |34a2edf2fa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l2r5h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l2r5h",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-0-253.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.0.253",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.0.253"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 20:12:05.504061 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-g69lt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-g69lt",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6617",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c01f86b7-53a0-4b9d-acec-98c577eb4b08",
      ResourceVersion: (string) (len=5) "75601",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227917,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "3a562978-0493-475b-8149-de34a2edf2fa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227917,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  35 36 32 39 37 38 2d 30  |d\":\"3a562978-0|
              00000090  34 39 33 2d 34 37 35 62  2d 38 31 34 39 2d 64 65  |493-475b-8149-de|
              000000a0  33 34 61 32 65 64 66 32  66 61 5c 22 7d 22 3a 7b  |34a2edf2fa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227919,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 31 38  35 5c 22 7d 22 3a 7b 22  |.42.3.185\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cwjkm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cwjkm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-0-253.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227919,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227917,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227919,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227919,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227917,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.0.253",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.0.253"
        }
      },
      PodIP: (string) (len=11) "10.42.3.185",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.3.185"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227917,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851227919,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://c848dc4cb126d7d3066911bb7b68d9df08d6519667a0bd9dd9e62411df2783d8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 20:12:05.507829 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-hcbq2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-hcbq2",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6617",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f46fb8e1-0175-45b8-b18f-4aaf8590c098",
      ResourceVersion: (string) (len=5) "75856",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "3a562978-0493-475b-8149-de34a2edf2fa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  35 36 32 39 37 38 2d 30  |d\":\"3a562978-0|
              00000090  34 39 33 2d 34 37 35 62  2d 38 31 34 39 2d 64 65  |493-475b-8149-de|
              000000a0  33 34 61 32 65 64 66 32  66 61 5c 22 7d 22 3a 7b  |34a2edf2fa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-56kbc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-56kbc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-11-14.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.11.14",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.11.14"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 20:12:05.511452 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-hzkbg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-hzkbg",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6617",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7c44775c-b887-479f-bc68-ce3f3d32feca",
      ResourceVersion: (string) (len=5) "75603",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227916,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "3a562978-0493-475b-8149-de34a2edf2fa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227916,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  35 36 32 39 37 38 2d 30  |d\":\"3a562978-0|
              00000090  34 39 33 2d 34 37 35 62  2d 38 31 34 39 2d 64 65  |493-475b-8149-de|
              000000a0  33 34 61 32 65 64 66 32  66 61 5c 22 7d 22 3a 7b  |34a2edf2fa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227920,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 33 2e 31 38  34 5c 22 7d 22 3a 7b 22  |.42.3.184\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kf865",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kf865",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-0-253.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227919,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227917,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227919,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227919,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227917,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.0.253",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.0.253"
        }
      },
      PodIP: (string) (len=11) "10.42.3.184",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.3.184"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227917,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851227919,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1a52db0684e701764624b92056b47e9c35635d8b723a9b86811151d882b76a93",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 20:12:05.514664 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-j69hz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-j69hz",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6617",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d8692384-9acb-4254-98bc-83ebfc26503a",
      ResourceVersion: (string) (len=5) "75570",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227917,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "3a562978-0493-475b-8149-de34a2edf2fa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227917,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  35 36 32 39 37 38 2d 30  |d\":\"3a562978-0|
              00000090  34 39 33 2d 34 37 35 62  2d 38 31 34 39 2d 64 65  |493-475b-8149-de|
              000000a0  33 34 61 32 65 64 66 32  66 61 5c 22 7d 22 3a 7b  |34a2edf2fa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227918,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 34  33 5c 22 7d 22 3a 7b 22  |.42.1.143\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fjg86",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fjg86",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-3-33.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227918,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227917,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227918,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227918,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227917,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.3.33",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.3.33"
        }
      },
      PodIP: (string) (len=11) "10.42.1.143",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.143"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227917,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851227918,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://1bd2005ffe2e070458abd2f1318769f855d132ee41749c98222ac26909ce1fa9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 20:12:05.518302 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-kjvrc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-kjvrc",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6617",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "10ec3c8a-ade3-44b0-9804-ec735780992c",
      ResourceVersion: (string) (len=5) "75842",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "3a562978-0493-475b-8149-de34a2edf2fa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  35 36 32 39 37 38 2d 30  |d\":\"3a562978-0|
              00000090  34 39 33 2d 34 37 35 62  2d 38 31 34 39 2d 64 65  |493-475b-8149-de|
              000000a0  33 34 61 32 65 64 66 32  66 61 5c 22 7d 22 3a 7b  |34a2edf2fa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b42gf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b42gf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-3-33.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.3.33",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.3.33"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 20:12:05.521488 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-lxxr6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-lxxr6",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6617",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "172747c3-a192-4aae-ad3f-e101d57637e6",
      ResourceVersion: (string) (len=5) "75827",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "3a562978-0493-475b-8149-de34a2edf2fa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  35 36 32 39 37 38 2d 30  |d\":\"3a562978-0|
              00000090  34 39 33 2d 34 37 35 62  2d 38 31 34 39 2d 64 65  |493-475b-8149-de|
              000000a0  33 34 61 32 65 64 66 32  66 61 5c 22 7d 22 3a 7b  |34a2edf2fa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-knhgk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-knhgk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-3-33.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.3.33",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.3.33"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 20:12:05.524679 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-m7kw9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-m7kw9",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6617",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5e7463ca-605c-4f15-a1b6-bed7023ab846",
      ResourceVersion: (string) (len=5) "75839",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "3a562978-0493-475b-8149-de34a2edf2fa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  35 36 32 39 37 38 2d 30  |d\":\"3a562978-0|
              00000090  34 39 33 2d 34 37 35 62  2d 38 31 34 39 2d 64 65  |493-475b-8149-de|
              000000a0  33 34 61 32 65 64 66 32  66 61 5c 22 7d 22 3a 7b  |34a2edf2fa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-x4m54",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-x4m54",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-14-0.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.14.0",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.14.0"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 20:12:05.528643 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-mvrj8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-mvrj8",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6617",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c057c2c1-f326-451d-a2bc-d0c885f7cebd",
      ResourceVersion: (string) (len=5) "75562",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227917,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "3a562978-0493-475b-8149-de34a2edf2fa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227917,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  35 36 32 39 37 38 2d 30  |d\":\"3a562978-0|
              00000090  34 39 33 2d 34 37 35 62  2d 38 31 34 39 2d 64 65  |493-475b-8149-de|
              000000a0  33 34 61 32 65 64 66 32  66 61 5c 22 7d 22 3a 7b  |34a2edf2fa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227918,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 36 32  5c 22 7d 22 3a 7b 22 2e  |.42.2.62\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qdrb9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qdrb9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-11-14.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227918,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227917,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227918,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227918,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227917,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.11.14",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.11.14"
        }
      },
      PodIP: (string) (len=10) "10.42.2.62",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.62"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227917,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851227918,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d9046fb19fb0a8265d2389fa9531080adef98f885385a44dc8b353e444cb87e2",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 20:12:05.534411 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-nbkf6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-nbkf6",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6617",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b6916a90-a85d-4e9b-854f-20f21532dd3c",
      ResourceVersion: (string) (len=5) "75851",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "3a562978-0493-475b-8149-de34a2edf2fa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  35 36 32 39 37 38 2d 30  |d\":\"3a562978-0|
              00000090  34 39 33 2d 34 37 35 62  2d 38 31 34 39 2d 64 65  |493-475b-8149-de|
              000000a0  33 34 61 32 65 64 66 32  66 61 5c 22 7d 22 3a 7b  |34a2edf2fa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qjphn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qjphn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-0-253.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.0.253",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.0.253"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 20:12:05.539484 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-phkk9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-phkk9",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6617",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "80bd461a-7f3e-4779-b0da-03754c89a638",
      ResourceVersion: (string) (len=5) "75756",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "3a562978-0493-475b-8149-de34a2edf2fa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  35 36 32 39 37 38 2d 30  |d\":\"3a562978-0|
              00000090  34 39 33 2d 34 37 35 62  2d 38 31 34 39 2d 64 65  |493-475b-8149-de|
              000000a0  33 34 61 32 65 64 66 32  66 61 5c 22 7d 22 3a 7b  |34a2edf2fa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hwnr6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hwnr6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-14-0.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.14.0",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.14.0"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 20:12:05.544638 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-zjdp9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-zjdp9",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6617",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3260fb5e-9156-435f-99c3-987df69492dc",
      ResourceVersion: (string) (len=5) "75563",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227916,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "3a562978-0493-475b-8149-de34a2edf2fa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227916,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  35 36 32 39 37 38 2d 30  |d\":\"3a562978-0|
              00000090  34 39 33 2d 34 37 35 62  2d 38 31 34 39 2d 64 65  |493-475b-8149-de|
              000000a0  33 34 61 32 65 64 66 32  66 61 5c 22 7d 22 3a 7b  |34a2edf2fa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227918,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 36 31  5c 22 7d 22 3a 7b 22 2e  |.42.2.61\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kkndt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kkndt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-11-14.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227918,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227917,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227918,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227918,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227917,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.11.14",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.11.14"
        }
      },
      PodIP: (string) (len=10) "10.42.2.61",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.61"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227917,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851227918,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://e57336d7c13f0b035d267389f26335f8bc25aaf6d43a259fa77c3800fdf2146b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 20:12:05.549877 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-zjzgd" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-zjzgd",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6617",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8aed250d-3c11-417d-b1c7-a742633f22f7",
      ResourceVersion: (string) (len=5) "75571",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227916,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "3a562978-0493-475b-8149-de34a2edf2fa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227916,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  35 36 32 39 37 38 2d 30  |d\":\"3a562978-0|
              00000090  34 39 33 2d 34 37 35 62  2d 38 31 34 39 2d 64 65  |493-475b-8149-de|
              000000a0  33 34 61 32 65 64 66 32  66 61 5c 22 7d 22 3a 7b  |34a2edf2fa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227918,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 34  31 5c 22 7d 22 3a 7b 22  |.42.1.141\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d52qq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d52qq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-3-33.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227918,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227916,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227918,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227918,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227916,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.3.33",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.3.33"
        }
      },
      PodIP: (string) (len=11) "10.42.1.141",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.141"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227916,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851227918,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://8d9b2b71af3dc85426c4d6683287ab38d6e7fd3375cc491637d9d8702dc1e39b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 20:12:05.555259 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-zzr9w" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-zzr9w",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6617",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1e503c61-8e96-48ec-b83f-8c2dcaf525af",
      ResourceVersion: (string) (len=5) "75876",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "3a562978-0493-475b-8149-de34a2edf2fa",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 61  35 36 32 39 37 38 2d 30  |d\":\"3a562978-0|
              00000090  34 39 33 2d 34 37 35 62  2d 38 31 34 39 2d 64 65  |493-475b-8149-de|
              000000a0  33 34 61 32 65 64 66 32  66 61 5c 22 7d 22 3a 7b  |34a2edf2fa\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 34  35 5c 22 7d 22 3a 7b 22  |.42.1.145\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dtnrt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dtnrt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=41) "ip-172-31-3-33.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227924,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851227923,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "172.31.3.33",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "172.31.3.33"
        }
      },
      PodIP: (string) (len=11) "10.42.1.145",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.145"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851227923,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851227924,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d00966cfa651d2ddb910a3169c1492b84251986435d42a21356c542b35001948",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 20:12:05.559780 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6617" for this suite. @ 05/13/24 20:12:05.599
• [8.959 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 05/13/24 20:12:05.701
  I0513 20:12:05.701629 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename field-validation @ 05/13/24 20:12:05.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:12:05.923
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:12:05.929
  I0513 20:12:05.945350 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  W0513 20:12:08.774146      19 warnings.go:70] unknown field "alpha"
  W0513 20:12:08.774202      19 warnings.go:70] unknown field "beta"
  W0513 20:12:08.774211      19 warnings.go:70] unknown field "delta"
  W0513 20:12:08.774219      19 warnings.go:70] unknown field "epsilon"
  W0513 20:12:08.774227      19 warnings.go:70] unknown field "gamma"
  I0513 20:12:09.354775 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8827" for this suite. @ 05/13/24 20:12:09.359
• [3.674 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:779
  STEP: Creating a kubernetes client @ 05/13/24 20:12:09.376
  I0513 20:12:09.376558 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename services @ 05/13/24 20:12:09.38
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:12:09.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:12:09.437
  I0513 20:12:09.443856 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4459" for this suite. @ 05/13/24 20:12:09.449
• [0.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:601
  STEP: Creating a kubernetes client @ 05/13/24 20:12:09.46
  I0513 20:12:09.460843 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename job @ 05/13/24 20:12:09.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:12:09.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:12:09.5
  STEP: Creating a job @ 05/13/24 20:12:09.504
  STEP: Ensuring job reaches completions @ 05/13/24 20:12:09.52
  I0513 20:12:19.525018 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-507" for this suite. @ 05/13/24 20:12:19.529
• [10.085 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 05/13/24 20:12:19.545
  I0513 20:12:19.546008 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename aggregator @ 05/13/24 20:12:19.548
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:12:19.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:12:19.595
  I0513 20:12:19.600151 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Registering the sample API server. @ 05/13/24 20:12:19.601
  I0513 20:12:20.134269 19 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I0513 20:12:20.236497 19 deployment.go:222] deployment "sample-apiserver-deployment" doesn't have the required revision set
  I0513 20:12:22.313742 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 20:12:24.318329 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 20:12:26.317918 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 20:12:28.332645 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 20:12:30.318331 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 20:12:32.320583 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 20:12:34.319041 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 20:12:36.319091 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 20:12:38.318446 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 20:12:40.317781 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 20:12:42.320877 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 20:12:44.318906 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.May, 13, 20, 12, 20, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0513 20:12:46.447818 19 aggregator.go:749] Waited 119.225898ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 05/13/24 20:12:46.509
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 05/13/24 20:12:46.512
  STEP: List APIServices @ 05/13/24 20:12:46.527
  I0513 20:12:46.535304 19 aggregator.go:550] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 05/13/24 20:12:46.535
  I0513 20:12:46.567585 19 aggregator.go:575] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 05/13/24 20:12:46.567
  I0513 20:12:46.588456 19 aggregator.go:601] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.May, 13, 20, 12, 46, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 05/13/24 20:12:46.588
  I0513 20:12:46.602351 19 aggregator.go:619] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-05-13 20:12:46 +0000 UTC Passed all checks passed}
  I0513 20:12:46.602566 19 aggregator.go:615] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0513 20:12:46.602708 19 aggregator.go:625] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 05/13/24 20:12:46.602
  I0513 20:12:46.626829 19 aggregator.go:641] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-2046694983" @ 05/13/24 20:12:46.627
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 05/13/24 20:12:46.653
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 05/13/24 20:12:46.669
  STEP: Patch APIService Status @ 05/13/24 20:12:46.673
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 05/13/24 20:12:46.691
  I0513 20:12:46.695461 19 aggregator.go:719] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-05-13 20:12:46 +0000 UTC Passed all checks passed}
  I0513 20:12:46.695785 19 aggregator.go:719] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0513 20:12:46.695908 19 aggregator.go:715] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0513 20:12:46.696024 19 aggregator.go:725] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 05/13/24 20:12:46.696
  STEP: Confirm that the generated APIService has been deleted @ 05/13/24 20:12:46.721
  I0513 20:12:46.721660 19 aggregator.go:786] Requesting list of APIServices to confirm quantity
  I0513 20:12:46.727329 19 aggregator.go:796] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0513 20:12:46.727504 19 aggregator.go:738] APIService v1alpha1.wardle.example.com has been deleted.
  I0513 20:12:46.952300 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-271" for this suite. @ 05/13/24 20:12:46.956
• [27.421 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:789
  STEP: Creating a kubernetes client @ 05/13/24 20:12:46.967
  I0513 20:12:46.967316 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename services @ 05/13/24 20:12:46.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:12:47.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:12:47.717
  STEP: creating service endpoint-test2 in namespace services-9589 @ 05/13/24 20:12:47.721
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9589 to expose endpoints map[] @ 05/13/24 20:12:47.75
  I0513 20:12:47.754505 19 service.go:4226] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  I0513 20:12:48.764237 19 service.go:4258] successfully validated that service endpoint-test2 in namespace services-9589 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-9589 @ 05/13/24 20:12:48.764
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9589 to expose endpoints map[pod1:[80]] @ 05/13/24 20:12:54.799
  I0513 20:12:54.814878 19 service.go:4258] successfully validated that service endpoint-test2 in namespace services-9589 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 05/13/24 20:12:54.814
  I0513 20:12:54.814964 19 resource.go:361] Creating new exec pod
  I0513 20:12:59.848264 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-9589 exec execpodwshbn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0513 20:12:59.997178 19 builder.go:146] stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0513 20:12:59.997243 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0513 20:12:59.997347 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-9589 exec execpodwshbn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.66.235 80'
  I0513 20:13:00.154637 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.66.235 80\nConnection to 10.43.66.235 80 port [tcp/http] succeeded!\n"
  I0513 20:13:00.154705 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-9589 @ 05/13/24 20:13:00.154
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9589 to expose endpoints map[pod1:[80] pod2:[80]] @ 05/13/24 20:13:02.192
  I0513 20:13:02.207874 19 service.go:4258] successfully validated that service endpoint-test2 in namespace services-9589 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 05/13/24 20:13:02.207
  I0513 20:13:03.209030 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-9589 exec execpodwshbn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0513 20:13:03.342852 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0513 20:13:03.342917 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0513 20:13:03.343104 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-9589 exec execpodwshbn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.66.235 80'
  I0513 20:13:03.473882 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.66.235 80\nConnection to 10.43.66.235 80 port [tcp/http] succeeded!\n"
  I0513 20:13:03.473945 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-9589 @ 05/13/24 20:13:03.473
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9589 to expose endpoints map[pod2:[80]] @ 05/13/24 20:13:03.531
  I0513 20:13:03.558207 19 service.go:4258] successfully validated that service endpoint-test2 in namespace services-9589 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 05/13/24 20:13:03.558
  I0513 20:13:04.558648 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-9589 exec execpodwshbn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0513 20:13:04.699813 19 builder.go:146] stderr: "+ + echo hostName\nnc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0513 20:13:04.699875 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0513 20:13:04.699966 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-9589 exec execpodwshbn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.66.235 80'
  I0513 20:13:04.853029 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.66.235 80\nConnection to 10.43.66.235 80 port [tcp/http] succeeded!\n"
  I0513 20:13:04.853127 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-9589 @ 05/13/24 20:13:04.853
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9589 to expose endpoints map[] @ 05/13/24 20:13:04.9
  I0513 20:13:04.947235 19 service.go:4258] successfully validated that service endpoint-test2 in namespace services-9589 exposes endpoints map[]
  I0513 20:13:04.992690 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9589" for this suite. @ 05/13/24 20:13:04.998
• [18.057 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:833
  STEP: Creating a kubernetes client @ 05/13/24 20:13:05.024
  I0513 20:13:05.024328 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename job @ 05/13/24 20:13:05.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:13:05.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:13:05.119
  STEP: Creating a job @ 05/13/24 20:13:05.124
  STEP: Ensure pods equal to parallelism count is attached to the job @ 05/13/24 20:13:05.142
  STEP: patching /status @ 05/13/24 20:13:07.16
  STEP: updating /status @ 05/13/24 20:13:07.179
  STEP: get /status @ 05/13/24 20:13:07.222
  I0513 20:13:07.226536 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2968" for this suite. @ 05/13/24 20:13:07.231
• [2.222 seconds]
------------------------------
SS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 05/13/24 20:13:07.247
  I0513 20:13:07.247240 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename taint-single-pod @ 05/13/24 20:13:07.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:13:07.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:13:07.316
  I0513 20:13:07.318685 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0513 20:14:07.319920 19 util.go:400] Waiting for terminating namespaces to be deleted...
  I0513 20:14:07.324459 19 taints.go:150] Starting informer...
  STEP: Starting pod... @ 05/13/24 20:14:07.324
  I0513 20:14:07.551768 19 taints.go:300] Pod is running on ip-172-31-11-14.us-east-2.compute.internal. Tainting Node
  STEP: Trying to apply a taint on the Node @ 05/13/24 20:14:07.551
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/13/24 20:14:07.631
  STEP: Waiting short time to make sure Pod is queued for deletion @ 05/13/24 20:14:07.635
  I0513 20:14:07.635685 19 taints.go:319] Pod wasn't evicted. Proceeding
  I0513 20:14:07.635707 19 taints.go:326] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 05/13/24 20:14:07.671
  STEP: Waiting some time to make sure that toleration time passed. @ 05/13/24 20:14:07.676
  I0513 20:15:22.677228 19 taints.go:335] Pod wasn't evicted. Test successful
  I0513 20:15:22.677650 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-5960" for this suite. @ 05/13/24 20:15:22.683
• [135.454 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 05/13/24 20:15:22.701
  I0513 20:15:22.701226 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename containers @ 05/13/24 20:15:22.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:15:22.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:15:22.747
  I0513 20:15:24.815128 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8692" for this suite. @ 05/13/24 20:15:24.826
• [2.138 seconds]
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 05/13/24 20:15:24.84
  I0513 20:15:24.840308 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename field-validation @ 05/13/24 20:15:24.841
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:15:24.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:15:24.88
  I0513 20:15:24.892518 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  W0513 20:15:27.441470      19 warnings.go:70] unknown field "alpha"
  W0513 20:15:27.441514      19 warnings.go:70] unknown field "beta"
  W0513 20:15:27.441523      19 warnings.go:70] unknown field "delta"
  W0513 20:15:27.441531      19 warnings.go:70] unknown field "epsilon"
  W0513 20:15:27.441586      19 warnings.go:70] unknown field "gamma"
  I0513 20:15:28.018265 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8162" for this suite. @ 05/13/24 20:15:28.025
• [3.203 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 05/13/24 20:15:28.043
  I0513 20:15:28.043930 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename chunking @ 05/13/24 20:15:28.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:15:28.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:15:28.097
  STEP: creating a large number of resources @ 05/13/24 20:15:28.103
  STEP: retrieving the first page @ 05/13/24 20:15:45.756
  I0513 20:15:45.801856 19 chunking.go:163] Retrieved 40/40 results with rv 77891 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc4OTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 05/13/24 20:15:45.801
  I0513 20:16:05.810818 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc4OTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0513 20:16:25.808563 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc4OTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0513 20:16:45.809080 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc4OTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0513 20:17:05.810613 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc4OTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0513 20:17:25.812293 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc4OTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0513 20:17:45.808114 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc4OTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0513 20:18:05.809135 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc4OTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0513 20:18:25.807842 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc4OTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0513 20:18:45.809153 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc4OTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0513 20:19:05.808588 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc4OTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0513 20:19:25.809000 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc4OTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0513 20:19:45.809913 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc4OTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0513 20:20:05.816570 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc4OTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0513 20:20:25.811164 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc4OTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0513 20:20:45.808423 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc4OTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0513 20:21:05.808042 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc4OTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0513 20:21:25.813542 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc4OTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0513 20:21:45.808520 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc4OTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0513 20:22:05.809433 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc4OTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0513 20:22:25.807825 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6Nzc4OTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I0513 20:22:45.808044 19 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0513 20:22:45.808103 19 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 05/13/24 20:22:45.808
  STEP: retrieving all remaining pages @ 05/13/24 20:22:45.813
  I0513 20:22:45.827658 19 chunking.go:221] Retrieved 40/40 results with rv 79349 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzkzNDksInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0513 20:22:45.832811 19 chunking.go:221] Retrieved 40/40 results with rv 79349 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzkzNDksInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0513 20:22:45.838929 19 chunking.go:221] Retrieved 40/40 results with rv 79349 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzkzNDksInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0513 20:22:45.845270 19 chunking.go:221] Retrieved 40/40 results with rv 79349 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzkzNDksInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0513 20:22:45.851616 19 chunking.go:221] Retrieved 40/40 results with rv 79349 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzkzNDksInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0513 20:22:45.861823 19 chunking.go:221] Retrieved 40/40 results with rv 79349 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzkzNDksInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0513 20:22:45.869401 19 chunking.go:221] Retrieved 40/40 results with rv 79349 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NzkzNDksInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0513 20:22:45.876936 19 chunking.go:221] Retrieved 40/40 results with rv 79349 and continue 
  I0513 20:22:45.877270 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-9178" for this suite. @ 05/13/24 20:22:45.883
• [437.853 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 05/13/24 20:22:45.897
  I0513 20:22:45.897237 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename projected @ 05/13/24 20:22:45.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:22:45.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:22:45.963
  STEP: Creating configMap with name projected-configmap-test-volume-6bfeb7c6-e6cb-4250-85b3-5d1ba8616414 @ 05/13/24 20:22:45.967
  STEP: Creating a pod to test consume configMaps @ 05/13/24 20:22:45.978
  STEP: Saw pod success @ 05/13/24 20:22:50.02
  I0513 20:22:50.024400 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod pod-projected-configmaps-e92d0a0b-6a0e-44fc-819f-4d97a4d63653 container agnhost-container: <nil>
  STEP: delete the pod @ 05/13/24 20:22:50.039
  I0513 20:22:50.093837 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9892" for this suite. @ 05/13/24 20:22:50.098
• [4.223 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:889
  STEP: Creating a kubernetes client @ 05/13/24 20:22:50.121
  I0513 20:22:50.121642 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename resourcequota @ 05/13/24 20:22:50.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:22:50.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:22:50.181
  STEP: Creating a ResourceQuota @ 05/13/24 20:22:50.203
  STEP: Getting a ResourceQuota @ 05/13/24 20:22:50.214
  STEP: Updating a ResourceQuota @ 05/13/24 20:22:50.228
  STEP: Verifying a ResourceQuota was modified @ 05/13/24 20:22:50.245
  STEP: Deleting a ResourceQuota @ 05/13/24 20:22:50.248
  STEP: Verifying the deleted ResourceQuota @ 05/13/24 20:22:50.274
  I0513 20:22:50.279473 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4430" for this suite. @ 05/13/24 20:22:50.284
• [0.193 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1420
  STEP: Creating a kubernetes client @ 05/13/24 20:22:50.314
  I0513 20:22:50.314550 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename services @ 05/13/24 20:22:50.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:22:50.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:22:50.405
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-8496 @ 05/13/24 20:22:50.408
  STEP: changing the ExternalName service to type=ClusterIP @ 05/13/24 20:22:50.43
  STEP: creating replication controller externalname-service in namespace services-8496 @ 05/13/24 20:22:50.472
  I0513 20:22:50.514457      19 runners.go:198] Created replication controller with name: externalname-service, namespace: services-8496, replica count: 2
  I0513 20:22:53.565276      19 runners.go:198] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0513 20:22:53.565323 19 resource.go:361] Creating new exec pod
  I0513 20:22:56.626665 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-8496 exec execpod597md -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0513 20:22:56.827367 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0513 20:22:56.827538 19 builder.go:147] stdout: "externalname-service-q2j5g"
  I0513 20:22:56.827666 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-8496 exec execpod597md -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.234.133 80'
  I0513 20:22:56.991871 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.234.133 80\nConnection to 10.43.234.133 80 port [tcp/http] succeeded!\n"
  I0513 20:22:56.991926 19 builder.go:147] stdout: "externalname-service-6jhs9"
  I0513 20:22:56.992013 19 service.go:1429] Cleaning up the ExternalName to ClusterIP test service
  I0513 20:22:57.028313 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8496" for this suite. @ 05/13/24 20:22:57.033
• [6.740 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 05/13/24 20:22:57.054
  I0513 20:22:57.054897 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename container-probe @ 05/13/24 20:22:57.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:22:57.086
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:22:57.09
  I0513 20:23:19.220227 19 container_probe.go:92] Container started at 2024-05-13 20:22:57 +0000 UTC, pod became ready at 2024-05-13 20:23:17 +0000 UTC
  I0513 20:23:19.220489 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9087" for this suite. @ 05/13/24 20:23:19.227
• [22.202 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 05/13/24 20:23:19.257
  I0513 20:23:19.257728 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename replication-controller @ 05/13/24 20:23:19.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:23:19.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:23:19.324
  STEP: Creating ReplicationController "e2e-rc-pmfh7" @ 05/13/24 20:23:19.328
  I0513 20:23:19.347753 19 rc.go:792] Get Replication Controller "e2e-rc-pmfh7" to confirm replicas
  I0513 20:23:20.348528 19 rc.go:792] Get Replication Controller "e2e-rc-pmfh7" to confirm replicas
  I0513 20:23:20.738323 19 rc.go:801] Found 1 replicas for "e2e-rc-pmfh7" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-pmfh7" @ 05/13/24 20:23:20.738
  STEP: Updating a scale subresource @ 05/13/24 20:23:20.742
  STEP: Verifying replicas where modified for replication controller "e2e-rc-pmfh7" @ 05/13/24 20:23:20.761
  I0513 20:23:20.761414 19 rc.go:792] Get Replication Controller "e2e-rc-pmfh7" to confirm replicas
  I0513 20:23:21.762249 19 rc.go:792] Get Replication Controller "e2e-rc-pmfh7" to confirm replicas
  I0513 20:23:21.766512 19 rc.go:801] Found 2 replicas for "e2e-rc-pmfh7" replication controller
  I0513 20:23:21.766665 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4266" for this suite. @ 05/13/24 20:23:21.771
• [2.532 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 05/13/24 20:23:21.789
  I0513 20:23:21.789938 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename downward-api @ 05/13/24 20:23:21.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:23:21.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:23:21.822
  STEP: Creating a pod to test downward API volume plugin @ 05/13/24 20:23:21.826
  STEP: Saw pod success @ 05/13/24 20:23:25.872
  I0513 20:23:25.876589 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod downwardapi-volume-3d7eb55d-18f5-4ca3-b6e7-2767c95976c6 container client-container: <nil>
  STEP: delete the pod @ 05/13/24 20:23:25.883
  I0513 20:23:25.916561 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1016" for this suite. @ 05/13/24 20:23:25.921
• [4.147 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:453
  STEP: Creating a kubernetes client @ 05/13/24 20:23:25.939
  I0513 20:23:25.939818 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename resourcequota @ 05/13/24 20:23:25.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:23:25.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:23:26
  STEP: Counting existing ResourceQuota @ 05/13/24 20:23:26.003
  STEP: Creating a ResourceQuota @ 05/13/24 20:23:31.012
  STEP: Ensuring resource quota status is calculated @ 05/13/24 20:23:31.028
  STEP: Creating a ReplicaSet @ 05/13/24 20:23:33.033
  STEP: Ensuring resource quota status captures replicaset creation @ 05/13/24 20:23:33.059
  STEP: Deleting a ReplicaSet @ 05/13/24 20:23:35.064
  STEP: Ensuring resource quota status released usage @ 05/13/24 20:23:35.075
  I0513 20:23:37.081954 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1657" for this suite. @ 05/13/24 20:23:37.088
• [11.167 seconds]
------------------------------
SS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 05/13/24 20:23:37.106
  I0513 20:23:37.107004 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename downward-api @ 05/13/24 20:23:37.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:23:37.173
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:23:37.177
  STEP: Creating a pod to test downward api env vars @ 05/13/24 20:23:37.183
  STEP: Saw pod success @ 05/13/24 20:23:41.231
  I0513 20:23:41.235126 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod downward-api-628d208e-76f7-419b-b01c-325efc85daa4 container dapi-container: <nil>
  STEP: delete the pod @ 05/13/24 20:23:41.242
  I0513 20:23:41.290206 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6242" for this suite. @ 05/13/24 20:23:41.296
• [4.207 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:406
  STEP: Creating a kubernetes client @ 05/13/24 20:23:41.315
  I0513 20:23:41.315546 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename validating-admission-policy @ 05/13/24 20:23:41.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:23:41.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:23:41.371
  STEP: getting /apis @ 05/13/24 20:23:41.397
  STEP: getting /apis/admissionregistration.k8s.io @ 05/13/24 20:23:41.408
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 05/13/24 20:23:41.426
  STEP: creating @ 05/13/24 20:23:41.428
  STEP: getting @ 05/13/24 20:23:41.516
  STEP: listing @ 05/13/24 20:23:41.524
  STEP: watching @ 05/13/24 20:23:41.527
  I0513 20:23:41.527698 19 validatingadmissionpolicy.go:523] starting watch
  STEP: patching @ 05/13/24 20:23:41.529
  STEP: updating @ 05/13/24 20:23:41.547
  I0513 20:23:41.594697 19 validatingadmissionpolicy.go:552] waiting for watch events with expected annotations
  STEP: getting /status @ 05/13/24 20:23:41.594
  STEP: patching /status @ 05/13/24 20:23:41.598
  STEP: updating /status @ 05/13/24 20:23:41.62
  STEP: deleting @ 05/13/24 20:23:41.676
  STEP: deleting a collection @ 05/13/24 20:23:41.693
  I0513 20:23:41.738778 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-797" for this suite. @ 05/13/24 20:23:41.748
• [0.453 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 05/13/24 20:23:41.768
  I0513 20:23:41.768479 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename ingress @ 05/13/24 20:23:41.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:23:41.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:23:41.818
  STEP: getting /apis @ 05/13/24 20:23:41.823
  STEP: getting /apis/networking.k8s.io @ 05/13/24 20:23:41.83
  STEP: getting /apis/networking.k8s.iov1 @ 05/13/24 20:23:41.832
  STEP: creating @ 05/13/24 20:23:41.844
  STEP: getting @ 05/13/24 20:23:41.901
  STEP: listing @ 05/13/24 20:23:41.916
  STEP: watching @ 05/13/24 20:23:41.921
  I0513 20:23:41.921067 19 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 05/13/24 20:23:41.922
  STEP: cluster-wide watching @ 05/13/24 20:23:41.926
  I0513 20:23:41.926442 19 ingress.go:198] starting watch
  STEP: patching @ 05/13/24 20:23:41.928
  STEP: updating @ 05/13/24 20:23:41.94
  I0513 20:23:41.955342 19 ingress.go:221] waiting for watch events with expected annotations
  I0513 20:23:41.955442 19 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 05/13/24 20:23:41.955
  STEP: updating /status @ 05/13/24 20:23:42.016
  STEP: get /status @ 05/13/24 20:23:42.066
  STEP: deleting @ 05/13/24 20:23:42.072
  STEP: deleting a collection @ 05/13/24 20:23:42.101
  I0513 20:23:42.132270 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-8616" for this suite. @ 05/13/24 20:23:42.137
• [0.387 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 05/13/24 20:23:42.155
  I0513 20:23:42.155828 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename svcaccounts @ 05/13/24 20:23:42.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:23:42.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:23:42.199
  STEP: reading a file in the container @ 05/13/24 20:23:44.251
  I0513 20:23:44.251853 19 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-5902 pod-service-account-8dc0e623-9090-47c9-a314-f8f4180313c4 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 05/13/24 20:23:44.394
  I0513 20:23:44.394269 19 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-5902 pod-service-account-8dc0e623-9090-47c9-a314-f8f4180313c4 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 05/13/24 20:23:44.568
  I0513 20:23:44.568833 19 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-5902 pod-service-account-8dc0e623-9090-47c9-a314-f8f4180313c4 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0513 20:23:44.746868 19 service_accounts.go:114] Got root ca configmap in namespace "svcaccounts-5902"
  I0513 20:23:44.752470 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5902" for this suite. @ 05/13/24 20:23:44.76
• [2.620 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 05/13/24 20:23:44.776
  I0513 20:23:44.776507 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename namespaces @ 05/13/24 20:23:44.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:23:44.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:23:44.839
  STEP: creating a Namespace @ 05/13/24 20:23:44.847
  STEP: patching the Namespace @ 05/13/24 20:23:44.892
  STEP: get the Namespace and ensuring it has the label @ 05/13/24 20:23:44.909
  I0513 20:23:44.914364 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3739" for this suite. @ 05/13/24 20:23:44.92
  STEP: Destroying namespace "nspatchtest-aa8b682c-21cb-4470-a465-d394a9933b5d-7962" for this suite. @ 05/13/24 20:23:44.944
• [0.183 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1759
  STEP: Creating a kubernetes client @ 05/13/24 20:23:44.96
  I0513 20:23:44.960397 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename kubectl @ 05/13/24 20:23:44.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:23:45.013
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:23:45.016
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/13/24 20:23:45.02
  I0513 20:23:45.021168 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-8880 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0513 20:23:45.149563 19 builder.go:146] stderr: ""
  I0513 20:23:45.149611 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 05/13/24 20:23:45.149
  I0513 20:23:45.154052 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-8880 delete pods e2e-test-httpd-pod'
  I0513 20:23:46.729598 19 builder.go:146] stderr: ""
  I0513 20:23:46.729642 19 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0513 20:23:46.729750 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8880" for this suite. @ 05/13/24 20:23:46.734
• [1.785 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 05/13/24 20:23:46.746
  I0513 20:23:46.746046 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename security-context-test @ 05/13/24 20:23:46.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:23:46.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:23:46.811
  I0513 20:23:50.850181 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-3056" for this suite. @ 05/13/24 20:23:50.854
• [4.126 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 05/13/24 20:23:50.871
  I0513 20:23:50.871970 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename sched-preemption @ 05/13/24 20:23:50.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:23:50.911
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:23:50.916
  I0513 20:23:50.964675 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0513 20:24:50.971298 19 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 05/13/24 20:24:50.975
  I0513 20:24:50.975818 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename sched-preemption-path @ 05/13/24 20:24:50.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:24:51.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:24:51.045
  I0513 20:24:51.088562 19 preemption.go:818] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0513 20:24:51.093022 19 preemption.go:824] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  I0513 20:24:51.259382 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-7449" for this suite. @ 05/13/24 20:24:51.266
  I0513 20:24:51.283570 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2191" for this suite. @ 05/13/24 20:24:51.289
• [60.429 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 05/13/24 20:24:51.303
  I0513 20:24:51.303480 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename replication-controller @ 05/13/24 20:24:51.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:24:51.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:24:51.407
  STEP: creating a ReplicationController @ 05/13/24 20:24:51.416
  STEP: waiting for RC to be added @ 05/13/24 20:24:51.428
  STEP: waiting for available Replicas @ 05/13/24 20:24:51.428
  STEP: patching ReplicationController @ 05/13/24 20:24:52.7
  STEP: waiting for RC to be modified @ 05/13/24 20:24:52.727
  STEP: patching ReplicationController status @ 05/13/24 20:24:52.728
  STEP: waiting for RC to be modified @ 05/13/24 20:24:52.751
  STEP: waiting for available Replicas @ 05/13/24 20:24:52.751
  STEP: fetching ReplicationController status @ 05/13/24 20:24:52.76
  STEP: patching ReplicationController scale @ 05/13/24 20:24:52.764
  STEP: waiting for RC to be modified @ 05/13/24 20:24:52.777
  STEP: waiting for ReplicationController's scale to be the max amount @ 05/13/24 20:24:52.777
  STEP: fetching ReplicationController; ensuring that it's patched @ 05/13/24 20:24:53.825
  STEP: updating ReplicationController status @ 05/13/24 20:24:53.829
  STEP: waiting for RC to be modified @ 05/13/24 20:24:53.852
  STEP: listing all ReplicationControllers @ 05/13/24 20:24:53.852
  STEP: checking that ReplicationController has expected values @ 05/13/24 20:24:53.867
  STEP: deleting ReplicationControllers by collection @ 05/13/24 20:24:53.867
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 05/13/24 20:24:53.88
  I0513 20:24:53.977372 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0513 20:24:53.977499      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-1354" for this suite. @ 05/13/24 20:24:53.982
• [2.701 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 05/13/24 20:24:54.003
  I0513 20:24:54.003689 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename namespaces @ 05/13/24 20:24:54.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:24:54.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:24:54.08
  STEP: Creating a test namespace @ 05/13/24 20:24:54.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:24:54.119
  STEP: Creating a service in the namespace @ 05/13/24 20:24:54.123
  STEP: Deleting the namespace @ 05/13/24 20:24:54.151
  STEP: Waiting for the namespace to be removed. @ 05/13/24 20:24:54.208
  E0513 20:24:54.977662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:55.978448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:56.978530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:57.978668      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:58.979662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:24:59.980655      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 05/13/24 20:25:00.213
  STEP: Verifying there is no service in the namespace @ 05/13/24 20:25:00.25
  I0513 20:25:00.252875 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5839" for this suite. @ 05/13/24 20:25:00.257
  STEP: Destroying namespace "nsdeletetest-3899" for this suite. @ 05/13/24 20:25:00.283
  I0513 20:25:00.289052 19 framework.go:370] Namespace nsdeletetest-3899 was already deleted
  STEP: Destroying namespace "nsdeletetest-3642" for this suite. @ 05/13/24 20:25:00.289
• [6.300 seconds]
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 05/13/24 20:25:00.304
  I0513 20:25:00.304266 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename container-probe @ 05/13/24 20:25:00.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:25:00.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:25:00.401
  STEP: Creating pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651 @ 05/13/24 20:25:00.407
  E0513 20:25:00.981717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:01.981935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 05/13/24 20:25:02.452
  I0513 20:25:02.457057 19 container_probe.go:1749] Initial restart count of pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c is 0
  I0513 20:25:02.460587 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:25:02.982197      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:03.982350      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:25:04.464908 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:25:04.982455      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:05.982642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:25:06.469441 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:25:06.982750      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:07.983365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:25:08.475545 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:25:08.984174      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:09.987071      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:25:10.481285 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:25:10.989697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:11.988629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:25:12.486967 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:25:12.989424      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:13.990390      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:25:14.492384 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:25:14.990656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:15.991149      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:25:16.496280 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:25:16.992123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:17.992349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:25:18.503200 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:25:18.992434      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:19.992732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:25:20.508067 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:25:20.993166      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:21.993420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:25:22.511947 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  I0513 20:25:22.512087 19 container_probe.go:1763] Restart count of pod container-probe-2651/liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c is now 1 (20.054950246s elapsed)
  E0513 20:25:22.993450      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:23.993528      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:25:24.516599 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:25:24.994313      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:25.994568      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:25:26.521065 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:25:26.994590      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:27.995397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:25:28.527615 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:25:28.996249      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:29.996348      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:25:30.532602 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:25:30.997217      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:31.997311      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:25:32.536502 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:25:32.998170      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:33.998384      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:25:34.543529 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:25:34.999041      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:35.999515      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:25:36.551564 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:25:37.000294      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:38.002185      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:25:38.557312 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:25:39.003378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:40.003557      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:25:40.562559 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:25:41.004039      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:42.004138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:25:42.568381 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  I0513 20:25:42.568456 19 container_probe.go:1763] Restart count of pod container-probe-2651/liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c is now 2 (40.111319337s elapsed)
  E0513 20:25:43.004956      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:44.005203      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:25:44.573059 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:25:45.005355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:46.005600      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:25:46.591131 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:25:47.005820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:48.005975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:25:48.596111 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:25:49.006978      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:50.007617      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:25:50.601887 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:25:51.008446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:52.008728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:25:52.607522 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:25:53.008818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:54.009164      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:25:54.612218 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:25:55.009797      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:56.010683      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:25:56.617135 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:25:57.011387      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:25:58.011751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:25:58.622197 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:25:59.012722      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:00.012896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:26:00.627704 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:26:01.013000      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:02.013308      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:26:02.633134 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  I0513 20:26:02.633204 19 container_probe.go:1763] Restart count of pod container-probe-2651/liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c is now 3 (1m0.176066441s elapsed)
  E0513 20:26:03.014346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:04.014633      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:26:04.640023 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:26:05.015511      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:06.015851      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:26:06.644799 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:26:07.016431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:08.016598      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:26:08.652123 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:26:09.017664      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:10.018387      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:26:10.657250 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:26:11.018541      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:12.018867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:26:12.662947 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:26:13.019434      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:14.019627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:26:14.669537 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:26:15.019840      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:16.020219      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:26:16.674632 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:26:17.021121      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:18.021280      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:26:18.679613 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:26:19.022126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:20.022277      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:26:20.685666 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:26:21.023126      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:22.023414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:26:22.693800 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  I0513 20:26:22.693861 19 container_probe.go:1763] Restart count of pod container-probe-2651/liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c is now 4 (1m20.236722558s elapsed)
  E0513 20:26:23.024247      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:24.024413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:26:24.700392 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:26:25.024587      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:26.025604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:26:26.706103 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:26:27.026510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:28.026584      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:26:28.710726 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:26:29.027116      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:30.027751      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:26:30.717545 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:26:31.027870      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:32.028300      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:26:32.721954 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:26:33.028441      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:34.028769      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:26:34.727973 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:26:35.029452      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:36.030440      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:26:36.733080 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:26:37.031135      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:38.031275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:26:38.738179 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:26:39.031424      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:40.031677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:26:40.744488 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:26:41.032728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:42.032996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:26:42.748775 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:26:43.033156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:44.033315      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:26:44.755880 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:26:45.034363      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:46.034944      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:26:46.762252 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:26:47.035641      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:48.035771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:26:48.767040 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:26:49.036435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:50.036696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:26:50.772429 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:26:51.037752      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:52.037934      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:26:52.777556 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:26:53.039001      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:54.039260      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:26:54.781965 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:26:55.040326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:56.040853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:26:56.786015 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:26:57.042233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:26:58.042385      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:26:58.790428 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:26:59.042798      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:00.042945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:00.795417 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:27:01.043987      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:02.044142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:02.804249 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:27:03.044571      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:04.044767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:04.808395 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:27:05.044789      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:06.045245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:06.813239 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:27:07.045540      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:08.045760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:08.817313 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:27:09.046769      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:10.047228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:10.823133 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:27:11.047396      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:12.047553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:12.832399 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:27:13.047670      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:14.047817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:14.836958 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:27:15.049750      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:16.050738      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:16.840807 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:27:17.051507      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:18.051790      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:18.854646 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:27:19.052025      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:20.052458      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:20.860151 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:27:21.052527      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:22.053252      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:22.866935 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:27:23.053212      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:24.053398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:24.872229 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:27:25.053462      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:26.054240      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:26.876508 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:27:27.054854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:28.055461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:28.881238 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:27:29.056485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:30.056840      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:30.886514 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:27:31.057695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:32.057820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:32.890464 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:27:33.058841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:34.059029      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:34.899284 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  E0513 20:27:35.059556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:36.060052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:36.905731 19 container_probe.go:1759] Get pod liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c in namespace container-probe-2651
  I0513 20:27:36.905790 19 container_probe.go:1763] Restart count of pod container-probe-2651/liveness-cdb3b3ec-f7a8-4aef-8e35-845bcf8a227c is now 5 (2m34.448652941s elapsed)
  STEP: deleting the pod @ 05/13/24 20:27:36.905
  I0513 20:27:36.937736 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2651" for this suite. @ 05/13/24 20:27:36.943
• [156.653 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 05/13/24 20:27:36.958
  I0513 20:27:36.958372 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename deployment @ 05/13/24 20:27:36.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:27:37.031
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:27:37.035
  I0513 20:27:37.040957 19 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0513 20:27:37.055252 19 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0513 20:27:37.060714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:38.060959      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:39.061268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:40.061237      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:41.061272      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:42.059760 19 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 05/13/24 20:27:42.059
  I0513 20:27:42.059861 19 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  E0513 20:27:42.061902      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:42.071314 19 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0513 20:27:42.084839 19 deployment.go:222] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0513 20:27:43.062398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:44.062541      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:27:44.093850 19 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0513 20:27:44.097764 19 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0513 20:27:44.109156 19 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2136",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4377c33a-5aea-4d88-bba7-8fb3f3126519",
      ResourceVersion: (string) (len=5) "81408",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851228862,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851228862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851228863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851228862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851228862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851228863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851228862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6f4b778cd6\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0513 20:27:44.117010 19 deployment.go:39] New ReplicaSet "test-rolling-update-deployment-6f4b778cd6" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6f4b778cd6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2136",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f90e1dea-7003-4db1-b19b-70df406cde2d",
      ResourceVersion: (string) (len=5) "81398",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851228862,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "4377c33a-5aea-4d88-bba7-8fb3f3126519",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851228862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 33 37 37 63 33  33 61 2d 35 61 65 61 2d  |\"4377c33a-5aea-|
              00000120  34 64 38 38 2d 62 62 61  37 2d 38 66 62 33 66 33  |4d88-bba7-8fb3f3|
              00000130  31 32 36 35 31 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |126519\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851228863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0513 20:27:44.118614 19 deployment.go:44] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0513 20:27:44.118999 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2136",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "66c01369-d4c3-4c00-a234-b1d5d93bee8e",
      ResourceVersion: (string) (len=5) "81407",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851228857,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "4377c33a-5aea-4d88-bba7-8fb3f3126519",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851228857,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851228863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 34 33 37 37 63 33 33  |"uid\":\"4377c33|
              000000b0  61 2d 35 61 65 61 2d 34  64 38 38 2d 62 62 61 37  |a-5aea-4d88-bba7|
              000000c0  2d 38 66 62 33 66 33 31  32 36 35 31 39 5c 22 7d  |-8fb3f3126519\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851228863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0513 20:27:44.127370 19 deployment.go:67] Pod "test-rolling-update-deployment-6f4b778cd6-hwh6s" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6f4b778cd6-hwh6s",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6f4b778cd6-",
      Namespace: (string) (len=15) "deployment-2136",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ffcf83d3-e4dd-4ce4-afbf-1c0d9732f008",
      ResourceVersion: (string) (len=5) "81397",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851228862,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6f4b778cd6",
          UID: (types.UID) (len=36) "f90e1dea-7003-4db1-b19b-70df406cde2d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851228862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 39  30 65 31 64 65 61 2d 37  |d\":\"f90e1dea-7|
              00000090  30 30 33 2d 34 64 62 31  2d 62 31 39 62 2d 37 30  |003-4db1-b19b-70|
              000000a0  64 66 34 30 36 63 64 65  32 64 5c 22 7d 22 3a 7b  |df406cde2d\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=3) "k3s",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851228863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 39 31  5c 22 7d 22 3a 7b 22 2e  |.42.2.91\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j2ttb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j2ttb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=42) "ip-172-31-11-14.us-east-2.compute.internal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851228863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851228862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851228863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851228863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63851228862,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.11.14",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.11.14"
        }
      },
      PodIP: (string) (len=10) "10.42.2.91",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.91"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63851228862,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63851228862,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://ecd25c2f268d226a018fde5617b1046fd5c5d36550cd2130b6b050ffbe764dce",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0513 20:27:44.133826 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2136" for this suite. @ 05/13/24 20:27:44.141
• [7.196 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 05/13/24 20:27:44.155
  I0513 20:27:44.155387 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename projected @ 05/13/24 20:27:44.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:27:44.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:27:44.205
  STEP: Creating projection with secret that has name projected-secret-test-map-cdc7d824-0592-4fc3-9ba0-0c51344258ce @ 05/13/24 20:27:44.209
  STEP: Creating a pod to test consume secrets @ 05/13/24 20:27:44.221
  E0513 20:27:45.063357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:46.063765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:47.064221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:48.064368      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/13/24 20:27:48.263
  I0513 20:27:48.268629 19 output.go:196] Trying to get logs from node ip-172-31-0-253.us-east-2.compute.internal pod pod-projected-secrets-d1835c96-dd87-4f03-a6c6-25ee6e5dd977 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 05/13/24 20:27:48.292
  I0513 20:27:48.330548 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6120" for this suite. @ 05/13/24 20:27:48.337
• [4.196 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 05/13/24 20:27:48.352
  I0513 20:27:48.352879 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename namespaces @ 05/13/24 20:27:48.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:27:48.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:27:48.402
  STEP: Updating Namespace "namespaces-7413" @ 05/13/24 20:27:48.407
  I0513 20:27:48.425339 19 namespace.go:389] Namespace "namespaces-7413" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"1efc8422-a312-4f5d-a85f-65948e7420c3", "kubernetes.io/metadata.name":"namespaces-7413", "namespaces-7413":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0513 20:27:48.425475 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7413" for this suite. @ 05/13/24 20:27:48.431
• [0.094 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 05/13/24 20:27:48.447
  I0513 20:27:48.447118 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename pod-network-test @ 05/13/24 20:27:48.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:27:48.49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:27:48.496
  STEP: Performing setup for networking test in namespace pod-network-test-2910 @ 05/13/24 20:27:48.502
  STEP: creating a selector @ 05/13/24 20:27:48.502
  STEP: Creating the service pods in kubernetes @ 05/13/24 20:27:48.502
  I0513 20:27:48.502384 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0513 20:27:49.064626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:50.064623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:51.065591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:52.065731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:53.066431      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:54.066808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:55.067799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:56.068254      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:57.069195      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:58.069294      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:27:59.069715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:00.069832      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:01.070006      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:02.070191      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:03.070320      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:04.070422      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:05.071204      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:06.071517      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:07.072448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:08.072582      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:09.073613      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:10.074653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 05/13/24 20:28:10.783
  E0513 20:28:11.075495      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:12.075754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:28:12.804388 19 utils.go:779] Setting MaxTries for pod polling to 46 for networking test based on endpoint count 4
  I0513 20:28:12.804444 19 networking.go:42] Breadth first check of 10.42.3.199 on host 172.31.0.253...
  I0513 20:28:12.807408 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.2.93:9080/dial?request=hostname&protocol=http&host=10.42.3.199&port=8083&tries=1'] Namespace:pod-network-test-2910 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 20:28:12.807521 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 20:28:12.808117 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 20:28:12.808198 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-2910/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.2.93%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.3.199%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0513 20:28:12.868747 19 utils.go:331] Waiting for responses: map[]
  I0513 20:28:12.868793 19 utils.go:335] reached 10.42.3.199 after 0/1 tries
  I0513 20:28:12.868812 19 networking.go:42] Breadth first check of 10.42.2.92 on host 172.31.11.14...
  I0513 20:28:12.872729 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.2.93:9080/dial?request=hostname&protocol=http&host=10.42.2.92&port=8083&tries=1'] Namespace:pod-network-test-2910 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 20:28:12.872785 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 20:28:12.873563 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 20:28:12.873770 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-2910/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.2.93%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.2.92%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0513 20:28:12.925275 19 utils.go:331] Waiting for responses: map[]
  I0513 20:28:12.925360 19 utils.go:335] reached 10.42.2.92 after 0/1 tries
  I0513 20:28:12.925380 19 networking.go:42] Breadth first check of 10.42.0.112 on host 172.31.14.0...
  I0513 20:28:12.929489 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.2.93:9080/dial?request=hostname&protocol=http&host=10.42.0.112&port=8083&tries=1'] Namespace:pod-network-test-2910 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 20:28:12.929538 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 20:28:12.930295 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 20:28:12.930378 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-2910/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.2.93%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.0.112%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0513 20:28:12.985666 19 utils.go:331] Waiting for responses: map[]
  I0513 20:28:12.985724 19 utils.go:335] reached 10.42.0.112 after 0/1 tries
  I0513 20:28:12.985743 19 networking.go:42] Breadth first check of 10.42.1.151 on host 172.31.3.33...
  I0513 20:28:12.990884 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.2.93:9080/dial?request=hostname&protocol=http&host=10.42.1.151&port=8083&tries=1'] Namespace:pod-network-test-2910 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 20:28:12.990934 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 20:28:12.991717 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 20:28:12.991878 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-2910/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.2.93%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.1.151%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0513 20:28:13.041024 19 utils.go:331] Waiting for responses: map[]
  I0513 20:28:13.041119 19 utils.go:335] reached 10.42.1.151 after 0/1 tries
  I0513 20:28:13.041137 19 networking.go:53] Going to retry 0 out of 4 pods....
  I0513 20:28:13.041225 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2910" for this suite. @ 05/13/24 20:28:13.046
• [24.611 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 05/13/24 20:28:13.058
  I0513 20:28:13.058437 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename emptydir @ 05/13/24 20:28:13.059
  E0513 20:28:13.076016      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:28:13.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:28:13.157
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 05/13/24 20:28:13.161
  E0513 20:28:14.076756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:15.076913      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:16.077299      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:17.082810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/13/24 20:28:17.194
  I0513 20:28:17.211518 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod pod-ba1a21ab-866c-4cf4-8a1f-9f1f16e78bd2 container test-container: <nil>
  STEP: delete the pod @ 05/13/24 20:28:17.236
  I0513 20:28:17.279292 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5849" for this suite. @ 05/13/24 20:28:17.283
• [4.237 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 05/13/24 20:28:17.295
  I0513 20:28:17.296033 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename subpath @ 05/13/24 20:28:17.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:28:17.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:28:17.35
  STEP: Setting up data @ 05/13/24 20:28:17.353
  STEP: Creating pod pod-subpath-test-configmap-9lt9 @ 05/13/24 20:28:17.385
  STEP: Creating a pod to test atomic-volume-subpath @ 05/13/24 20:28:17.385
  E0513 20:28:18.083662      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:19.083746      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:20.084747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:21.085323      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:22.086235      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:23.086354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:24.086690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:25.086717      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:26.086852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:27.086959      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:28.087783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:29.087947      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:30.088109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:31.089147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:32.089253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:33.089289      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:34.089528      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:35.089623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:36.090246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:37.090843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:38.091544      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:39.091673      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:40.093128      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:41.093302      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/13/24 20:28:41.913
  I0513 20:28:41.916947 19 output.go:196] Trying to get logs from node ip-172-31-0-253.us-east-2.compute.internal pod pod-subpath-test-configmap-9lt9 container test-container-subpath-configmap-9lt9: <nil>
  STEP: delete the pod @ 05/13/24 20:28:41.924
  STEP: Deleting pod pod-subpath-test-configmap-9lt9 @ 05/13/24 20:28:41.96
  I0513 20:28:41.960500 19 delete.go:62] Deleting pod "pod-subpath-test-configmap-9lt9" in namespace "subpath-5256"
  I0513 20:28:41.963617 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5256" for this suite. @ 05/13/24 20:28:41.979
• [24.694 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:668
  STEP: Creating a kubernetes client @ 05/13/24 20:28:41.99
  I0513 20:28:41.990650 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename job @ 05/13/24 20:28:41.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:28:42.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:28:42.043
  STEP: Creating a job @ 05/13/24 20:28:42.05
  STEP: Ensuring active pods == parallelism @ 05/13/24 20:28:42.07
  E0513 20:28:42.093814      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:43.094764      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete a job @ 05/13/24 20:28:44.075
  STEP: deleting Job.batch foo in namespace job-9866, will wait for the garbage collector to delete the pods @ 05/13/24 20:28:44.075
  E0513 20:28:44.095487      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:28:44.143090 19 resources.go:139] Deleting Job.batch foo took: 12.273422ms
  I0513 20:28:44.243593 19 resources.go:163] Terminating Job.batch foo pods took: 100.500243ms
  E0513 20:28:45.096476      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 05/13/24 20:28:45.444
  I0513 20:28:45.449166 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-9866" for this suite. @ 05/13/24 20:28:45.454
• [3.475 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 05/13/24 20:28:45.465
  I0513 20:28:45.466021 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename emptydir @ 05/13/24 20:28:45.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:28:45.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:28:45.568
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 05/13/24 20:28:45.574
  E0513 20:28:46.097390      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:47.097554      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:48.098333      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:49.098527      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/13/24 20:28:49.601
  I0513 20:28:49.605111 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod pod-39032246-3380-426f-9a39-de1b95cac221 container test-container: <nil>
  STEP: delete the pod @ 05/13/24 20:28:49.612
  I0513 20:28:49.651397 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5724" for this suite. @ 05/13/24 20:28:49.666
• [4.213 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 05/13/24 20:28:49.68
  I0513 20:28:49.680140 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename custom-resource-definition @ 05/13/24 20:28:49.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:28:49.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:28:49.743
  STEP: fetching the /apis discovery document @ 05/13/24 20:28:49.751
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 05/13/24 20:28:49.755
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 05/13/24 20:28:49.756
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 05/13/24 20:28:49.756
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 05/13/24 20:28:49.76
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 05/13/24 20:28:49.76
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 05/13/24 20:28:49.762
  I0513 20:28:49.762880 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2978" for this suite. @ 05/13/24 20:28:49.783
• [0.143 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1079
  STEP: Creating a kubernetes client @ 05/13/24 20:28:49.823
  I0513 20:28:49.823828 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename kubectl @ 05/13/24 20:28:49.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:28:49.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:28:49.868
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/13/24 20:28:49.872
  I0513 20:28:49.872510 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-9324 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0513 20:28:49.985522 19 builder.go:146] stderr: ""
  I0513 20:28:49.985577 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 05/13/24 20:28:49.985
  I0513 20:28:49.985662 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-9324 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0513 20:28:50.092098 19 builder.go:146] stderr: ""
  I0513 20:28:50.092155 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 05/13/24 20:28:50.092
  I0513 20:28:50.095792 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-9324 delete pods e2e-test-httpd-pod'
  E0513 20:28:50.099433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:51.099328      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:28:51.374817 19 builder.go:146] stderr: ""
  I0513 20:28:51.374869 19 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0513 20:28:51.374977 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9324" for this suite. @ 05/13/24 20:28:51.38
• [1.569 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 05/13/24 20:28:51.393
  I0513 20:28:51.393397 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename configmap @ 05/13/24 20:28:51.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:28:51.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:28:51.47
  STEP: Creating configMap with name configmap-test-volume-map-8f9a8cec-ebce-4b6d-a010-bf6744656b04 @ 05/13/24 20:28:51.475
  STEP: Creating a pod to test consume configMaps @ 05/13/24 20:28:51.485
  E0513 20:28:52.100429      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:53.100555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:54.101273      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:55.102535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/13/24 20:28:55.516
  I0513 20:28:55.522645 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod pod-configmaps-afe508ed-0876-4e7b-8155-fbb904bbd080 container agnhost-container: <nil>
  STEP: delete the pod @ 05/13/24 20:28:55.53
  I0513 20:28:55.572760 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8633" for this suite. @ 05/13/24 20:28:55.578
• [4.196 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:57
  STEP: Creating a kubernetes client @ 05/13/24 20:28:55.59
  I0513 20:28:55.590503 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename volumeattachment @ 05/13/24 20:28:55.591
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:28:55.636
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:28:55.64
  STEP: Create VolumeAttachment "va-e2e-hlsnh" on node "ip-172-31-3-33.us-east-2.compute.internal" @ 05/13/24 20:28:55.647
  STEP: Get VolumeAttachment "va-e2e-hlsnh" on node "ip-172-31-3-33.us-east-2.compute.internal" @ 05/13/24 20:28:55.657
  STEP: Patch VolumeAttachment "va-e2e-hlsnh" on node "ip-172-31-3-33.us-east-2.compute.internal" @ 05/13/24 20:28:55.672
  STEP: List VolumeAttachments with "va-e2e-hlsnh=patched" label @ 05/13/24 20:28:55.684
  STEP: Delete VolumeAttachment "va-e2e-hlsnh" on node "ip-172-31-3-33.us-east-2.compute.internal" @ 05/13/24 20:28:55.687
  STEP: Confirm deletion of VolumeAttachment "va-e2e-hlsnh" on node "ip-172-31-3-33.us-east-2.compute.internal" @ 05/13/24 20:28:55.699
  STEP: Create VolumeAttachment "va-e2e-txwbh" on node "ip-172-31-14-0.us-east-2.compute.internal" @ 05/13/24 20:28:55.706
  STEP: Update the VolumeAttachment "va-e2e-txwbh" on node "ip-172-31-14-0.us-east-2.compute.internal" with label "va-e2e=updated" @ 05/13/24 20:28:55.727
  STEP: Create VolumeAttachment "va-e2e-jh2w8" on node "ip-172-31-3-33.us-east-2.compute.internal" @ 05/13/24 20:28:55.749
  STEP: Update the VolumeAttachment "va-e2e-jh2w8" on node "ip-172-31-3-33.us-east-2.compute.internal" with label "va-e2e=updated" @ 05/13/24 20:28:55.758
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 05/13/24 20:28:55.773
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 05/13/24 20:28:55.803
  I0513 20:28:55.807820 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-5666" for this suite. @ 05/13/24 20:28:55.812
• [0.233 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 05/13/24 20:28:55.825
  I0513 20:28:55.825074 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename svcaccounts @ 05/13/24 20:28:55.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:28:55.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:28:55.865
  STEP: Creating a pod to test service account token:  @ 05/13/24 20:28:55.868
  E0513 20:28:56.102502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:57.102603      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:58.103654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:28:59.103813      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/13/24 20:28:59.927
  I0513 20:28:59.930902 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod test-pod-9a598624-7307-4fa4-ac78-2ef9524d2bf1 container agnhost-container: <nil>
  STEP: delete the pod @ 05/13/24 20:28:59.937
  I0513 20:28:59.978809 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7153" for this suite. @ 05/13/24 20:28:59.984
• [4.177 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 05/13/24 20:29:00.003
  I0513 20:29:00.003786 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename container-runtime @ 05/13/24 20:29:00.005
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:29:00.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:29:00.057
  STEP: create the container @ 05/13/24 20:29:00.062
  W0513 20:29:00.081378      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 05/13/24 20:29:00.081
  E0513 20:29:00.104526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:01.105597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:02.106216      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:03.106958      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 05/13/24 20:29:03.109
  STEP: the container should be terminated @ 05/13/24 20:29:03.113
  STEP: the termination message should be set @ 05/13/24 20:29:03.113
  I0513 20:29:03.113307 19 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 05/13/24 20:29:03.113
  I0513 20:29:03.166280 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6182" for this suite. @ 05/13/24 20:29:03.172
• [3.181 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 05/13/24 20:29:03.184
  I0513 20:29:03.184956 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename pods @ 05/13/24 20:29:03.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:29:03.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:29:03.235
  STEP: creating the pod @ 05/13/24 20:29:03.24
  STEP: setting up watch @ 05/13/24 20:29:03.24
  STEP: submitting the pod to kubernetes @ 05/13/24 20:29:03.344
  STEP: verifying the pod is in kubernetes @ 05/13/24 20:29:03.364
  STEP: verifying pod creation was observed @ 05/13/24 20:29:03.392
  E0513 20:29:04.107832      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:05.108497      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 05/13/24 20:29:05.42
  STEP: verifying pod deletion was observed @ 05/13/24 20:29:05.438
  E0513 20:29:06.109381      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:29:06.430775 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6184" for this suite. @ 05/13/24 20:29:06.446
• [3.278 seconds]
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:446
  STEP: Creating a kubernetes client @ 05/13/24 20:29:06.463
  I0513 20:29:06.463189 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename sched-pred @ 05/13/24 20:29:06.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:29:06.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:29:06.502
  I0513 20:29:06.506186 19 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0513 20:29:06.515501 19 util.go:400] Waiting for terminating namespaces to be deleted...
  I0513 20:29:06.520394 19 predicates.go:121] 
  Logging pods the apiserver thinks is on node ip-172-31-0-253.us-east-2.compute.internal before test
  I0513 20:29:06.527612 19 predicates.go:887] svclb-traefik-d628025f-mwl96 from kube-system started at 2024-05-13 16:12:42 +0000 UTC (2 container statuses recorded)
  I0513 20:29:06.527801 19 predicates.go:889] 	Container lb-tcp-443 ready: true, restart count 0
  I0513 20:29:06.527909 19 predicates.go:889] 	Container lb-tcp-80 ready: true, restart count 0
  I0513 20:29:06.528015 19 predicates.go:887] sonobuoy from sonobuoy started at 2024-05-13 18:46:47 +0000 UTC (1 container statuses recorded)
  I0513 20:29:06.528121 19 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I0513 20:29:06.528208 19 predicates.go:887] sonobuoy-systemd-logs-daemon-set-241ff89d670448bb-z7g5j from sonobuoy started at 2024-05-13 18:46:51 +0000 UTC (2 container statuses recorded)
  I0513 20:29:06.528299 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0513 20:29:06.528400 19 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0513 20:29:06.528485 19 predicates.go:121] 
  Logging pods the apiserver thinks is on node ip-172-31-11-14.us-east-2.compute.internal before test
  I0513 20:29:06.535283 19 predicates.go:887] svclb-traefik-d628025f-fjm9c from kube-system started at 2024-05-13 20:14:08 +0000 UTC (2 container statuses recorded)
  I0513 20:29:06.535328 19 predicates.go:889] 	Container lb-tcp-443 ready: true, restart count 0
  I0513 20:29:06.535345 19 predicates.go:889] 	Container lb-tcp-80 ready: true, restart count 0
  I0513 20:29:06.535360 19 predicates.go:887] sonobuoy-systemd-logs-daemon-set-241ff89d670448bb-5w7td from sonobuoy started at 2024-05-13 18:46:51 +0000 UTC (2 container statuses recorded)
  I0513 20:29:06.535414 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0513 20:29:06.535449 19 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0513 20:29:06.535505 19 predicates.go:121] 
  Logging pods the apiserver thinks is on node ip-172-31-14-0.us-east-2.compute.internal before test
  I0513 20:29:06.541042 19 predicates.go:887] coredns-576bfc4dc7-jw24t from kube-system started at 2024-05-13 16:06:09 +0000 UTC (1 container statuses recorded)
  I0513 20:29:06.541306 19 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0513 20:29:06.541420 19 predicates.go:887] helm-install-traefik-crd-chqrn from kube-system started at 2024-05-13 16:06:09 +0000 UTC (1 container statuses recorded)
  I0513 20:29:06.541552 19 predicates.go:889] 	Container helm ready: false, restart count 0
  I0513 20:29:06.541684 19 predicates.go:887] helm-install-traefik-rwkmw from kube-system started at 2024-05-13 16:06:09 +0000 UTC (1 container statuses recorded)
  I0513 20:29:06.541804 19 predicates.go:889] 	Container helm ready: false, restart count 1
  I0513 20:29:06.541934 19 predicates.go:887] local-path-provisioner-75bb9ff978-29v65 from kube-system started at 2024-05-13 16:06:09 +0000 UTC (1 container statuses recorded)
  I0513 20:29:06.542015 19 predicates.go:889] 	Container local-path-provisioner ready: true, restart count 0
  I0513 20:29:06.542036 19 predicates.go:887] metrics-server-557ff575fb-jb8fw from kube-system started at 2024-05-13 16:06:09 +0000 UTC (1 container statuses recorded)
  I0513 20:29:06.542052 19 predicates.go:889] 	Container metrics-server ready: true, restart count 0
  I0513 20:29:06.542094 19 predicates.go:887] svclb-traefik-d628025f-7wqzj from kube-system started at 2024-05-13 16:06:25 +0000 UTC (2 container statuses recorded)
  I0513 20:29:06.542174 19 predicates.go:889] 	Container lb-tcp-443 ready: true, restart count 0
  I0513 20:29:06.542203 19 predicates.go:889] 	Container lb-tcp-80 ready: true, restart count 0
  I0513 20:29:06.542220 19 predicates.go:887] traefik-5fb479b77-7tbnm from kube-system started at 2024-05-13 16:06:24 +0000 UTC (1 container statuses recorded)
  I0513 20:29:06.542275 19 predicates.go:889] 	Container traefik ready: true, restart count 0
  I0513 20:29:06.542328 19 predicates.go:887] sonobuoy-systemd-logs-daemon-set-241ff89d670448bb-n9qjz from sonobuoy started at 2024-05-13 18:46:51 +0000 UTC (2 container statuses recorded)
  I0513 20:29:06.542356 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0513 20:29:06.542368 19 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0513 20:29:06.542381 19 predicates.go:121] 
  Logging pods the apiserver thinks is on node ip-172-31-3-33.us-east-2.compute.internal before test
  I0513 20:29:06.547771 19 predicates.go:887] svclb-traefik-d628025f-zktzm from kube-system started at 2024-05-13 16:09:19 +0000 UTC (2 container statuses recorded)
  I0513 20:29:06.547881 19 predicates.go:889] 	Container lb-tcp-443 ready: true, restart count 0
  I0513 20:29:06.547899 19 predicates.go:889] 	Container lb-tcp-80 ready: true, restart count 0
  I0513 20:29:06.547916 19 predicates.go:887] sonobuoy-e2e-job-badb71ff08654e5b from sonobuoy started at 2024-05-13 18:46:51 +0000 UTC (2 container statuses recorded)
  I0513 20:29:06.548229 19 predicates.go:889] 	Container e2e ready: true, restart count 0
  I0513 20:29:06.548292 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0513 20:29:06.548313 19 predicates.go:887] sonobuoy-systemd-logs-daemon-set-241ff89d670448bb-lrdx4 from sonobuoy started at 2024-05-13 18:46:51 +0000 UTC (2 container statuses recorded)
  I0513 20:29:06.548325 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0513 20:29:06.548337 19 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 05/13/24 20:29:06.548
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17cf2658f65527f2], Reason = [FailedScheduling], Message = [0/4 nodes are available: 4 node(s) didn't match Pod's node affinity/selector. preemption: 0/4 nodes are available: 4 Preemption is not helpful for scheduling.] @ 05/13/24 20:29:06.608
  E0513 20:29:07.109274      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:29:07.588918 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-9972" for this suite. @ 05/13/24 20:29:07.595
• [1.148 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 05/13/24 20:29:07.612
  I0513 20:29:07.612327 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename emptydir @ 05/13/24 20:29:07.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:29:07.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:29:07.682
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 05/13/24 20:29:07.689
  E0513 20:29:08.109407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:09.110385      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:10.110618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:11.111392      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/13/24 20:29:11.751
  I0513 20:29:11.755453 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod pod-43ec4e4e-de83-4a4d-ba34-284b16e5f778 container test-container: <nil>
  STEP: delete the pod @ 05/13/24 20:29:11.765
  I0513 20:29:11.810350 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1735" for this suite. @ 05/13/24 20:29:11.816
• [4.217 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 05/13/24 20:29:11.83
  I0513 20:29:11.830366 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename namespaces @ 05/13/24 20:29:11.831
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:29:11.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:29:11.876
  STEP: Creating a test namespace @ 05/13/24 20:29:11.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:29:11.921
  STEP: Creating a pod in the namespace @ 05/13/24 20:29:11.929
  STEP: Waiting for the pod to have running status @ 05/13/24 20:29:11.95
  E0513 20:29:12.111958      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:13.112069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 05/13/24 20:29:13.964
  STEP: Waiting for the namespace to be removed. @ 05/13/24 20:29:13.982
  E0513 20:29:14.112799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:15.113540      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:16.113727      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:17.114909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:18.115091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:19.115215      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:20.115821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:21.116379      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:22.116808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:23.117639      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:24.118115      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:25.118602      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 05/13/24 20:29:25.986
  STEP: Verifying there are no pods in the namespace @ 05/13/24 20:29:26.022
  I0513 20:29:26.031469 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4705" for this suite. @ 05/13/24 20:29:26.04
  STEP: Destroying namespace "nsdeletetest-1399" for this suite. @ 05/13/24 20:29:26.054
  I0513 20:29:26.069697 19 framework.go:370] Namespace nsdeletetest-1399 was already deleted
  STEP: Destroying namespace "nsdeletetest-7266" for this suite. @ 05/13/24 20:29:26.069
• [14.250 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 05/13/24 20:29:26.08
  I0513 20:29:26.080884 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename daemonsets @ 05/13/24 20:29:26.081
  E0513 20:29:26.118625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:29:26.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:29:26.128
  I0513 20:29:26.191170 19 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0513 20:29:26.217478 19 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0513 20:29:26.224876 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 20:29:26.224923 19 fixtures.go:130] Node ip-172-31-0-253.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0513 20:29:27.118788      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:29:27.242512 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 20:29:27.242559 19 fixtures.go:130] Node ip-172-31-0-253.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0513 20:29:28.118919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:29:28.236624 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0513 20:29:28.236673 19 fixtures.go:135] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  I0513 20:29:28.236697 19 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0513 20:29:28.259429 19 daemon_set.go:102] Updating DaemonSet daemon-set
  E0513 20:29:29.119787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:29:29.275164 19 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0513 20:29:29.309562 19 daemon_set.go:102] Updating DaemonSet daemon-set
  I0513 20:29:29.309634 19 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0513 20:29:29.321273 19 daemon_set.go:1178] Wrong image for pod: daemon-set-5hv7z. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I0513 20:29:29.321313 19 daemon_set.go:1183] Pod daemon-set-5hv7z is not available
  E0513 20:29:30.119910      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:31.120066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:29:31.316084 19 daemon_set.go:1183] Pod daemon-set-d4f8t is not available
  STEP: Deleting DaemonSet "daemon-set" @ 05/13/24 20:29:31.336
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4981, will wait for the garbage collector to delete the pods @ 05/13/24 20:29:31.336
  I0513 20:29:31.402876 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 12.005268ms
  I0513 20:29:31.503708 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.806784ms
  E0513 20:29:32.120102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:33.121447      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:29:33.808035 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 20:29:33.808294 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0513 20:29:33.812746 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"82412"},"items":null}

  I0513 20:29:33.816310 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"82412"},"items":null}

  I0513 20:29:33.855348 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4981" for this suite. @ 05/13/24 20:29:33.86
• [7.995 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 05/13/24 20:29:34.075
  I0513 20:29:34.076024 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename downward-api @ 05/13/24 20:29:34.077
  E0513 20:29:34.122301      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:29:34.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:29:34.131
  STEP: Creating a pod to test downward api env vars @ 05/13/24 20:29:34.135
  E0513 20:29:35.123364      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:36.123472      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:37.123633      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:38.123736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/13/24 20:29:38.179
  I0513 20:29:38.182456 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod downward-api-fa6e42ab-5212-423b-a130-7b64aeac5ae2 container dapi-container: <nil>
  STEP: delete the pod @ 05/13/24 20:29:38.19
  I0513 20:29:38.241729 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5108" for this suite. @ 05/13/24 20:29:38.246
• [4.187 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 05/13/24 20:29:38.263
  I0513 20:29:38.263949 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename crd-publish-openapi @ 05/13/24 20:29:38.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:29:38.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:29:38.298
  I0513 20:29:38.301798 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  E0513 20:29:39.123853      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 05/13/24 20:29:40.059
  I0513 20:29:40.059573 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=crd-publish-openapi-5810 --namespace=crd-publish-openapi-5810 create -f -'
  E0513 20:29:40.124269      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:29:40.269446 19 builder.go:146] stderr: ""
  I0513 20:29:40.269504 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3869-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0513 20:29:40.269571 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=crd-publish-openapi-5810 --namespace=crd-publish-openapi-5810 delete e2e-test-crd-publish-openapi-3869-crds test-cr'
  I0513 20:29:40.395946 19 builder.go:146] stderr: ""
  I0513 20:29:40.396008 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3869-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0513 20:29:40.396068 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=crd-publish-openapi-5810 --namespace=crd-publish-openapi-5810 apply -f -'
  I0513 20:29:40.499086 19 builder.go:146] stderr: ""
  I0513 20:29:40.499221 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3869-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0513 20:29:40.499285 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=crd-publish-openapi-5810 --namespace=crd-publish-openapi-5810 delete e2e-test-crd-publish-openapi-3869-crds test-cr'
  I0513 20:29:40.610109 19 builder.go:146] stderr: ""
  I0513 20:29:40.610172 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-3869-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 05/13/24 20:29:40.61
  I0513 20:29:40.610273 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=crd-publish-openapi-5810 explain e2e-test-crd-publish-openapi-3869-crds'
  I0513 20:29:40.691503 19 builder.go:146] stderr: ""
  I0513 20:29:40.691580 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-3869-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0513 20:29:41.124912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:42.125281      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:29:42.488731 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5810" for this suite. @ 05/13/24 20:29:42.495
• [4.243 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 05/13/24 20:29:42.507
  I0513 20:29:42.507460 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename secrets @ 05/13/24 20:29:42.508
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:29:42.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:29:42.556
  STEP: Creating secret with name secret-test-30fba02d-d786-40c0-9938-8959329258fc @ 05/13/24 20:29:42.621
  STEP: Creating a pod to test consume secrets @ 05/13/24 20:29:42.631
  E0513 20:29:43.125794      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:44.125930      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:45.126084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:46.126223      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/13/24 20:29:46.671
  I0513 20:29:46.674189 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod pod-secrets-6f1a4188-5c3b-4640-b0be-ee3cbcf1fa1b container secret-volume-test: <nil>
  STEP: delete the pod @ 05/13/24 20:29:46.685
  I0513 20:29:46.725865 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2543" for this suite. @ 05/13/24 20:29:46.732
  STEP: Destroying namespace "secret-namespace-3029" for this suite. @ 05/13/24 20:29:46.749
• [4.262 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 05/13/24 20:29:46.771
  I0513 20:29:46.771499 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename security-context-test @ 05/13/24 20:29:46.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:29:46.815
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:29:46.818
  E0513 20:29:47.126486      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:48.126898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:49.127731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:50.128097      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:29:50.872520 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9304" for this suite. @ 05/13/24 20:29:50.878
• [4.117 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:927
  STEP: Creating a kubernetes client @ 05/13/24 20:29:50.888
  I0513 20:29:50.888704 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename job @ 05/13/24 20:29:50.889
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:29:50.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:29:50.941
  STEP: Creating a suspended job @ 05/13/24 20:29:50.948
  STEP: Patching the Job @ 05/13/24 20:29:50.959
  STEP: Watching for Job to be patched @ 05/13/24 20:29:50.988
  I0513 20:29:50.992839 19 job.go:1109] Event ADDED observed for Job e2e-bnzd5 in namespace job-8662 with labels: map[e2e-job-label:e2e-bnzd5] and annotations: map[]
  I0513 20:29:50.992906 19 job.go:1112] Event MODIFIED found for Job e2e-bnzd5 in namespace job-8662 with labels: map[e2e-bnzd5:patched e2e-job-label:e2e-bnzd5] and annotations: map[]
  STEP: Updating the job @ 05/13/24 20:29:50.992
  STEP: Watching for Job to be updated @ 05/13/24 20:29:51.015
  I0513 20:29:51.017403 19 job.go:1112] Event MODIFIED found for Job e2e-bnzd5 in namespace job-8662 with labels: map[e2e-bnzd5:patched e2e-job-label:e2e-bnzd5] and annotations: map[updated:true]
  I0513 20:29:51.017477 19 job.go:1005] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 05/13/24 20:29:51.017
  I0513 20:29:51.021884 19 job.go:1012] Job: e2e-bnzd5 as labels: map[e2e-bnzd5:patched e2e-job-label:e2e-bnzd5]
  STEP: Waiting for job to complete @ 05/13/24 20:29:51.021
  E0513 20:29:51.129201      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:52.129436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:53.130098      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:54.130249      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:55.131248      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:56.131011      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:57.131786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:58.131878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:29:59.132448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:00.133273      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 05/13/24 20:30:01.026
  STEP: Watching for Job to be deleted @ 05/13/24 20:30:01.037
  I0513 20:30:01.040803 19 job.go:1109] Event MODIFIED observed for Job e2e-bnzd5 in namespace job-8662 with labels: map[e2e-bnzd5:patched e2e-job-label:e2e-bnzd5] and annotations: map[updated:true]
  I0513 20:30:01.040857 19 job.go:1109] Event MODIFIED observed for Job e2e-bnzd5 in namespace job-8662 with labels: map[e2e-bnzd5:patched e2e-job-label:e2e-bnzd5] and annotations: map[updated:true]
  I0513 20:30:01.041043 19 job.go:1109] Event MODIFIED observed for Job e2e-bnzd5 in namespace job-8662 with labels: map[e2e-bnzd5:patched e2e-job-label:e2e-bnzd5] and annotations: map[updated:true]
  I0513 20:30:01.041112 19 job.go:1109] Event MODIFIED observed for Job e2e-bnzd5 in namespace job-8662 with labels: map[e2e-bnzd5:patched e2e-job-label:e2e-bnzd5] and annotations: map[updated:true]
  I0513 20:30:01.041139 19 job.go:1109] Event MODIFIED observed for Job e2e-bnzd5 in namespace job-8662 with labels: map[e2e-bnzd5:patched e2e-job-label:e2e-bnzd5] and annotations: map[updated:true]
  I0513 20:30:01.041209 19 job.go:1112] Event DELETED found for Job e2e-bnzd5 in namespace job-8662 with labels: map[e2e-bnzd5:patched e2e-job-label:e2e-bnzd5] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 05/13/24 20:30:01.041
  I0513 20:30:01.044992 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-8662" for this suite. @ 05/13/24 20:30:01.055
• [10.234 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3345
  STEP: Creating a kubernetes client @ 05/13/24 20:30:01.122
  I0513 20:30:01.122611 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename services @ 05/13/24 20:30:01.123
  E0513 20:30:01.133484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:30:01.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:30:01.173
  STEP: creating a Service @ 05/13/24 20:30:01.179
  STEP: watching for the Service to be added @ 05/13/24 20:30:01.218
  I0513 20:30:01.220113 19 service.go:3397] Found Service test-service-zf969 in namespace services-4057 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 32460}]
  I0513 20:30:01.220303 19 service.go:3404] Service test-service-zf969 created
  STEP: Getting /status @ 05/13/24 20:30:01.22
  I0513 20:30:01.233211 19 service.go:3415] Service test-service-zf969 has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 05/13/24 20:30:01.233
  STEP: watching for the Service to be patched @ 05/13/24 20:30:01.245
  I0513 20:30:01.248232 19 service.go:3438] observed Service test-service-zf969 in namespace services-4057 with annotations: map[] & LoadBalancer: {[]}
  I0513 20:30:01.248418 19 service.go:3441] Found Service test-service-zf969 in namespace services-4057 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc001161b10 []}]}
  I0513 20:30:01.248654 19 service.go:3448] Service test-service-zf969 has service status patched
  STEP: updating the ServiceStatus @ 05/13/24 20:30:01.248
  I0513 20:30:01.264186 19 service.go:3468] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 05/13/24 20:30:01.264
  I0513 20:30:01.266318 19 service.go:3479] Observed Service test-service-zf969 in namespace services-4057 with annotations: map[] & Conditions: {[]}
  I0513 20:30:01.266944 19 service.go:3494] Observed event: &Service{ObjectMeta:{test-service-zf969  services-4057  1c602440-4c3c-4cbe-a7d0-aad93a243b70 82733 0 2024-05-13 20:30:01 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-05-13 20:30:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:allocateLoadBalancerNodePorts":{},"f:externalTrafficPolicy":{},"f:internalTrafficPolicy":{},"f:loadBalancerClass":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-05-13 20:30:01 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:32460,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.43.247.44,Type:LoadBalancer,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:Cluster,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.43.247.44],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:*true,LoadBalancerClass:*example.com/internal-vip,InternalTrafficPolicy:*Cluster,TrafficDistribution:nil,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,IPMode:*VIP,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  I0513 20:30:01.267180 19 service.go:3486] Found Service test-service-zf969 in namespace services-4057 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0513 20:30:01.267448 19 service.go:3498] Service test-service-zf969 has service status updated
  STEP: patching the service @ 05/13/24 20:30:01.267
  STEP: watching for the Service to be patched @ 05/13/24 20:30:01.287
  I0513 20:30:01.292356 19 service.go:3521] observed Service test-service-zf969 in namespace services-4057 with labels: map[test-service-static:true]
  I0513 20:30:01.292562 19 service.go:3521] observed Service test-service-zf969 in namespace services-4057 with labels: map[test-service-static:true]
  I0513 20:30:01.292819 19 service.go:3521] observed Service test-service-zf969 in namespace services-4057 with labels: map[test-service-static:true]
  I0513 20:30:01.292993 19 service.go:3524] Found Service test-service-zf969 in namespace services-4057 with labels: map[test-service:patched test-service-static:true]
  I0513 20:30:01.293196 19 service.go:3531] Service test-service-zf969 patched
  STEP: deleting the service @ 05/13/24 20:30:01.293
  STEP: watching for the Service to be deleted @ 05/13/24 20:30:01.331
  I0513 20:30:01.333212 19 service.go:3555] Observed event: ADDED
  I0513 20:30:01.333369 19 service.go:3555] Observed event: MODIFIED
  I0513 20:30:01.333762 19 service.go:3555] Observed event: MODIFIED
  I0513 20:30:01.333873 19 service.go:3555] Observed event: MODIFIED
  I0513 20:30:01.333987 19 service.go:3551] Found Service test-service-zf969 in namespace services-4057 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0513 20:30:01.334080 19 service.go:3560] Service test-service-zf969 deleted
  I0513 20:30:01.334236 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4057" for this suite. @ 05/13/24 20:30:01.346
• [0.237 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2218
  STEP: Creating a kubernetes client @ 05/13/24 20:30:01.359
  I0513 20:30:01.359980 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename services @ 05/13/24 20:30:01.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:30:01.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:30:01.395
  STEP: creating service in namespace services-6087 @ 05/13/24 20:30:01.412
  STEP: creating service affinity-nodeport in namespace services-6087 @ 05/13/24 20:30:01.412
  STEP: creating replication controller affinity-nodeport in namespace services-6087 @ 05/13/24 20:30:01.457
  I0513 20:30:01.480780      19 runners.go:198] Created replication controller with name: affinity-nodeport, namespace: services-6087, replica count: 3
  E0513 20:30:02.133628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:03.133709      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:04.133839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:30:04.531748      19 runners.go:198] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0513 20:30:04.542620 19 resource.go:361] Creating new exec pod
  E0513 20:30:05.133970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:06.134493      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:07.134741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:30:07.574586 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-6087 exec execpod-affinityl9xkb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0513 20:30:07.710583 19 builder.go:146] stderr: "+ nc -v -t -w 2 affinity-nodeport 80\n+ echo hostName\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  I0513 20:30:07.710641 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0513 20:30:07.710905 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-6087 exec execpod-affinityl9xkb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.72.217 80'
  I0513 20:30:07.856895 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.72.217 80\nConnection to 10.43.72.217 80 port [tcp/http] succeeded!\n"
  I0513 20:30:07.856961 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0513 20:30:07.857149 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-6087 exec execpod-affinityl9xkb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.0.253 31647'
  I0513 20:30:07.997327 19 builder.go:146] stderr: "+ + ncecho -v hostName\n -t -w 2 172.31.0.253 31647\nConnection to 172.31.0.253 31647 port [tcp/*] succeeded!\n"
  I0513 20:30:07.997396 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0513 20:30:07.997606 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-6087 exec execpod-affinityl9xkb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.11.14 31647'
  E0513 20:30:08.135262      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:30:08.142620 19 builder.go:146] stderr: "+ nc -v -t -w 2 172.31.11.14 31647\n+ echo hostName\nConnection to 172.31.11.14 31647 port [tcp/*] succeeded!\n"
  I0513 20:30:08.142687 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0513 20:30:08.142795 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-6087 exec execpod-affinityl9xkb -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.0.253:31647/ ; done'
  I0513 20:30:08.384497 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31647/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31647/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31647/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31647/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31647/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31647/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31647/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31647/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31647/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31647/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31647/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31647/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31647/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31647/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31647/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.0.253:31647/\n"
  I0513 20:30:08.384574 19 builder.go:147] stdout: "\naffinity-nodeport-h2jxw\naffinity-nodeport-h2jxw\naffinity-nodeport-h2jxw\naffinity-nodeport-h2jxw\naffinity-nodeport-h2jxw\naffinity-nodeport-h2jxw\naffinity-nodeport-h2jxw\naffinity-nodeport-h2jxw\naffinity-nodeport-h2jxw\naffinity-nodeport-h2jxw\naffinity-nodeport-h2jxw\naffinity-nodeport-h2jxw\naffinity-nodeport-h2jxw\naffinity-nodeport-h2jxw\naffinity-nodeport-h2jxw\naffinity-nodeport-h2jxw"
  I0513 20:30:08.384603 19 service.go:242] Received response from host: affinity-nodeport-h2jxw
  I0513 20:30:08.384620 19 service.go:242] Received response from host: affinity-nodeport-h2jxw
  I0513 20:30:08.384635 19 service.go:242] Received response from host: affinity-nodeport-h2jxw
  I0513 20:30:08.384649 19 service.go:242] Received response from host: affinity-nodeport-h2jxw
  I0513 20:30:08.384665 19 service.go:242] Received response from host: affinity-nodeport-h2jxw
  I0513 20:30:08.384678 19 service.go:242] Received response from host: affinity-nodeport-h2jxw
  I0513 20:30:08.384691 19 service.go:242] Received response from host: affinity-nodeport-h2jxw
  I0513 20:30:08.384718 19 service.go:242] Received response from host: affinity-nodeport-h2jxw
  I0513 20:30:08.384737 19 service.go:242] Received response from host: affinity-nodeport-h2jxw
  I0513 20:30:08.384750 19 service.go:242] Received response from host: affinity-nodeport-h2jxw
  I0513 20:30:08.384780 19 service.go:242] Received response from host: affinity-nodeport-h2jxw
  I0513 20:30:08.384797 19 service.go:242] Received response from host: affinity-nodeport-h2jxw
  I0513 20:30:08.384812 19 service.go:242] Received response from host: affinity-nodeport-h2jxw
  I0513 20:30:08.384826 19 service.go:242] Received response from host: affinity-nodeport-h2jxw
  I0513 20:30:08.384840 19 service.go:242] Received response from host: affinity-nodeport-h2jxw
  I0513 20:30:08.384874 19 service.go:242] Received response from host: affinity-nodeport-h2jxw
  I0513 20:30:08.384949 19 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-6087, will wait for the garbage collector to delete the pods @ 05/13/24 20:30:08.422
  I0513 20:30:08.493648 19 resources.go:139] Deleting ReplicationController affinity-nodeport took: 16.883692ms
  I0513 20:30:08.594056 19 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 100.405589ms
  E0513 20:30:09.135762      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:10.136684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:11.137484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:30:11.870462 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6087" for this suite. @ 05/13/24 20:30:11.875
• [10.530 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1048
  STEP: Creating a kubernetes client @ 05/13/24 20:30:11.891
  I0513 20:30:11.891580 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename kubectl @ 05/13/24 20:30:11.892
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:30:11.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:30:11.931
  STEP: create deployment with httpd image @ 05/13/24 20:30:11.937
  I0513 20:30:11.937454 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-3635 create -f -'
  I0513 20:30:12.128537 19 builder.go:146] stderr: ""
  I0513 20:30:12.128857 19 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 05/13/24 20:30:12.128
  I0513 20:30:12.129003 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-3635 diff -f -'
  E0513 20:30:12.138204      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:13.138460      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:14.138808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:15.138940      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:16.139067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:30:16.831122 19 builder.go:135] rc: 1
  I0513 20:30:16.831215 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-3635 delete -f -'
  I0513 20:30:16.915991 19 builder.go:146] stderr: ""
  I0513 20:30:16.916039 19 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0513 20:30:16.916149 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3635" for this suite. @ 05/13/24 20:30:16.926
• [5.056 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 05/13/24 20:30:16.947
  I0513 20:30:16.947611 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename downward-api @ 05/13/24 20:30:16.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:30:17.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:30:17.044
  STEP: Creating a pod to test downward API volume plugin @ 05/13/24 20:30:17.049
  E0513 20:30:17.140079      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:18.140475      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:19.140950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:20.141756      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/13/24 20:30:21.117
  I0513 20:30:21.120825 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod downwardapi-volume-408972aa-1e2b-45c6-be63-fd63ddcc2a4d container client-container: <nil>
  STEP: delete the pod @ 05/13/24 20:30:21.126
  E0513 20:30:21.142806      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:30:21.174287 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4407" for this suite. @ 05/13/24 20:30:21.18
• [4.262 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 05/13/24 20:30:21.21
  I0513 20:30:21.210859 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename var-expansion @ 05/13/24 20:30:21.211
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:30:21.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:30:21.338
  STEP: Creating a pod to test env composition @ 05/13/24 20:30:21.342
  E0513 20:30:22.143228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:23.143774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:24.143890      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:25.144088      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/13/24 20:30:25.401
  I0513 20:30:25.404824 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod var-expansion-7b968487-4426-4465-aeb7-526d574e3409 container dapi-container: <nil>
  STEP: delete the pod @ 05/13/24 20:30:25.414
  I0513 20:30:25.449572 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9840" for this suite. @ 05/13/24 20:30:25.453
• [4.255 seconds]
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 05/13/24 20:30:25.466
  I0513 20:30:25.466157 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename watch @ 05/13/24 20:30:25.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:30:25.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:30:25.562
  STEP: getting a starting resourceVersion @ 05/13/24 20:30:25.567
  STEP: starting a background goroutine to produce watch events @ 05/13/24 20:30:25.571
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 05/13/24 20:30:25.572
  E0513 20:30:26.146201      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:27.146416      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:28.147050      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:30:28.277375 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-908" for this suite. @ 05/13/24 20:30:28.323
• [2.914 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 05/13/24 20:30:28.38
  I0513 20:30:28.380421 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename cronjob @ 05/13/24 20:30:28.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:30:28.436
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:30:28.439
  STEP: Creating a cronjob @ 05/13/24 20:30:28.443
  STEP: Ensuring more than one job is running at a time @ 05/13/24 20:30:28.458
  E0513 20:30:29.147265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:30.148260      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:31.148339      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:32.148530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:33.149385      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:34.149522      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:35.149618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:36.150613      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:37.151611      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:38.151845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:39.152116      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:40.152405      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:41.153274      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:42.154325      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:43.154410      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:44.155147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:45.156142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:46.156386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:47.157120      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:48.157255      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:49.158277      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:50.158439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:51.158547      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:52.158783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:53.159735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:54.160046      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:55.160078      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:56.160262      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:57.161362      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:58.161523      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:30:59.162365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:00.163263      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:01.163393      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:02.163643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:03.163820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:04.164000      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:05.164161      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:06.164506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:07.164666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:08.164987      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:09.166053      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:10.166255      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:11.166871      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:12.167074      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:13.167263      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:14.167405      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:15.167478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:16.168078      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:17.168892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:18.169296      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:19.170391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:20.170585      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:21.170758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:22.171064      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:23.171156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:24.171417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:25.171902      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:26.172560      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:27.172682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:28.172953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:29.173433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:30.173292      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:31.175094      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:32.175214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:33.175370      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:34.175510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:35.176336      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:36.176525      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:37.176802      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:38.177236      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:39.177991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:40.178970      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:41.179115      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:42.179809      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:43.180845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:44.180386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:45.181046      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:46.181294      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:47.182123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:48.182349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:49.182406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:50.182528      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:51.183308      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:52.183943      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:53.184054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:54.184164      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:55.184767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:56.185326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:57.185569      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:58.185755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:31:59.186483      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:00.187018      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 05/13/24 20:32:00.68
  STEP: Removing cronjob @ 05/13/24 20:32:00.691
  I0513 20:32:00.704353 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6221" for this suite. @ 05/13/24 20:32:00.709
• [92.357 seconds]
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 05/13/24 20:32:00.737
  I0513 20:32:00.737619 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename controllerrevisions @ 05/13/24 20:32:00.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:32:00.783
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:32:00.788
  STEP: Creating DaemonSet "e2e-zfkv9-daemon-set" @ 05/13/24 20:32:00.913
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/13/24 20:32:00.937
  I0513 20:32:01.000176 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-zfkv9-daemon-set: 0
  I0513 20:32:01.000330 19 fixtures.go:130] Node ip-172-31-0-253.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0513 20:32:01.187753      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:32:02.178737 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-zfkv9-daemon-set: 1
  I0513 20:32:02.178797 19 fixtures.go:130] Node ip-172-31-0-253.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0513 20:32:02.188278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:32:02.963613 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-zfkv9-daemon-set: 3
  I0513 20:32:02.963661 19 fixtures.go:130] Node ip-172-31-0-253.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0513 20:32:03.188896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:32:03.947002 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-zfkv9-daemon-set: 4
  I0513 20:32:03.947059 19 fixtures.go:135] Number of running nodes: 4, number of available pods: 4 in daemonset e2e-zfkv9-daemon-set
  STEP: Confirm DaemonSet "e2e-zfkv9-daemon-set" successfully created with "daemonset-name=e2e-zfkv9-daemon-set" label @ 05/13/24 20:32:03.95
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-zfkv9-daemon-set" @ 05/13/24 20:32:03.957
  I0513 20:32:03.960526 19 controller_revision.go:162] Located ControllerRevision: "e2e-zfkv9-daemon-set-685975859"
  STEP: Patching ControllerRevision "e2e-zfkv9-daemon-set-685975859" @ 05/13/24 20:32:03.963
  I0513 20:32:03.974322 19 controller_revision.go:173] e2e-zfkv9-daemon-set-685975859 has been patched
  STEP: Create a new ControllerRevision @ 05/13/24 20:32:03.974
  I0513 20:32:03.990058 19 controller_revision.go:191] Created ControllerRevision: e2e-zfkv9-daemon-set-58b7fdf6c7
  STEP: Confirm that there are two ControllerRevisions @ 05/13/24 20:32:03.99
  I0513 20:32:03.990158 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0513 20:32:03.994358 19 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-zfkv9-daemon-set-685975859" @ 05/13/24 20:32:03.994
  STEP: Confirm that there is only one ControllerRevision @ 05/13/24 20:32:04.006
  I0513 20:32:04.006326 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0513 20:32:04.010981 19 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-zfkv9-daemon-set-58b7fdf6c7" @ 05/13/24 20:32:04.016
  I0513 20:32:04.032147 19 controller_revision.go:220] e2e-zfkv9-daemon-set-58b7fdf6c7 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 05/13/24 20:32:04.032
  W0513 20:32:04.053497      19 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 05/13/24 20:32:04.053
  I0513 20:32:04.053677 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  E0513 20:32:04.191145      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:32:05.053930 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0513 20:32:05.057869 19 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-zfkv9-daemon-set-58b7fdf6c7=updated" @ 05/13/24 20:32:05.057
  STEP: Confirm that there is only one ControllerRevision @ 05/13/24 20:32:05.07
  I0513 20:32:05.070666 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0513 20:32:05.086444 19 controller_revision.go:265] Found 1 ControllerRevisions
  I0513 20:32:05.091006 19 controller_revision.go:246] ControllerRevision "e2e-zfkv9-daemon-set-855f64cc48" has revision 3
  STEP: Deleting DaemonSet "e2e-zfkv9-daemon-set" @ 05/13/24 20:32:05.095
  STEP: deleting DaemonSet.extensions e2e-zfkv9-daemon-set in namespace controllerrevisions-6814, will wait for the garbage collector to delete the pods @ 05/13/24 20:32:05.095
  I0513 20:32:05.163200 19 resources.go:139] Deleting DaemonSet.extensions e2e-zfkv9-daemon-set took: 11.824718ms
  E0513 20:32:05.191510      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:32:05.264564 19 resources.go:163] Terminating DaemonSet.extensions e2e-zfkv9-daemon-set pods took: 101.361181ms
  E0513 20:32:06.192413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:32:06.869897 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-zfkv9-daemon-set: 0
  I0513 20:32:06.870089 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-zfkv9-daemon-set
  I0513 20:32:06.873356 19 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"83655"},"items":null}

  I0513 20:32:06.893993 19 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"83655"},"items":null}

  I0513 20:32:06.913558 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-6814" for this suite. @ 05/13/24 20:32:06.917
  E0513 20:32:07.192550      19 retrywatcher.go:129] "Watch failed" err="context canceled"
• [6.771 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 05/13/24 20:32:07.508
  I0513 20:32:07.508888 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename projected @ 05/13/24 20:32:07.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:32:07.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:32:07.637
  STEP: Creating configMap with name projected-configmap-test-volume-map-a747725e-e8d9-46f9-9cd8-fdd10fddacdb @ 05/13/24 20:32:07.641
  STEP: Creating a pod to test consume configMaps @ 05/13/24 20:32:07.651
  E0513 20:32:08.193461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:09.193581      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:10.193808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:11.194310      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/13/24 20:32:11.692
  I0513 20:32:11.695835 19 output.go:196] Trying to get logs from node ip-172-31-0-253.us-east-2.compute.internal pod pod-projected-configmaps-a5f2296f-756d-4f76-a8e1-741e5e20664e container agnhost-container: <nil>
  STEP: delete the pod @ 05/13/24 20:32:11.71
  I0513 20:32:11.738790 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-22" for this suite. @ 05/13/24 20:32:11.746
• [4.260 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 05/13/24 20:32:11.77
  I0513 20:32:11.770667 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename webhook @ 05/13/24 20:32:11.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:32:11.805
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:32:11.808
  STEP: Setting up server cert @ 05/13/24 20:32:11.873
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/13/24 20:32:12.129
  STEP: Deploying the webhook pod @ 05/13/24 20:32:12.14
  STEP: Wait for the deployment to be ready @ 05/13/24 20:32:12.164
  I0513 20:32:12.171637 19 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0513 20:32:12.194892      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:13.195270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/13/24 20:32:14.181
  E0513 20:32:14.195877      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 20:32:14.214
  E0513 20:32:15.198054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:32:15.215560 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 05/13/24 20:32:15.222
  STEP: create a pod that should be updated by the webhook @ 05/13/24 20:32:15.251
  I0513 20:32:15.473897 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5821" for this suite. @ 05/13/24 20:32:15.479
  STEP: Destroying namespace "webhook-markers-5867" for this suite. @ 05/13/24 20:32:15.491
• [3.737 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 05/13/24 20:32:15.509
  I0513 20:32:15.509905 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename emptydir @ 05/13/24 20:32:15.511
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:32:15.551
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:32:15.554
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 05/13/24 20:32:15.582
  E0513 20:32:16.198365      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:17.198671      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:18.199768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:19.199905      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/13/24 20:32:19.628
  I0513 20:32:19.630856 19 output.go:196] Trying to get logs from node ip-172-31-0-253.us-east-2.compute.internal pod pod-0df6e855-8884-4db7-aeb0-5cc39cad64d0 container test-container: <nil>
  STEP: delete the pod @ 05/13/24 20:32:19.637
  I0513 20:32:19.682239 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4656" for this suite. @ 05/13/24 20:32:19.686
• [4.190 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1284
  STEP: Creating a kubernetes client @ 05/13/24 20:32:19.699
  I0513 20:32:19.699900 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename services @ 05/13/24 20:32:19.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:32:19.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:32:19.738
  STEP: creating service nodeport-test with type=NodePort in namespace services-4230 @ 05/13/24 20:32:19.742
  STEP: creating replication controller nodeport-test in namespace services-4230 @ 05/13/24 20:32:19.783
  I0513 20:32:19.821164      19 runners.go:198] Created replication controller with name: nodeport-test, namespace: services-4230, replica count: 2
  E0513 20:32:20.201024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:21.201811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:22.202558      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:32:22.871511      19 runners.go:198] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0513 20:32:22.871718 19 resource.go:361] Creating new exec pod
  E0513 20:32:23.205103      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:24.205333      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:25.206033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:32:25.931492 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-4230 exec execpodqgjsl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0513 20:32:26.122338 19 builder.go:146] stderr: "+ + ncecho -v hostName -t\n -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I0513 20:32:26.122398 19 builder.go:147] stdout: ""
  E0513 20:32:26.206575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:32:26.931597 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-4230 exec execpodqgjsl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0513 20:32:27.104221 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I0513 20:32:27.104287 19 builder.go:147] stdout: ""
  E0513 20:32:27.207246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:32:27.932708 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-4230 exec execpodqgjsl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0513 20:32:28.109971 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I0513 20:32:28.110110 19 builder.go:147] stdout: "nodeport-test-d5mbd"
  I0513 20:32:28.110197 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-4230 exec execpodqgjsl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.140.36 80'
  E0513 20:32:28.207865      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:32:28.255151 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.140.36 80\nConnection to 10.43.140.36 80 port [tcp/http] succeeded!\n"
  I0513 20:32:28.255215 19 builder.go:147] stdout: ""
  I0513 20:32:29.110264 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-4230 exec execpodqgjsl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.140.36 80'
  E0513 20:32:29.208959      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:32:29.271321 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.140.36 80\nConnection to 10.43.140.36 80 port [tcp/http] succeeded!\n"
  I0513 20:32:29.271490 19 builder.go:147] stdout: "nodeport-test-d5mbd"
  I0513 20:32:29.271650 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-4230 exec execpodqgjsl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.11.14 30201'
  I0513 20:32:29.436832 19 builder.go:146] stderr: "+ nc -v -t -w 2 172.31.11.14 30201\n+ echo hostName\nConnection to 172.31.11.14 30201 port [tcp/*] succeeded!\n"
  I0513 20:32:29.436884 19 builder.go:147] stdout: ""
  E0513 20:32:30.209932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:32:30.272462 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-4230 exec execpodqgjsl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.11.14 30201'
  I0513 20:32:30.443969 19 builder.go:146] stderr: "+ nc -v -t -w 2 172.31.11.14 30201\n+ echo hostName\nConnection to 172.31.11.14 30201 port [tcp/*] succeeded!\n"
  I0513 20:32:30.444031 19 builder.go:147] stdout: "nodeport-test-66llz"
  I0513 20:32:30.444581 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=services-4230 exec execpodqgjsl -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.14.0 30201'
  I0513 20:32:30.599472 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.14.0 30201\nConnection to 172.31.14.0 30201 port [tcp/*] succeeded!\n"
  I0513 20:32:30.599531 19 builder.go:147] stdout: "nodeport-test-66llz"
  I0513 20:32:30.599651 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4230" for this suite. @ 05/13/24 20:32:30.604
• [10.918 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 05/13/24 20:32:30.618
  I0513 20:32:30.618615 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename daemonsets @ 05/13/24 20:32:30.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:32:30.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:32:30.659
  STEP: Creating simple DaemonSet "daemon-set" @ 05/13/24 20:32:30.705
  STEP: Check that daemon pods launch on every node of the cluster. @ 05/13/24 20:32:30.732
  I0513 20:32:30.758555 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 20:32:30.759039 19 fixtures.go:130] Node ip-172-31-0-253.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0513 20:32:31.210143      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:32:31.741875 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 20:32:31.741953 19 fixtures.go:130] Node ip-172-31-0-253.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0513 20:32:32.211118      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:32:32.748042 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0513 20:32:32.748311 19 fixtures.go:135] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 05/13/24 20:32:32.751
  I0513 20:32:32.779439 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0513 20:32:32.779487 19 fixtures.go:130] Node ip-172-31-3-33.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0513 20:32:33.211936      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:32:33.818378 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0513 20:32:33.818435 19 fixtures.go:130] Node ip-172-31-3-33.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0513 20:32:34.212017      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:32:34.846973 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0513 20:32:34.847039 19 fixtures.go:130] Node ip-172-31-3-33.us-east-2.compute.internal is running 0 daemon pod, expected 1
  E0513 20:32:35.212911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:32:35.871866 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 4
  I0513 20:32:35.871932 19 fixtures.go:135] Number of running nodes: 4, number of available pods: 4 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 05/13/24 20:32:35.877
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8301, will wait for the garbage collector to delete the pods @ 05/13/24 20:32:35.877
  I0513 20:32:35.948696 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 16.397985ms
  I0513 20:32:36.049189 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.489827ms
  E0513 20:32:36.213156      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:37.214164      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:38.214696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:32:38.553809 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0513 20:32:38.554017 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0513 20:32:38.558594 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"84096"},"items":null}

  I0513 20:32:38.562303 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"84096"},"items":null}

  I0513 20:32:38.586383 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8301" for this suite. @ 05/13/24 20:32:38.593
• [8.001 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:163
  STEP: Creating a kubernetes client @ 05/13/24 20:32:38.62
  I0513 20:32:38.620297 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename resourcequota @ 05/13/24 20:32:38.621
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:32:38.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:32:38.661
  STEP: Discovering how many secrets are in namespace by default @ 05/13/24 20:32:38.665
  E0513 20:32:39.214827      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:40.215246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:41.215155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:42.215996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:43.216111      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 05/13/24 20:32:43.669
  E0513 20:32:44.216184      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:45.216283      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:46.217274      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:47.218036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:48.218226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 05/13/24 20:32:48.685
  STEP: Ensuring resource quota status is calculated @ 05/13/24 20:32:48.7
  E0513 20:32:49.219754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:50.220259      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 05/13/24 20:32:50.706
  STEP: Ensuring resource quota status captures secret creation @ 05/13/24 20:32:50.736
  E0513 20:32:51.221159      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:52.221277      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 05/13/24 20:32:52.741
  STEP: Ensuring resource quota status released usage @ 05/13/24 20:32:52.76
  E0513 20:32:53.221714      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:54.221858      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:32:54.765434 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5577" for this suite. @ 05/13/24 20:32:54.77
• [16.160 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 05/13/24 20:32:54.781
  I0513 20:32:54.781358 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename webhook @ 05/13/24 20:32:54.782
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:32:54.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:32:54.848
  STEP: Setting up server cert @ 05/13/24 20:32:54.906
  E0513 20:32:55.222325      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 05/13/24 20:32:55.832
  STEP: Deploying the webhook pod @ 05/13/24 20:32:55.846
  STEP: Wait for the deployment to be ready @ 05/13/24 20:32:55.876
  I0513 20:32:55.889002 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0513 20:32:56.223455      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:32:57.223727      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 05/13/24 20:32:57.9
  STEP: Verifying the service has paired with the endpoint @ 05/13/24 20:32:57.925
  E0513 20:32:58.224832      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:32:58.925535 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 05/13/24 20:32:58.933
  STEP: create a configmap that should be updated by the webhook @ 05/13/24 20:32:58.964
  I0513 20:32:59.142919 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-95" for this suite. @ 05/13/24 20:32:59.149
  STEP: Destroying namespace "webhook-markers-2240" for this suite. @ 05/13/24 20:32:59.165
• [4.397 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 05/13/24 20:32:59.179
  I0513 20:32:59.180030 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 05/13/24 20:32:59.18
  E0513 20:32:59.225187      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:32:59.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:32:59.235
  STEP: Setting up the test @ 05/13/24 20:32:59.238
  STEP: Creating hostNetwork=false pod @ 05/13/24 20:32:59.239
  E0513 20:33:00.225308      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:01.225435      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 05/13/24 20:33:01.273
  E0513 20:33:02.225607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:03.225702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Running the test @ 05/13/24 20:33:03.454
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 05/13/24 20:33:03.454
  I0513 20:33:03.454806 19 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-691 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 20:33:03.454855 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 20:33:03.455686 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 20:33:03.455760 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-691/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0513 20:33:03.515460 19 exec_util.go:106] Exec stderr: ""
  I0513 20:33:03.515565 19 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-691 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 20:33:03.515592 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 20:33:03.516370 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 20:33:03.516452 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-691/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0513 20:33:03.566358 19 exec_util.go:106] Exec stderr: ""
  I0513 20:33:03.566488 19 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-691 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 20:33:03.566722 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 20:33:03.567365 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 20:33:03.567442 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-691/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0513 20:33:03.628975 19 exec_util.go:106] Exec stderr: ""
  I0513 20:33:03.629045 19 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-691 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 20:33:03.629063 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 20:33:03.629937 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 20:33:03.630144 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-691/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0513 20:33:03.681670 19 exec_util.go:106] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 05/13/24 20:33:03.681
  I0513 20:33:03.681890 19 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-691 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 20:33:03.681910 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 20:33:03.682648 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 20:33:03.682726 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-691/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I0513 20:33:03.730729 19 exec_util.go:106] Exec stderr: ""
  I0513 20:33:03.731206 19 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-691 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 20:33:03.731345 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 20:33:03.732328 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 20:33:03.732495 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-691/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I0513 20:33:03.799632 19 exec_util.go:106] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 05/13/24 20:33:03.799
  I0513 20:33:03.800218 19 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-691 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 20:33:03.800284 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 20:33:03.801358 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 20:33:03.801829 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-691/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0513 20:33:03.858003 19 exec_util.go:106] Exec stderr: ""
  I0513 20:33:03.858074 19 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-691 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 20:33:03.858092 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 20:33:03.859002 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 20:33:03.859103 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-691/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0513 20:33:03.911877 19 exec_util.go:106] Exec stderr: ""
  I0513 20:33:03.912203 19 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-691 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 20:33:03.912321 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 20:33:03.913320 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 20:33:03.913399 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-691/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0513 20:33:03.971911 19 exec_util.go:106] Exec stderr: ""
  I0513 20:33:03.972374 19 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-691 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0513 20:33:03.972397 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  I0513 20:33:03.973451 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0513 20:33:03.973532 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-691/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0513 20:33:04.028199 19 exec_util.go:106] Exec stderr: ""
  I0513 20:33:04.028416 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-691" for this suite. @ 05/13/24 20:33:04.033
• [4.864 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 05/13/24 20:33:04.045
  I0513 20:33:04.045381 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename downward-api @ 05/13/24 20:33:04.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:33:04.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:33:04.091
  STEP: Creating the pod @ 05/13/24 20:33:04.095
  E0513 20:33:04.226666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:05.226761      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:06.227581      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:07.227886      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:33:07.240881 19 pod_client.go:141] Successfully updated pod "labelsupdateed9d0f45-1983-4f89-91f8-4cb7216c0d6e"
  E0513 20:33:08.228032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:09.228177      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:33:09.595485 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7570" for this suite. @ 05/13/24 20:33:09.611
• [5.589 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1533
  STEP: Creating a kubernetes client @ 05/13/24 20:33:09.635
  I0513 20:33:09.635960 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename kubectl @ 05/13/24 20:33:09.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:33:09.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:33:09.696
  STEP: creating Agnhost RC @ 05/13/24 20:33:09.701
  I0513 20:33:09.701978 19 kubectl.go:1540] namespace kubectl-3683
  I0513 20:33:09.702170 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-3683 create -f -'
  I0513 20:33:09.926356 19 builder.go:146] stderr: ""
  I0513 20:33:09.926429 19 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 05/13/24 20:33:09.926
  E0513 20:33:10.228891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:33:10.931363 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0513 20:33:10.931418 19 framework.go:733] Found 0 / 1
  E0513 20:33:11.229747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:33:11.947031 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0513 20:33:11.947118 19 framework.go:733] Found 1 / 1
  I0513 20:33:11.947152 19 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0513 20:33:11.953623 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0513 20:33:11.953777 19 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0513 20:33:11.953805 19 kubectl.go:1547] wait on agnhost-primary startup in kubectl-3683 
  I0513 20:33:11.953859 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-3683 logs agnhost-primary-krtzj agnhost-primary'
  I0513 20:33:12.093540 19 builder.go:146] stderr: ""
  I0513 20:33:12.093602 19 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 05/13/24 20:33:12.093
  I0513 20:33:12.093705 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-3683 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  E0513 20:33:12.230384      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:33:12.566339 19 builder.go:146] stderr: ""
  I0513 20:33:12.566388 19 builder.go:147] stdout: "service/rm2 exposed\n"
  I0513 20:33:12.592508 19 utils.go:1179] Service rm2 in namespace kubectl-3683 found.
  E0513 20:33:13.230557      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:14.231080      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: exposing service @ 05/13/24 20:33:14.611
  I0513 20:33:14.611682 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2740609868 --namespace=kubectl-3683 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0513 20:33:14.727181 19 builder.go:146] stderr: ""
  I0513 20:33:14.727230 19 builder.go:147] stdout: "service/rm3 exposed\n"
  I0513 20:33:14.736731 19 utils.go:1179] Service rm3 in namespace kubectl-3683 found.
  E0513 20:33:15.231593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:16.231606      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0513 20:33:16.744379 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3683" for this suite. @ 05/13/24 20:33:16.749
• [7.128 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 05/13/24 20:33:16.764
  I0513 20:33:16.764222 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename server-version @ 05/13/24 20:33:16.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:33:16.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:33:16.81
  STEP: Request ServerVersion @ 05/13/24 20:33:16.813
  STEP: Confirm major version @ 05/13/24 20:33:16.814
  I0513 20:33:16.814778 19 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 05/13/24 20:33:16.814
  I0513 20:33:16.815057 19 server_version.go:58] cleanMinorVersion: 30
  I0513 20:33:16.815141 19 server_version.go:62] Minor version: 30
  I0513 20:33:16.815285 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-7436" for this suite. @ 05/13/24 20:33:16.821
• [0.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 05/13/24 20:33:16.855
  I0513 20:33:16.855749 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2740609868
  STEP: Building a namespace api object, basename downward-api @ 05/13/24 20:33:16.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 05/13/24 20:33:16.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 05/13/24 20:33:16.894
  STEP: Creating a pod to test downward API volume plugin @ 05/13/24 20:33:16.897
  E0513 20:33:17.231841      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:18.231960      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:19.232692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0513 20:33:20.233334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 05/13/24 20:33:20.938
  I0513 20:33:20.942635 19 output.go:196] Trying to get logs from node ip-172-31-11-14.us-east-2.compute.internal pod downwardapi-volume-83126ef1-a41c-49b0-93a3-514549c9aef1 container client-container: <nil>
  STEP: delete the pod @ 05/13/24 20:33:20.963
  I0513 20:33:21.009390 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1913" for this suite. @ 05/13/24 20:33:21.014
• [4.187 seconds]
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0513 20:33:21.043892 19 suites.go:34] Running AfterSuite actions on node 1
  I0513 20:33:21.044174 19 util.go:614] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.001 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:161
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:612
[ReportAfterSuite] PASSED [0.097 seconds]
------------------------------

Ran 402 of 7197 Specs in 6375.360 seconds
SUCCESS! -- 402 Passed | 0 Failed | 0 Pending | 6795 Skipped
PASS

Ginkgo ran 1 suite in 1h46m16.937413667s
Test Suite Passed
