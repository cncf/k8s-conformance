  I1203 19:02:55.324892      23 e2e.go:109] Starting e2e run "5bf20c14-ed9f-42ef-a1ac-7bd278aaf100" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1733252574 - will randomize all specs

Will run 402 of 7199 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I1203 19:02:55.610602 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  I1203 19:02:55.612238 23 helper.go:48] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I1203 19:02:55.654315 23 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I1203 19:02:55.658284 23 e2e.go:153] 3 / 3 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  I1203 19:02:55.658377 23 e2e.go:245] e2e test version: v1.30.6
  I1203 19:02:55.660337 23 e2e.go:254] kube-apiserver version: v1.30.6-ckp
  I1203 19:02:55.660474 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  I1203 19:02:55.665663 23 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.055 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2240
  STEP: Creating a kubernetes client @ 12/03/24 19:02:55.843
  I1203 19:02:55.843883 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename services @ 12/03/24 19:02:55.844
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:02:55.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:02:55.866
  STEP: creating service in namespace services-8285 @ 12/03/24 19:02:55.871
  STEP: creating service affinity-nodeport-transition in namespace services-8285 @ 12/03/24 19:02:55.871
  STEP: creating replication controller affinity-nodeport-transition in namespace services-8285 @ 12/03/24 19:02:55.889
  I1203 19:02:55.896601      23 runners.go:198] Created replication controller with name: affinity-nodeport-transition, namespace: services-8285, replica count: 3
  I1203 19:02:58.949568      23 runners.go:198] affinity-nodeport-transition Pods: 3 out of 3 created, 0 running, 3 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1203 19:03:01.951070      23 runners.go:198] affinity-nodeport-transition Pods: 3 out of 3 created, 0 running, 3 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1203 19:03:04.951513      23 runners.go:198] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1203 19:03:04.963104 23 resource.go:361] Creating new exec pod
  I1203 19:03:07.984408 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-8285 exec execpod-affinity4xm8q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I1203 19:03:08.193779 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  I1203 19:03:08.193869 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1203 19:03:08.194001 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-8285 exec execpod-affinity4xm8q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.98.54.48 80'
  I1203 19:03:08.353726 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.98.54.48 80\nConnection to 10.98.54.48 80 port [tcp/http] succeeded!\n"
  I1203 19:03:08.353808 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1203 19:03:08.353934 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-8285 exec execpod-affinity4xm8q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.37 31856'
  I1203 19:03:08.515083 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.37 31856\nConnection to 192.168.100.37 31856 port [tcp/*] succeeded!\n"
  I1203 19:03:08.515144 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1203 19:03:08.515258 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-8285 exec execpod-affinity4xm8q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.114 31856'
  I1203 19:03:08.674130 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.114 31856\nConnection to 192.168.100.114 31856 port [tcp/*] succeeded!\n"
  I1203 19:03:08.674200 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1203 19:03:08.683620 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-8285 exec execpod-affinity4xm8q -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.100.37:31856/ ; done'
  I1203 19:03:08.969911 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:31856/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:31856/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:31856/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:31856/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:31856/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:31856/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:31856/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:31856/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:31856/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:31856/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:31856/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:31856/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:31856/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:31856/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:31856/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:31856/\n"
  I1203 19:03:08.970032 23 builder.go:147] stdout: "\naffinity-nodeport-transition-t5wkr\naffinity-nodeport-transition-zwgm7\naffinity-nodeport-transition-t5wkr\naffinity-nodeport-transition-zwgm7\naffinity-nodeport-transition-4zjds\naffinity-nodeport-transition-t5wkr\naffinity-nodeport-transition-4zjds\naffinity-nodeport-transition-4zjds\naffinity-nodeport-transition-zwgm7\naffinity-nodeport-transition-t5wkr\naffinity-nodeport-transition-t5wkr\naffinity-nodeport-transition-t5wkr\naffinity-nodeport-transition-4zjds\naffinity-nodeport-transition-4zjds\naffinity-nodeport-transition-t5wkr\naffinity-nodeport-transition-4zjds"
  I1203 19:03:08.970067 23 service.go:242] Received response from host: affinity-nodeport-transition-t5wkr
  I1203 19:03:08.970099 23 service.go:242] Received response from host: affinity-nodeport-transition-zwgm7
  I1203 19:03:08.970118 23 service.go:242] Received response from host: affinity-nodeport-transition-t5wkr
  I1203 19:03:08.970140 23 service.go:242] Received response from host: affinity-nodeport-transition-zwgm7
  I1203 19:03:08.970169 23 service.go:242] Received response from host: affinity-nodeport-transition-4zjds
  I1203 19:03:08.970192 23 service.go:242] Received response from host: affinity-nodeport-transition-t5wkr
  I1203 19:03:08.970209 23 service.go:242] Received response from host: affinity-nodeport-transition-4zjds
  I1203 19:03:08.970227 23 service.go:242] Received response from host: affinity-nodeport-transition-4zjds
  I1203 19:03:08.970244 23 service.go:242] Received response from host: affinity-nodeport-transition-zwgm7
  I1203 19:03:08.970261 23 service.go:242] Received response from host: affinity-nodeport-transition-t5wkr
  I1203 19:03:08.970278 23 service.go:242] Received response from host: affinity-nodeport-transition-t5wkr
  I1203 19:03:08.970294 23 service.go:242] Received response from host: affinity-nodeport-transition-t5wkr
  I1203 19:03:08.970311 23 service.go:242] Received response from host: affinity-nodeport-transition-4zjds
  I1203 19:03:08.970327 23 service.go:242] Received response from host: affinity-nodeport-transition-4zjds
  I1203 19:03:08.970344 23 service.go:242] Received response from host: affinity-nodeport-transition-t5wkr
  I1203 19:03:08.970362 23 service.go:242] Received response from host: affinity-nodeport-transition-4zjds
  I1203 19:03:08.980947 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-8285 exec execpod-affinity4xm8q -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.100.37:31856/ ; done'
  I1203 19:03:09.238916 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:31856/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:31856/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:31856/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:31856/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:31856/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:31856/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:31856/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:31856/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:31856/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:31856/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:31856/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:31856/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:31856/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:31856/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:31856/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:31856/\n"
  I1203 19:03:09.239000 23 builder.go:147] stdout: "\naffinity-nodeport-transition-zwgm7\naffinity-nodeport-transition-zwgm7\naffinity-nodeport-transition-zwgm7\naffinity-nodeport-transition-zwgm7\naffinity-nodeport-transition-zwgm7\naffinity-nodeport-transition-zwgm7\naffinity-nodeport-transition-zwgm7\naffinity-nodeport-transition-zwgm7\naffinity-nodeport-transition-zwgm7\naffinity-nodeport-transition-zwgm7\naffinity-nodeport-transition-zwgm7\naffinity-nodeport-transition-zwgm7\naffinity-nodeport-transition-zwgm7\naffinity-nodeport-transition-zwgm7\naffinity-nodeport-transition-zwgm7\naffinity-nodeport-transition-zwgm7"
  I1203 19:03:09.239025 23 service.go:242] Received response from host: affinity-nodeport-transition-zwgm7
  I1203 19:03:09.239039 23 service.go:242] Received response from host: affinity-nodeport-transition-zwgm7
  I1203 19:03:09.239051 23 service.go:242] Received response from host: affinity-nodeport-transition-zwgm7
  I1203 19:03:09.239063 23 service.go:242] Received response from host: affinity-nodeport-transition-zwgm7
  I1203 19:03:09.239075 23 service.go:242] Received response from host: affinity-nodeport-transition-zwgm7
  I1203 19:03:09.239085 23 service.go:242] Received response from host: affinity-nodeport-transition-zwgm7
  I1203 19:03:09.239111 23 service.go:242] Received response from host: affinity-nodeport-transition-zwgm7
  I1203 19:03:09.239122 23 service.go:242] Received response from host: affinity-nodeport-transition-zwgm7
  I1203 19:03:09.239133 23 service.go:242] Received response from host: affinity-nodeport-transition-zwgm7
  I1203 19:03:09.239144 23 service.go:242] Received response from host: affinity-nodeport-transition-zwgm7
  I1203 19:03:09.239155 23 service.go:242] Received response from host: affinity-nodeport-transition-zwgm7
  I1203 19:03:09.239166 23 service.go:242] Received response from host: affinity-nodeport-transition-zwgm7
  I1203 19:03:09.239176 23 service.go:242] Received response from host: affinity-nodeport-transition-zwgm7
  I1203 19:03:09.239187 23 service.go:242] Received response from host: affinity-nodeport-transition-zwgm7
  I1203 19:03:09.239200 23 service.go:242] Received response from host: affinity-nodeport-transition-zwgm7
  I1203 19:03:09.239233 23 service.go:242] Received response from host: affinity-nodeport-transition-zwgm7
  I1203 19:03:09.239341 23 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-8285, will wait for the garbage collector to delete the pods @ 12/03/24 19:03:09.248
  I1203 19:03:09.311444 23 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 7.253599ms
  I1203 19:03:09.411982 23 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 100.534064ms
  I1203 19:03:14.338578 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8285" for this suite. @ 12/03/24 19:03:14.343
• [18.505 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 12/03/24 19:03:14.352
  I1203 19:03:14.352608 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename pods @ 12/03/24 19:03:14.354
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:03:14.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:03:14.372
  STEP: Create set of pods @ 12/03/24 19:03:14.376
  I1203 19:03:14.385111 23 pods.go:871] created test-pod-1
  I1203 19:03:14.393693 23 pods.go:871] created test-pod-2
  I1203 19:03:14.399270 23 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 12/03/24 19:03:14.399
  STEP: waiting for all pods to be deleted @ 12/03/24 19:03:16.445
  I1203 19:03:16.451833 23 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I1203 19:03:18.173132 23 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I1203 19:03:18.452696 23 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I1203 19:03:19.450015 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9422" for this suite. @ 12/03/24 19:03:19.454
• [5.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 12/03/24 19:03:19.459
  I1203 19:03:19.459841 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename configmap @ 12/03/24 19:03:19.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:03:19.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:03:19.48
  STEP: Creating configMap configmap-6675/configmap-test-3648e32d-5698-4624-b40f-06f7ecfe1260 @ 12/03/24 19:03:19.484
  STEP: Creating a pod to test consume configMaps @ 12/03/24 19:03:19.488
  STEP: Saw pod success @ 12/03/24 19:03:23.51
  I1203 19:03:23.513627 23 output.go:196] Trying to get logs from node nodea17 pod pod-configmaps-c1cde9f7-8f87-4817-9821-f1293d3cf8b2 container env-test: <nil>
  STEP: delete the pod @ 12/03/24 19:03:23.535
  I1203 19:03:24.183747 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6675" for this suite. @ 12/03/24 19:03:24.187
• [4.732 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 12/03/24 19:03:24.192
  I1203 19:03:24.192254 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename emptydir @ 12/03/24 19:03:24.193
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:03:24.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:03:24.207
  STEP: Creating Pod @ 12/03/24 19:03:24.211
  STEP: Reading file content from the nginx-container @ 12/03/24 19:03:26.232
  I1203 19:03:26.232200 23 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-7102 PodName:pod-sharedvolume-0d3b7791-54dd-4c64-9aa7-e3987eb62ca8 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1203 19:03:26.232257 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  I1203 19:03:26.233056 23 exec_util.go:62] ExecWithOptions: Clientset creation
  I1203 19:03:26.233126 23 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/emptydir-7102/pods/pod-sharedvolume-0d3b7791-54dd-4c64-9aa7-e3987eb62ca8/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  I1203 19:03:26.306099 23 exec_util.go:106] Exec stderr: ""
  I1203 19:03:26.306292 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7102" for this suite. @ 12/03/24 19:03:26.312
• [2.127 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 12/03/24 19:03:26.319
  I1203 19:03:26.319636 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename podtemplate @ 12/03/24 19:03:26.32
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:03:26.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:03:26.338
  STEP: Create set of pod templates @ 12/03/24 19:03:26.342
  I1203 19:03:26.347773 23 podtemplates.go:143] created test-podtemplate-1
  I1203 19:03:26.352496 23 podtemplates.go:143] created test-podtemplate-2
  I1203 19:03:26.356754 23 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 12/03/24 19:03:26.356
  STEP: delete collection of pod templates @ 12/03/24 19:03:26.36
  I1203 19:03:26.360326 23 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 12/03/24 19:03:26.376
  I1203 19:03:26.376317 23 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I1203 19:03:26.379437 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3700" for this suite. @ 12/03/24 19:03:26.383
• [0.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 12/03/24 19:03:26.39
  I1203 19:03:26.390760 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename var-expansion @ 12/03/24 19:03:26.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:03:26.404
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:03:26.408
  STEP: Creating a pod to test substitution in container's command @ 12/03/24 19:03:26.413
  STEP: Saw pod success @ 12/03/24 19:03:30.435
  I1203 19:03:30.439022 23 output.go:196] Trying to get logs from node nodea17 pod var-expansion-e2ab6b2e-29a8-4e38-ad8a-a138cbd64981 container dapi-container: <nil>
  STEP: delete the pod @ 12/03/24 19:03:30.446
  I1203 19:03:30.460080 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9801" for this suite. @ 12/03/24 19:03:30.464
• [4.078 seconds]
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:142
  STEP: Creating a kubernetes client @ 12/03/24 19:03:30.468
  I1203 19:03:30.469021 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename crd-webhook @ 12/03/24 19:03:30.47
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:03:30.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:03:30.487
  STEP: Setting up server cert @ 12/03/24 19:03:30.493
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 12/03/24 19:03:30.994
  STEP: Deploying the custom resource conversion webhook pod @ 12/03/24 19:03:31.003
  STEP: Wait for the deployment to be ready @ 12/03/24 19:03:31.017
  I1203 19:03:31.025938 23 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/03/24 19:03:33.039
  STEP: Verifying the service has paired with the endpoint @ 12/03/24 19:03:33.057
  I1203 19:03:34.057527 23 util.go:427] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I1203 19:03:34.066677 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Creating a v1 custom resource @ 12/03/24 19:03:36.658
  STEP: v2 custom resource should be converted @ 12/03/24 19:03:36.663
  I1203 19:03:37.216996 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-1491" for this suite. @ 12/03/24 19:03:37.22
• [6.756 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:789
  STEP: Creating a kubernetes client @ 12/03/24 19:03:37.225
  I1203 19:03:37.225175 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename services @ 12/03/24 19:03:37.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:03:37.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:03:37.241
  STEP: creating service endpoint-test2 in namespace services-9283 @ 12/03/24 19:03:37.245
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9283 to expose endpoints map[] @ 12/03/24 19:03:37.257
  I1203 19:03:37.260848 23 service.go:4226] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  I1203 19:03:38.271835 23 service.go:4258] successfully validated that service endpoint-test2 in namespace services-9283 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-9283 @ 12/03/24 19:03:38.271
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9283 to expose endpoints map[pod1:[80]] @ 12/03/24 19:03:40.292
  I1203 19:03:40.304537 23 service.go:4258] successfully validated that service endpoint-test2 in namespace services-9283 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 12/03/24 19:03:40.304
  I1203 19:03:40.304634 23 resource.go:361] Creating new exec pod
  I1203 19:03:43.321884 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-9283 exec execpod2cltq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1203 19:03:43.494746 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I1203 19:03:43.494864 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1203 19:03:43.495070 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-9283 exec execpod2cltq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.109.134.32 80'
  I1203 19:03:43.663437 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.109.134.32 80\nConnection to 10.109.134.32 80 port [tcp/http] succeeded!\n"
  I1203 19:03:43.663511 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-9283 @ 12/03/24 19:03:43.663
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9283 to expose endpoints map[pod1:[80] pod2:[80]] @ 12/03/24 19:03:45.684
  I1203 19:03:45.699864 23 service.go:4258] successfully validated that service endpoint-test2 in namespace services-9283 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 12/03/24 19:03:45.699
  I1203 19:03:46.700866 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-9283 exec execpod2cltq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1203 19:03:46.865818 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I1203 19:03:46.865875 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1203 19:03:46.865959 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-9283 exec execpod2cltq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.109.134.32 80'
  I1203 19:03:47.024658 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.109.134.32 80\nConnection to 10.109.134.32 80 port [tcp/http] succeeded!\n"
  I1203 19:03:47.024725 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-9283 @ 12/03/24 19:03:47.024
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9283 to expose endpoints map[pod2:[80]] @ 12/03/24 19:03:47.039
  I1203 19:03:48.060212 23 service.go:4258] successfully validated that service endpoint-test2 in namespace services-9283 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 12/03/24 19:03:48.06
  I1203 19:03:49.061388 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-9283 exec execpod2cltq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1203 19:03:49.232951 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I1203 19:03:49.233029 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1203 19:03:49.233139 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-9283 exec execpod2cltq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.109.134.32 80'
  I1203 19:03:49.395082 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.109.134.32 80\nConnection to 10.109.134.32 80 port [tcp/http] succeeded!\n"
  I1203 19:03:49.395166 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-9283 @ 12/03/24 19:03:49.395
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-9283 to expose endpoints map[] @ 12/03/24 19:03:49.405
  I1203 19:03:50.425421 23 service.go:4258] successfully validated that service endpoint-test2 in namespace services-9283 exposes endpoints map[]
  I1203 19:03:50.442869 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9283" for this suite. @ 12/03/24 19:03:50.446
• [13.228 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 12/03/24 19:03:50.453
  I1203 19:03:50.454035 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename apf @ 12/03/24 19:03:50.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:03:50.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:03:50.472
  STEP: getting /apis @ 12/03/24 19:03:50.476
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 12/03/24 19:03:50.482
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 12/03/24 19:03:50.484
  STEP: creating @ 12/03/24 19:03:50.486
  STEP: getting @ 12/03/24 19:03:50.517
  STEP: listing @ 12/03/24 19:03:50.52
  STEP: watching @ 12/03/24 19:03:50.523
  I1203 19:03:50.524039 23 flowcontrol.go:394] starting watch
  STEP: patching @ 12/03/24 19:03:50.525
  STEP: updating @ 12/03/24 19:03:50.531
  I1203 19:03:50.540726 23 flowcontrol.go:422] waiting for watch events with expected annotations
  I1203 19:03:50.540870 23 flowcontrol.go:438] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 12/03/24 19:03:50.541
  STEP: patching /status @ 12/03/24 19:03:50.544
  STEP: updating /status @ 12/03/24 19:03:50.55
  STEP: deleting @ 12/03/24 19:03:50.58
  STEP: deleting a collection @ 12/03/24 19:03:50.593
  I1203 19:03:50.614328 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-2550" for this suite. @ 12/03/24 19:03:50.619
• [0.171 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 12/03/24 19:03:50.625
  I1203 19:03:50.625679 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename watch @ 12/03/24 19:03:50.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:03:50.639
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:03:50.644
  STEP: creating a watch on configmaps with label A @ 12/03/24 19:03:50.649
  STEP: creating a watch on configmaps with label B @ 12/03/24 19:03:50.65
  STEP: creating a watch on configmaps with label A or B @ 12/03/24 19:03:50.653
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 12/03/24 19:03:50.655
  I1203 19:03:50.659751 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5169  f1424bc3-906b-4084-8e21-9ddf55315723 2237 0 2024-12-03 19:03:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-03 19:03:50 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1203 19:03:50.660113 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5169  f1424bc3-906b-4084-8e21-9ddf55315723 2237 0 2024-12-03 19:03:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-03 19:03:50 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 12/03/24 19:03:50.66
  I1203 19:03:50.668709 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5169  f1424bc3-906b-4084-8e21-9ddf55315723 2238 0 2024-12-03 19:03:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-03 19:03:50 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1203 19:03:50.669144 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5169  f1424bc3-906b-4084-8e21-9ddf55315723 2238 0 2024-12-03 19:03:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-03 19:03:50 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 12/03/24 19:03:50.669
  I1203 19:03:50.678959 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5169  f1424bc3-906b-4084-8e21-9ddf55315723 2239 0 2024-12-03 19:03:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-03 19:03:50 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1203 19:03:50.679057 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5169  f1424bc3-906b-4084-8e21-9ddf55315723 2239 0 2024-12-03 19:03:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-03 19:03:50 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 12/03/24 19:03:50.679
  I1203 19:03:50.688037 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5169  f1424bc3-906b-4084-8e21-9ddf55315723 2240 0 2024-12-03 19:03:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-03 19:03:50 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1203 19:03:50.688102 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-5169  f1424bc3-906b-4084-8e21-9ddf55315723 2240 0 2024-12-03 19:03:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-03 19:03:50 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 12/03/24 19:03:50.688
  I1203 19:03:50.692315 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5169  659f5996-c95f-44fb-9a17-a3abf6bc703c 2241 0 2024-12-03 19:03:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-12-03 19:03:50 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1203 19:03:50.692495 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5169  659f5996-c95f-44fb-9a17-a3abf6bc703c 2241 0 2024-12-03 19:03:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-12-03 19:03:50 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 12/03/24 19:04:00.692
  I1203 19:04:00.702850 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5169  659f5996-c95f-44fb-9a17-a3abf6bc703c 2281 0 2024-12-03 19:03:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-12-03 19:03:50 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1203 19:04:00.703033 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-5169  659f5996-c95f-44fb-9a17-a3abf6bc703c 2281 0 2024-12-03 19:03:50 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-12-03 19:03:50 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1203 19:04:10.704127 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5169" for this suite. @ 12/03/24 19:04:10.71
• [20.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 12/03/24 19:04:10.718
  I1203 19:04:10.718324 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename webhook @ 12/03/24 19:04:10.719
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:04:10.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:04:10.736
  STEP: Setting up server cert @ 12/03/24 19:04:10.758
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/03/24 19:04:11.057
  STEP: Deploying the webhook pod @ 12/03/24 19:04:11.066
  STEP: Wait for the deployment to be ready @ 12/03/24 19:04:11.078
  I1203 19:04:11.088686 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/03/24 19:04:13.101
  STEP: Verifying the service has paired with the endpoint @ 12/03/24 19:04:13.115
  I1203 19:04:14.116576 23 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 12/03/24 19:04:14.124
  STEP: create a pod that should be denied by the webhook @ 12/03/24 19:04:14.144
  STEP: create a pod that causes the webhook to hang @ 12/03/24 19:04:14.163
  STEP: create a configmap that should be denied by the webhook @ 12/03/24 19:04:24.173
  STEP: create a configmap that should be admitted by the webhook @ 12/03/24 19:04:24.212
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 12/03/24 19:04:24.224
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 12/03/24 19:04:24.233
  STEP: create a namespace that bypass the webhook @ 12/03/24 19:04:24.24
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 12/03/24 19:04:24.253
  I1203 19:04:24.310443 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4647" for this suite. @ 12/03/24 19:04:24.314
  STEP: Destroying namespace "webhook-markers-2986" for this suite. @ 12/03/24 19:04:24.321
  STEP: Destroying namespace "exempted-namespace-6251" for this suite. @ 12/03/24 19:04:24.325
• [13.612 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 12/03/24 19:04:24.33
  I1203 19:04:24.330277 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename subpath @ 12/03/24 19:04:24.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:04:24.343
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:04:24.347
  STEP: Setting up data @ 12/03/24 19:04:24.351
  STEP: Creating pod pod-subpath-test-downwardapi-vxl4 @ 12/03/24 19:04:24.36
  STEP: Creating a pod to test atomic-volume-subpath @ 12/03/24 19:04:24.36
  STEP: Saw pod success @ 12/03/24 19:04:48.447
  I1203 19:04:48.451776 23 output.go:196] Trying to get logs from node nodea17 pod pod-subpath-test-downwardapi-vxl4 container test-container-subpath-downwardapi-vxl4: <nil>
  STEP: delete the pod @ 12/03/24 19:04:48.461
  STEP: Deleting pod pod-subpath-test-downwardapi-vxl4 @ 12/03/24 19:04:48.474
  I1203 19:04:48.474409 23 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-vxl4" in namespace "subpath-9932"
  I1203 19:04:48.477315 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9932" for this suite. @ 12/03/24 19:04:48.482
• [24.158 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 12/03/24 19:04:48.488
  I1203 19:04:48.488863 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename validating-admission-policy @ 12/03/24 19:04:48.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:04:48.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:04:48.506
  STEP: creating the policy @ 12/03/24 19:04:48.521
  STEP: waiting until the marker is denied @ 12/03/24 19:04:48.544
  STEP: testing a replicated Deployment to be allowed @ 12/03/24 19:04:48.863
  STEP: testing a non-replicated ReplicaSet not to be denied @ 12/03/24 19:04:48.874
  I1203 19:04:48.923983 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-9443" for this suite. @ 12/03/24 19:04:48.927
• [0.446 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 12/03/24 19:04:48.935
  I1203 19:04:48.935501 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename endpointslice @ 12/03/24 19:04:48.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:04:48.948
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:04:48.951
  STEP: referencing a single matching pod @ 12/03/24 19:04:53.058
  STEP: referencing matching pods with named port @ 12/03/24 19:04:53.066
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 12/03/24 19:04:53.072
  STEP: recreating EndpointSlices after they've been deleted @ 12/03/24 19:04:53.079
  I1203 19:04:53.097642 23 endpointslice.go:938] EndpointSlice for Service endpointslice-4961/example-named-port not found
  I1203 19:04:55.105320 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4961" for this suite. @ 12/03/24 19:04:55.111
• [6.183 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 12/03/24 19:04:55.119
  I1203 19:04:55.119109 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename secrets @ 12/03/24 19:04:55.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:04:55.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:04:55.141
  STEP: Creating secret with name secret-test-0f1b97ff-fef4-4272-bec2-d1d2f9829978 @ 12/03/24 19:04:55.166
  STEP: Creating a pod to test consume secrets @ 12/03/24 19:04:55.171
  STEP: Saw pod success @ 12/03/24 19:04:59.193
  I1203 19:04:59.197751 23 output.go:196] Trying to get logs from node nodeb14 pod pod-secrets-072249bf-d5f1-40b6-9db1-07de0bcf8250 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/03/24 19:04:59.222
  I1203 19:04:59.237357 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7117" for this suite. @ 12/03/24 19:04:59.243
  STEP: Destroying namespace "secret-namespace-607" for this suite. @ 12/03/24 19:04:59.25
• [4.137 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 12/03/24 19:04:59.256
  I1203 19:04:59.256161 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename projected @ 12/03/24 19:04:59.257
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:04:59.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:04:59.282
  STEP: Creating projection with secret that has name projected-secret-test-map-9835e5cf-b3a7-4a74-835d-44dbea09839c @ 12/03/24 19:04:59.287
  STEP: Creating a pod to test consume secrets @ 12/03/24 19:04:59.292
  STEP: Saw pod success @ 12/03/24 19:05:03.315
  I1203 19:05:03.319160 23 output.go:196] Trying to get logs from node nodea17 pod pod-projected-secrets-1a162fbd-226a-4cd7-995d-f31d799c02ce container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/03/24 19:05:03.326
  I1203 19:05:03.343772 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7998" for this suite. @ 12/03/24 19:05:03.348
• [4.105 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:697
  STEP: Creating a kubernetes client @ 12/03/24 19:05:03.361
  I1203 19:05:03.361525 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename job @ 12/03/24 19:05:03.362
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:05:03.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:05:03.378
  STEP: Creating a job @ 12/03/24 19:05:03.382
  STEP: Ensuring active pods == parallelism @ 12/03/24 19:05:03.389
  STEP: Orphaning one of the Job's Pods @ 12/03/24 19:05:05.396
  I1203 19:05:05.919824 23 pod_client.go:141] Successfully updated pod "adopt-release-bmnjr"
  STEP: Checking that the Job readopts the Pod @ 12/03/24 19:05:05.919
  STEP: Removing the labels from the Job's Pod @ 12/03/24 19:05:07.93
  I1203 19:05:08.444466 23 pod_client.go:141] Successfully updated pod "adopt-release-bmnjr"
  STEP: Checking that the Job releases the Pod @ 12/03/24 19:05:08.444
  I1203 19:05:10.452176 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3188" for this suite. @ 12/03/24 19:05:10.457
• [7.104 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 12/03/24 19:05:10.465
  I1203 19:05:10.466040 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename deployment @ 12/03/24 19:05:10.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:05:10.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:05:10.486
  I1203 19:05:10.504114 23 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  I1203 19:05:15.509254 23 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/03/24 19:05:15.509
  I1203 19:05:19.523575 23 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 12/03/24 19:05:19.535
  I1203 19:05:19.545812 23 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5157",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "62c3e5e9-84e4-4995-8806-d6514bea7e33",
      ResourceVersion: (string) (len=4) "2850",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868849519,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868849519,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1203 19:05:19.550960 23 deployment.go:41] New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  I1203 19:05:19.551006 23 deployment.go:44] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I1203 19:05:19.551381 23 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5157",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4f6577a6-ff1b-4484-9478-c5367da45ecf",
      ResourceVersion: (string) (len=4) "2851",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868849510,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "62c3e5e9-84e4-4995-8806-d6514bea7e33",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868849510,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868849517,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868849519,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 36 32 63 33 65 35 65  |"uid\":\"62c3e5e|
              00000040  39 2d 38 34 65 34 2d 34  39 39 35 2d 38 38 30 36  |9-84e4-4995-8806|
              00000050  2d 64 36 35 31 34 62 65  61 37 65 33 33 5c 22 7d  |-d6514bea7e33\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1203 19:05:19.556724 23 deployment.go:67] Pod "test-cleanup-controller-6xqm2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-6xqm2",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-5157",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1d10089e-6905-4b5b-9d3c-301b3ac43e5a",
      ResourceVersion: (string) (len=4) "2846",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868849510,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "4f6577a6-ff1b-4484-9478-c5367da45ecf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868849510,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  34 66 36 35 37 37 61 36  |uid\":\"4f6577a6|
              00000080  2d 66 66 31 62 2d 34 34  38 34 2d 39 34 37 38 2d  |-ff1b-4484-9478-|
              00000090  63 35 33 36 37 64 61 34  35 65 63 66 5c 22 7d 22  |c5367da45ecf\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868849517,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 32  33 5c 22 7d 22 3a 7b 22  |.244.1.23\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lnxjw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lnxjw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea17",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868849517,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868849510,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868849517,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868849517,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868849510,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.100.37",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.100.37"
        }
      },
      PodIP: (string) (len=11) "10.244.1.23",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.23"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868849510,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63868849517,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f57b2660f3b216dba1af2ece4cce0a983f69452938f3c71ee5181202923a8feb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1203 19:05:19.560240 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5157" for this suite. @ 12/03/24 19:05:19.564
• [9.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 12/03/24 19:05:19.57
  I1203 19:05:19.570938 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename discovery @ 12/03/24 19:05:19.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:05:19.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:05:19.587
  STEP: Setting up server cert @ 12/03/24 19:05:19.593
  I1203 19:05:20.056566 23 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I1203 19:05:20.058346 23 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I1203 19:05:20.058388 23 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I1203 19:05:20.058397 23 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I1203 19:05:20.058405 23 discovery.go:139] Checking APIGroup: apps
  I1203 19:05:20.060027 23 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I1203 19:05:20.060087 23 discovery.go:148] Versions found [{apps/v1 v1}]
  I1203 19:05:20.060108 23 discovery.go:154] apps/v1 matches apps/v1
  I1203 19:05:20.060126 23 discovery.go:139] Checking APIGroup: events.k8s.io
  I1203 19:05:20.061931 23 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I1203 19:05:20.061999 23 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I1203 19:05:20.062020 23 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I1203 19:05:20.062037 23 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I1203 19:05:20.063908 23 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I1203 19:05:20.063972 23 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I1203 19:05:20.063991 23 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I1203 19:05:20.064010 23 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I1203 19:05:20.065969 23 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I1203 19:05:20.066027 23 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I1203 19:05:20.066047 23 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I1203 19:05:20.066088 23 discovery.go:139] Checking APIGroup: autoscaling
  I1203 19:05:20.067728 23 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I1203 19:05:20.067790 23 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I1203 19:05:20.067810 23 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I1203 19:05:20.067828 23 discovery.go:139] Checking APIGroup: batch
  I1203 19:05:20.069543 23 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I1203 19:05:20.069602 23 discovery.go:148] Versions found [{batch/v1 v1}]
  I1203 19:05:20.069622 23 discovery.go:154] batch/v1 matches batch/v1
  I1203 19:05:20.069640 23 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I1203 19:05:20.071489 23 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I1203 19:05:20.071549 23 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I1203 19:05:20.071568 23 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I1203 19:05:20.071586 23 discovery.go:139] Checking APIGroup: networking.k8s.io
  I1203 19:05:20.073373 23 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I1203 19:05:20.073432 23 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I1203 19:05:20.073454 23 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I1203 19:05:20.073471 23 discovery.go:139] Checking APIGroup: policy
  I1203 19:05:20.075312 23 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I1203 19:05:20.075372 23 discovery.go:148] Versions found [{policy/v1 v1}]
  I1203 19:05:20.075391 23 discovery.go:154] policy/v1 matches policy/v1
  I1203 19:05:20.075409 23 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I1203 19:05:20.077169 23 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I1203 19:05:20.077229 23 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I1203 19:05:20.077249 23 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I1203 19:05:20.077267 23 discovery.go:139] Checking APIGroup: storage.k8s.io
  I1203 19:05:20.079145 23 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I1203 19:05:20.079237 23 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I1203 19:05:20.079258 23 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I1203 19:05:20.079288 23 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I1203 19:05:20.081064 23 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I1203 19:05:20.081123 23 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I1203 19:05:20.081142 23 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I1203 19:05:20.081161 23 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I1203 19:05:20.082823 23 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I1203 19:05:20.082888 23 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I1203 19:05:20.082906 23 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I1203 19:05:20.082925 23 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I1203 19:05:20.084689 23 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I1203 19:05:20.084750 23 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I1203 19:05:20.084769 23 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I1203 19:05:20.084792 23 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I1203 19:05:20.086423 23 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I1203 19:05:20.086481 23 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I1203 19:05:20.086500 23 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I1203 19:05:20.086518 23 discovery.go:139] Checking APIGroup: node.k8s.io
  I1203 19:05:20.088491 23 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I1203 19:05:20.088551 23 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I1203 19:05:20.088570 23 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I1203 19:05:20.088588 23 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I1203 19:05:20.090626 23 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I1203 19:05:20.090687 23 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I1203 19:05:20.090706 23 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I1203 19:05:20.090723 23 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I1203 19:05:20.092539 23 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I1203 19:05:20.092601 23 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  I1203 19:05:20.092621 23 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I1203 19:05:20.092740 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-1215" for this suite. @ 12/03/24 19:05:20.097
• [0.537 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 12/03/24 19:05:20.108
  I1203 19:05:20.108210 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename sched-preemption @ 12/03/24 19:05:20.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:05:20.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:05:20.139
  I1203 19:05:20.155643 23 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1203 19:06:20.163018 23 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 12/03/24 19:06:20.167
  I1203 19:06:20.167700 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename sched-preemption-path @ 12/03/24 19:06:20.17
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:06:20.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:06:20.2
  STEP: Finding an available node @ 12/03/24 19:06:20.205
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 12/03/24 19:06:20.205
  STEP: Explicitly delete pod here to free the resource it takes. @ 12/03/24 19:06:22.228
  I1203 19:06:22.241540 23 preemption.go:583] found a healthy node: nodea17
  I1203 19:06:28.312401 23 preemption.go:706] pods created so far: [1 1 1]
  I1203 19:06:28.312481 23 preemption.go:707] length of pods created so far: 3
  I1203 19:06:30.323756 23 preemption.go:724] pods created so far: [2 2 1]
  I1203 19:06:37.393049 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-2066" for this suite. @ 12/03/24 19:06:37.397
  I1203 19:06:37.405899 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4693" for this suite. @ 12/03/24 19:06:37.41
• [77.308 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 12/03/24 19:06:37.416
  I1203 19:06:37.416306 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename disruption @ 12/03/24 19:06:37.417
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:06:37.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:06:37.434
  STEP: Waiting for the pdb to be processed @ 12/03/24 19:06:37.442
  STEP: Updating PodDisruptionBudget status @ 12/03/24 19:06:39.448
  STEP: Waiting for all pods to be running @ 12/03/24 19:06:39.458
  I1203 19:06:39.463012 23 disruption.go:578] running pods: 0 < 1
  STEP: locating a running pod @ 12/03/24 19:06:41.464
  STEP: Waiting for the pdb to be processed @ 12/03/24 19:06:41.477
  STEP: Patching PodDisruptionBudget status @ 12/03/24 19:06:41.484
  STEP: Waiting for the pdb to be processed @ 12/03/24 19:06:41.511
  I1203 19:06:41.514813 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4590" for this suite. @ 12/03/24 19:06:41.519
• [4.109 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 12/03/24 19:06:41.526
  I1203 19:06:41.526039 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename secrets @ 12/03/24 19:06:41.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:06:41.539
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:06:41.543
  STEP: creating secret secrets-929/secret-test-93926ed2-6336-4109-8846-a0483579814f @ 12/03/24 19:06:41.547
  STEP: Creating a pod to test consume secrets @ 12/03/24 19:06:41.551
  STEP: Saw pod success @ 12/03/24 19:06:45.573
  I1203 19:06:45.576876 23 output.go:196] Trying to get logs from node nodea17 pod pod-configmaps-9ca9c342-6aa5-45c9-9118-9bbddaafba36 container env-test: <nil>
  STEP: delete the pod @ 12/03/24 19:06:45.597
  I1203 19:06:45.628797 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-929" for this suite. @ 12/03/24 19:06:45.633
• [4.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 12/03/24 19:06:45.64
  I1203 19:06:45.640519 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename events @ 12/03/24 19:06:45.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:06:45.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:06:45.662
  STEP: creating a test event @ 12/03/24 19:06:45.665
  STEP: listing all events in all namespaces @ 12/03/24 19:06:45.669
  STEP: patching the test event @ 12/03/24 19:06:45.678
  STEP: fetching the test event @ 12/03/24 19:06:45.683
  STEP: updating the test event @ 12/03/24 19:06:45.686
  STEP: getting the test event @ 12/03/24 19:06:45.695
  STEP: deleting the test event @ 12/03/24 19:06:45.7
  STEP: listing all events in all namespaces @ 12/03/24 19:06:45.706
  I1203 19:06:45.712669 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9573" for this suite. @ 12/03/24 19:06:45.716
• [0.080 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 12/03/24 19:06:45.72
  I1203 19:06:45.721004 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename disruption @ 12/03/24 19:06:45.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:06:45.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:06:45.738
  STEP: Waiting for the pdb to be processed @ 12/03/24 19:06:45.747
  STEP: Waiting for all pods to be running @ 12/03/24 19:06:47.776
  I1203 19:06:47.788784 23 disruption.go:578] running pods: 0 < 3
  I1203 19:06:49.786378 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2922" for this suite. @ 12/03/24 19:06:49.79
• [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 12/03/24 19:06:49.795
  I1203 19:06:49.795280 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename projected @ 12/03/24 19:06:49.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:06:49.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:06:49.811
  STEP: Creating configMap with name projected-configmap-test-volume-4059a292-ba14-483c-99f9-cceec81ca841 @ 12/03/24 19:06:49.816
  STEP: Creating a pod to test consume configMaps @ 12/03/24 19:06:49.821
  STEP: Saw pod success @ 12/03/24 19:06:53.845
  I1203 19:06:53.849560 23 output.go:196] Trying to get logs from node nodea17 pod pod-projected-configmaps-119156f3-c966-4369-86cb-a95c1fa4b33a container agnhost-container: <nil>
  STEP: delete the pod @ 12/03/24 19:06:53.857
  I1203 19:06:53.871841 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1404" for this suite. @ 12/03/24 19:06:53.876
• [4.087 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 12/03/24 19:06:53.882
  I1203 19:06:53.882849 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename projected @ 12/03/24 19:06:53.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:06:53.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:06:53.899
  STEP: Creating configMap with name projected-configmap-test-volume-42d5c4c0-0aa8-4fdb-b213-7ee32e60ca83 @ 12/03/24 19:06:53.903
  STEP: Creating a pod to test consume configMaps @ 12/03/24 19:06:53.907
  STEP: Saw pod success @ 12/03/24 19:06:57.933
  I1203 19:06:57.937492 23 output.go:196] Trying to get logs from node nodeb14 pod pod-projected-configmaps-c4ac4e24-a6d4-45e3-91de-03de5875a3ed container agnhost-container: <nil>
  STEP: delete the pod @ 12/03/24 19:06:57.959
  I1203 19:06:57.977662 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7395" for this suite. @ 12/03/24 19:06:57.983
• [4.107 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 12/03/24 19:06:57.989
  I1203 19:06:57.989919 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename field-validation @ 12/03/24 19:06:57.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:06:58.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:06:58.009
  STEP: apply creating a deployment @ 12/03/24 19:06:58.014
  I1203 19:06:58.029729 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6934" for this suite. @ 12/03/24 19:06:58.033
• [0.049 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 12/03/24 19:06:58.039
  I1203 19:06:58.039973 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename emptydir @ 12/03/24 19:06:58.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:06:58.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:06:58.056
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 12/03/24 19:06:58.059
  STEP: Saw pod success @ 12/03/24 19:07:02.08
  I1203 19:07:02.084029 23 output.go:196] Trying to get logs from node nodea17 pod pod-55622193-40bb-407b-8651-008d48acf5d1 container test-container: <nil>
  STEP: delete the pod @ 12/03/24 19:07:02.091
  I1203 19:07:02.104063 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4570" for this suite. @ 12/03/24 19:07:02.108
• [4.074 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 12/03/24 19:07:02.113
  I1203 19:07:02.113909 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename emptydir @ 12/03/24 19:07:02.115
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:07:02.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:07:02.131
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 12/03/24 19:07:02.135
  STEP: Saw pod success @ 12/03/24 19:07:06.157
  I1203 19:07:06.160272 23 output.go:196] Trying to get logs from node nodea17 pod pod-a4045958-01dd-4812-93ab-d893c74db6ee container test-container: <nil>
  STEP: delete the pod @ 12/03/24 19:07:06.165
  I1203 19:07:06.178771 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8601" for this suite. @ 12/03/24 19:07:06.183
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 12/03/24 19:07:06.19
  I1203 19:07:06.190480 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename cronjob @ 12/03/24 19:07:06.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:07:06.206
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:07:06.21
  STEP: Creating a suspended cronjob @ 12/03/24 19:07:06.215
  STEP: Ensuring no jobs are scheduled @ 12/03/24 19:07:06.223
  STEP: Ensuring no job exists by listing jobs explicitly @ 12/03/24 19:12:06.224
  STEP: Removing cronjob @ 12/03/24 19:12:06.228
  I1203 19:12:06.235601 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8505" for this suite. @ 12/03/24 19:12:06.241
• [300.056 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 12/03/24 19:12:06.246
  I1203 19:12:06.246544 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename webhook @ 12/03/24 19:12:06.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:12:06.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:12:06.267
  STEP: Setting up server cert @ 12/03/24 19:12:06.288
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/03/24 19:12:06.904
  STEP: Deploying the webhook pod @ 12/03/24 19:12:06.913
  STEP: Wait for the deployment to be ready @ 12/03/24 19:12:06.928
  I1203 19:12:06.936231 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/03/24 19:12:08.95
  STEP: Verifying the service has paired with the endpoint @ 12/03/24 19:12:08.965
  I1203 19:12:09.965960 23 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1203 19:12:09.975612 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-78-crds.webhook.example.com via the AdmissionRegistration API @ 12/03/24 19:12:10.492
  STEP: Creating a custom resource that should be mutated by the webhook @ 12/03/24 19:12:10.516
  I1203 19:12:13.137714 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4744" for this suite. @ 12/03/24 19:12:13.143
  STEP: Destroying namespace "webhook-markers-9229" for this suite. @ 12/03/24 19:12:13.15
• [6.910 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:453
  STEP: Creating a kubernetes client @ 12/03/24 19:12:13.156
  I1203 19:12:13.156485 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename resourcequota @ 12/03/24 19:12:13.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:12:13.172
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:12:13.177
  STEP: Counting existing ResourceQuota @ 12/03/24 19:12:13.182
  STEP: Creating a ResourceQuota @ 12/03/24 19:12:18.185
  STEP: Ensuring resource quota status is calculated @ 12/03/24 19:12:18.19
  STEP: Creating a ReplicaSet @ 12/03/24 19:12:20.196
  STEP: Ensuring resource quota status captures replicaset creation @ 12/03/24 19:12:20.213
  STEP: Deleting a ReplicaSet @ 12/03/24 19:12:22.22
  STEP: Ensuring resource quota status released usage @ 12/03/24 19:12:22.227
  I1203 19:12:24.233514 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-204" for this suite. @ 12/03/24 19:12:24.239
• [11.089 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 12/03/24 19:12:24.246
  I1203 19:12:24.246708 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename projected @ 12/03/24 19:12:24.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:12:24.263
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:12:24.268
  STEP: Creating a pod to test downward API volume plugin @ 12/03/24 19:12:24.273
  STEP: Saw pod success @ 12/03/24 19:12:26.289
  I1203 19:12:26.292965 23 output.go:196] Trying to get logs from node nodea17 pod downwardapi-volume-c2fe208f-d4b3-46d9-b2bd-16f614b3dfca container client-container: <nil>
  STEP: delete the pod @ 12/03/24 19:12:26.315
  I1203 19:12:26.330944 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2831" for this suite. @ 12/03/24 19:12:26.335
• [2.094 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 12/03/24 19:12:26.34
  I1203 19:12:26.340849 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename gc @ 12/03/24 19:12:26.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:12:26.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:12:26.357
  STEP: create the deployment @ 12/03/24 19:12:26.361
  W1203 19:12:26.366168      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 12/03/24 19:12:26.366
  STEP: delete the deployment @ 12/03/24 19:12:26.37
  STEP: wait for all rs to be garbage collected @ 12/03/24 19:12:26.38
  STEP: expected 0 rs, got 1 rs @ 12/03/24 19:12:26.387
  STEP: expected 0 pods, got 2 pods @ 12/03/24 19:12:26.392
  STEP: Gathering metrics @ 12/03/24 19:12:26.892
  I1203 19:12:27.014849 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1203 19:12:27.015067 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3921" for this suite. @ 12/03/24 19:12:27.02
• [0.685 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 12/03/24 19:12:27.025
  I1203 19:12:27.025817 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename secrets @ 12/03/24 19:12:27.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:12:27.04
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:12:27.044
  STEP: Creating secret with name secret-test-map-5ea44a5b-52ea-45a4-93b6-a6d622750dd7 @ 12/03/24 19:12:27.048
  STEP: Creating a pod to test consume secrets @ 12/03/24 19:12:27.053
  STEP: Saw pod success @ 12/03/24 19:12:31.077
  I1203 19:12:31.081884 23 output.go:196] Trying to get logs from node nodea17 pod pod-secrets-9af71408-d007-4c6e-95fc-4de453db4f38 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/03/24 19:12:31.089
  I1203 19:12:31.112912 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2808" for this suite. @ 12/03/24 19:12:31.117
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 12/03/24 19:12:31.125
  I1203 19:12:31.125442 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename configmap @ 12/03/24 19:12:31.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:12:31.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:12:31.148
  STEP: Creating configMap with name configmap-test-upd-1c6a9315-a040-435f-b1c3-e0ff8ba17d52 @ 12/03/24 19:12:31.156
  STEP: Creating the pod @ 12/03/24 19:12:31.16
  STEP: Updating configmap configmap-test-upd-1c6a9315-a040-435f-b1c3-e0ff8ba17d52 @ 12/03/24 19:12:33.194
  STEP: waiting to observe update in volume @ 12/03/24 19:12:33.199
  I1203 19:14:05.708350 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9644" for this suite. @ 12/03/24 19:14:05.714
• [94.596 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 12/03/24 19:14:05.722
  I1203 19:14:05.722358 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename var-expansion @ 12/03/24 19:14:05.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:14:05.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:14:05.747
  STEP: Creating a pod to test substitution in volume subpath @ 12/03/24 19:14:05.751
  STEP: Saw pod success @ 12/03/24 19:14:09.776
  I1203 19:14:09.780743 23 output.go:196] Trying to get logs from node nodea17 pod var-expansion-9f09c143-4ece-463a-8f82-4d178899bb79 container dapi-container: <nil>
  STEP: delete the pod @ 12/03/24 19:14:09.788
  I1203 19:14:09.803526 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8360" for this suite. @ 12/03/24 19:14:09.808
• [4.091 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 12/03/24 19:14:09.813
  I1203 19:14:09.813917 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename emptydir @ 12/03/24 19:14:09.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:14:09.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:14:09.832
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 12/03/24 19:14:09.836
  STEP: Saw pod success @ 12/03/24 19:14:13.858
  I1203 19:14:13.862471 23 output.go:196] Trying to get logs from node nodea17 pod pod-81df7a70-6534-422c-a69d-d42e03be0827 container test-container: <nil>
  STEP: delete the pod @ 12/03/24 19:14:13.869
  I1203 19:14:13.884224 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3473" for this suite. @ 12/03/24 19:14:13.889
• [4.081 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 12/03/24 19:14:13.894
  I1203 19:14:13.894905 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename configmap @ 12/03/24 19:14:13.896
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:14:13.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:14:13.914
  STEP: Creating configMap with name configmap-test-volume-4b437178-24f2-419a-b135-d388a1b52999 @ 12/03/24 19:14:13.918
  STEP: Creating a pod to test consume configMaps @ 12/03/24 19:14:13.923
  STEP: Saw pod success @ 12/03/24 19:14:17.953
  I1203 19:14:17.957754 23 output.go:196] Trying to get logs from node nodea17 pod pod-configmaps-4862d644-0d28-4e52-b1e0-4e82e5870e22 container agnhost-container: <nil>
  STEP: delete the pod @ 12/03/24 19:14:17.965
  I1203 19:14:17.977919 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4914" for this suite. @ 12/03/24 19:14:17.982
• [4.094 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 12/03/24 19:14:17.988
  I1203 19:14:17.988911 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename var-expansion @ 12/03/24 19:14:17.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:14:18.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:14:18.008
  STEP: Creating a pod to test substitution in container's args @ 12/03/24 19:14:18.012
  STEP: Saw pod success @ 12/03/24 19:14:22.035
  I1203 19:14:22.039642 23 output.go:196] Trying to get logs from node nodea17 pod var-expansion-964bc0bc-1a81-47c2-a700-7ab1df595bf6 container dapi-container: <nil>
  STEP: delete the pod @ 12/03/24 19:14:22.046
  I1203 19:14:22.057873 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1612" for this suite. @ 12/03/24 19:14:22.062
• [4.081 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:330
  STEP: Creating a kubernetes client @ 12/03/24 19:14:22.07
  I1203 19:14:22.070269 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename resourcequota @ 12/03/24 19:14:22.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:14:22.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:14:22.091
  STEP: Counting existing ResourceQuota @ 12/03/24 19:14:39.102
  STEP: Creating a ResourceQuota @ 12/03/24 19:14:44.107
  STEP: Ensuring resource quota status is calculated @ 12/03/24 19:14:44.113
  STEP: Creating a ConfigMap @ 12/03/24 19:14:46.119
  STEP: Ensuring resource quota status captures configMap creation @ 12/03/24 19:14:46.133
  STEP: Deleting a ConfigMap @ 12/03/24 19:14:48.138
  STEP: Ensuring resource quota status released usage @ 12/03/24 19:14:48.142
  I1203 19:14:50.148890 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8399" for this suite. @ 12/03/24 19:14:50.154
• [28.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 12/03/24 19:14:50.163
  I1203 19:14:50.163329 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename configmap @ 12/03/24 19:14:50.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:14:50.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:14:50.181
  STEP: creating a ConfigMap @ 12/03/24 19:14:50.186
  STEP: fetching the ConfigMap @ 12/03/24 19:14:50.192
  STEP: patching the ConfigMap @ 12/03/24 19:14:50.195
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 12/03/24 19:14:50.199
  STEP: deleting the ConfigMap by collection with a label selector @ 12/03/24 19:14:50.203
  STEP: listing all ConfigMaps in test namespace @ 12/03/24 19:14:50.21
  I1203 19:14:50.213357 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9441" for this suite. @ 12/03/24 19:14:50.217
• [0.060 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 12/03/24 19:14:50.223
  I1203 19:14:50.223151 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename deployment @ 12/03/24 19:14:50.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:14:50.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:14:50.24
  I1203 19:14:50.253871 23 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  I1203 19:14:55.257782 23 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/03/24 19:14:55.257
  I1203 19:14:55.257933 23 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  I1203 19:14:57.264642 23 deployment.go:921] Creating deployment "test-rollover-deployment"
  I1203 19:14:57.275687 23 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  I1203 19:14:59.283942 23 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I1203 19:14:59.291989 23 deployment.go:943] Ensure that both replica sets have 1 created replica
  I1203 19:14:59.298611 23 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I1203 19:14:59.308287 23 deployment.go:313] Updating deployment test-rollover-deployment
  I1203 19:14:59.308356 23 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  I1203 19:15:01.317321 23 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I1203 19:15:01.325619 23 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I1203 19:15:01.333771 23 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1203 19:15:01.333887 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.December, 3, 19, 14, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 14, 57, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 3, 19, 15, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 14, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1203 19:15:03.343660 23 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1203 19:15:03.343771 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.December, 3, 19, 14, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 14, 57, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 3, 19, 15, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 14, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1203 19:15:05.343530 23 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1203 19:15:05.343658 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.December, 3, 19, 14, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 14, 57, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 3, 19, 15, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 14, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1203 19:15:07.345866 23 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1203 19:15:07.345999 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.December, 3, 19, 14, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 14, 57, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 3, 19, 15, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 14, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1203 19:15:09.345422 23 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1203 19:15:09.345513 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.December, 3, 19, 14, 57, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 14, 57, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 3, 19, 15, 0, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 14, 57, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1203 19:15:11.343495 23 deployment.go:94] 
  I1203 19:15:11.343566 23 deployment.go:974] Ensure that both old replica sets have no replicas
  I1203 19:15:11.353296 23 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5548",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6fef1c0b-8919-40a4-bc3a-ee3ec00050f5",
      ResourceVersion: (string) (len=4) "4606",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868850097,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850110,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850110,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850097,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-679c966bdf\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1203 19:15:11.360494 23 deployment.go:39] New ReplicaSet "test-rollover-deployment-679c966bdf" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-679c966bdf",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5548",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0db94752-92e4-4b2f-a1ba-04d0daec3d86",
      ResourceVersion: (string) (len=4) "4596",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868850099,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "6fef1c0b-8919-40a4-bc3a-ee3ec00050f5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 66 65 66 31 63  30 62 2d 38 39 31 39 2d  |\"6fef1c0b-8919-|
              00000120  34 30 61 34 2d 62 63 33  61 2d 65 65 33 65 63 30  |40a4-bc3a-ee3ec0|
              00000130  30 30 35 30 66 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0050f5\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850110,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1203 19:15:11.362680 23 deployment.go:44] All old ReplicaSets of Deployment "test-rollover-deployment":
  I1203 19:15:11.363100 23 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5548",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3ef16e02-48aa-47d2-817e-675a9aa7074c",
      ResourceVersion: (string) (len=4) "4605",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868850090,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "6fef1c0b-8919-40a4-bc3a-ee3ec00050f5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850090,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850110,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  36 66 65 66 31 63 30 62  2d 38 39 31 39 2d 34 30  |6fef1c0b-8919-40|
              000000c0  61 34 2d 62 63 33 61 2d  65 65 33 65 63 30 30 30  |a4-bc3a-ee3ec000|
              000000d0  35 30 66 35 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |50f5\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850110,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "pod": (string) (len=5) "httpd",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1203 19:15:11.364817 23 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-65bd487b4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5548",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "514b01df-6841-43cf-9441-5bc79761120b",
      ResourceVersion: (string) (len=4) "4565",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868850097,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "65bd487b4b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "6fef1c0b-8919-40a4-bc3a-ee3ec00050f5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 66 65 66 31 63  30 62 2d 38 39 31 39 2d  |\"6fef1c0b-8919-|
              00000120  34 30 61 34 2d 62 63 33  61 2d 65 65 33 65 63 30  |40a4-bc3a-ee3ec0|
              00000130  30 30 35 30 66 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0050f5\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "65bd487b4b",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "65bd487b4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1203 19:15:11.369852 23 deployment.go:67] Pod "test-rollover-deployment-679c966bdf-k2msf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-679c966bdf-k2msf",
      GenerateName: (string) (len=36) "test-rollover-deployment-679c966bdf-",
      Namespace: (string) (len=15) "deployment-5548",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b0c8e1d2-54b3-4692-a09f-c350dce1db04",
      ResourceVersion: (string) (len=4) "4578",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868850099,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-679c966bdf",
          UID: (types.UID) (len=36) "0db94752-92e4-4b2f-a1ba-04d0daec3d86",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 64  62 39 34 37 35 32 2d 39  |d\":\"0db94752-9|
              00000090  32 65 34 2d 34 62 32 66  2d 61 31 62 61 2d 30 34  |2e4-4b2f-a1ba-04|
              000000a0  64 30 64 61 65 63 33 64  38 36 5c 22 7d 22 3a 7b  |d0daec3d86\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 34  36 5c 22 7d 22 3a 7b 22  |.244.1.46\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zsb9l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zsb9l",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea17",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850100,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.100.37",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.100.37"
        }
      },
      PodIP: (string) (len=11) "10.244.1.46",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.46"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868850099,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63868850099,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://4f8ab0a1f1569e0a7aab12a77e1606faa2af569e20727c36432fa8eaaaa84d93",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1203 19:15:11.372109 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5548" for this suite. @ 12/03/24 19:15:11.375
• [21.157 seconds]
------------------------------
SS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 12/03/24 19:15:11.38
  I1203 19:15:11.380607 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename csi-storageclass @ 12/03/24 19:15:11.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:15:11.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:15:11.398
  STEP: Creating a StorageClass @ 12/03/24 19:15:11.402
  STEP: Get StorageClass "e2e-9ld4q" @ 12/03/24 19:15:11.407
  STEP: Patching the StorageClass "e2e-9ld4q" @ 12/03/24 19:15:11.41
  STEP: Delete StorageClass "e2e-9ld4q" @ 12/03/24 19:15:11.417
  STEP: Confirm deletion of StorageClass "e2e-9ld4q" @ 12/03/24 19:15:11.422
  STEP: Create a replacement StorageClass @ 12/03/24 19:15:11.425
  STEP: Updating StorageClass "e2e-v2-n22hg" @ 12/03/24 19:15:11.432
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-n22hg=updated" @ 12/03/24 19:15:11.439
  STEP: Deleting StorageClass "e2e-v2-n22hg" via DeleteCollection @ 12/03/24 19:15:11.441
  STEP: Confirm deletion of StorageClass "e2e-v2-n22hg" @ 12/03/24 19:15:11.449
  I1203 19:15:11.452269 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-5726" for this suite. @ 12/03/24 19:15:11.455
• [0.079 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 12/03/24 19:15:11.46
  I1203 19:15:11.460196 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename projected @ 12/03/24 19:15:11.461
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:15:11.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:15:11.479
  STEP: Creating the pod @ 12/03/24 19:15:11.483
  I1203 19:15:14.028931 23 pod_client.go:141] Successfully updated pod "annotationupdate49099301-8de8-4c2b-83f9-9e6b173910ce"
  I1203 19:15:18.055202 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5290" for this suite. @ 12/03/24 19:15:18.06
• [6.606 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:754
  STEP: Creating a kubernetes client @ 12/03/24 19:15:18.066
  I1203 19:15:18.066796 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename statefulset @ 12/03/24 19:15:18.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:15:18.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:15:18.087
  STEP: Creating service test in namespace statefulset-6484 @ 12/03/24 19:15:18.091
  STEP: Creating stateful set ss in namespace statefulset-6484 @ 12/03/24 19:15:18.096
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-6484 @ 12/03/24 19:15:18.103
  I1203 19:15:18.107088 23 wait.go:40] Found 0 stateful pods, waiting for 1
  I1203 19:15:28.110876 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 12/03/24 19:15:28.11
  I1203 19:15:28.114888 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=statefulset-6484 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1203 19:15:28.282296 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1203 19:15:28.282375 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1203 19:15:28.282397 23 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1203 19:15:28.286169 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I1203 19:15:38.288721 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1203 19:15:38.288807 23 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1203 19:15:38.306547 23 resource.go:168] POD   NODE     PHASE    GRACE  CONDITIONS
  I1203 19:15:38.306675 23 resource.go:175] ss-0  nodea17  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-12-03 19:15:19 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-03 19:15:18 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-12-03 19:15:28 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-12-03 19:15:28 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-03 19:15:18 +0000 UTC  }]
  I1203 19:15:38.306697 23 resource.go:178] 
  I1203 19:15:38.306718 23 statefulset.go:2413] StatefulSet ss has not reached scale 3, at 1
  I1203 19:15:39.312380 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.99604318s
  I1203 19:15:40.317998 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.990337986s
  I1203 19:15:41.324352 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.983992484s
  I1203 19:15:42.330277 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.978362386s
  I1203 19:15:43.335994 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.972367515s
  I1203 19:15:44.341668 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.966707536s
  I1203 19:15:45.347031 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.960458317s
  I1203 19:15:46.352709 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.955580965s
  I1203 19:15:47.358491 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 949.968395ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-6484 @ 12/03/24 19:15:48.358
  I1203 19:15:48.365757 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=statefulset-6484 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1203 19:15:48.529558 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1203 19:15:48.529625 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1203 19:15:48.529649 23 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1203 19:15:48.529745 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=statefulset-6484 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1203 19:15:48.692897 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I1203 19:15:48.692973 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1203 19:15:48.693001 23 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1203 19:15:48.693083 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=statefulset-6484 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1203 19:15:48.902047 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I1203 19:15:48.902131 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1203 19:15:48.902160 23 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1203 19:15:48.906356 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  I1203 19:15:58.911187 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1203 19:15:58.911288 23 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I1203 19:15:58.911316 23 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 12/03/24 19:15:58.911
  I1203 19:15:58.915187 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=statefulset-6484 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1203 19:15:59.089789 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1203 19:15:59.089842 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1203 19:15:59.089859 23 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1203 19:15:59.089911 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=statefulset-6484 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1203 19:15:59.263003 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1203 19:15:59.263064 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1203 19:15:59.263083 23 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1203 19:15:59.263161 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=statefulset-6484 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1203 19:15:59.474675 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1203 19:15:59.474764 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1203 19:15:59.474792 23 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1203 19:15:59.474815 23 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1203 19:15:59.478125 23 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 2
  I1203 19:16:09.489824 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1203 19:16:09.489898 23 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I1203 19:16:09.489922 23 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I1203 19:16:09.505203 23 resource.go:168] POD   NODE     PHASE    GRACE  CONDITIONS
  I1203 19:16:09.505333 23 resource.go:175] ss-0  nodea17  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-12-03 19:15:19 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-03 19:15:18 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-12-03 19:15:59 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-12-03 19:15:59 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-03 19:15:18 +0000 UTC  }]
  I1203 19:16:09.505385 23 resource.go:175] ss-1  nodea17  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-12-03 19:15:39 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-03 19:15:38 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-12-03 19:15:59 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-12-03 19:15:59 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-03 19:15:38 +0000 UTC  }]
  I1203 19:16:09.505431 23 resource.go:175] ss-2  nodeb14  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-12-03 19:15:45 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-03 19:15:38 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-12-03 19:15:59 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-12-03 19:15:59 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-03 19:15:38 +0000 UTC  }]
  I1203 19:16:09.505454 23 resource.go:178] 
  I1203 19:16:09.505474 23 statefulset.go:2413] StatefulSet ss has not reached scale 0, at 3
  I1203 19:16:10.511396 23 resource.go:168] POD   NODE     PHASE      GRACE  CONDITIONS
  I1203 19:16:10.511521 23 resource.go:175] ss-0  nodea17  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-12-03 19:16:09 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-03 19:15:18 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-12-03 19:15:59 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-12-03 19:15:59 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-03 19:15:18 +0000 UTC  }]
  I1203 19:16:10.511572 23 resource.go:175] ss-1  nodea17  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-12-03 19:16:09 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-03 19:15:38 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-12-03 19:15:59 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-12-03 19:15:59 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-03 19:15:38 +0000 UTC  }]
  I1203 19:16:10.511620 23 resource.go:175] ss-2  nodeb14  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-12-03 19:16:10 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-03 19:15:38 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-12-03 19:15:59 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-12-03 19:15:59 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-03 19:15:38 +0000 UTC  }]
  I1203 19:16:10.511636 23 resource.go:178] 
  I1203 19:16:10.511654 23 statefulset.go:2413] StatefulSet ss has not reached scale 0, at 3
  I1203 19:16:11.516218 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 7.989349792s
  I1203 19:16:12.520697 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 6.984746018s
  I1203 19:16:13.525989 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 5.98032938s
  I1203 19:16:14.530577 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 4.975048543s
  I1203 19:16:15.534906 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 3.970484393s
  I1203 19:16:16.539472 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 2.966152663s
  I1203 19:16:17.544164 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 1.961563302s
  I1203 19:16:18.549045 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 956.887933ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-6484 @ 12/03/24 19:16:19.549
  I1203 19:16:19.552843 23 rest.go:150] Scaling statefulset ss to 0
  I1203 19:16:19.559494 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1203 19:16:19.562986 23 statefulset.go:138] Deleting all statefulset in ns statefulset-6484
  I1203 19:16:19.567022 23 rest.go:150] Scaling statefulset ss to 0
  I1203 19:16:19.573806 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1203 19:16:19.577161 23 rest.go:88] Deleting statefulset ss
  I1203 19:16:19.588617 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6484" for this suite. @ 12/03/24 19:16:19.592
• [61.532 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 12/03/24 19:16:19.599
  I1203 19:16:19.599473 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename downward-api @ 12/03/24 19:16:19.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:16:19.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:16:19.616
  STEP: Creating a pod to test downward API volume plugin @ 12/03/24 19:16:19.621
  STEP: Saw pod success @ 12/03/24 19:16:23.645
  I1203 19:16:23.648740 23 output.go:196] Trying to get logs from node nodea17 pod downwardapi-volume-17e0b41c-ba7f-49c9-9248-a444669b404d container client-container: <nil>
  STEP: delete the pod @ 12/03/24 19:16:23.654
  I1203 19:16:23.669316 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9297" for this suite. @ 12/03/24 19:16:23.673
• [4.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 12/03/24 19:16:23.679
  I1203 19:16:23.679860 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename daemonsets @ 12/03/24 19:16:23.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:16:23.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:16:23.698
  I1203 19:16:23.717851 23 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/03/24 19:16:23.725
  I1203 19:16:23.729670 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1203 19:16:23.733667 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1203 19:16:23.733737 23 fixtures.go:130] Node nodea17 is running 0 daemon pod, expected 1
  I1203 19:16:24.731107 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1203 19:16:24.734740 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1203 19:16:24.734801 23 fixtures.go:130] Node nodeb14 is running 0 daemon pod, expected 1
  I1203 19:16:25.731510 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1203 19:16:25.735533 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1203 19:16:25.735614 23 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Update daemon pods image. @ 12/03/24 19:16:25.75
  STEP: Check that daemon pods images are updated. @ 12/03/24 19:16:25.77
  I1203 19:16:25.773987 23 daemon_set.go:1178] Wrong image for pod: daemon-set-svc4q. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1203 19:16:25.774055 23 daemon_set.go:1178] Wrong image for pod: daemon-set-wfnbn. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1203 19:16:25.777873 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1203 19:16:26.775433 23 daemon_set.go:1183] Pod daemon-set-j5kkz is not available
  I1203 19:16:26.775511 23 daemon_set.go:1178] Wrong image for pod: daemon-set-wfnbn. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1203 19:16:26.780101 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1203 19:16:27.781061 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1203 19:16:28.774782 23 daemon_set.go:1183] Pod daemon-set-9cm64 is not available
  I1203 19:16:28.778979 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 12/03/24 19:16:28.779
  I1203 19:16:28.782973 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1203 19:16:28.786258 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1203 19:16:28.786322 23 fixtures.go:130] Node nodeb14 is running 0 daemon pod, expected 1
  I1203 19:16:29.786201 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1203 19:16:29.790396 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1203 19:16:29.790458 23 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 12/03/24 19:16:29.811
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1774, will wait for the garbage collector to delete the pods @ 12/03/24 19:16:29.811
  I1203 19:16:29.872996 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.457328ms
  I1203 19:16:29.973488 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.484839ms
  I1203 19:16:30.877974 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1203 19:16:30.878045 23 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1203 19:16:30.881850 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"5099"},"items":null}

  I1203 19:16:30.886424 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"5099"},"items":null}

  I1203 19:16:30.899531 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1774" for this suite. @ 12/03/24 19:16:30.903
• [7.230 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:707
  STEP: Creating a kubernetes client @ 12/03/24 19:16:30.91
  I1203 19:16:30.910403 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename sched-pred @ 12/03/24 19:16:30.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:16:30.923
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:16:30.927
  I1203 19:16:30.932421 23 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1203 19:16:30.941161 23 util.go:400] Waiting for terminating namespaces to be deleted...
  I1203 19:16:30.944532 23 predicates.go:121] 
  Logging pods the apiserver thinks is on node nodea17 before test
  I1203 19:16:30.952131 23 predicates.go:887] kube-flannel-ds-d4gxd from kube-flannel started at 2024-12-03 18:59:59 +0000 UTC (1 container statuses recorded)
  I1203 19:16:30.952192 23 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I1203 19:16:30.952233 23 predicates.go:887] kube-proxy-5qrm9 from kube-system started at 2024-12-03 18:59:59 +0000 UTC (1 container statuses recorded)
  I1203 19:16:30.952253 23 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I1203 19:16:30.952278 23 predicates.go:887] sonobuoy from sonobuoy started at 2024-12-03 19:02:18 +0000 UTC (1 container statuses recorded)
  I1203 19:16:30.952297 23 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I1203 19:16:30.952347 23 predicates.go:887] sonobuoy-e2e-job-b4c9b24bd0eb40b5 from sonobuoy started at 2024-12-03 19:02:24 +0000 UTC (2 container statuses recorded)
  I1203 19:16:30.952367 23 predicates.go:889] 	Container e2e ready: true, restart count 0
  I1203 19:16:30.952387 23 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I1203 19:16:30.952409 23 predicates.go:887] sonobuoy-systemd-logs-daemon-set-2a7ed7b0c9d74150-7w6fj from sonobuoy started at 2024-12-03 19:02:24 +0000 UTC (2 container statuses recorded)
  I1203 19:16:30.952436 23 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I1203 19:16:30.952467 23 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I1203 19:16:30.952488 23 predicates.go:121] 
  Logging pods the apiserver thinks is on node nodeb14 before test
  I1203 19:16:30.959245 23 predicates.go:887] kube-flannel-ds-67rcm from kube-flannel started at 2024-12-03 19:00:11 +0000 UTC (1 container statuses recorded)
  I1203 19:16:30.959320 23 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I1203 19:16:30.959343 23 predicates.go:887] kube-proxy-vp99b from kube-system started at 2024-12-03 19:00:11 +0000 UTC (1 container statuses recorded)
  I1203 19:16:30.959359 23 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I1203 19:16:30.959377 23 predicates.go:887] sonobuoy-systemd-logs-daemon-set-2a7ed7b0c9d74150-wqtb5 from sonobuoy started at 2024-12-03 19:02:24 +0000 UTC (2 container statuses recorded)
  I1203 19:16:30.959393 23 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I1203 19:16:30.959408 23 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 12/03/24 19:16:30.959
  STEP: Explicitly delete pod here to free the resource it takes. @ 12/03/24 19:16:32.983
  STEP: Trying to apply a random label on the found node. @ 12/03/24 19:16:33.002
  STEP: verifying the node has the label kubernetes.io/e2e-2f91c95b-6295-4635-afc4-bd05bd355882 95 @ 12/03/24 19:16:33.012
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 12/03/24 19:16:33.018
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.100.37 on the node which pod4 resides and expect not scheduled @ 12/03/24 19:16:35.033
  STEP: removing the label kubernetes.io/e2e-2f91c95b-6295-4635-afc4-bd05bd355882 off the node nodea17 @ 12/03/24 19:21:35.047
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-2f91c95b-6295-4635-afc4-bd05bd355882 @ 12/03/24 19:21:35.061
  I1203 19:21:35.065391 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8535" for this suite. @ 12/03/24 19:21:35.069
• [304.164 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 12/03/24 19:21:35.077
  I1203 19:21:35.077068 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename deployment @ 12/03/24 19:21:35.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:21:35.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:21:35.097
  STEP: creating a Deployment @ 12/03/24 19:21:35.104
  STEP: waiting for Deployment to be created @ 12/03/24 19:21:35.108
  STEP: waiting for all Replicas to be Ready @ 12/03/24 19:21:35.11
  I1203 19:21:35.112547 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1203 19:21:35.112588 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1203 19:21:35.120201 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1203 19:21:35.120260 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1203 19:21:35.133093 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1203 19:21:35.133126 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1203 19:21:35.153524 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1203 19:21:35.154241 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1203 19:21:36.517301 23 deployment.go:246] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I1203 19:21:36.517374 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I1203 19:21:36.709548 23 deployment.go:248] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 12/03/24 19:21:36.709
  I1203 19:21:36.726368 23 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 12/03/24 19:21:36.726
  I1203 19:21:36.729254 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 0
  I1203 19:21:36.729309 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 0
  I1203 19:21:36.729356 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 0
  I1203 19:21:36.729381 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 0
  I1203 19:21:36.729757 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 0
  I1203 19:21:36.729813 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 0
  I1203 19:21:36.729857 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 0
  I1203 19:21:36.730015 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 0
  I1203 19:21:36.730210 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 1
  I1203 19:21:36.730251 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 1
  I1203 19:21:36.730423 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 2
  I1203 19:21:36.730461 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 2
  I1203 19:21:36.730591 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 2
  I1203 19:21:36.730657 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 2
  I1203 19:21:36.737313 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 2
  I1203 19:21:36.737354 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 2
  I1203 19:21:36.751831 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 2
  I1203 19:21:36.751884 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 2
  I1203 19:21:36.770431 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 1
  I1203 19:21:36.770480 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 1
  I1203 19:21:36.774698 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 1
  I1203 19:21:36.774770 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 1
  I1203 19:21:37.535282 23 deployment.go:309] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 2
  I1203 19:21:37.535342 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 2
  I1203 19:21:37.552339 23 deployment.go:311] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 1
  STEP: listing Deployments @ 12/03/24 19:21:37.552
  I1203 19:21:37.556542 23 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 12/03/24 19:21:37.556
  I1203 19:21:37.575292 23 deployment.go:360] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 12/03/24 19:21:37.575
  I1203 19:21:37.582956 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1203 19:21:37.585776 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1203 19:21:37.607290 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1203 19:21:37.621848 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1203 19:21:37.628091 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1203 19:21:38.535624 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1203 19:21:38.561330 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1203 19:21:38.569224 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1203 19:21:38.574983 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1203 19:21:39.754833 23 deployment.go:389] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 12/03/24 19:21:39.776
  STEP: fetching the DeploymentStatus @ 12/03/24 19:21:39.786
  I1203 19:21:39.793341 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 1
  I1203 19:21:39.793517 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 1
  I1203 19:21:39.793566 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 1
  I1203 19:21:39.793644 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 1
  I1203 19:21:39.793694 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 1
  I1203 19:21:39.793913 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 2
  I1203 19:21:39.793960 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 2
  I1203 19:21:39.793984 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 2
  I1203 19:21:39.794149 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 2
  I1203 19:21:39.794184 23 deployment.go:449] observed Deployment test-deployment in namespace deployment-7105 with ReadyReplicas 3
  STEP: deleting the Deployment @ 12/03/24 19:21:39.794
  I1203 19:21:39.803262 23 deployment.go:475] observed event type MODIFIED
  I1203 19:21:39.803450 23 deployment.go:475] observed event type MODIFIED
  I1203 19:21:39.803476 23 deployment.go:475] observed event type MODIFIED
  I1203 19:21:39.803495 23 deployment.go:475] observed event type MODIFIED
  I1203 19:21:39.803690 23 deployment.go:475] observed event type MODIFIED
  I1203 19:21:39.803982 23 deployment.go:475] observed event type MODIFIED
  I1203 19:21:39.804163 23 deployment.go:475] observed event type MODIFIED
  I1203 19:21:39.804326 23 deployment.go:475] observed event type MODIFIED
  I1203 19:21:39.804528 23 deployment.go:475] observed event type MODIFIED
  I1203 19:21:39.804758 23 deployment.go:475] observed event type MODIFIED
  I1203 19:21:39.804915 23 deployment.go:475] observed event type MODIFIED
  I1203 19:21:39.805064 23 deployment.go:475] observed event type MODIFIED
  I1203 19:21:39.805237 23 deployment.go:475] observed event type MODIFIED
  I1203 19:21:39.808154 23 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I1203 19:21:39.811985 23 deployment.go:657] ReplicaSet "test-deployment-5bf4984755":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-5bf4984755",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7105",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0993e554-a3d9-4065-99f6-318e5ef40d6f",
      ResourceVersion: (string) (len=4) "5686",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868850495,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5bf4984755",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "cf7e7ac7-1427-4bd5-aab3-012f868f539d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850497,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 63 66 37 65  37 61 63 37 2d 31 34 32  |":\"cf7e7ac7-142|
              00000130  37 2d 34 62 64 35 2d 61  61 62 33 2d 30 31 32 66  |7-4bd5-aab3-012f|
              00000140  38 36 38 66 35 33 39 64  5c 22 7d 22 3a 7b 7d 7d  |868f539d\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850497,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "5bf4984755",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "5bf4984755",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I1203 19:21:39.817515 23 deployment.go:657] ReplicaSet "test-deployment-65fbf5b65d":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-65fbf5b65d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7105",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e3631dad-37c3-4b7b-b0a5-e3fac3849a6e",
      ResourceVersion: (string) (len=4) "5766",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868850496,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "65fbf5b65d",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "cf7e7ac7-1427-4bd5-aab3-012f868f539d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 63 66 37 65  37 61 63 37 2d 31 34 32  |":\"cf7e7ac7-142|
              00000130  37 2d 34 62 64 35 2d 61  61 62 33 2d 30 31 32 66  |7-4bd5-aab3-012f|
              00000140  38 36 38 66 35 33 39 64  5c 22 7d 22 3a 7b 7d 7d  |868f539d\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "65fbf5b65d",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "65fbf5b65d",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I1203 19:21:39.821909 23 deployment.go:669] pod: "test-deployment-65fbf5b65d-cnz7r":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-65fbf5b65d-cnz7r",
      GenerateName: (string) (len=27) "test-deployment-65fbf5b65d-",
      Namespace: (string) (len=15) "deployment-7105",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9bf49eed-2574-42fe-bf94-9b80c67d87cf",
      ResourceVersion: (string) (len=4) "5761",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868850496,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868850501,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "65fbf5b65d",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-65fbf5b65d",
          UID: (types.UID) (len=36) "e3631dad-37c3-4b7b-b0a5-e3fac3849a6e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  65 33 36 33 31 64 61 64  |uid\":\"e3631dad|
              000000a0  2d 33 37 63 33 2d 34 62  37 62 2d 62 30 61 35 2d  |-37c3-4b7b-b0a5-|
              000000b0  65 33 66 61 63 33 38 34  39 61 36 65 5c 22 7d 22  |e3fac3849a6e\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850497,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 35  36 5c 22 7d 22 3a 7b 22  |.244.1.56\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6fpjx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6fpjx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea17",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850497,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850497,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850497,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850496,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.100.37",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.100.37"
        }
      },
      PodIP: (string) (len=11) "10.244.1.56",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.56"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868850496,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63868850497,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=29) "docker.io/coredgeio/pause:3.9",
          ImageID: (string) (len=97) "docker.io/coredgeio/pause@sha256:0fc1f3b764be56f7c881a69cbd553ae25a2b5523c6901fbacb8270307c29d0c4",
          ContainerID: (string) (len=77) "containerd://6fdd5008efbca562b42620ceea30164c2e385de2ef670c6f333d699de81c3f52",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I1203 19:21:39.824295 23 deployment.go:657] ReplicaSet "test-deployment-6b9f8f4d48":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-6b9f8f4d48",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7105",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cbb5703d-4f2c-45d0-9b60-03d43d73216d",
      ResourceVersion: (string) (len=4) "5756",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868850497,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6b9f8f4d48",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "cf7e7ac7-1427-4bd5-aab3-012f868f539d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 63 66 37 65  37 61 63 37 2d 31 34 32  |":\"cf7e7ac7-142|
              00000130  37 2d 34 62 64 35 2d 61  61 62 33 2d 30 31 32 66  |7-4bd5-aab3-012f|
              00000140  38 36 38 66 35 33 39 64  5c 22 7d 22 3a 7b 7d 7d  |868f539d\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6b9f8f4d48",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6b9f8f4d48",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I1203 19:21:39.832042 23 deployment.go:669] pod: "test-deployment-6b9f8f4d48-mlmq4":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6b9f8f4d48-mlmq4",
      GenerateName: (string) (len=27) "test-deployment-6b9f8f4d48-",
      Namespace: (string) (len=15) "deployment-7105",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "71f78ed8-5ebc-4b6e-bfaa-0982c218bcb4",
      ResourceVersion: (string) (len=4) "5775",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868850497,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868850500,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6b9f8f4d48",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6b9f8f4d48",
          UID: (types.UID) (len=36) "cbb5703d-4f2c-45d0-9b60-03d43d73216d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850497,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  63 62 62 35 37 30 33 64  |uid\":\"cbb5703d|
              000000a0  2d 34 66 32 63 2d 34 35  64 30 2d 39 62 36 30 2d  |-4f2c-45d0-9b60-|
              000000b0  30 33 64 34 33 64 37 33  32 31 36 64 5c 22 7d 22  |03d43d73216d\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 35  37 5c 22 7d 22 3a 7b 22  |.244.1.57\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k49xh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k49xh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea17",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850497,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850497,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.100.37",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.100.37"
        }
      },
      PodIP: (string) (len=11) "10.244.1.57",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.57"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868850497,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63868850498,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://26a9dd452229f08e96fd42483b6bad48f4acdd0c5efd391f7275f52c8ed6dfa4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I1203 19:21:39.836857 23 deployment.go:669] pod: "test-deployment-6b9f8f4d48-plgts":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6b9f8f4d48-plgts",
      GenerateName: (string) (len=27) "test-deployment-6b9f8f4d48-",
      Namespace: (string) (len=15) "deployment-7105",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2d1fe6a8-5487-4d97-ac9e-71dcf2146730",
      ResourceVersion: (string) (len=4) "5774",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868850498,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868850500,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6b9f8f4d48",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6b9f8f4d48",
          UID: (types.UID) (len=36) "cbb5703d-4f2c-45d0-9b60-03d43d73216d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  63 62 62 35 37 30 33 64  |uid\":\"cbb5703d|
              000000a0  2d 34 66 32 63 2d 34 35  64 30 2d 39 62 36 30 2d  |-4f2c-45d0-9b60-|
              000000b0  30 33 64 34 33 64 37 33  32 31 36 64 5c 22 7d 22  |03d43d73216d\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 32 2e 31  33 5c 22 7d 22 3a 7b 22  |.244.2.13\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hfk6t",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hfk6t",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850499,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850498,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.114",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.100.114"
        }
      },
      PodIP: (string) (len=11) "10.244.2.13",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.2.13"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868850498,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63868850499,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d63220556081ac1ad54705978c751574b9f0b68475e44c5d210634372b868b45",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I1203 19:21:39.841132 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7105" for this suite. @ 12/03/24 19:21:39.844
• [4.773 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 12/03/24 19:21:39.85
  I1203 19:21:39.851025 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename containers @ 12/03/24 19:21:39.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:21:39.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:21:39.869
  STEP: Creating a pod to test override command @ 12/03/24 19:21:39.872
  STEP: Saw pod success @ 12/03/24 19:21:43.906
  I1203 19:21:43.911098 23 output.go:196] Trying to get logs from node nodea17 pod client-containers-ed716d80-6d0d-44ea-a352-2f73b0137e41 container agnhost-container: <nil>
  STEP: delete the pod @ 12/03/24 19:21:43.934
  I1203 19:21:43.950015 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-535" for this suite. @ 12/03/24 19:21:43.954
• [4.109 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 12/03/24 19:21:43.96
  I1203 19:21:43.960310 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename aggregateddiscovery @ 12/03/24 19:21:43.962
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:21:43.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:21:43.982
  I1203 19:21:43.987099 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  I1203 19:21:47.064682 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-5069" for this suite. @ 12/03/24 19:21:47.072
• [3.117 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1015
  STEP: Creating a kubernetes client @ 12/03/24 19:21:47.077
  I1203 19:21:47.078003 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename resourcequota @ 12/03/24 19:21:47.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:21:47.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:21:47.097
  STEP: Creating resourceQuota "e2e-rq-status-tqtm5" @ 12/03/24 19:21:47.105
  I1203 19:21:47.113878 23 resource_quota.go:1051] Resource quota "e2e-rq-status-tqtm5" reports spec: hard cpu limit of 500m
  I1203 19:21:47.113934 23 resource_quota.go:1053] Resource quota "e2e-rq-status-tqtm5" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-tqtm5" /status @ 12/03/24 19:21:47.113
  STEP: Confirm /status for "e2e-rq-status-tqtm5" resourceQuota via watch @ 12/03/24 19:21:47.123
  I1203 19:21:47.125861 23 resource_quota.go:1080] observed resourceQuota "e2e-rq-status-tqtm5" in namespace "resourcequota-3253" with hard status: v1.ResourceList(nil)
  I1203 19:21:47.126031 23 resource_quota.go:1083] Found resourceQuota "e2e-rq-status-tqtm5" in namespace "resourcequota-3253" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I1203 19:21:47.126070 23 resource_quota.go:1090] ResourceQuota "e2e-rq-status-tqtm5" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 12/03/24 19:21:47.129
  I1203 19:21:47.137058 23 resource_quota.go:1101] Resource quota "e2e-rq-status-tqtm5" reports spec: hard cpu limit of 1
  I1203 19:21:47.137125 23 resource_quota.go:1102] Resource quota "e2e-rq-status-tqtm5" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-tqtm5" /status @ 12/03/24 19:21:47.137
  STEP: Confirm /status for "e2e-rq-status-tqtm5" resourceQuota via watch @ 12/03/24 19:21:47.145
  I1203 19:21:47.148020 23 resource_quota.go:1124] observed resourceQuota "e2e-rq-status-tqtm5" in namespace "resourcequota-3253" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I1203 19:21:47.148178 23 resource_quota.go:1127] Found resourceQuota "e2e-rq-status-tqtm5" in namespace "resourcequota-3253" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I1203 19:21:47.148224 23 resource_quota.go:1134] ResourceQuota "e2e-rq-status-tqtm5" /status was patched
  STEP: Get "e2e-rq-status-tqtm5" /status @ 12/03/24 19:21:47.148
  I1203 19:21:47.153016 23 resource_quota.go:1145] Resourcequota "e2e-rq-status-tqtm5" reports status: hard cpu of 1
  I1203 19:21:47.153093 23 resource_quota.go:1147] Resourcequota "e2e-rq-status-tqtm5" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-tqtm5" /status before checking Spec is unchanged @ 12/03/24 19:21:47.156
  I1203 19:21:47.162947 23 resource_quota.go:1167] Resourcequota "e2e-rq-status-tqtm5" reports status: hard cpu of 2
  I1203 19:21:47.163024 23 resource_quota.go:1169] Resourcequota "e2e-rq-status-tqtm5" reports status: hard memory of 2Gi
  I1203 19:21:47.165069 23 resource_quota.go:1181] Found resourceQuota "e2e-rq-status-tqtm5" in namespace "resourcequota-3253" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I1203 19:21:47.168485 23 resource_quota.go:1212] ResourceQuota "e2e-rq-status-tqtm5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tqtm5", GenerateName:"", Namespace:"resourcequota-3253", SelfLink:"", UID:"6994e5fc-af45-442e-8e06-2e4780dac7e6", ResourceVersion:"5909", Generation:0, CreationTimestamp:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tqtm5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00423fd70), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00423fdd0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00423fe48), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1203 19:21:52.169854 23 resource_quota.go:1212] ResourceQuota "e2e-rq-status-tqtm5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tqtm5", GenerateName:"", Namespace:"resourcequota-3253", SelfLink:"", UID:"6994e5fc-af45-442e-8e06-2e4780dac7e6", ResourceVersion:"5909", Generation:0, CreationTimestamp:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tqtm5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00148dc20), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00148dc80), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00148dd28), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1203 19:21:57.171534 23 resource_quota.go:1212] ResourceQuota "e2e-rq-status-tqtm5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tqtm5", GenerateName:"", Namespace:"resourcequota-3253", SelfLink:"", UID:"6994e5fc-af45-442e-8e06-2e4780dac7e6", ResourceVersion:"5909", Generation:0, CreationTimestamp:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tqtm5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00148df38), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00148df68), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004212078), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1203 19:22:02.170621 23 resource_quota.go:1212] ResourceQuota "e2e-rq-status-tqtm5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tqtm5", GenerateName:"", Namespace:"resourcequota-3253", SelfLink:"", UID:"6994e5fc-af45-442e-8e06-2e4780dac7e6", ResourceVersion:"5909", Generation:0, CreationTimestamp:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tqtm5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00102a0c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00102a150), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00102a1b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1203 19:22:07.170663 23 resource_quota.go:1212] ResourceQuota "e2e-rq-status-tqtm5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tqtm5", GenerateName:"", Namespace:"resourcequota-3253", SelfLink:"", UID:"6994e5fc-af45-442e-8e06-2e4780dac7e6", ResourceVersion:"5909", Generation:0, CreationTimestamp:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tqtm5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00102a480), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00102a4b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00102a510), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1203 19:22:12.171165 23 resource_quota.go:1212] ResourceQuota "e2e-rq-status-tqtm5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tqtm5", GenerateName:"", Namespace:"resourcequota-3253", SelfLink:"", UID:"6994e5fc-af45-442e-8e06-2e4780dac7e6", ResourceVersion:"5909", Generation:0, CreationTimestamp:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tqtm5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042122a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042122e8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004212348), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1203 19:22:17.171573 23 resource_quota.go:1212] ResourceQuota "e2e-rq-status-tqtm5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tqtm5", GenerateName:"", Namespace:"resourcequota-3253", SelfLink:"", UID:"6994e5fc-af45-442e-8e06-2e4780dac7e6", ResourceVersion:"5909", Generation:0, CreationTimestamp:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tqtm5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004212540), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042125a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004212618), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1203 19:22:22.171686 23 resource_quota.go:1212] ResourceQuota "e2e-rq-status-tqtm5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tqtm5", GenerateName:"", Namespace:"resourcequota-3253", SelfLink:"", UID:"6994e5fc-af45-442e-8e06-2e4780dac7e6", ResourceVersion:"5909", Generation:0, CreationTimestamp:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tqtm5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00180f1a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00180f218), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00180f290), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1203 19:22:27.170391 23 resource_quota.go:1212] ResourceQuota "e2e-rq-status-tqtm5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tqtm5", GenerateName:"", Namespace:"resourcequota-3253", SelfLink:"", UID:"6994e5fc-af45-442e-8e06-2e4780dac7e6", ResourceVersion:"5909", Generation:0, CreationTimestamp:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tqtm5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00180f5a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00180f620), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00180f6b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1203 19:22:32.170605 23 resource_quota.go:1212] ResourceQuota "e2e-rq-status-tqtm5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tqtm5", GenerateName:"", Namespace:"resourcequota-3253", SelfLink:"", UID:"6994e5fc-af45-442e-8e06-2e4780dac7e6", ResourceVersion:"5909", Generation:0, CreationTimestamp:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tqtm5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004212870), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042128a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004212900), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1203 19:22:37.171741 23 resource_quota.go:1212] ResourceQuota "e2e-rq-status-tqtm5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tqtm5", GenerateName:"", Namespace:"resourcequota-3253", SelfLink:"", UID:"6994e5fc-af45-442e-8e06-2e4780dac7e6", ResourceVersion:"5909", Generation:0, CreationTimestamp:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tqtm5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004212b28), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004212b58), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004212bd0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1203 19:22:42.171864 23 resource_quota.go:1212] ResourceQuota "e2e-rq-status-tqtm5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tqtm5", GenerateName:"", Namespace:"resourcequota-3253", SelfLink:"", UID:"6994e5fc-af45-442e-8e06-2e4780dac7e6", ResourceVersion:"5909", Generation:0, CreationTimestamp:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tqtm5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00180f968), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00180f9c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00180fa28), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1203 19:22:47.171009 23 resource_quota.go:1212] ResourceQuota "e2e-rq-status-tqtm5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tqtm5", GenerateName:"", Namespace:"resourcequota-3253", SelfLink:"", UID:"6994e5fc-af45-442e-8e06-2e4780dac7e6", ResourceVersion:"5909", Generation:0, CreationTimestamp:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tqtm5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00180fce0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00180fd28), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00180fda0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1203 19:22:52.170364 23 resource_quota.go:1212] ResourceQuota "e2e-rq-status-tqtm5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tqtm5", GenerateName:"", Namespace:"resourcequota-3253", SelfLink:"", UID:"6994e5fc-af45-442e-8e06-2e4780dac7e6", ResourceVersion:"5909", Generation:0, CreationTimestamp:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tqtm5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004212120), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004212198), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042121c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1203 19:22:57.170925 23 resource_quota.go:1212] ResourceQuota "e2e-rq-status-tqtm5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tqtm5", GenerateName:"", Namespace:"resourcequota-3253", SelfLink:"", UID:"6994e5fc-af45-442e-8e06-2e4780dac7e6", ResourceVersion:"5909", Generation:0, CreationTimestamp:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tqtm5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042123d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004212450), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004212480), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1203 19:23:02.170336 23 resource_quota.go:1212] ResourceQuota "e2e-rq-status-tqtm5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tqtm5", GenerateName:"", Namespace:"resourcequota-3253", SelfLink:"", UID:"6994e5fc-af45-442e-8e06-2e4780dac7e6", ResourceVersion:"5909", Generation:0, CreationTimestamp:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tqtm5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00102a0c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00102a150), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00102a1b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1203 19:23:07.171519 23 resource_quota.go:1212] ResourceQuota "e2e-rq-status-tqtm5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tqtm5", GenerateName:"", Namespace:"resourcequota-3253", SelfLink:"", UID:"6994e5fc-af45-442e-8e06-2e4780dac7e6", ResourceVersion:"5909", Generation:0, CreationTimestamp:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tqtm5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00102a480), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00102a4b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00102a510), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1203 19:23:12.170517 23 resource_quota.go:1212] ResourceQuota "e2e-rq-status-tqtm5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tqtm5", GenerateName:"", Namespace:"resourcequota-3253", SelfLink:"", UID:"6994e5fc-af45-442e-8e06-2e4780dac7e6", ResourceVersion:"5909", Generation:0, CreationTimestamp:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tqtm5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042126c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004212738), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042127b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1203 19:23:17.171860 23 resource_quota.go:1212] ResourceQuota "e2e-rq-status-tqtm5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tqtm5", GenerateName:"", Namespace:"resourcequota-3253", SelfLink:"", UID:"6994e5fc-af45-442e-8e06-2e4780dac7e6", ResourceVersion:"5909", Generation:0, CreationTimestamp:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tqtm5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042129a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004212a08), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004212a50), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1203 19:23:22.171946 23 resource_quota.go:1212] ResourceQuota "e2e-rq-status-tqtm5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tqtm5", GenerateName:"", Namespace:"resourcequota-3253", SelfLink:"", UID:"6994e5fc-af45-442e-8e06-2e4780dac7e6", ResourceVersion:"5909", Generation:0, CreationTimestamp:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tqtm5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00102a720), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00102a768), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00102a7c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1203 19:23:27.170924 23 resource_quota.go:1212] ResourceQuota "e2e-rq-status-tqtm5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tqtm5", GenerateName:"", Namespace:"resourcequota-3253", SelfLink:"", UID:"6994e5fc-af45-442e-8e06-2e4780dac7e6", ResourceVersion:"5909", Generation:0, CreationTimestamp:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tqtm5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00102a9a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00102a9f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00102aa38), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1203 19:23:32.169873 23 resource_quota.go:1212] ResourceQuota "e2e-rq-status-tqtm5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tqtm5", GenerateName:"", Namespace:"resourcequota-3253", SelfLink:"", UID:"6994e5fc-af45-442e-8e06-2e4780dac7e6", ResourceVersion:"5909", Generation:0, CreationTimestamp:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tqtm5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004212c78), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004212cc0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004212d08), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1203 19:23:37.171453 23 resource_quota.go:1212] ResourceQuota "e2e-rq-status-tqtm5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tqtm5", GenerateName:"", Namespace:"resourcequota-3253", SelfLink:"", UID:"6994e5fc-af45-442e-8e06-2e4780dac7e6", ResourceVersion:"5909", Generation:0, CreationTimestamp:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tqtm5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004212fd8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004213020), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004213080), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1203 19:23:42.172014 23 resource_quota.go:1212] ResourceQuota "e2e-rq-status-tqtm5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tqtm5", GenerateName:"", Namespace:"resourcequota-3253", SelfLink:"", UID:"6994e5fc-af45-442e-8e06-2e4780dac7e6", ResourceVersion:"5909", Generation:0, CreationTimestamp:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tqtm5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00102ac48), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00102ac78), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00102acd8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1203 19:23:47.169769 23 resource_quota.go:1212] ResourceQuota "e2e-rq-status-tqtm5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tqtm5", GenerateName:"", Namespace:"resourcequota-3253", SelfLink:"", UID:"6994e5fc-af45-442e-8e06-2e4780dac7e6", ResourceVersion:"5909", Generation:0, CreationTimestamp:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tqtm5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00102af30), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00102afa8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00102b050), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1203 19:23:52.171358 23 resource_quota.go:1212] ResourceQuota "e2e-rq-status-tqtm5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tqtm5", GenerateName:"", Namespace:"resourcequota-3253", SelfLink:"", UID:"6994e5fc-af45-442e-8e06-2e4780dac7e6", ResourceVersion:"5909", Generation:0, CreationTimestamp:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tqtm5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004213338), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004213380), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042133e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1203 19:23:57.171201 23 resource_quota.go:1212] ResourceQuota "e2e-rq-status-tqtm5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tqtm5", GenerateName:"", Namespace:"resourcequota-3253", SelfLink:"", UID:"6994e5fc-af45-442e-8e06-2e4780dac7e6", ResourceVersion:"5909", Generation:0, CreationTimestamp:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tqtm5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042135f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004213650), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004213698), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1203 19:24:02.170763 23 resource_quota.go:1212] ResourceQuota "e2e-rq-status-tqtm5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tqtm5", GenerateName:"", Namespace:"resourcequota-3253", SelfLink:"", UID:"6994e5fc-af45-442e-8e06-2e4780dac7e6", ResourceVersion:"5909", Generation:0, CreationTimestamp:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tqtm5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00102b230), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00102b278), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00102b2c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1203 19:24:07.170586 23 resource_quota.go:1212] ResourceQuota "e2e-rq-status-tqtm5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tqtm5", GenerateName:"", Namespace:"resourcequota-3253", SelfLink:"", UID:"6994e5fc-af45-442e-8e06-2e4780dac7e6", ResourceVersion:"5909", Generation:0, CreationTimestamp:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tqtm5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00102b4b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00102b500), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00102b530), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1203 19:24:12.171285 23 resource_quota.go:1212] ResourceQuota "e2e-rq-status-tqtm5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tqtm5", GenerateName:"", Namespace:"resourcequota-3253", SelfLink:"", UID:"6994e5fc-af45-442e-8e06-2e4780dac7e6", ResourceVersion:"5909", Generation:0, CreationTimestamp:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tqtm5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042138a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0042138d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004213950), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1203 19:24:17.172009 23 resource_quota.go:1212] ResourceQuota "e2e-rq-status-tqtm5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tqtm5", GenerateName:"", Namespace:"resourcequota-3253", SelfLink:"", UID:"6994e5fc-af45-442e-8e06-2e4780dac7e6", ResourceVersion:"5909", Generation:0, CreationTimestamp:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tqtm5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004213b60), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004213ba8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004213c08), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1203 19:24:22.171954 23 resource_quota.go:1212] ResourceQuota "e2e-rq-status-tqtm5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tqtm5", GenerateName:"", Namespace:"resourcequota-3253", SelfLink:"", UID:"6994e5fc-af45-442e-8e06-2e4780dac7e6", ResourceVersion:"5909", Generation:0, CreationTimestamp:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tqtm5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004213e30), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004213e60), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004213ed8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1203 19:24:27.170719 23 resource_quota.go:1212] ResourceQuota "e2e-rq-status-tqtm5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tqtm5", GenerateName:"", Namespace:"resourcequota-3253", SelfLink:"", UID:"6994e5fc-af45-442e-8e06-2e4780dac7e6", ResourceVersion:"5909", Generation:0, CreationTimestamp:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tqtm5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0001306c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000130720), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000130798), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1203 19:24:32.171308 23 resource_quota.go:1212] ResourceQuota "e2e-rq-status-tqtm5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tqtm5", GenerateName:"", Namespace:"resourcequota-3253", SelfLink:"", UID:"6994e5fc-af45-442e-8e06-2e4780dac7e6", ResourceVersion:"5909", Generation:0, CreationTimestamp:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tqtm5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044e60c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044e6120), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044e6198), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1203 19:24:37.170336 23 resource_quota.go:1212] ResourceQuota "e2e-rq-status-tqtm5" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-tqtm5", GenerateName:"", Namespace:"resourcequota-3253", SelfLink:"", UID:"6994e5fc-af45-442e-8e06-2e4780dac7e6", ResourceVersion:"5909", Generation:0, CreationTimestamp:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-tqtm5"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044e6408), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044e6468), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 19, 21, 47, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0044e64e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1203 19:24:42.170705 23 resource_quota.go:1209] ResourceQuota "e2e-rq-status-tqtm5" Spec was unchanged and /status reset
  I1203 19:24:42.170910 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3253" for this suite. @ 12/03/24 19:24:42.175
• [175.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 12/03/24 19:24:42.182
  I1203 19:24:42.182736 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename daemonsets @ 12/03/24 19:24:42.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:24:42.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:24:42.2
  I1203 19:24:42.220199 23 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 12/03/24 19:24:42.225
  I1203 19:24:42.228311 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1203 19:24:42.228397 23 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 12/03/24 19:24:42.228
  I1203 19:24:42.247270 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1203 19:24:42.247326 23 fixtures.go:130] Node nodeb14 is running 0 daemon pod, expected 1
  I1203 19:24:43.251445 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1203 19:24:43.251512 23 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 12/03/24 19:24:43.255
  I1203 19:24:43.272771 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1203 19:24:43.272832 23 fixtures.go:135] Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  I1203 19:24:44.273898 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1203 19:24:44.273972 23 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 12/03/24 19:24:44.274
  I1203 19:24:44.287533 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1203 19:24:44.287600 23 fixtures.go:130] Node nodeb14 is running 0 daemon pod, expected 1
  I1203 19:24:45.289148 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1203 19:24:45.289222 23 fixtures.go:130] Node nodeb14 is running 0 daemon pod, expected 1
  I1203 19:24:46.289035 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1203 19:24:46.289111 23 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 12/03/24 19:24:46.295
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3560, will wait for the garbage collector to delete the pods @ 12/03/24 19:24:46.295
  I1203 19:24:46.355908 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 5.942314ms
  I1203 19:24:46.456557 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.61532ms
  I1203 19:24:49.361414 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1203 19:24:49.361526 23 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1203 19:24:49.366641 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"6249"},"items":null}

  I1203 19:24:49.370696 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"6249"},"items":null}

  I1203 19:24:49.390012 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3560" for this suite. @ 12/03/24 19:24:49.394
• [7.217 seconds]
------------------------------
S
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:850
  STEP: Creating a kubernetes client @ 12/03/24 19:24:49.399
  I1203 19:24:49.399656 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename services @ 12/03/24 19:24:49.401
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:24:49.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:24:49.417
  STEP: creating service multi-endpoint-test in namespace services-2594 @ 12/03/24 19:24:49.421
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2594 to expose endpoints map[] @ 12/03/24 19:24:49.437
  I1203 19:24:49.447610 23 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-2594 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-2594 @ 12/03/24 19:24:49.447
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2594 to expose endpoints map[pod1:[100]] @ 12/03/24 19:24:51.465
  I1203 19:24:51.477288 23 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-2594 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-2594 @ 12/03/24 19:24:51.477
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2594 to expose endpoints map[pod1:[100] pod2:[101]] @ 12/03/24 19:24:53.496
  I1203 19:24:53.511584 23 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-2594 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 12/03/24 19:24:53.511
  I1203 19:24:53.511681 23 resource.go:361] Creating new exec pod
  I1203 19:24:56.530478 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-2594 exec execpodvxkj2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I1203 19:24:56.713988 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  I1203 19:24:56.714082 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1203 19:24:56.714269 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-2594 exec execpodvxkj2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.99.63.201 80'
  I1203 19:24:56.870170 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.99.63.201 80\nConnection to 10.99.63.201 80 port [tcp/http] succeeded!\n"
  I1203 19:24:56.870239 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1203 19:24:56.870382 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-2594 exec execpodvxkj2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I1203 19:24:57.036164 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  I1203 19:24:57.036247 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1203 19:24:57.036369 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-2594 exec execpodvxkj2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.99.63.201 81'
  I1203 19:24:57.194539 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.99.63.201 81\nConnection to 10.99.63.201 81 port [tcp/*] succeeded!\n"
  I1203 19:24:57.194621 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-2594 @ 12/03/24 19:24:57.194
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2594 to expose endpoints map[pod2:[101]] @ 12/03/24 19:24:57.207
  I1203 19:24:57.221634 23 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-2594 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-2594 @ 12/03/24 19:24:57.221
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2594 to expose endpoints map[] @ 12/03/24 19:24:57.232
  I1203 19:24:57.241044 23 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-2594 exposes endpoints map[]
  I1203 19:24:57.255980 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2594" for this suite. @ 12/03/24 19:24:57.26
• [7.865 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:796
  STEP: Creating a kubernetes client @ 12/03/24 19:24:57.264
  I1203 19:24:57.264763 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename statefulset @ 12/03/24 19:24:57.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:24:57.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:24:57.281
  STEP: Creating service test in namespace statefulset-7696 @ 12/03/24 19:24:57.285
  STEP: Looking for a node to schedule stateful set and pod @ 12/03/24 19:24:57.29
  STEP: Creating pod with conflicting port in namespace statefulset-7696 @ 12/03/24 19:24:57.294
  STEP: Waiting until pod test-pod will start running in namespace statefulset-7696 @ 12/03/24 19:24:57.302
  STEP: Creating statefulset with conflicting port in namespace statefulset-7696 @ 12/03/24 19:24:59.311
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-7696 @ 12/03/24 19:24:59.32
  I1203 19:24:59.334148 23 statefulset.go:869] Observed stateful pod in namespace: statefulset-7696, name: ss-0, uid: 4092c814-622a-4be5-b24a-79f48ffaa907, status phase: Pending. Waiting for statefulset controller to delete.
  I1203 19:24:59.353327 23 statefulset.go:869] Observed stateful pod in namespace: statefulset-7696, name: ss-0, uid: 4092c814-622a-4be5-b24a-79f48ffaa907, status phase: Failed. Waiting for statefulset controller to delete.
  I1203 19:24:59.360077 23 statefulset.go:869] Observed stateful pod in namespace: statefulset-7696, name: ss-0, uid: 4092c814-622a-4be5-b24a-79f48ffaa907, status phase: Failed. Waiting for statefulset controller to delete.
  I1203 19:24:59.362175 23 statefulset.go:863] Observed delete event for stateful pod ss-0 in namespace statefulset-7696
  STEP: Removing pod with conflicting port in namespace statefulset-7696 @ 12/03/24 19:24:59.362
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-7696 and will be in running state @ 12/03/24 19:24:59.377
  I1203 19:25:01.387967 23 statefulset.go:138] Deleting all statefulset in ns statefulset-7696
  I1203 19:25:01.392001 23 rest.go:150] Scaling statefulset ss to 0
  I1203 19:25:11.407451 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1203 19:25:11.411931 23 rest.go:88] Deleting statefulset ss
  I1203 19:25:11.425360 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7696" for this suite. @ 12/03/24 19:25:11.433
• [14.175 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 12/03/24 19:25:11.439
  I1203 19:25:11.439881 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename dns @ 12/03/24 19:25:11.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:25:11.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:25:11.457
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-6107.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-6107.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 12/03/24 19:25:11.462
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-6107.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-6107.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 12/03/24 19:25:11.462
  STEP: creating a pod to probe /etc/hosts @ 12/03/24 19:25:11.462
  STEP: submitting the pod to kubernetes @ 12/03/24 19:25:11.462
  STEP: retrieving the pod @ 12/03/24 19:25:27.539
  STEP: looking for the results for each expected name from probers @ 12/03/24 19:25:27.544
  I1203 19:25:27.565475 23 dns_common.go:527] DNS probes using dns-6107/dns-test-38b274f1-c3b5-4f32-b569-99f561de44cd succeeded

  STEP: deleting the pod @ 12/03/24 19:25:27.565
  I1203 19:25:27.577128 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6107" for this suite. @ 12/03/24 19:25:27.582
• [16.149 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 12/03/24 19:25:27.589
  I1203 19:25:27.589668 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename pods @ 12/03/24 19:25:27.591
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:25:27.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:25:27.609
  STEP: creating the pod @ 12/03/24 19:25:27.613
  STEP: submitting the pod to kubernetes @ 12/03/24 19:25:27.613
  STEP: verifying the pod is in kubernetes @ 12/03/24 19:25:29.634
  STEP: updating the pod @ 12/03/24 19:25:29.638
  I1203 19:25:30.151673 23 pod_client.go:141] Successfully updated pod "pod-update-932d6176-55b6-4527-b2f2-f3963a4c1f65"
  STEP: verifying the updated pod is in kubernetes @ 12/03/24 19:25:30.155
  I1203 19:25:30.158701 23 pods.go:391] Pod update OK
  I1203 19:25:30.158877 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-714" for this suite. @ 12/03/24 19:25:30.163
• [2.580 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 12/03/24 19:25:30.17
  I1203 19:25:30.170237 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename replicaset @ 12/03/24 19:25:30.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:25:30.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:25:30.19
  I1203 19:25:30.195341 23 replica_set.go:191] Creating ReplicaSet my-hostname-basic-491aa5a5-8943-4b4a-894e-21ffbd7c4910
  I1203 19:25:30.203674 23 resource.go:87] Pod name my-hostname-basic-491aa5a5-8943-4b4a-894e-21ffbd7c4910: Found 0 pods out of 1
  I1203 19:25:35.208677 23 resource.go:87] Pod name my-hostname-basic-491aa5a5-8943-4b4a-894e-21ffbd7c4910: Found 1 pods out of 1
  I1203 19:25:35.208752 23 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-491aa5a5-8943-4b4a-894e-21ffbd7c4910" is running
  I1203 19:25:35.211837 23 replica_set.go:220] Pod "my-hostname-basic-491aa5a5-8943-4b4a-894e-21ffbd7c4910-sw4ts" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-03 19:25:31 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-03 19:25:30 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-03 19:25:31 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-03 19:25:31 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-03 19:25:30 +0000 UTC Reason: Message:}])
  I1203 19:25:35.211910 23 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 12/03/24 19:25:35.211
  I1203 19:25:35.222227 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7149" for this suite. @ 12/03/24 19:25:35.226
• [5.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 12/03/24 19:25:35.232
  I1203 19:25:35.232203 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename replication-controller @ 12/03/24 19:25:35.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:25:35.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:25:35.249
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 12/03/24 19:25:35.253
  STEP: When a replication controller with a matching selector is created @ 12/03/24 19:25:37.272
  STEP: Then the orphan pod is adopted @ 12/03/24 19:25:37.28
  I1203 19:25:38.290847 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6295" for this suite. @ 12/03/24 19:25:38.296
• [3.072 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 12/03/24 19:25:38.304
  I1203 19:25:38.304642 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename deployment @ 12/03/24 19:25:38.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:25:38.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:25:38.324
  I1203 19:25:38.328557 23 deployment.go:1645] Creating simple deployment test-new-deployment
  I1203 19:25:38.343053 23 deployment.go:222] deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 12/03/24 19:25:40.356
  STEP: updating a scale subresource @ 12/03/24 19:25:40.358
  STEP: verifying the deployment Spec.Replicas was modified @ 12/03/24 19:25:40.369
  STEP: Patch a scale subresource @ 12/03/24 19:25:40.372
  I1203 19:25:40.391848 23 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-524",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c2f17690-f0e9-468b-bbab-232ea3cb60c1",
      ResourceVersion: (string) (len=4) "6630",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868850738,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850738,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850738,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-77db57d8df\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1203 19:25:40.401119 23 deployment.go:39] New ReplicaSet "test-new-deployment-77db57d8df" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-77db57d8df",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-524",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "34de68a7-e5bf-4be5-a8e3-a96c13b94e0f",
      ResourceVersion: (string) (len=4) "6636",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868850738,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "c2f17690-f0e9-468b-bbab-232ea3cb60c1",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 32 66 31 37 36  39 30 2d 66 30 65 39 2d  |\"c2f17690-f0e9-|
              00000120  34 36 38 62 2d 62 62 61  62 2d 32 33 32 65 61 33  |468b-bbab-232ea3|
              00000130  63 62 36 30 63 31 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |cb60c1\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1203 19:25:40.408685 23 deployment.go:67] Pod "test-new-deployment-77db57d8df-f8gtb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-77db57d8df-f8gtb",
      GenerateName: (string) (len=31) "test-new-deployment-77db57d8df-",
      Namespace: (string) (len=14) "deployment-524",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2eec95db-b875-4abf-bfc2-a8e75c941d6c",
      ResourceVersion: (string) (len=4) "6638",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868850740,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-77db57d8df",
          UID: (types.UID) (len=36) "34de68a7-e5bf-4be5-a8e3-a96c13b94e0f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 34  64 65 36 38 61 37 2d 65  |d\":\"34de68a7-e|
              00000090  35 62 66 2d 34 62 65 35  2d 61 38 65 33 2d 61 39  |5bf-4be5-a8e3-a9|
              000000a0  36 63 31 33 62 39 34 65  30 66 5c 22 7d 22 3a 7b  |6c13b94e0f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rj9xd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rj9xd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850740,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.114",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.100.114"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868850740,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1203 19:25:40.412885 23 deployment.go:67] Pod "test-new-deployment-77db57d8df-rvnxc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-77db57d8df-rvnxc",
      GenerateName: (string) (len=31) "test-new-deployment-77db57d8df-",
      Namespace: (string) (len=14) "deployment-524",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6525decc-fbb3-4964-ae5e-720089f57611",
      ResourceVersion: (string) (len=4) "6611",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868850738,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-77db57d8df",
          UID: (types.UID) (len=36) "34de68a7-e5bf-4be5-a8e3-a96c13b94e0f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850738,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 34  64 65 36 38 61 37 2d 65  |d\":\"34de68a7-e|
              00000090  35 62 66 2d 34 62 65 35  2d 61 38 65 33 2d 61 39  |5bf-4be5-a8e3-a9|
              000000a0  36 63 31 33 62 39 34 65  30 66 5c 22 7d 22 3a 7b  |6c13b94e0f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 36  37 5c 22 7d 22 3a 7b 22  |.244.1.67\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tbhww",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tbhww",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea17",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850738,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850739,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868850738,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.100.37",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.100.37"
        }
      },
      PodIP: (string) (len=11) "10.244.1.67",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.244.1.67"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868850738,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63868850738,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://dec07d79ba717562b5c11d427e756726c5208c3ba7c91469695e2acb85f15de5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1203 19:25:40.416061 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-524" for this suite. @ 12/03/24 19:25:40.424
• [2.133 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 12/03/24 19:25:40.437
  I1203 19:25:40.437891 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename dns @ 12/03/24 19:25:40.439
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:25:40.449
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:25:40.453
  STEP: Creating a test headless service @ 12/03/24 19:25:40.456
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-843.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-843.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-843.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-843.svc.cluster.local;sleep 1; done
   @ 12/03/24 19:25:40.46
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-843.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-843.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-843.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-843.svc.cluster.local;sleep 1; done
   @ 12/03/24 19:25:40.46
  STEP: creating a pod to probe DNS @ 12/03/24 19:25:40.46
  STEP: submitting the pod to kubernetes @ 12/03/24 19:25:40.46
  STEP: retrieving the pod @ 12/03/24 19:25:42.482
  STEP: looking for the results for each expected name from probers @ 12/03/24 19:25:42.486
  I1203 19:25:42.492691 23 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:25:42.497179 23 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:25:42.501614 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:25:42.506081 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:25:42.510384 23 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:25:42.514633 23 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:25:42.519070 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:25:42.522827 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:25:42.522895 23 dns_common.go:489] Lookups using dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local wheezy_udp@dns-test-service-2.dns-843.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-843.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local jessie_udp@dns-test-service-2.dns-843.svc.cluster.local jessie_tcp@dns-test-service-2.dns-843.svc.cluster.local]

  I1203 19:25:42.540649 23 dns_common.go:495] Pod client logs for webserver: 
  I1203 19:25:42.546473 23 dns_common.go:495] Pod client logs for querier: 
  I1203 19:25:42.552276 23 dns_common.go:495] Pod client logs for jessie-querier: 
  I1203 19:25:47.493782 23 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:25:47.498366 23 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:25:47.502949 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:25:47.507340 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:25:47.511707 23 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:25:47.516120 23 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:25:47.520416 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:25:47.524948 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:25:47.525017 23 dns_common.go:489] Lookups using dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local wheezy_udp@dns-test-service-2.dns-843.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-843.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local jessie_udp@dns-test-service-2.dns-843.svc.cluster.local jessie_tcp@dns-test-service-2.dns-843.svc.cluster.local]

  I1203 19:25:47.531816 23 dns_common.go:495] Pod client logs for webserver: 
  I1203 19:25:47.537827 23 dns_common.go:495] Pod client logs for querier: 
  I1203 19:25:47.543573 23 dns_common.go:495] Pod client logs for jessie-querier: 
  I1203 19:25:52.493537 23 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:25:52.498262 23 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:25:52.502764 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:25:52.507188 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:25:52.511503 23 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:25:52.516030 23 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:25:52.520271 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:25:52.524427 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:25:52.524491 23 dns_common.go:489] Lookups using dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local wheezy_udp@dns-test-service-2.dns-843.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-843.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local jessie_udp@dns-test-service-2.dns-843.svc.cluster.local jessie_tcp@dns-test-service-2.dns-843.svc.cluster.local]

  I1203 19:25:52.531887 23 dns_common.go:495] Pod client logs for webserver: 
  I1203 19:25:52.538941 23 dns_common.go:495] Pod client logs for querier: 
  I1203 19:25:52.545895 23 dns_common.go:495] Pod client logs for jessie-querier: 
  I1203 19:25:57.491617 23 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:25:57.496694 23 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:25:57.501199 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:25:57.505745 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:25:57.510166 23 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:25:57.514880 23 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:25:57.519442 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:25:57.523444 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:25:57.523523 23 dns_common.go:489] Lookups using dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local wheezy_udp@dns-test-service-2.dns-843.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-843.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local jessie_udp@dns-test-service-2.dns-843.svc.cluster.local jessie_tcp@dns-test-service-2.dns-843.svc.cluster.local]

  I1203 19:25:57.530931 23 dns_common.go:495] Pod client logs for webserver: 
  I1203 19:25:57.537515 23 dns_common.go:495] Pod client logs for querier: 
  I1203 19:25:57.543390 23 dns_common.go:495] Pod client logs for jessie-querier: 
  I1203 19:26:02.494022 23 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:26:02.498612 23 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:26:02.503076 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:26:02.507478 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:26:02.511901 23 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:26:02.516071 23 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:26:02.520123 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:26:02.523564 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:26:02.523609 23 dns_common.go:489] Lookups using dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local wheezy_udp@dns-test-service-2.dns-843.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-843.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local jessie_udp@dns-test-service-2.dns-843.svc.cluster.local jessie_tcp@dns-test-service-2.dns-843.svc.cluster.local]

  I1203 19:26:02.529659 23 dns_common.go:495] Pod client logs for webserver: 
  I1203 19:26:02.535425 23 dns_common.go:495] Pod client logs for querier: 
  I1203 19:26:02.541466 23 dns_common.go:495] Pod client logs for jessie-querier: 
  I1203 19:26:07.493658 23 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:26:07.499746 23 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:26:07.505037 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:26:07.508982 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:26:07.513588 23 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:26:07.517997 23 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:26:07.522844 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:26:07.527276 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-843.svc.cluster.local from pod dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f: the server could not find the requested resource (get pods dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f)
  I1203 19:26:07.527540 23 dns_common.go:489] Lookups using dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local wheezy_udp@dns-test-service-2.dns-843.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-843.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-843.svc.cluster.local jessie_udp@dns-test-service-2.dns-843.svc.cluster.local jessie_tcp@dns-test-service-2.dns-843.svc.cluster.local]

  I1203 19:26:07.534349 23 dns_common.go:495] Pod client logs for webserver: 
  I1203 19:26:07.540687 23 dns_common.go:495] Pod client logs for querier: 
  I1203 19:26:07.547388 23 dns_common.go:495] Pod client logs for jessie-querier: 
  I1203 19:26:12.525984 23 dns_common.go:527] DNS probes using dns-843/dns-test-7dd27496-8fba-486d-b7ea-0a151d10220f succeeded

  STEP: deleting the pod @ 12/03/24 19:26:12.526
  STEP: deleting the test headless service @ 12/03/24 19:26:12.543
  I1203 19:26:12.552691 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-843" for this suite. @ 12/03/24 19:26:12.556
• [32.123 seconds]
------------------------------
S
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2218
  STEP: Creating a kubernetes client @ 12/03/24 19:26:12.563
  I1203 19:26:12.563423 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename services @ 12/03/24 19:26:12.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:26:12.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:26:12.583
  STEP: creating service in namespace services-6568 @ 12/03/24 19:26:12.587
  STEP: creating service affinity-nodeport in namespace services-6568 @ 12/03/24 19:26:12.587
  STEP: creating replication controller affinity-nodeport in namespace services-6568 @ 12/03/24 19:26:12.606
  I1203 19:26:12.612034      23 runners.go:198] Created replication controller with name: affinity-nodeport, namespace: services-6568, replica count: 3
  I1203 19:26:15.663892      23 runners.go:198] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1203 19:26:15.676366 23 resource.go:361] Creating new exec pod
  I1203 19:26:18.695187 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-6568 exec execpod-affinityqtxvg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I1203 19:26:18.877646 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  I1203 19:26:18.877717 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1203 19:26:18.877828 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-6568 exec execpod-affinityqtxvg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.107.141.186 80'
  I1203 19:26:19.033753 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.107.141.186 80\nConnection to 10.107.141.186 80 port [tcp/http] succeeded!\n"
  I1203 19:26:19.033839 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1203 19:26:19.034006 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-6568 exec execpod-affinityqtxvg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.37 32622'
  I1203 19:26:19.202405 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.37 32622\nConnection to 192.168.100.37 32622 port [tcp/*] succeeded!\n"
  I1203 19:26:19.202514 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1203 19:26:19.202689 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-6568 exec execpod-affinityqtxvg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.114 32622'
  I1203 19:26:19.368386 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.114 32622\nConnection to 192.168.100.114 32622 port [tcp/*] succeeded!\n"
  I1203 19:26:19.368470 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1203 19:26:19.368609 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-6568 exec execpod-affinityqtxvg -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.100.37:32622/ ; done'
  I1203 19:26:19.631826 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32622/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32622/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32622/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32622/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32622/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32622/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32622/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32622/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32622/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32622/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32622/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32622/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32622/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32622/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32622/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.100.37:32622/\n"
  I1203 19:26:19.631934 23 builder.go:147] stdout: "\naffinity-nodeport-jzfk9\naffinity-nodeport-jzfk9\naffinity-nodeport-jzfk9\naffinity-nodeport-jzfk9\naffinity-nodeport-jzfk9\naffinity-nodeport-jzfk9\naffinity-nodeport-jzfk9\naffinity-nodeport-jzfk9\naffinity-nodeport-jzfk9\naffinity-nodeport-jzfk9\naffinity-nodeport-jzfk9\naffinity-nodeport-jzfk9\naffinity-nodeport-jzfk9\naffinity-nodeport-jzfk9\naffinity-nodeport-jzfk9\naffinity-nodeport-jzfk9"
  I1203 19:26:19.631971 23 service.go:242] Received response from host: affinity-nodeport-jzfk9
  I1203 19:26:19.632008 23 service.go:242] Received response from host: affinity-nodeport-jzfk9
  I1203 19:26:19.632053 23 service.go:242] Received response from host: affinity-nodeport-jzfk9
  I1203 19:26:19.632101 23 service.go:242] Received response from host: affinity-nodeport-jzfk9
  I1203 19:26:19.632177 23 service.go:242] Received response from host: affinity-nodeport-jzfk9
  I1203 19:26:19.632222 23 service.go:242] Received response from host: affinity-nodeport-jzfk9
  I1203 19:26:19.632265 23 service.go:242] Received response from host: affinity-nodeport-jzfk9
  I1203 19:26:19.632301 23 service.go:242] Received response from host: affinity-nodeport-jzfk9
  I1203 19:26:19.632345 23 service.go:242] Received response from host: affinity-nodeport-jzfk9
  I1203 19:26:19.632388 23 service.go:242] Received response from host: affinity-nodeport-jzfk9
  I1203 19:26:19.632431 23 service.go:242] Received response from host: affinity-nodeport-jzfk9
  I1203 19:26:19.632480 23 service.go:242] Received response from host: affinity-nodeport-jzfk9
  I1203 19:26:19.632510 23 service.go:242] Received response from host: affinity-nodeport-jzfk9
  I1203 19:26:19.632576 23 service.go:242] Received response from host: affinity-nodeport-jzfk9
  I1203 19:26:19.632619 23 service.go:242] Received response from host: affinity-nodeport-jzfk9
  I1203 19:26:19.632652 23 service.go:242] Received response from host: affinity-nodeport-jzfk9
  I1203 19:26:19.632815 23 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-6568, will wait for the garbage collector to delete the pods @ 12/03/24 19:26:19.648
  I1203 19:26:19.710938 23 resources.go:139] Deleting ReplicationController affinity-nodeport took: 6.774413ms
  I1203 19:26:19.812033 23 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 101.077653ms
  I1203 19:26:22.632375 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6568" for this suite. @ 12/03/24 19:26:22.636
• [10.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 12/03/24 19:26:22.642
  I1203 19:26:22.642333 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename daemonsets @ 12/03/24 19:26:22.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:26:22.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:26:22.661
  STEP: Creating simple DaemonSet "daemon-set" @ 12/03/24 19:26:22.685
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/03/24 19:26:22.69
  I1203 19:26:22.695169 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1203 19:26:22.698947 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1203 19:26:22.699012 23 fixtures.go:130] Node nodea17 is running 0 daemon pod, expected 1
  I1203 19:26:23.696909 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1203 19:26:23.700934 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1203 19:26:23.700999 23 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Getting /status @ 12/03/24 19:26:23.704
  I1203 19:26:23.708604 23 daemon_set.go:912] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 12/03/24 19:26:23.708
  I1203 19:26:23.720357 23 daemon_set.go:932] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 12/03/24 19:26:23.72
  I1203 19:26:23.723474 23 daemon_set.go:957] Observed &DaemonSet event: ADDED
  I1203 19:26:23.723815 23 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I1203 19:26:23.724150 23 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I1203 19:26:23.724473 23 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I1203 19:26:23.724804 23 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I1203 19:26:23.724905 23 daemon_set.go:950] Found daemon set daemon-set in namespace daemonsets-1323 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1203 19:26:23.724950 23 daemon_set.go:961] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 12/03/24 19:26:23.725
  STEP: watching for the daemon set status to be patched @ 12/03/24 19:26:23.735
  I1203 19:26:23.737863 23 daemon_set.go:1001] Observed &DaemonSet event: ADDED
  I1203 19:26:23.738147 23 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I1203 19:26:23.738372 23 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I1203 19:26:23.738593 23 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I1203 19:26:23.738797 23 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I1203 19:26:23.738855 23 daemon_set.go:997] Observed daemon set daemon-set in namespace daemonsets-1323 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1203 19:26:23.739115 23 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I1203 19:26:23.739186 23 daemon_set.go:994] Found daemon set daemon-set in namespace daemonsets-1323 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I1203 19:26:23.739241 23 daemon_set.go:1005] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 12/03/24 19:26:23.742
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1323, will wait for the garbage collector to delete the pods @ 12/03/24 19:26:23.742
  I1203 19:26:23.802015 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 5.425276ms
  I1203 19:26:23.902860 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.8432ms
  I1203 19:26:25.607390 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1203 19:26:25.607465 23 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1203 19:26:25.610565 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"6957"},"items":null}

  I1203 19:26:25.614088 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"6957"},"items":null}

  I1203 19:26:25.625058 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1323" for this suite. @ 12/03/24 19:26:25.629
• [2.993 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 12/03/24 19:26:25.635
  I1203 19:26:25.635387 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename kubectl-logs @ 12/03/24 19:26:25.636
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:26:25.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:26:25.652
  STEP: creating an pod @ 12/03/24 19:26:25.657
  I1203 19:26:25.657352 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-logs-1772 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.47 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I1203 19:26:25.754729 23 builder.go:146] stderr: ""
  I1203 19:26:25.754807 23 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 12/03/24 19:26:25.754
  I1203 19:26:25.754971 23 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I1203 19:26:27.767103 23 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 12/03/24 19:26:27.767
  I1203 19:26:27.767337 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-logs-1772 logs logs-generator logs-generator'
  I1203 19:26:27.860598 23 builder.go:146] stderr: ""
  I1203 19:26:27.860683 23 builder.go:147] stdout: "I1203 19:26:26.328544       1 logs_generator.go:76] 0 GET /api/v1/namespaces/default/pods/ljd8 505\nI1203 19:26:26.528846       1 logs_generator.go:76] 1 GET /api/v1/namespaces/kube-system/pods/flck 255\nI1203 19:26:26.729582       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/qqld 443\nI1203 19:26:26.929182       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/ns/pods/qct 417\nI1203 19:26:27.128566       1 logs_generator.go:76] 4 POST /api/v1/namespaces/default/pods/lq7 367\nI1203 19:26:27.329189       1 logs_generator.go:76] 5 GET /api/v1/namespaces/ns/pods/hgw 448\nI1203 19:26:27.528618       1 logs_generator.go:76] 6 GET /api/v1/namespaces/kube-system/pods/8vkg 449\nI1203 19:26:27.729228       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/qg2 248\n"
  STEP: limiting log lines @ 12/03/24 19:26:27.86
  I1203 19:26:27.860824 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-logs-1772 logs logs-generator logs-generator --tail=1'
  I1203 19:26:27.954944 23 builder.go:146] stderr: ""
  I1203 19:26:27.955003 23 builder.go:147] stdout: "I1203 19:26:27.928568       1 logs_generator.go:76] 8 POST /api/v1/namespaces/default/pods/d65 302\n"
  I1203 19:26:27.955025 23 logs.go:127] got output "I1203 19:26:27.928568       1 logs_generator.go:76] 8 POST /api/v1/namespaces/default/pods/d65 302\n"
  STEP: limiting log bytes @ 12/03/24 19:26:27.955
  I1203 19:26:27.955172 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-logs-1772 logs logs-generator logs-generator --limit-bytes=1'
  I1203 19:26:28.046621 23 builder.go:146] stderr: ""
  I1203 19:26:28.046691 23 builder.go:147] stdout: "I"
  I1203 19:26:28.046776 23 logs.go:133] got output "I"
  STEP: exposing timestamps @ 12/03/24 19:26:28.046
  I1203 19:26:28.046937 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-logs-1772 logs logs-generator logs-generator --tail=1 --timestamps'
  I1203 19:26:28.136615 23 builder.go:146] stderr: ""
  I1203 19:26:28.136686 23 builder.go:147] stdout: "2024-12-03T19:26:28.129297311Z I1203 19:26:28.128957       1 logs_generator.go:76] 9 POST /api/v1/namespaces/ns/pods/24hq 562\n"
  I1203 19:26:28.136716 23 logs.go:139] got output "2024-12-03T19:26:28.129297311Z I1203 19:26:28.128957       1 logs_generator.go:76] 9 POST /api/v1/namespaces/ns/pods/24hq 562\n"
  STEP: restricting to a time range @ 12/03/24 19:26:28.136
  I1203 19:26:30.637379 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-logs-1772 logs logs-generator logs-generator --since=1s'
  I1203 19:26:30.731296 23 builder.go:146] stderr: ""
  I1203 19:26:30.731381 23 builder.go:147] stdout: "I1203 19:26:29.729239       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/kube-system/pods/s4dx 427\nI1203 19:26:29.928671       1 logs_generator.go:76] 18 POST /api/v1/namespaces/kube-system/pods/4bq 218\nI1203 19:26:30.129237       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/kube-system/pods/gmd 477\nI1203 19:26:30.328634       1 logs_generator.go:76] 20 GET /api/v1/namespaces/kube-system/pods/ch7w 225\nI1203 19:26:30.529199       1 logs_generator.go:76] 21 POST /api/v1/namespaces/default/pods/7gm6 375\n"
  I1203 19:26:30.731462 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-logs-1772 logs logs-generator logs-generator --since=24h'
  I1203 19:26:30.820188 23 builder.go:146] stderr: ""
  I1203 19:26:30.820340 23 builder.go:147] stdout: "I1203 19:26:26.328544       1 logs_generator.go:76] 0 GET /api/v1/namespaces/default/pods/ljd8 505\nI1203 19:26:26.528846       1 logs_generator.go:76] 1 GET /api/v1/namespaces/kube-system/pods/flck 255\nI1203 19:26:26.729582       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/default/pods/qqld 443\nI1203 19:26:26.929182       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/ns/pods/qct 417\nI1203 19:26:27.128566       1 logs_generator.go:76] 4 POST /api/v1/namespaces/default/pods/lq7 367\nI1203 19:26:27.329189       1 logs_generator.go:76] 5 GET /api/v1/namespaces/ns/pods/hgw 448\nI1203 19:26:27.528618       1 logs_generator.go:76] 6 GET /api/v1/namespaces/kube-system/pods/8vkg 449\nI1203 19:26:27.729228       1 logs_generator.go:76] 7 GET /api/v1/namespaces/kube-system/pods/qg2 248\nI1203 19:26:27.928568       1 logs_generator.go:76] 8 POST /api/v1/namespaces/default/pods/d65 302\nI1203 19:26:28.128957       1 logs_generator.go:76] 9 POST /api/v1/namespaces/ns/pods/24hq 562\nI1203 19:26:28.329513       1 logs_generator.go:76] 10 POST /api/v1/namespaces/default/pods/4png 238\nI1203 19:26:28.529040       1 logs_generator.go:76] 11 GET /api/v1/namespaces/ns/pods/m9j 524\nI1203 19:26:28.729559       1 logs_generator.go:76] 12 GET /api/v1/namespaces/ns/pods/zpl 287\nI1203 19:26:28.929075       1 logs_generator.go:76] 13 GET /api/v1/namespaces/ns/pods/t7mf 322\nI1203 19:26:29.129645       1 logs_generator.go:76] 14 POST /api/v1/namespaces/default/pods/xqwq 441\nI1203 19:26:29.329234       1 logs_generator.go:76] 15 PUT /api/v1/namespaces/kube-system/pods/9sql 546\nI1203 19:26:29.528627       1 logs_generator.go:76] 16 POST /api/v1/namespaces/ns/pods/qdxj 374\nI1203 19:26:29.729239       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/kube-system/pods/s4dx 427\nI1203 19:26:29.928671       1 logs_generator.go:76] 18 POST /api/v1/namespaces/kube-system/pods/4bq 218\nI1203 19:26:30.129237       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/kube-system/pods/gmd 477\nI1203 19:26:30.328634       1 logs_generator.go:76] 20 GET /api/v1/namespaces/kube-system/pods/ch7w 225\nI1203 19:26:30.529199       1 logs_generator.go:76] 21 POST /api/v1/namespaces/default/pods/7gm6 375\nI1203 19:26:30.728598       1 logs_generator.go:76] 22 GET /api/v1/namespaces/ns/pods/l89 372\n"
  I1203 19:26:30.820498 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-logs-1772 delete pod logs-generator'
  I1203 19:26:31.443725 23 builder.go:146] stderr: ""
  I1203 19:26:31.443823 23 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I1203 19:26:31.444079 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-1772" for this suite. @ 12/03/24 19:26:31.449
• [5.819 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 12/03/24 19:26:31.455
  I1203 19:26:31.455674 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename dns @ 12/03/24 19:26:31.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:26:31.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:26:31.474
  STEP: Creating a test headless service @ 12/03/24 19:26:31.479
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-9691.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-9691.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 12/03/24 19:26:31.483
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-9691.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-9691.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 12/03/24 19:26:31.483
  STEP: creating a pod to probe DNS @ 12/03/24 19:26:31.483
  STEP: submitting the pod to kubernetes @ 12/03/24 19:26:31.483
  STEP: retrieving the pod @ 12/03/24 19:26:33.502
  STEP: looking for the results for each expected name from probers @ 12/03/24 19:26:33.506
  I1203 19:26:33.525232 23 dns_common.go:527] DNS probes using dns-9691/dns-test-8bdd5ac1-08b9-490c-b857-7da2c9799581 succeeded

  STEP: deleting the pod @ 12/03/24 19:26:33.525
  STEP: deleting the test headless service @ 12/03/24 19:26:33.541
  I1203 19:26:33.551703 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9691" for this suite. @ 12/03/24 19:26:33.555
• [2.106 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 12/03/24 19:26:33.561
  I1203 19:26:33.561921 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/03/24 19:26:33.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:26:33.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:26:33.906
  STEP: set up a multi version CRD @ 12/03/24 19:26:33.91
  I1203 19:26:33.911793 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: rename a version @ 12/03/24 19:26:37.682
  STEP: check the new version name is served @ 12/03/24 19:26:37.704
  STEP: check the old version name is removed @ 12/03/24 19:26:38.606
  STEP: check the other version is not changed @ 12/03/24 19:26:39.357
  I1203 19:26:42.158852 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2523" for this suite. @ 12/03/24 19:26:42.169
• [8.613 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 12/03/24 19:26:42.176
  I1203 19:26:42.176115 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename var-expansion @ 12/03/24 19:26:42.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:26:42.191
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:26:42.195
  STEP: creating the pod with failed condition @ 12/03/24 19:26:42.2
  STEP: updating the pod @ 12/03/24 19:28:42.208
  I1203 19:28:42.725883 23 pod_client.go:141] Successfully updated pod "var-expansion-5243bd7f-57df-4659-823f-9441d17545d3"
  STEP: waiting for pod running @ 12/03/24 19:28:42.725
  STEP: deleting the pod gracefully @ 12/03/24 19:28:44.734
  I1203 19:28:44.735048 23 delete.go:62] Deleting pod "var-expansion-5243bd7f-57df-4659-823f-9441d17545d3" in namespace "var-expansion-6494"
  I1203 19:28:44.743150 23 delete.go:70] Wait up to 5m0s for pod "var-expansion-5243bd7f-57df-4659-823f-9441d17545d3" to be fully deleted
  I1203 19:29:18.854453 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6494" for this suite. @ 12/03/24 19:29:18.858
• [156.688 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 12/03/24 19:29:18.864
  I1203 19:29:18.864263 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename projected @ 12/03/24 19:29:18.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:29:18.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:29:18.881
  STEP: Creating configMap with name cm-test-opt-del-68585bc8-cc27-4d95-a515-d64cba059154 @ 12/03/24 19:29:18.89
  STEP: Creating configMap with name cm-test-opt-upd-d643e0ac-e52e-4d8a-8889-9da2570b5aff @ 12/03/24 19:29:18.894
  STEP: Creating the pod @ 12/03/24 19:29:18.898
  STEP: Deleting configmap cm-test-opt-del-68585bc8-cc27-4d95-a515-d64cba059154 @ 12/03/24 19:29:20.954
  STEP: Updating configmap cm-test-opt-upd-d643e0ac-e52e-4d8a-8889-9da2570b5aff @ 12/03/24 19:29:20.959
  STEP: Creating configMap with name cm-test-opt-create-5c5b9d1f-5212-47ea-898b-fd98689a297a @ 12/03/24 19:29:20.964
  STEP: waiting to observe update in volume @ 12/03/24 19:29:20.97
  I1203 19:30:47.455330 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4924" for this suite. @ 12/03/24 19:30:47.459
• [88.601 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 12/03/24 19:30:47.464
  I1203 19:30:47.464932 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename webhook @ 12/03/24 19:30:47.466
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:30:47.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:30:47.481
  STEP: Setting up server cert @ 12/03/24 19:30:47.503
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/03/24 19:30:48.086
  STEP: Deploying the webhook pod @ 12/03/24 19:30:48.095
  STEP: Wait for the deployment to be ready @ 12/03/24 19:30:48.109
  I1203 19:30:48.117411 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/03/24 19:30:50.132
  STEP: Verifying the service has paired with the endpoint @ 12/03/24 19:30:50.148
  I1203 19:30:51.148959 23 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 12/03/24 19:30:51.156
  STEP: create a configmap that should be updated by the webhook @ 12/03/24 19:30:51.181
  I1203 19:30:51.247492 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2818" for this suite. @ 12/03/24 19:30:51.252
  STEP: Destroying namespace "webhook-markers-3751" for this suite. @ 12/03/24 19:30:51.256
• [3.799 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 12/03/24 19:30:51.263
  I1203 19:30:51.263918 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename security-context @ 12/03/24 19:30:51.265
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:30:51.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:30:51.281
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 12/03/24 19:30:51.286
  STEP: Saw pod success @ 12/03/24 19:30:55.313
  I1203 19:30:55.317986 23 output.go:196] Trying to get logs from node nodea17 pod security-context-f3a7cea9-bfdb-488b-9cc0-aed68947cfeb container test-container: <nil>
  STEP: delete the pod @ 12/03/24 19:30:55.325
  I1203 19:30:55.339036 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-3202" for this suite. @ 12/03/24 19:30:55.344
• [4.086 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 12/03/24 19:30:55.351
  I1203 19:30:55.351337 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename discovery @ 12/03/24 19:30:55.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:30:55.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:30:55.374
  STEP: Setting up server cert @ 12/03/24 19:30:55.38
  STEP: Requesting APIResourceList from "/api/v1" @ 12/03/24 19:30:55.764
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 12/03/24 19:30:55.767
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 12/03/24 19:30:55.77
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 12/03/24 19:30:55.772
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 12/03/24 19:30:55.773
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 12/03/24 19:30:55.775
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 12/03/24 19:30:55.777
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 12/03/24 19:30:55.779
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 12/03/24 19:30:55.781
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 12/03/24 19:30:55.783
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 12/03/24 19:30:55.785
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 12/03/24 19:30:55.787
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 12/03/24 19:30:55.789
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 12/03/24 19:30:55.792
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 12/03/24 19:30:55.794
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 12/03/24 19:30:55.796
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 12/03/24 19:30:55.799
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 12/03/24 19:30:55.802
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 12/03/24 19:30:55.804
  I1203 19:30:55.806977 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-9653" for this suite. @ 12/03/24 19:30:55.813
• [0.469 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 12/03/24 19:30:55.82
  I1203 19:30:55.820998 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename init-container @ 12/03/24 19:30:55.822
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:30:55.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:30:55.839
  STEP: creating the pod @ 12/03/24 19:30:55.843
  I1203 19:30:55.843615 23 init_container.go:213] PodSpec: initContainers in spec.initContainers
  I1203 19:31:00.370896 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8771" for this suite. @ 12/03/24 19:31:00.375
• [4.562 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 12/03/24 19:31:00.383
  I1203 19:31:00.383837 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename watch @ 12/03/24 19:31:00.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:31:00.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:31:00.401
  STEP: creating a watch on configmaps with a certain label @ 12/03/24 19:31:00.405
  STEP: creating a new configmap @ 12/03/24 19:31:00.408
  STEP: modifying the configmap once @ 12/03/24 19:31:00.413
  STEP: changing the label value of the configmap @ 12/03/24 19:31:00.42
  STEP: Expecting to observe a delete notification for the watched object @ 12/03/24 19:31:00.427
  I1203 19:31:00.427394 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7202  2c94d162-30a2-41ba-a565-1b8295a0500b 7717 0 2024-12-03 19:31:00 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-12-03 19:31:00 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1203 19:31:00.427742 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7202  2c94d162-30a2-41ba-a565-1b8295a0500b 7718 0 2024-12-03 19:31:00 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-12-03 19:31:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1203 19:31:00.427923 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7202  2c94d162-30a2-41ba-a565-1b8295a0500b 7719 0 2024-12-03 19:31:00 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-12-03 19:31:00 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 12/03/24 19:31:00.427
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 12/03/24 19:31:00.437
  STEP: changing the label value of the configmap back @ 12/03/24 19:31:10.437
  STEP: modifying the configmap a third time @ 12/03/24 19:31:10.448
  STEP: deleting the configmap @ 12/03/24 19:31:10.456
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 12/03/24 19:31:10.461
  I1203 19:31:10.461660 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7202  2c94d162-30a2-41ba-a565-1b8295a0500b 7758 0 2024-12-03 19:31:00 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-12-03 19:31:10 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1203 19:31:10.462246 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7202  2c94d162-30a2-41ba-a565-1b8295a0500b 7759 0 2024-12-03 19:31:00 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-12-03 19:31:10 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1203 19:31:10.462454 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-7202  2c94d162-30a2-41ba-a565-1b8295a0500b 7760 0 2024-12-03 19:31:00 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-12-03 19:31:10 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1203 19:31:10.462801 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-7202" for this suite. @ 12/03/24 19:31:10.467
• [10.089 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:808
  STEP: Creating a kubernetes client @ 12/03/24 19:31:10.473
  I1203 19:31:10.473408 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename resourcequota @ 12/03/24 19:31:10.475
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:31:10.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:31:10.491
  STEP: Creating a ResourceQuota with best effort scope @ 12/03/24 19:31:10.496
  STEP: Ensuring ResourceQuota status is calculated @ 12/03/24 19:31:10.5
  STEP: Creating a ResourceQuota with not best effort scope @ 12/03/24 19:31:12.506
  STEP: Ensuring ResourceQuota status is calculated @ 12/03/24 19:31:12.513
  STEP: Creating a best-effort pod @ 12/03/24 19:31:14.518
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 12/03/24 19:31:14.532
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 12/03/24 19:31:16.537
  STEP: Deleting the pod @ 12/03/24 19:31:18.541
  STEP: Ensuring resource quota status released the pod usage @ 12/03/24 19:31:18.551
  STEP: Creating a not best-effort pod @ 12/03/24 19:31:20.557
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 12/03/24 19:31:20.57
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 12/03/24 19:31:22.576
  STEP: Deleting the pod @ 12/03/24 19:31:24.581
  STEP: Ensuring resource quota status released the pod usage @ 12/03/24 19:31:24.597
  I1203 19:31:26.602778 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7571" for this suite. @ 12/03/24 19:31:26.607
• [16.141 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 12/03/24 19:31:26.614
  I1203 19:31:26.614432 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename configmap @ 12/03/24 19:31:26.615
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:31:26.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:31:26.631
  STEP: Creating configMap with name configmap-test-volume-b15e1ed9-9cee-4bc6-980b-164df4c0319d @ 12/03/24 19:31:26.635
  STEP: Creating a pod to test consume configMaps @ 12/03/24 19:31:26.639
  STEP: Saw pod success @ 12/03/24 19:31:30.665
  I1203 19:31:30.669383 23 output.go:196] Trying to get logs from node nodea17 pod pod-configmaps-4db8fed3-9513-45bd-8b4a-0bb38fb1df97 container agnhost-container: <nil>
  STEP: delete the pod @ 12/03/24 19:31:30.677
  I1203 19:31:30.693679 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8637" for this suite. @ 12/03/24 19:31:30.699
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 12/03/24 19:31:30.705
  I1203 19:31:30.705602 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename projected @ 12/03/24 19:31:30.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:31:30.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:31:30.725
  STEP: Creating configMap with name projected-configmap-test-volume-map-6559697e-0436-433b-869f-4b349344948e @ 12/03/24 19:31:30.731
  STEP: Creating a pod to test consume configMaps @ 12/03/24 19:31:30.735
  STEP: Saw pod success @ 12/03/24 19:31:34.76
  I1203 19:31:34.763320 23 output.go:196] Trying to get logs from node nodea17 pod pod-projected-configmaps-c8959352-1bcc-4be3-b2ca-51ced60584ef container agnhost-container: <nil>
  STEP: delete the pod @ 12/03/24 19:31:34.77
  I1203 19:31:34.786087 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6099" for this suite. @ 12/03/24 19:31:34.791
• [4.092 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 12/03/24 19:31:34.798
  I1203 19:31:34.798092 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/03/24 19:31:34.799
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:31:34.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:31:34.813
  I1203 19:31:34.817236 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  I1203 19:31:35.843703 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-6305" for this suite. @ 12/03/24 19:31:35.848
• [1.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 12/03/24 19:31:35.857
  I1203 19:31:35.857694 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename secrets @ 12/03/24 19:31:35.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:31:35.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:31:35.873
  I1203 19:31:35.908671 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1751" for this suite. @ 12/03/24 19:31:35.912
• [0.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 12/03/24 19:31:35.922
  I1203 19:31:35.922973 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename emptydir-wrapper @ 12/03/24 19:31:35.924
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:31:35.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:31:35.94
  STEP: Creating 50 configmaps @ 12/03/24 19:31:35.946
  STEP: Creating RC which spawns configmap-volume pods @ 12/03/24 19:31:36.184
  I1203 19:31:36.285617 23 resource.go:87] Pod name wrapped-volume-race-f64e3173-de4a-482d-b679-9b62fbbad0af: Found 3 pods out of 5
  I1203 19:31:41.297184 23 resource.go:87] Pod name wrapped-volume-race-f64e3173-de4a-482d-b679-9b62fbbad0af: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 12/03/24 19:31:41.297
  STEP: Creating RC which spawns configmap-volume pods @ 12/03/24 19:31:41.322
  I1203 19:31:41.340440 23 resource.go:87] Pod name wrapped-volume-race-dac9871c-2d75-43c3-ad35-90fd4b60179d: Found 0 pods out of 5
  I1203 19:31:46.353256 23 resource.go:87] Pod name wrapped-volume-race-dac9871c-2d75-43c3-ad35-90fd4b60179d: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 12/03/24 19:31:46.353
  STEP: Creating RC which spawns configmap-volume pods @ 12/03/24 19:31:46.379
  I1203 19:31:46.405305 23 resource.go:87] Pod name wrapped-volume-race-9708e3c2-f8a8-4e1e-99d9-83a5db4075e9: Found 0 pods out of 5
  I1203 19:31:51.421709 23 resource.go:87] Pod name wrapped-volume-race-9708e3c2-f8a8-4e1e-99d9-83a5db4075e9: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 12/03/24 19:31:51.421
  STEP: deleting ReplicationController wrapped-volume-race-9708e3c2-f8a8-4e1e-99d9-83a5db4075e9 in namespace emptydir-wrapper-307, will wait for the garbage collector to delete the pods @ 12/03/24 19:31:51.442
  I1203 19:31:51.506315 23 resources.go:139] Deleting ReplicationController wrapped-volume-race-9708e3c2-f8a8-4e1e-99d9-83a5db4075e9 took: 9.56749ms
  I1203 19:31:51.607408 23 resources.go:163] Terminating ReplicationController wrapped-volume-race-9708e3c2-f8a8-4e1e-99d9-83a5db4075e9 pods took: 101.055892ms
  STEP: deleting ReplicationController wrapped-volume-race-dac9871c-2d75-43c3-ad35-90fd4b60179d in namespace emptydir-wrapper-307, will wait for the garbage collector to delete the pods @ 12/03/24 19:31:52.508
  I1203 19:31:52.570744 23 resources.go:139] Deleting ReplicationController wrapped-volume-race-dac9871c-2d75-43c3-ad35-90fd4b60179d took: 6.87355ms
  I1203 19:31:52.671491 23 resources.go:163] Terminating ReplicationController wrapped-volume-race-dac9871c-2d75-43c3-ad35-90fd4b60179d pods took: 100.727708ms
  STEP: deleting ReplicationController wrapped-volume-race-f64e3173-de4a-482d-b679-9b62fbbad0af in namespace emptydir-wrapper-307, will wait for the garbage collector to delete the pods @ 12/03/24 19:31:53.672
  I1203 19:31:53.736835 23 resources.go:139] Deleting ReplicationController wrapped-volume-race-f64e3173-de4a-482d-b679-9b62fbbad0af took: 9.426056ms
  I1203 19:31:53.837496 23 resources.go:163] Terminating ReplicationController wrapped-volume-race-f64e3173-de4a-482d-b679-9b62fbbad0af pods took: 100.656533ms
  STEP: Cleaning up the configMaps @ 12/03/24 19:31:54.738
  I1203 19:31:55.001348 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-307" for this suite. @ 12/03/24 19:31:55.005
• [19.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 12/03/24 19:31:55.012
  I1203 19:31:55.012802 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename projected @ 12/03/24 19:31:55.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:31:55.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:31:55.031
  STEP: Creating a pod to test downward API volume plugin @ 12/03/24 19:31:55.035
  STEP: Saw pod success @ 12/03/24 19:31:59.057
  I1203 19:31:59.061239 23 output.go:196] Trying to get logs from node nodea17 pod downwardapi-volume-ce5a9dc8-1742-4510-a1af-1e3293122cc3 container client-container: <nil>
  STEP: delete the pod @ 12/03/24 19:31:59.067
  I1203 19:31:59.081433 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8230" for this suite. @ 12/03/24 19:31:59.085
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 12/03/24 19:31:59.091
  I1203 19:31:59.091240 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename replicaset @ 12/03/24 19:31:59.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:31:59.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:31:59.107
  I1203 19:31:59.123101 23 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I1203 19:32:04.130616 23 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/03/24 19:32:04.13
  STEP: Scaling up "test-rs" replicaset @ 12/03/24 19:32:04.13
  I1203 19:32:04.141562 23 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 12/03/24 19:32:04.141
  I1203 19:32:04.149489 23 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-8561 with ReadyReplicas 1, AvailableReplicas 1
  I1203 19:32:04.183006 23 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-8561 with ReadyReplicas 1, AvailableReplicas 1
  I1203 19:32:04.196009 23 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-8561 with ReadyReplicas 1, AvailableReplicas 1
  I1203 19:32:04.205334 23 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-8561 with ReadyReplicas 1, AvailableReplicas 1
  I1203 19:32:05.423163 23 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-8561 with ReadyReplicas 2, AvailableReplicas 2
  I1203 19:32:05.648455 23 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-8561 with ReadyReplicas 3 found true
  I1203 19:32:05.648659 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8561" for this suite. @ 12/03/24 19:32:05.653
• [6.568 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 12/03/24 19:32:05.66
  I1203 19:32:05.660161 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename subjectreview @ 12/03/24 19:32:05.661
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:32:05.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:32:05.678
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-5833" @ 12/03/24 19:32:05.682
  I1203 19:32:05.687962 23 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-5833:e2e"
  I1203 19:32:05.688034 23 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-5833"}
  I1203 19:32:05.688055 23 subjectreviews.go:71] saUID: "fc368718-3dfe-4407-ae8c-1481cfb479c6"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-5833:e2e" @ 12/03/24 19:32:05.688
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-5833:e2e" @ 12/03/24 19:32:05.688
  I1203 19:32:05.691427 23 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-5833:e2e" api 'list' configmaps in "subjectreview-5833" namespace @ 12/03/24 19:32:05.691
  I1203 19:32:05.693841 23 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-5833:e2e" @ 12/03/24 19:32:05.693
  I1203 19:32:05.697235 23 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I1203 19:32:05.697310 23 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I1203 19:32:05.697478 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-5833" for this suite. @ 12/03/24 19:32:05.701
• [0.048 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 12/03/24 19:32:05.708
  I1203 19:32:05.708106 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename container-probe @ 12/03/24 19:32:05.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:32:05.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:32:05.726
  STEP: Creating pod liveness-9d291efa-6019-47bd-8c1d-20ef64be2317 in namespace container-probe-7955 @ 12/03/24 19:32:05.73
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/03/24 19:32:07.747
  I1203 19:32:07.750677 23 container_probe.go:1749] Initial restart count of pod liveness-9d291efa-6019-47bd-8c1d-20ef64be2317 is 0
  I1203 19:32:07.754054 23 container_probe.go:1759] Get pod liveness-9d291efa-6019-47bd-8c1d-20ef64be2317 in namespace container-probe-7955
  I1203 19:32:09.760047 23 container_probe.go:1759] Get pod liveness-9d291efa-6019-47bd-8c1d-20ef64be2317 in namespace container-probe-7955
  I1203 19:32:11.765099 23 container_probe.go:1759] Get pod liveness-9d291efa-6019-47bd-8c1d-20ef64be2317 in namespace container-probe-7955
  I1203 19:32:13.771190 23 container_probe.go:1759] Get pod liveness-9d291efa-6019-47bd-8c1d-20ef64be2317 in namespace container-probe-7955
  I1203 19:32:15.775988 23 container_probe.go:1759] Get pod liveness-9d291efa-6019-47bd-8c1d-20ef64be2317 in namespace container-probe-7955
  I1203 19:32:17.781951 23 container_probe.go:1759] Get pod liveness-9d291efa-6019-47bd-8c1d-20ef64be2317 in namespace container-probe-7955
  I1203 19:32:19.787506 23 container_probe.go:1759] Get pod liveness-9d291efa-6019-47bd-8c1d-20ef64be2317 in namespace container-probe-7955
  I1203 19:32:21.793282 23 container_probe.go:1759] Get pod liveness-9d291efa-6019-47bd-8c1d-20ef64be2317 in namespace container-probe-7955
  I1203 19:32:23.799550 23 container_probe.go:1759] Get pod liveness-9d291efa-6019-47bd-8c1d-20ef64be2317 in namespace container-probe-7955
  I1203 19:32:25.804976 23 container_probe.go:1759] Get pod liveness-9d291efa-6019-47bd-8c1d-20ef64be2317 in namespace container-probe-7955
  I1203 19:32:27.811494 23 container_probe.go:1759] Get pod liveness-9d291efa-6019-47bd-8c1d-20ef64be2317 in namespace container-probe-7955
  I1203 19:32:27.811585 23 container_probe.go:1763] Restart count of pod container-probe-7955/liveness-9d291efa-6019-47bd-8c1d-20ef64be2317 is now 1 (20.060864628s elapsed)
  STEP: deleting the pod @ 12/03/24 19:32:27.811
  I1203 19:32:27.824929 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7955" for this suite. @ 12/03/24 19:32:27.831
• [22.128 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 12/03/24 19:32:27.836
  I1203 19:32:27.836507 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename field-validation @ 12/03/24 19:32:27.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:32:27.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:32:27.855
  I1203 19:32:27.859763 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  W1203 19:32:30.424460      23 warnings.go:70] unknown field "alpha"
  W1203 19:32:30.424508      23 warnings.go:70] unknown field "beta"
  W1203 19:32:30.424516      23 warnings.go:70] unknown field "delta"
  W1203 19:32:30.424522      23 warnings.go:70] unknown field "epsilon"
  W1203 19:32:30.424529      23 warnings.go:70] unknown field "gamma"
  I1203 19:32:30.974000 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7143" for this suite. @ 12/03/24 19:32:30.979
• [3.152 seconds]
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1368
  STEP: Creating a kubernetes client @ 12/03/24 19:32:30.988
  I1203 19:32:30.988186 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename kubectl @ 12/03/24 19:32:30.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:32:31.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:32:31.007
  STEP: validating cluster-info @ 12/03/24 19:32:31.012
  I1203 19:32:31.012240 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-8184 cluster-info'
  I1203 19:32:31.112168 23 builder.go:146] stderr: ""
  I1203 19:32:31.112242 23 builder.go:147] stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.96.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I1203 19:32:31.112500 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8184" for this suite. @ 12/03/24 19:32:31.117
• [0.142 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:817
  STEP: Creating a kubernetes client @ 12/03/24 19:32:31.13
  I1203 19:32:31.130145 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename webhook @ 12/03/24 19:32:31.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:32:31.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:32:31.149
  STEP: Setting up server cert @ 12/03/24 19:32:31.17
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/03/24 19:32:31.726
  STEP: Deploying the webhook pod @ 12/03/24 19:32:31.736
  STEP: Wait for the deployment to be ready @ 12/03/24 19:32:31.75
  I1203 19:32:31.758856 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/03/24 19:32:33.772
  STEP: Verifying the service has paired with the endpoint @ 12/03/24 19:32:33.785
  I1203 19:32:34.786096 23 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 12/03/24 19:32:34.795
  I1203 19:32:34.835383 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3075" for this suite. @ 12/03/24 19:32:34.841
  STEP: Destroying namespace "webhook-markers-3471" for this suite. @ 12/03/24 19:32:34.846
• [3.721 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1533
  STEP: Creating a kubernetes client @ 12/03/24 19:32:34.851
  I1203 19:32:34.851721 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename kubectl @ 12/03/24 19:32:34.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:32:34.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:32:34.869
  STEP: creating Agnhost RC @ 12/03/24 19:32:34.874
  I1203 19:32:34.874947 23 kubectl.go:1540] namespace kubectl-1890
  I1203 19:32:34.875057 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-1890 create -f -'
  I1203 19:32:35.062225 23 builder.go:146] stderr: ""
  I1203 19:32:35.062307 23 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 12/03/24 19:32:35.062
  I1203 19:32:36.067434 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1203 19:32:36.067499 23 framework.go:733] Found 0 / 1
  I1203 19:32:37.067900 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1203 19:32:37.067972 23 framework.go:733] Found 1 / 1
  I1203 19:32:37.068004 23 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I1203 19:32:37.071260 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1203 19:32:37.071327 23 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1203 19:32:37.071363 23 kubectl.go:1547] wait on agnhost-primary startup in kubectl-1890 
  I1203 19:32:37.071478 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-1890 logs agnhost-primary-hlwjp agnhost-primary'
  I1203 19:32:37.174511 23 builder.go:146] stderr: ""
  I1203 19:32:37.174602 23 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 12/03/24 19:32:37.174
  I1203 19:32:37.174776 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-1890 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I1203 19:32:37.301528 23 builder.go:146] stderr: ""
  I1203 19:32:37.301606 23 builder.go:147] stdout: "service/rm2 exposed\n"
  I1203 19:32:37.304964 23 utils.go:1179] Service rm2 in namespace kubectl-1890 found.
  STEP: exposing service @ 12/03/24 19:32:39.313
  I1203 19:32:39.313302 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-1890 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I1203 19:32:39.438185 23 builder.go:146] stderr: ""
  I1203 19:32:39.438303 23 builder.go:147] stdout: "service/rm3 exposed\n"
  I1203 19:32:39.441918 23 utils.go:1179] Service rm3 in namespace kubectl-1890 found.
  I1203 19:32:41.450422 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1890" for this suite. @ 12/03/24 19:32:41.455
• [6.610 seconds]
------------------------------
SSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 12/03/24 19:32:41.461
  I1203 19:32:41.461531 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename conformance-tests @ 12/03/24 19:32:41.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:32:41.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:32:41.481
  STEP: Getting node addresses @ 12/03/24 19:32:41.485
  I1203 19:32:41.485609 23 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I1203 19:32:41.492037 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-4520" for this suite. @ 12/03/24 19:32:41.495
• [0.040 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 12/03/24 19:32:41.501
  I1203 19:32:41.501689 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename runtimeclass @ 12/03/24 19:32:41.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:32:41.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:32:41.519
  I1203 19:32:41.531062 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1664" for this suite. @ 12/03/24 19:32:41.534
• [0.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 12/03/24 19:32:41.54
  I1203 19:32:41.540729 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename downward-api @ 12/03/24 19:32:41.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:32:41.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:32:41.559
  STEP: Creating a pod to test downward API volume plugin @ 12/03/24 19:32:41.563
  STEP: Saw pod success @ 12/03/24 19:32:45.585
  I1203 19:32:45.588858 23 output.go:196] Trying to get logs from node nodea17 pod downwardapi-volume-6e36464f-80e6-4f4a-87d5-dc54ee3e9d37 container client-container: <nil>
  STEP: delete the pod @ 12/03/24 19:32:45.595
  I1203 19:32:45.612096 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4810" for this suite. @ 12/03/24 19:32:45.616
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 12/03/24 19:32:45.629
  I1203 19:32:45.629315 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename webhook @ 12/03/24 19:32:45.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:32:45.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:32:45.647
  STEP: Setting up server cert @ 12/03/24 19:32:45.67
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/03/24 19:32:46.071
  STEP: Deploying the webhook pod @ 12/03/24 19:32:46.079
  STEP: Wait for the deployment to be ready @ 12/03/24 19:32:46.091
  I1203 19:32:46.102038 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/03/24 19:32:48.115
  STEP: Verifying the service has paired with the endpoint @ 12/03/24 19:32:48.131
  I1203 19:32:49.131749 23 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 12/03/24 19:32:49.139
  STEP: create a pod that should be updated by the webhook @ 12/03/24 19:32:49.162
  I1203 19:32:49.235415 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8889" for this suite. @ 12/03/24 19:32:49.239
  STEP: Destroying namespace "webhook-markers-7410" for this suite. @ 12/03/24 19:32:49.244
• [3.620 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 12/03/24 19:32:49.25
  I1203 19:32:49.250191 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename gc @ 12/03/24 19:32:49.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:32:49.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:32:49.268
  STEP: create the rc @ 12/03/24 19:32:49.276
  W1203 19:32:49.281899      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 12/03/24 19:32:55.287
  STEP: wait for the rc to be deleted @ 12/03/24 19:32:55.294
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 12/03/24 19:33:00.303
  STEP: Gathering metrics @ 12/03/24 19:33:30.331
  I1203 19:33:30.465655 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1203 19:33:30.465885 23 delete.go:95] Deleting pod "simpletest.rc-25vg9" in namespace "gc-70"
  I1203 19:33:30.480681 23 delete.go:95] Deleting pod "simpletest.rc-2kpkp" in namespace "gc-70"
  I1203 19:33:30.489222 23 delete.go:95] Deleting pod "simpletest.rc-2ndp2" in namespace "gc-70"
  I1203 19:33:30.500304 23 delete.go:95] Deleting pod "simpletest.rc-2sv6k" in namespace "gc-70"
  I1203 19:33:30.508544 23 delete.go:95] Deleting pod "simpletest.rc-2vtqz" in namespace "gc-70"
  I1203 19:33:30.517402 23 delete.go:95] Deleting pod "simpletest.rc-2vxjl" in namespace "gc-70"
  I1203 19:33:30.525853 23 delete.go:95] Deleting pod "simpletest.rc-44h5n" in namespace "gc-70"
  I1203 19:33:30.535241 23 delete.go:95] Deleting pod "simpletest.rc-48hgq" in namespace "gc-70"
  I1203 19:33:30.547526 23 delete.go:95] Deleting pod "simpletest.rc-49hps" in namespace "gc-70"
  I1203 19:33:30.557517 23 delete.go:95] Deleting pod "simpletest.rc-4hczk" in namespace "gc-70"
  I1203 19:33:30.565845 23 delete.go:95] Deleting pod "simpletest.rc-4plzw" in namespace "gc-70"
  I1203 19:33:30.576490 23 delete.go:95] Deleting pod "simpletest.rc-4wwl8" in namespace "gc-70"
  I1203 19:33:30.585825 23 delete.go:95] Deleting pod "simpletest.rc-55vjw" in namespace "gc-70"
  I1203 19:33:30.599087 23 delete.go:95] Deleting pod "simpletest.rc-5flj4" in namespace "gc-70"
  I1203 19:33:30.613561 23 delete.go:95] Deleting pod "simpletest.rc-6485r" in namespace "gc-70"
  I1203 19:33:30.624411 23 delete.go:95] Deleting pod "simpletest.rc-67q6m" in namespace "gc-70"
  I1203 19:33:30.636246 23 delete.go:95] Deleting pod "simpletest.rc-6kxfg" in namespace "gc-70"
  I1203 19:33:30.644367 23 delete.go:95] Deleting pod "simpletest.rc-6qmxq" in namespace "gc-70"
  I1203 19:33:30.654532 23 delete.go:95] Deleting pod "simpletest.rc-6thnm" in namespace "gc-70"
  I1203 19:33:30.663577 23 delete.go:95] Deleting pod "simpletest.rc-72wxt" in namespace "gc-70"
  I1203 19:33:30.672146 23 delete.go:95] Deleting pod "simpletest.rc-74jj7" in namespace "gc-70"
  I1203 19:33:30.679156 23 delete.go:95] Deleting pod "simpletest.rc-78gdq" in namespace "gc-70"
  I1203 19:33:30.686901 23 delete.go:95] Deleting pod "simpletest.rc-7cskq" in namespace "gc-70"
  I1203 19:33:30.697176 23 delete.go:95] Deleting pod "simpletest.rc-7p2dn" in namespace "gc-70"
  I1203 19:33:30.722488 23 delete.go:95] Deleting pod "simpletest.rc-7rkn6" in namespace "gc-70"
  I1203 19:33:30.734517 23 delete.go:95] Deleting pod "simpletest.rc-7txcf" in namespace "gc-70"
  I1203 19:33:30.743186 23 delete.go:95] Deleting pod "simpletest.rc-7wbmk" in namespace "gc-70"
  I1203 19:33:30.753574 23 delete.go:95] Deleting pod "simpletest.rc-8b8jr" in namespace "gc-70"
  I1203 19:33:30.764909 23 delete.go:95] Deleting pod "simpletest.rc-8lxnd" in namespace "gc-70"
  I1203 19:33:30.772669 23 delete.go:95] Deleting pod "simpletest.rc-8n9k9" in namespace "gc-70"
  I1203 19:33:30.780542 23 delete.go:95] Deleting pod "simpletest.rc-8vmww" in namespace "gc-70"
  I1203 19:33:30.789246 23 delete.go:95] Deleting pod "simpletest.rc-8wnvs" in namespace "gc-70"
  I1203 19:33:30.797853 23 delete.go:95] Deleting pod "simpletest.rc-96nbv" in namespace "gc-70"
  I1203 19:33:30.808079 23 delete.go:95] Deleting pod "simpletest.rc-98c5q" in namespace "gc-70"
  I1203 19:33:30.815060 23 delete.go:95] Deleting pod "simpletest.rc-99fxm" in namespace "gc-70"
  I1203 19:33:30.833116 23 delete.go:95] Deleting pod "simpletest.rc-9rsk9" in namespace "gc-70"
  I1203 19:33:30.843930 23 delete.go:95] Deleting pod "simpletest.rc-b2t8l" in namespace "gc-70"
  I1203 19:33:30.859135 23 delete.go:95] Deleting pod "simpletest.rc-b55z6" in namespace "gc-70"
  I1203 19:33:30.867202 23 delete.go:95] Deleting pod "simpletest.rc-bccrb" in namespace "gc-70"
  I1203 19:33:30.878505 23 delete.go:95] Deleting pod "simpletest.rc-bfshw" in namespace "gc-70"
  I1203 19:33:30.886302 23 delete.go:95] Deleting pod "simpletest.rc-bjlc4" in namespace "gc-70"
  I1203 19:33:30.894511 23 delete.go:95] Deleting pod "simpletest.rc-bk928" in namespace "gc-70"
  I1203 19:33:30.903285 23 delete.go:95] Deleting pod "simpletest.rc-bndx5" in namespace "gc-70"
  I1203 19:33:30.913765 23 delete.go:95] Deleting pod "simpletest.rc-br4tx" in namespace "gc-70"
  I1203 19:33:30.921184 23 delete.go:95] Deleting pod "simpletest.rc-cr876" in namespace "gc-70"
  I1203 19:33:30.931020 23 delete.go:95] Deleting pod "simpletest.rc-csh58" in namespace "gc-70"
  I1203 19:33:30.940954 23 delete.go:95] Deleting pod "simpletest.rc-d55mh" in namespace "gc-70"
  I1203 19:33:30.947888 23 delete.go:95] Deleting pod "simpletest.rc-d5tfm" in namespace "gc-70"
  I1203 19:33:30.956186 23 delete.go:95] Deleting pod "simpletest.rc-d8qkm" in namespace "gc-70"
  I1203 19:33:30.964155 23 delete.go:95] Deleting pod "simpletest.rc-dvwqv" in namespace "gc-70"
  I1203 19:33:30.978196 23 delete.go:95] Deleting pod "simpletest.rc-fcb2g" in namespace "gc-70"
  I1203 19:33:30.986014 23 delete.go:95] Deleting pod "simpletest.rc-fjn8q" in namespace "gc-70"
  I1203 19:33:30.994891 23 delete.go:95] Deleting pod "simpletest.rc-fkc78" in namespace "gc-70"
  I1203 19:33:31.005750 23 delete.go:95] Deleting pod "simpletest.rc-fm4vt" in namespace "gc-70"
  I1203 19:33:31.019229 23 delete.go:95] Deleting pod "simpletest.rc-fn49w" in namespace "gc-70"
  I1203 19:33:31.028344 23 delete.go:95] Deleting pod "simpletest.rc-gh6cn" in namespace "gc-70"
  I1203 19:33:31.036997 23 delete.go:95] Deleting pod "simpletest.rc-gr7xz" in namespace "gc-70"
  I1203 19:33:31.047384 23 delete.go:95] Deleting pod "simpletest.rc-hxkdm" in namespace "gc-70"
  I1203 19:33:31.060324 23 delete.go:95] Deleting pod "simpletest.rc-j7hm2" in namespace "gc-70"
  I1203 19:33:31.071471 23 delete.go:95] Deleting pod "simpletest.rc-jmdh9" in namespace "gc-70"
  I1203 19:33:31.079241 23 delete.go:95] Deleting pod "simpletest.rc-jzzpz" in namespace "gc-70"
  I1203 19:33:31.090470 23 delete.go:95] Deleting pod "simpletest.rc-k67hx" in namespace "gc-70"
  I1203 19:33:31.118971 23 delete.go:95] Deleting pod "simpletest.rc-l44m8" in namespace "gc-70"
  I1203 19:33:31.172425 23 delete.go:95] Deleting pod "simpletest.rc-lg4kr" in namespace "gc-70"
  I1203 19:33:31.218217 23 delete.go:95] Deleting pod "simpletest.rc-lj25f" in namespace "gc-70"
  I1203 19:33:31.271670 23 delete.go:95] Deleting pod "simpletest.rc-lq4p8" in namespace "gc-70"
  I1203 19:33:31.321351 23 delete.go:95] Deleting pod "simpletest.rc-lwgxc" in namespace "gc-70"
  I1203 19:33:31.369743 23 delete.go:95] Deleting pod "simpletest.rc-n7mvc" in namespace "gc-70"
  I1203 19:33:31.420025 23 delete.go:95] Deleting pod "simpletest.rc-nkfm2" in namespace "gc-70"
  I1203 19:33:31.474760 23 delete.go:95] Deleting pod "simpletest.rc-nsrgt" in namespace "gc-70"
  I1203 19:33:31.520710 23 delete.go:95] Deleting pod "simpletest.rc-ntxq6" in namespace "gc-70"
  I1203 19:33:31.571882 23 delete.go:95] Deleting pod "simpletest.rc-nw7hn" in namespace "gc-70"
  I1203 19:33:31.619086 23 delete.go:95] Deleting pod "simpletest.rc-p725w" in namespace "gc-70"
  I1203 19:33:31.673443 23 delete.go:95] Deleting pod "simpletest.rc-pbvc2" in namespace "gc-70"
  I1203 19:33:31.719769 23 delete.go:95] Deleting pod "simpletest.rc-pj98d" in namespace "gc-70"
  I1203 19:33:31.768872 23 delete.go:95] Deleting pod "simpletest.rc-qpzhl" in namespace "gc-70"
  I1203 19:33:31.821867 23 delete.go:95] Deleting pod "simpletest.rc-r7bbm" in namespace "gc-70"
  I1203 19:33:31.872551 23 delete.go:95] Deleting pod "simpletest.rc-rf2b4" in namespace "gc-70"
  I1203 19:33:31.919463 23 delete.go:95] Deleting pod "simpletest.rc-rtfdz" in namespace "gc-70"
  I1203 19:33:31.971587 23 delete.go:95] Deleting pod "simpletest.rc-sqwmt" in namespace "gc-70"
  I1203 19:33:32.026393 23 delete.go:95] Deleting pod "simpletest.rc-svglr" in namespace "gc-70"
  I1203 19:33:32.071117 23 delete.go:95] Deleting pod "simpletest.rc-szgsg" in namespace "gc-70"
  I1203 19:33:32.122666 23 delete.go:95] Deleting pod "simpletest.rc-tdq6m" in namespace "gc-70"
  I1203 19:33:32.170843 23 delete.go:95] Deleting pod "simpletest.rc-tf9lz" in namespace "gc-70"
  I1203 19:33:32.222338 23 delete.go:95] Deleting pod "simpletest.rc-tgqj2" in namespace "gc-70"
  I1203 19:33:32.271462 23 delete.go:95] Deleting pod "simpletest.rc-tj9bk" in namespace "gc-70"
  I1203 19:33:32.319715 23 delete.go:95] Deleting pod "simpletest.rc-ttftg" in namespace "gc-70"
  I1203 19:33:32.374421 23 delete.go:95] Deleting pod "simpletest.rc-v7gf4" in namespace "gc-70"
  I1203 19:33:32.421709 23 delete.go:95] Deleting pod "simpletest.rc-vdq9f" in namespace "gc-70"
  I1203 19:33:32.473790 23 delete.go:95] Deleting pod "simpletest.rc-vnj52" in namespace "gc-70"
  I1203 19:33:32.523372 23 delete.go:95] Deleting pod "simpletest.rc-vrccz" in namespace "gc-70"
  I1203 19:33:32.571874 23 delete.go:95] Deleting pod "simpletest.rc-vw94p" in namespace "gc-70"
  I1203 19:33:32.622455 23 delete.go:95] Deleting pod "simpletest.rc-w2mmf" in namespace "gc-70"
  I1203 19:33:32.671822 23 delete.go:95] Deleting pod "simpletest.rc-wnflh" in namespace "gc-70"
  I1203 19:33:32.722459 23 delete.go:95] Deleting pod "simpletest.rc-wng8w" in namespace "gc-70"
  I1203 19:33:32.770952 23 delete.go:95] Deleting pod "simpletest.rc-wptpc" in namespace "gc-70"
  I1203 19:33:32.821906 23 delete.go:95] Deleting pod "simpletest.rc-xjvf9" in namespace "gc-70"
  I1203 19:33:32.871974 23 delete.go:95] Deleting pod "simpletest.rc-z8t74" in namespace "gc-70"
  I1203 19:33:32.921321 23 delete.go:95] Deleting pod "simpletest.rc-zlz5f" in namespace "gc-70"
  I1203 19:33:32.972625 23 delete.go:95] Deleting pod "simpletest.rc-zt6xp" in namespace "gc-70"
  I1203 19:33:33.022758 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-70" for this suite. @ 12/03/24 19:33:33.064
• [43.866 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:57
  STEP: Creating a kubernetes client @ 12/03/24 19:33:33.116
  I1203 19:33:33.116413 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename volumeattachment @ 12/03/24 19:33:33.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:33:33.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:33:33.14
  STEP: Create VolumeAttachment "va-e2e-zfrrh" on node "nodea17" @ 12/03/24 19:33:33.148
  STEP: Get VolumeAttachment "va-e2e-zfrrh" on node "nodea17" @ 12/03/24 19:33:33.153
  STEP: Patch VolumeAttachment "va-e2e-zfrrh" on node "nodea17" @ 12/03/24 19:33:33.156
  STEP: List VolumeAttachments with "va-e2e-zfrrh=patched" label @ 12/03/24 19:33:33.163
  STEP: Delete VolumeAttachment "va-e2e-zfrrh" on node "nodea17" @ 12/03/24 19:33:33.167
  STEP: Confirm deletion of VolumeAttachment "va-e2e-zfrrh" on node "nodea17" @ 12/03/24 19:33:33.172
  STEP: Create VolumeAttachment "va-e2e-rv5mh" on node "nodeb14" @ 12/03/24 19:33:33.178
  STEP: Update the VolumeAttachment "va-e2e-rv5mh" on node "nodeb14" with label "va-e2e=updated" @ 12/03/24 19:33:33.183
  STEP: Create VolumeAttachment "va-e2e-dsf8w" on node "nodea17" @ 12/03/24 19:33:33.193
  STEP: Update the VolumeAttachment "va-e2e-dsf8w" on node "nodea17" with label "va-e2e=updated" @ 12/03/24 19:33:33.196
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 12/03/24 19:33:33.203
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 12/03/24 19:33:33.21
  I1203 19:33:33.213648 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-9305" for this suite. @ 12/03/24 19:33:33.217
• [0.106 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 12/03/24 19:33:33.222
  I1203 19:33:33.222312 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 12/03/24 19:33:33.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:33:33.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:33:33.248
  STEP: Setting up the test @ 12/03/24 19:33:33.252
  STEP: Creating hostNetwork=false pod @ 12/03/24 19:33:33.252
  STEP: Creating hostNetwork=true pod @ 12/03/24 19:33:35.273
  STEP: Running the test @ 12/03/24 19:33:37.294
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 12/03/24 19:33:37.294
  I1203 19:33:37.294960 23 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-241 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1203 19:33:37.294990 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  I1203 19:33:37.295881 23 exec_util.go:62] ExecWithOptions: Clientset creation
  I1203 19:33:37.295984 23 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-241/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1203 19:33:37.376082 23 exec_util.go:106] Exec stderr: ""
  I1203 19:33:37.376209 23 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-241 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1203 19:33:37.376318 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  I1203 19:33:37.377465 23 exec_util.go:62] ExecWithOptions: Clientset creation
  I1203 19:33:37.377665 23 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-241/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1203 19:33:37.453108 23 exec_util.go:106] Exec stderr: ""
  I1203 19:33:37.453202 23 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-241 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1203 19:33:37.453223 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  I1203 19:33:37.454242 23 exec_util.go:62] ExecWithOptions: Clientset creation
  I1203 19:33:37.454344 23 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-241/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1203 19:33:37.524643 23 exec_util.go:106] Exec stderr: ""
  I1203 19:33:37.524709 23 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-241 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1203 19:33:37.524722 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  I1203 19:33:37.525353 23 exec_util.go:62] ExecWithOptions: Clientset creation
  I1203 19:33:37.525423 23 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-241/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1203 19:33:37.593311 23 exec_util.go:106] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 12/03/24 19:33:37.593
  I1203 19:33:37.593409 23 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-241 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1203 19:33:37.593422 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  I1203 19:33:37.593989 23 exec_util.go:62] ExecWithOptions: Clientset creation
  I1203 19:33:37.594057 23 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-241/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I1203 19:33:37.666919 23 exec_util.go:106] Exec stderr: ""
  I1203 19:33:37.667010 23 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-241 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1203 19:33:37.667029 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  I1203 19:33:37.667968 23 exec_util.go:62] ExecWithOptions: Clientset creation
  I1203 19:33:37.668078 23 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-241/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I1203 19:33:37.749146 23 exec_util.go:106] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 12/03/24 19:33:37.749
  I1203 19:33:37.749294 23 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-241 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1203 19:33:37.749324 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  I1203 19:33:37.750284 23 exec_util.go:62] ExecWithOptions: Clientset creation
  I1203 19:33:37.750397 23 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-241/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1203 19:33:37.818899 23 exec_util.go:106] Exec stderr: ""
  I1203 19:33:37.818966 23 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-241 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1203 19:33:37.818980 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  I1203 19:33:37.819642 23 exec_util.go:62] ExecWithOptions: Clientset creation
  I1203 19:33:37.819714 23 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-241/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1203 19:33:37.896795 23 exec_util.go:106] Exec stderr: ""
  I1203 19:33:37.896894 23 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-241 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1203 19:33:37.896919 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  I1203 19:33:37.897858 23 exec_util.go:62] ExecWithOptions: Clientset creation
  I1203 19:33:37.897972 23 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-241/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1203 19:33:37.975373 23 exec_util.go:106] Exec stderr: ""
  I1203 19:33:37.975481 23 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-241 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1203 19:33:37.975511 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  I1203 19:33:37.976431 23 exec_util.go:62] ExecWithOptions: Clientset creation
  I1203 19:33:37.976550 23 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-241/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1203 19:33:38.046732 23 exec_util.go:106] Exec stderr: ""
  I1203 19:33:38.046995 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-241" for this suite. @ 12/03/24 19:33:38.052
• [4.839 seconds]
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 12/03/24 19:33:38.061
  I1203 19:33:38.061531 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename gc @ 12/03/24 19:33:38.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:33:38.074
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:33:38.079
  STEP: create the deployment @ 12/03/24 19:33:38.084
  W1203 19:33:38.090976      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 12/03/24 19:33:38.091
  STEP: delete the deployment @ 12/03/24 19:33:38.598
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 12/03/24 19:33:38.605
  STEP: Gathering metrics @ 12/03/24 19:33:39.495
  I1203 19:33:39.590026 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1203 19:33:39.590240 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8541" for this suite. @ 12/03/24 19:33:39.597
• [1.542 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 12/03/24 19:33:39.604
  I1203 19:33:39.604166 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename deployment @ 12/03/24 19:33:39.605
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:33:39.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:33:39.624
  I1203 19:33:39.629895 23 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I1203 19:33:39.638672 23 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I1203 19:33:44.643575 23 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/03/24 19:33:44.643
  I1203 19:33:52.668835 23 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I1203 19:33:52.674974 23 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I1203 19:33:52.699514 23 deployment.go:222] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I1203 19:33:54.708092 23 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I1203 19:33:54.711549 23 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I1203 19:33:54.723398 23 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6153",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7c59ced5-4b3e-4399-9174-3943afca46cd",
      ResourceVersion: (string) (len=5) "10988",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868851232,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868851232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868851233,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868851232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868851232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868851233,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868851232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6f4b778cd6\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1203 19:33:54.730594 23 deployment.go:39] New ReplicaSet "test-rolling-update-deployment-6f4b778cd6" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6f4b778cd6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6153",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "353f980c-8c16-4740-894f-cbbb3454b240",
      ResourceVersion: (string) (len=5) "10979",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868851232,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "7c59ced5-4b3e-4399-9174-3943afca46cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868851232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 63 35 39 63 65  64 35 2d 34 62 33 65 2d  |\"7c59ced5-4b3e-|
              00000120  34 33 39 39 2d 39 31 37  34 2d 33 39 34 33 61 66  |4399-9174-3943af|
              00000130  63 61 34 36 63 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |ca46cd\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868851233,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6",
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1203 19:33:54.732764 23 deployment.go:44] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I1203 19:33:54.733258 23 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6153",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2622a9f5-97c8-4b2d-89af-b89fb579cff8",
      ResourceVersion: (string) (len=5) "10987",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868851219,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "7c59ced5-4b3e-4399-9174-3943afca46cd",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868851219,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868851233,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 37 63 35 39 63 65 64  |"uid\":\"7c59ced|
              000000b0  35 2d 34 62 33 65 2d 34  33 39 39 2d 39 31 37 34  |5-4b3e-4399-9174|
              000000c0  2d 33 39 34 33 61 66 63  61 34 36 63 64 5c 22 7d  |-3943afca46cd\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868851233,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1203 19:33:54.739681 23 deployment.go:67] Pod "test-rolling-update-deployment-6f4b778cd6-kkzc5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6f4b778cd6-kkzc5",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6f4b778cd6-",
      Namespace: (string) (len=15) "deployment-6153",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "72df3b0c-15ea-4f2c-95d8-1a1a7af397e0",
      ResourceVersion: (string) (len=5) "10978",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868851232,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6f4b778cd6",
          UID: (types.UID) (len=36) "353f980c-8c16-4740-894f-cbbb3454b240",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868851232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 35  33 66 39 38 30 63 2d 38  |d\":\"353f980c-8|
              00000090  63 31 36 2d 34 37 34 30  2d 38 39 34 66 2d 63 62  |c16-4740-894f-cb|
              000000a0  62 62 33 34 35 34 62 32  34 30 5c 22 7d 22 3a 7b  |bb3454b240\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868851233,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  35 30 5c 22 7d 22 3a 7b  |.244.1.150\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8tptb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8tptb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea17",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868851233,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868851232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868851233,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868851233,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868851232,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.100.37",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.100.37"
        }
      },
      PodIP: (string) (len=12) "10.244.1.150",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.150"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868851232,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63868851233,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://6cadebd2166835a4bb42b739b59ac7b0d8e01a7b98d4078fa5250ebeb318d175",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1203 19:33:54.741863 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6153" for this suite. @ 12/03/24 19:33:54.746
• [15.148 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:430
  STEP: Creating a kubernetes client @ 12/03/24 19:33:54.753
  I1203 19:33:54.753084 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename pv @ 12/03/24 19:33:54.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:33:54.767
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:33:54.771
  STEP: Creating initial PV and PVC @ 12/03/24 19:33:54.775
  I1203 19:33:54.775667 23 pv.go:390] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-9576" @ 12/03/24 19:33:54.789
  STEP: Listing PVCs in namespace "pv-9576" @ 12/03/24 19:33:54.792
  STEP: Patching the PV "pv-9576-cr87t" @ 12/03/24 19:33:54.797
  STEP: Patching the PVC "pvc-lctfl" @ 12/03/24 19:33:54.812
  STEP: Getting PV "pv-9576-cr87t" @ 12/03/24 19:33:54.82
  STEP: Getting PVC "pvc-lctfl" @ 12/03/24 19:33:54.826
  STEP: Deleting PVC "pvc-lctfl" @ 12/03/24 19:33:54.829
  STEP: Confirm deletion of PVC "pvc-lctfl" @ 12/03/24 19:33:54.836
  STEP: Deleting PV "pv-9576-cr87t" @ 12/03/24 19:33:56.847
  STEP: Confirm deletion of PV "pv-9576-cr87t" @ 12/03/24 19:33:56.854
  STEP: Recreating another PV & PVC @ 12/03/24 19:33:58.862
  I1203 19:33:58.862696 23 pv.go:390] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-9576-fc9ss" @ 12/03/24 19:33:58.875
  STEP: Updating the PVC "pvc-mrdxm" @ 12/03/24 19:33:58.905
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-mrdxm=updated" @ 12/03/24 19:33:58.915
  STEP: Deleting PVC "pvc-mrdxm" via DeleteCollection @ 12/03/24 19:33:58.919
  STEP: Confirm deletion of PVC "pvc-mrdxm" @ 12/03/24 19:33:58.926
  STEP: Deleting PV "pv-9576-fc9ss" via DeleteCollection @ 12/03/24 19:34:00.935
  STEP: Confirm deletion of PV "pv-9576-fc9ss" @ 12/03/24 19:34:00.945
  I1203 19:34:02.953978 23 persistent_volumes.go:407] AfterEach: deleting 1 PVCs and 1 PVs...
  I1203 19:34:02.954028 23 pv.go:201] Deleting PersistentVolumeClaim "pvc-mrdxm"
  I1203 19:34:02.957751 23 pv.go:189] Deleting PersistentVolume "pv-9576-fc9ss"
  I1203 19:34:02.961524 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-9576" for this suite. @ 12/03/24 19:34:02.966
• [8.219 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 12/03/24 19:34:02.972
  I1203 19:34:02.972132 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename server-version @ 12/03/24 19:34:02.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:34:02.986
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:34:02.99
  STEP: Request ServerVersion @ 12/03/24 19:34:02.995
  STEP: Confirm major version @ 12/03/24 19:34:02.996
  I1203 19:34:02.996935 23 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 12/03/24 19:34:02.996
  I1203 19:34:02.996990 23 server_version.go:58] cleanMinorVersion: 30
  I1203 19:34:02.997015 23 server_version.go:62] Minor version: 30+
  I1203 19:34:02.997121 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-3816" for this suite. @ 12/03/24 19:34:03.001
• [0.035 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 12/03/24 19:34:03.007
  I1203 19:34:03.007202 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename chunking @ 12/03/24 19:34:03.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:34:03.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:34:03.026
  STEP: creating a large number of resources @ 12/03/24 19:34:03.03
  STEP: retrieving the first page @ 12/03/24 19:34:20.716
  I1203 19:34:20.766914 23 chunking.go:163] Retrieved 40/40 results with rv 11504 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 12/03/24 19:34:20.766
  I1203 19:34:40.775704 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1203 19:35:00.774492 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1203 19:35:20.775658 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1203 19:35:40.780759 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1203 19:36:00.777521 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1203 19:36:20.775247 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1203 19:36:40.776622 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1203 19:37:00.776719 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1203 19:37:20.774873 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1203 19:37:40.774357 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1203 19:38:00.780656 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1203 19:38:20.777970 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1203 19:38:40.774832 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1203 19:39:00.776938 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1203 19:39:20.775881 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1203 19:39:40.776094 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1203 19:40:00.775591 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1203 19:40:20.774461 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1203 19:40:40.775798 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1203 19:41:00.776302 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1203 19:41:20.775874 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1203 19:41:40.774252 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1203 19:42:00.775801 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1203 19:42:20.775644 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1203 19:42:40.775482 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1203 19:43:00.775008 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1203 19:43:20.775009 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1203 19:43:40.775774 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1203 19:44:00.776306 23 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTE1MDQsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  I1203 19:44:20.774440 23 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I1203 19:44:20.774600 23 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 12/03/24 19:44:20.774
  STEP: retrieving all remaining pages @ 12/03/24 19:44:20.782
  I1203 19:44:20.788669 23 chunking.go:221] Retrieved 40/40 results with rv 12406 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTI0MDYsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I1203 19:44:20.794720 23 chunking.go:221] Retrieved 40/40 results with rv 12406 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTI0MDYsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I1203 19:44:20.800276 23 chunking.go:221] Retrieved 40/40 results with rv 12406 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTI0MDYsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I1203 19:44:20.805754 23 chunking.go:221] Retrieved 40/40 results with rv 12406 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTI0MDYsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I1203 19:44:20.810751 23 chunking.go:221] Retrieved 40/40 results with rv 12406 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTI0MDYsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I1203 19:44:20.816324 23 chunking.go:221] Retrieved 40/40 results with rv 12406 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTI0MDYsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I1203 19:44:20.821714 23 chunking.go:221] Retrieved 40/40 results with rv 12406 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTI0MDYsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I1203 19:44:20.827538 23 chunking.go:221] Retrieved 40/40 results with rv 12406 and continue 
  I1203 19:44:20.828214 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-2169" for this suite. @ 12/03/24 19:44:20.833
• [617.834 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 12/03/24 19:44:20.841
  I1203 19:44:20.841099 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename subpath @ 12/03/24 19:44:20.842
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:44:20.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:44:20.87
  STEP: Setting up data @ 12/03/24 19:44:20.874
  STEP: Creating pod pod-subpath-test-projected-tfst @ 12/03/24 19:44:20.885
  STEP: Creating a pod to test atomic-volume-subpath @ 12/03/24 19:44:20.886
  STEP: Saw pod success @ 12/03/24 19:44:44.971
  I1203 19:44:44.975940 23 output.go:196] Trying to get logs from node nodea17 pod pod-subpath-test-projected-tfst container test-container-subpath-projected-tfst: <nil>
  STEP: delete the pod @ 12/03/24 19:44:44.999
  STEP: Deleting pod pod-subpath-test-projected-tfst @ 12/03/24 19:44:45.017
  I1203 19:44:45.017857 23 delete.go:62] Deleting pod "pod-subpath-test-projected-tfst" in namespace "subpath-777"
  I1203 19:44:45.023129 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-777" for this suite. @ 12/03/24 19:44:45.027
• [24.193 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 12/03/24 19:44:45.034
  I1203 19:44:45.034978 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename replicaset @ 12/03/24 19:44:45.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:44:45.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:44:45.054
  STEP: Create a Replicaset @ 12/03/24 19:44:45.062
  STEP: Verify that the required pods have come up. @ 12/03/24 19:44:45.069
  I1203 19:44:45.072328 23 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I1203 19:44:50.079875 23 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/03/24 19:44:50.079
  STEP: Getting /status @ 12/03/24 19:44:50.08
  I1203 19:44:50.083716 23 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 12/03/24 19:44:50.083
  I1203 19:44:50.091785 23 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 12/03/24 19:44:50.091
  I1203 19:44:50.094820 23 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I1203 19:44:50.094982 23 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I1203 19:44:50.095125 23 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I1203 19:44:50.095900 23 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I1203 19:44:50.096149 23 replica_set.go:682] Found replicaset test-rs in namespace replicaset-2588 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1203 19:44:50.096334 23 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 12/03/24 19:44:50.096
  I1203 19:44:50.096630 23 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1203 19:44:50.103843 23 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 12/03/24 19:44:50.103
  I1203 19:44:50.106117 23 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I1203 19:44:50.106322 23 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1203 19:44:50.106480 23 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1203 19:44:50.106877 23 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1203 19:44:50.106945 23 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-2588 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1203 19:44:50.107115 23 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1203 19:44:50.107169 23 replica_set.go:718] Found replicaset test-rs in namespace replicaset-2588 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I1203 19:44:50.107192 23 replica_set.go:729] Replicaset test-rs has a patched status
  I1203 19:44:50.107320 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2588" for this suite. @ 12/03/24 19:44:50.11
• [5.081 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 12/03/24 19:44:50.116
  I1203 19:44:50.116484 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename var-expansion @ 12/03/24 19:44:50.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:44:50.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:44:50.135
  I1203 19:44:52.155060 23 delete.go:62] Deleting pod "var-expansion-2feaced2-1717-4e0e-ae9e-78b336993e19" in namespace "var-expansion-8662"
  I1203 19:44:52.163189 23 delete.go:70] Wait up to 5m0s for pod "var-expansion-2feaced2-1717-4e0e-ae9e-78b336993e19" to be fully deleted
  I1203 19:44:54.172004 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8662" for this suite. @ 12/03/24 19:44:54.177
• [4.067 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 12/03/24 19:44:54.183
  I1203 19:44:54.183986 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename csiinlinevolumes @ 12/03/24 19:44:54.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:44:54.197
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:44:54.201
  STEP: creating @ 12/03/24 19:44:54.205
  STEP: getting @ 12/03/24 19:44:54.221
  STEP: listing in namespace @ 12/03/24 19:44:54.224
  STEP: patching @ 12/03/24 19:44:54.226
  STEP: deleting @ 12/03/24 19:44:54.24
  I1203 19:44:54.250196 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-4469" for this suite. @ 12/03/24 19:44:54.253
• [0.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 12/03/24 19:44:54.261
  I1203 19:44:54.261129 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename projected @ 12/03/24 19:44:54.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:44:54.273
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:44:54.278
  STEP: Creating projection with secret that has name projected-secret-test-c0349842-b082-40c2-87d7-f378bce9151d @ 12/03/24 19:44:54.282
  STEP: Creating a pod to test consume secrets @ 12/03/24 19:44:54.286
  STEP: Saw pod success @ 12/03/24 19:45:08.344
  I1203 19:45:08.348335 23 output.go:196] Trying to get logs from node nodeb14 pod pod-projected-secrets-58406a63-823e-4495-95d2-7b4204265599 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/03/24 19:45:08.372
  I1203 19:45:08.388133 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1324" for this suite. @ 12/03/24 19:45:08.393
• [14.138 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 12/03/24 19:45:08.399
  I1203 19:45:08.399309 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/03/24 19:45:08.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:45:08.416
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:45:08.42
  I1203 19:45:08.425447 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 12/03/24 19:45:09.824
  I1203 19:45:09.824967 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=crd-publish-openapi-6001 --namespace=crd-publish-openapi-6001 create -f -'
  I1203 19:45:11.959940 23 builder.go:146] stderr: ""
  I1203 19:45:11.960037 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-450-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I1203 19:45:11.960134 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=crd-publish-openapi-6001 --namespace=crd-publish-openapi-6001 delete e2e-test-crd-publish-openapi-450-crds test-foo'
  I1203 19:45:12.053770 23 builder.go:146] stderr: ""
  I1203 19:45:12.053847 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-450-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I1203 19:45:12.053921 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=crd-publish-openapi-6001 --namespace=crd-publish-openapi-6001 apply -f -'
  I1203 19:45:12.172182 23 builder.go:146] stderr: ""
  I1203 19:45:12.172292 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-450-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I1203 19:45:12.172413 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=crd-publish-openapi-6001 --namespace=crd-publish-openapi-6001 delete e2e-test-crd-publish-openapi-450-crds test-foo'
  I1203 19:45:12.269814 23 builder.go:146] stderr: ""
  I1203 19:45:12.269883 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-450-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 12/03/24 19:45:12.269
  I1203 19:45:12.269993 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=crd-publish-openapi-6001 --namespace=crd-publish-openapi-6001 create -f -'
  I1203 19:45:12.363806 23 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 12/03/24 19:45:12.364
  I1203 19:45:12.364482 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=crd-publish-openapi-6001 --namespace=crd-publish-openapi-6001 create -f -'
  I1203 19:45:12.458424 23 builder.go:135] rc: 1
  I1203 19:45:12.458656 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=crd-publish-openapi-6001 --namespace=crd-publish-openapi-6001 apply -f -'
  I1203 19:45:12.557383 23 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 12/03/24 19:45:12.557
  I1203 19:45:12.557599 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=crd-publish-openapi-6001 --namespace=crd-publish-openapi-6001 create -f -'
  I1203 19:45:12.655749 23 builder.go:135] rc: 1
  I1203 19:45:12.655920 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=crd-publish-openapi-6001 --namespace=crd-publish-openapi-6001 apply -f -'
  I1203 19:45:12.776248 23 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 12/03/24 19:45:12.776
  I1203 19:45:12.776582 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=crd-publish-openapi-6001 explain e2e-test-crd-publish-openapi-450-crds'
  I1203 19:45:12.874909 23 builder.go:146] stderr: ""
  I1203 19:45:12.875049 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-450-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 12/03/24 19:45:12.875
  I1203 19:45:12.875928 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=crd-publish-openapi-6001 explain e2e-test-crd-publish-openapi-450-crds.metadata'
  I1203 19:45:12.967531 23 builder.go:146] stderr: ""
  I1203 19:45:12.967839 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-450-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I1203 19:45:12.968708 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=crd-publish-openapi-6001 explain e2e-test-crd-publish-openapi-450-crds.spec'
  I1203 19:45:13.065874 23 builder.go:146] stderr: ""
  I1203 19:45:13.065969 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-450-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I1203 19:45:13.066163 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=crd-publish-openapi-6001 explain e2e-test-crd-publish-openapi-450-crds.spec.bars'
  I1203 19:45:13.158479 23 builder.go:146] stderr: ""
  I1203 19:45:13.158567 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-450-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 12/03/24 19:45:13.158
  I1203 19:45:13.158950 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=crd-publish-openapi-6001 explain e2e-test-crd-publish-openapi-450-crds.spec.bars2'
  I1203 19:45:13.252990 23 builder.go:135] rc: 1
  I1203 19:45:14.622406 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6001" for this suite. @ 12/03/24 19:45:14.634
• [6.243 seconds]
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 12/03/24 19:45:14.642
  I1203 19:45:14.642325 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename svcaccounts @ 12/03/24 19:45:14.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:45:14.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:45:14.661
  STEP: Creating ServiceAccount "e2e-sa-5qwvm"  @ 12/03/24 19:45:14.665
  I1203 19:45:14.669921 23 service_accounts.go:825] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-5qwvm"  @ 12/03/24 19:45:14.669
  I1203 19:45:14.677871 23 service_accounts.go:839] AutomountServiceAccountToken: true
  I1203 19:45:14.678076 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3808" for this suite. @ 12/03/24 19:45:14.683
• [0.047 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 12/03/24 19:45:14.689
  I1203 19:45:14.689725 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename apf @ 12/03/24 19:45:14.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:45:14.706
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:45:14.711
  STEP: getting /apis @ 12/03/24 19:45:14.716
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 12/03/24 19:45:14.723
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 12/03/24 19:45:14.725
  STEP: creating @ 12/03/24 19:45:14.727
  STEP: getting @ 12/03/24 19:45:14.743
  STEP: listing @ 12/03/24 19:45:14.746
  STEP: watching @ 12/03/24 19:45:14.75
  I1203 19:45:14.750389 23 flowcontrol.go:620] starting watch
  STEP: patching @ 12/03/24 19:45:14.752
  STEP: updating @ 12/03/24 19:45:14.758
  I1203 19:45:14.767083 23 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 12/03/24 19:45:14.767
  STEP: patching /status @ 12/03/24 19:45:14.771
  STEP: updating /status @ 12/03/24 19:45:14.777
  STEP: deleting @ 12/03/24 19:45:14.787
  STEP: deleting a collection @ 12/03/24 19:45:14.799
  I1203 19:45:14.815407 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-3144" for this suite. @ 12/03/24 19:45:14.819
• [0.135 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 12/03/24 19:45:14.824
  I1203 19:45:14.824672 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename projected @ 12/03/24 19:45:14.826
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:45:14.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:45:14.842
  STEP: Creating secret with name projected-secret-test-49272cd2-c431-4e00-9b7e-3d5cb6061e88 @ 12/03/24 19:45:14.846
  STEP: Creating a pod to test consume secrets @ 12/03/24 19:45:14.851
  STEP: Saw pod success @ 12/03/24 19:45:18.883
  I1203 19:45:18.887178 23 output.go:196] Trying to get logs from node nodea17 pod pod-projected-secrets-1c713bf9-77c0-4a6e-b15e-1765cefc32d2 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/03/24 19:45:18.894
  I1203 19:45:18.907889 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6355" for this suite. @ 12/03/24 19:45:18.912
• [4.093 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 12/03/24 19:45:18.918
  I1203 19:45:18.918225 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/03/24 19:45:18.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:45:18.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:45:18.938
  I1203 19:45:18.943468 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  I1203 19:45:25.217123 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8015" for this suite. @ 12/03/24 19:45:25.223
• [6.314 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 12/03/24 19:45:25.232
  I1203 19:45:25.233047 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename security-context-test @ 12/03/24 19:45:25.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:45:25.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:45:25.252
  I1203 19:45:29.289899 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1363" for this suite. @ 12/03/24 19:45:29.295
• [4.071 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 12/03/24 19:45:29.304
  I1203 19:45:29.304130 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename sysctl @ 12/03/24 19:45:29.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:45:29.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:45:29.324
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 12/03/24 19:45:29.328
  STEP: Watching for error events or started pod @ 12/03/24 19:45:29.339
  STEP: Waiting for pod completion @ 12/03/24 19:45:31.345
  STEP: Checking that the pod succeeded @ 12/03/24 19:45:33.364
  STEP: Getting logs from the pod @ 12/03/24 19:45:33.364
  STEP: Checking that the sysctl is actually updated @ 12/03/24 19:45:33.371
  I1203 19:45:33.371486 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-1288" for this suite. @ 12/03/24 19:45:33.376
• [4.079 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:446
  STEP: Creating a kubernetes client @ 12/03/24 19:45:33.383
  I1203 19:45:33.383565 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename sched-pred @ 12/03/24 19:45:33.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:45:33.402
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:45:33.406
  I1203 19:45:33.411856 23 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1203 19:45:33.423922 23 util.go:400] Waiting for terminating namespaces to be deleted...
  I1203 19:45:33.430005 23 predicates.go:121] 
  Logging pods the apiserver thinks is on node nodea17 before test
  I1203 19:45:33.438463 23 predicates.go:887] kube-flannel-ds-d4gxd from kube-flannel started at 2024-12-03 18:59:59 +0000 UTC (1 container statuses recorded)
  I1203 19:45:33.438495 23 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I1203 19:45:33.438508 23 predicates.go:887] kube-proxy-5qrm9 from kube-system started at 2024-12-03 18:59:59 +0000 UTC (1 container statuses recorded)
  I1203 19:45:33.438516 23 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I1203 19:45:33.438527 23 predicates.go:887] alpine-nnp-false-784a471d-9e50-4522-9ed4-66842ae510bf from security-context-test-1363 started at 2024-12-03 19:45:25 +0000 UTC (1 container statuses recorded)
  I1203 19:45:33.438536 23 predicates.go:889] 	Container alpine-nnp-false-784a471d-9e50-4522-9ed4-66842ae510bf ready: false, restart count 0
  I1203 19:45:33.438545 23 predicates.go:887] sonobuoy from sonobuoy started at 2024-12-03 19:02:18 +0000 UTC (1 container statuses recorded)
  I1203 19:45:33.438553 23 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I1203 19:45:33.438563 23 predicates.go:887] sonobuoy-e2e-job-b4c9b24bd0eb40b5 from sonobuoy started at 2024-12-03 19:02:24 +0000 UTC (2 container statuses recorded)
  I1203 19:45:33.438571 23 predicates.go:889] 	Container e2e ready: true, restart count 0
  I1203 19:45:33.438581 23 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I1203 19:45:33.438590 23 predicates.go:887] sonobuoy-systemd-logs-daemon-set-2a7ed7b0c9d74150-7w6fj from sonobuoy started at 2024-12-03 19:02:24 +0000 UTC (2 container statuses recorded)
  I1203 19:45:33.438598 23 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I1203 19:45:33.438607 23 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I1203 19:45:33.438616 23 predicates.go:887] sysctl-c17a062c-ab26-4a0e-b1d8-2edb4a1095c8 from sysctl-1288 started at 2024-12-03 19:45:29 +0000 UTC (1 container statuses recorded)
  I1203 19:45:33.438643 23 predicates.go:889] 	Container test-container ready: false, restart count 0
  I1203 19:45:33.438652 23 predicates.go:121] 
  Logging pods the apiserver thinks is on node nodeb14 before test
  I1203 19:45:33.445352 23 predicates.go:887] kube-flannel-ds-67rcm from kube-flannel started at 2024-12-03 19:00:11 +0000 UTC (1 container statuses recorded)
  I1203 19:45:33.445396 23 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I1203 19:45:33.445413 23 predicates.go:887] kube-proxy-vp99b from kube-system started at 2024-12-03 19:00:11 +0000 UTC (1 container statuses recorded)
  I1203 19:45:33.445425 23 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I1203 19:45:33.445438 23 predicates.go:887] sonobuoy-systemd-logs-daemon-set-2a7ed7b0c9d74150-wqtb5 from sonobuoy started at 2024-12-03 19:02:24 +0000 UTC (2 container statuses recorded)
  I1203 19:45:33.445452 23 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I1203 19:45:33.445463 23 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 12/03/24 19:45:33.445
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.180dc25c579ef4cb], Reason = [FailedScheduling], Message = [0/3 nodes are available: 1 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 2 node(s) didn't match Pod's node affinity/selector. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling.] @ 12/03/24 19:45:33.475
  I1203 19:45:34.474841 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-9387" for this suite. @ 12/03/24 19:45:34.478
• [1.100 seconds]
------------------------------
SSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 12/03/24 19:45:34.483
  I1203 19:45:34.483352 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename endpointslicemirroring @ 12/03/24 19:45:34.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:45:34.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:45:34.501
  STEP: mirroring a new custom Endpoint @ 12/03/24 19:45:34.517
  I1203 19:45:34.526538 23 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 12/03/24 19:45:36.531
  I1203 19:45:36.542385 23 endpointslicemirroring.go:171] Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  STEP: mirroring deletion of a custom Endpoint @ 12/03/24 19:45:38.545
  I1203 19:45:38.553587 23 endpointslicemirroring.go:194] Waiting for 0 EndpointSlices to exist, got 1
  I1203 19:45:40.558821 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-3259" for this suite. @ 12/03/24 19:45:40.564
• [6.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 12/03/24 19:45:40.572
  I1203 19:45:40.572329 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename webhook @ 12/03/24 19:45:40.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:45:40.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:45:40.589
  STEP: Setting up server cert @ 12/03/24 19:45:40.607
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/03/24 19:45:40.953
  STEP: Deploying the webhook pod @ 12/03/24 19:45:40.963
  STEP: Wait for the deployment to be ready @ 12/03/24 19:45:40.976
  I1203 19:45:40.982075 23 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 12/03/24 19:45:42.993
  STEP: Verifying the service has paired with the endpoint @ 12/03/24 19:45:43.007
  I1203 19:45:44.007444 23 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 12/03/24 19:45:44.016
  STEP: Creating a custom resource definition that should be denied by the webhook @ 12/03/24 19:45:44.043
  I1203 19:45:44.043272 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  I1203 19:45:44.102991 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9425" for this suite. @ 12/03/24 19:45:44.107
  STEP: Destroying namespace "webhook-markers-2194" for this suite. @ 12/03/24 19:45:44.114
• [3.548 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 12/03/24 19:45:44.12
  I1203 19:45:44.120383 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename configmap @ 12/03/24 19:45:44.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:45:44.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:45:44.136
  STEP: Creating configMap with name cm-test-opt-del-4f2b65ad-7a43-49c3-84b3-ecfa35e72b2e @ 12/03/24 19:45:44.143
  STEP: Creating configMap with name cm-test-opt-upd-409f7a81-47b3-4925-bd3f-97da469bf79c @ 12/03/24 19:45:44.147
  STEP: Creating the pod @ 12/03/24 19:45:44.151
  STEP: Deleting configmap cm-test-opt-del-4f2b65ad-7a43-49c3-84b3-ecfa35e72b2e @ 12/03/24 19:45:46.195
  STEP: Updating configmap cm-test-opt-upd-409f7a81-47b3-4925-bd3f-97da469bf79c @ 12/03/24 19:45:46.203
  STEP: Creating configMap with name cm-test-opt-create-870346f5-b596-4361-ab4d-416625af4a26 @ 12/03/24 19:45:46.214
  STEP: waiting to observe update in volume @ 12/03/24 19:45:46.222
  I1203 19:46:54.604454 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4724" for this suite. @ 12/03/24 19:46:54.609
• [70.496 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 12/03/24 19:46:54.616
  I1203 19:46:54.616864 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename svcaccounts @ 12/03/24 19:46:54.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:46:54.633
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:46:54.637
  STEP: creating a ServiceAccount @ 12/03/24 19:46:54.641
  STEP: watching for the ServiceAccount to be added @ 12/03/24 19:46:54.65
  STEP: patching the ServiceAccount @ 12/03/24 19:46:54.652
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 12/03/24 19:46:54.658
  STEP: deleting the ServiceAccount @ 12/03/24 19:46:54.662
  I1203 19:46:54.674910 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5416" for this suite. @ 12/03/24 19:46:54.678
• [0.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 12/03/24 19:46:54.685
  I1203 19:46:54.685386 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename emptydir @ 12/03/24 19:46:54.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:46:54.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:46:54.708
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 12/03/24 19:46:54.712
  STEP: Saw pod success @ 12/03/24 19:46:56.728
  I1203 19:46:56.733428 23 output.go:196] Trying to get logs from node nodea17 pod pod-9e73b114-07ab-4509-a348-112ba5ab4507 container test-container: <nil>
  STEP: delete the pod @ 12/03/24 19:46:56.74
  I1203 19:46:56.753782 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-510" for this suite. @ 12/03/24 19:46:56.758
• [2.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1420
  STEP: Creating a kubernetes client @ 12/03/24 19:46:56.763
  I1203 19:46:56.763999 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename services @ 12/03/24 19:46:56.765
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:46:56.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:46:56.782
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-6469 @ 12/03/24 19:46:56.786
  STEP: changing the ExternalName service to type=ClusterIP @ 12/03/24 19:46:56.792
  STEP: creating replication controller externalname-service in namespace services-6469 @ 12/03/24 19:46:56.809
  I1203 19:46:56.815010      23 runners.go:198] Created replication controller with name: externalname-service, namespace: services-6469, replica count: 2
  I1203 19:46:59.867313      23 runners.go:198] externalname-service Pods: 2 out of 2 created, 1 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1203 19:47:02.869828      23 runners.go:198] externalname-service Pods: 2 out of 2 created, 1 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1203 19:47:05.870896      23 runners.go:198] externalname-service Pods: 2 out of 2 created, 1 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1203 19:47:08.873172      23 runners.go:198] externalname-service Pods: 2 out of 2 created, 1 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1203 19:47:11.874585      23 runners.go:198] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1203 19:47:11.874700 23 resource.go:361] Creating new exec pod
  I1203 19:47:14.891643 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-6469 exec execpodvf2td -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1203 19:47:15.063633 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I1203 19:47:15.063699 23 builder.go:147] stdout: "externalname-service-wx7wj"
  I1203 19:47:15.063809 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-6469 exec execpodvf2td -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.97.143.88 80'
  I1203 19:47:15.225386 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.97.143.88 80\nConnection to 10.97.143.88 80 port [tcp/http] succeeded!\n"
  I1203 19:47:15.225500 23 builder.go:147] stdout: ""
  I1203 19:47:16.064230 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-6469 exec execpodvf2td -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.97.143.88 80'
  I1203 19:47:16.243656 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.97.143.88 80\nConnection to 10.97.143.88 80 port [tcp/http] succeeded!\n"
  I1203 19:47:16.243741 23 builder.go:147] stdout: "externalname-service-29js4"
  I1203 19:47:16.243952 23 service.go:1429] Cleaning up the ExternalName to ClusterIP test service
  I1203 19:47:16.264596 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6469" for this suite. @ 12/03/24 19:47:16.268
• [19.517 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 12/03/24 19:47:16.281
  I1203 19:47:16.281125 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename downward-api @ 12/03/24 19:47:16.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:47:16.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:47:16.299
  STEP: Creating a pod to test downward API volume plugin @ 12/03/24 19:47:16.304
  STEP: Saw pod success @ 12/03/24 19:47:20.326
  I1203 19:47:20.330317 23 output.go:196] Trying to get logs from node nodea17 pod downwardapi-volume-d7c39858-29bf-4317-8f47-53f53eb8a879 container client-container: <nil>
  STEP: delete the pod @ 12/03/24 19:47:20.338
  I1203 19:47:20.353256 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4523" for this suite. @ 12/03/24 19:47:20.357
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:841
  STEP: Creating a kubernetes client @ 12/03/24 19:47:20.365
  I1203 19:47:20.365220 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename webhook @ 12/03/24 19:47:20.366
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:47:20.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:47:20.384
  STEP: Setting up server cert @ 12/03/24 19:47:20.407
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/03/24 19:47:20.705
  STEP: Deploying the webhook pod @ 12/03/24 19:47:20.716
  STEP: Wait for the deployment to be ready @ 12/03/24 19:47:20.728
  I1203 19:47:20.737345 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/03/24 19:47:22.749
  STEP: Verifying the service has paired with the endpoint @ 12/03/24 19:47:22.764
  I1203 19:47:23.764910 23 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 12/03/24 19:47:23.773
  I1203 19:47:23.811793 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8578" for this suite. @ 12/03/24 19:47:23.815
  STEP: Destroying namespace "webhook-markers-8327" for this suite. @ 12/03/24 19:47:23.821
• [3.461 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2181
  STEP: Creating a kubernetes client @ 12/03/24 19:47:23.826
  I1203 19:47:23.826464 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename services @ 12/03/24 19:47:23.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:47:23.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:47:23.841
  STEP: creating service in namespace services-6053 @ 12/03/24 19:47:23.844
  STEP: creating service affinity-clusterip in namespace services-6053 @ 12/03/24 19:47:23.844
  STEP: creating replication controller affinity-clusterip in namespace services-6053 @ 12/03/24 19:47:23.857
  I1203 19:47:23.871948      23 runners.go:198] Created replication controller with name: affinity-clusterip, namespace: services-6053, replica count: 3
  I1203 19:47:26.924578      23 runners.go:198] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1203 19:47:26.932855 23 resource.go:361] Creating new exec pod
  I1203 19:47:29.948029 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-6053 exec execpod-affinityl8nnf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I1203 19:47:30.122065 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  I1203 19:47:30.122142 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1203 19:47:30.122288 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-6053 exec execpod-affinityl8nnf -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.98.188.207 80'
  I1203 19:47:30.298146 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.98.188.207 80\nConnection to 10.98.188.207 80 port [tcp/http] succeeded!\n"
  I1203 19:47:30.298236 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1203 19:47:30.298366 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-6053 exec execpod-affinityl8nnf -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.98.188.207:80/ ; done'
  I1203 19:47:30.568497 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.188.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.188.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.188.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.188.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.188.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.188.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.188.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.188.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.188.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.188.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.188.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.188.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.188.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.188.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.188.207:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.98.188.207:80/\n"
  I1203 19:47:30.568614 23 builder.go:147] stdout: "\naffinity-clusterip-5vnvf\naffinity-clusterip-5vnvf\naffinity-clusterip-5vnvf\naffinity-clusterip-5vnvf\naffinity-clusterip-5vnvf\naffinity-clusterip-5vnvf\naffinity-clusterip-5vnvf\naffinity-clusterip-5vnvf\naffinity-clusterip-5vnvf\naffinity-clusterip-5vnvf\naffinity-clusterip-5vnvf\naffinity-clusterip-5vnvf\naffinity-clusterip-5vnvf\naffinity-clusterip-5vnvf\naffinity-clusterip-5vnvf\naffinity-clusterip-5vnvf"
  I1203 19:47:30.568649 23 service.go:242] Received response from host: affinity-clusterip-5vnvf
  I1203 19:47:30.568666 23 service.go:242] Received response from host: affinity-clusterip-5vnvf
  I1203 19:47:30.568682 23 service.go:242] Received response from host: affinity-clusterip-5vnvf
  I1203 19:47:30.568716 23 service.go:242] Received response from host: affinity-clusterip-5vnvf
  I1203 19:47:30.568732 23 service.go:242] Received response from host: affinity-clusterip-5vnvf
  I1203 19:47:30.568746 23 service.go:242] Received response from host: affinity-clusterip-5vnvf
  I1203 19:47:30.568760 23 service.go:242] Received response from host: affinity-clusterip-5vnvf
  I1203 19:47:30.568774 23 service.go:242] Received response from host: affinity-clusterip-5vnvf
  I1203 19:47:30.568791 23 service.go:242] Received response from host: affinity-clusterip-5vnvf
  I1203 19:47:30.568818 23 service.go:242] Received response from host: affinity-clusterip-5vnvf
  I1203 19:47:30.568860 23 service.go:242] Received response from host: affinity-clusterip-5vnvf
  I1203 19:47:30.568876 23 service.go:242] Received response from host: affinity-clusterip-5vnvf
  I1203 19:47:30.568891 23 service.go:242] Received response from host: affinity-clusterip-5vnvf
  I1203 19:47:30.568905 23 service.go:242] Received response from host: affinity-clusterip-5vnvf
  I1203 19:47:30.568923 23 service.go:242] Received response from host: affinity-clusterip-5vnvf
  I1203 19:47:30.568937 23 service.go:242] Received response from host: affinity-clusterip-5vnvf
  I1203 19:47:30.569034 23 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-6053, will wait for the garbage collector to delete the pods @ 12/03/24 19:47:30.579
  I1203 19:47:30.643263 23 resources.go:139] Deleting ReplicationController affinity-clusterip took: 6.272846ms
  I1203 19:47:30.744378 23 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 101.107231ms
  I1203 19:47:33.766194 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6053" for this suite. @ 12/03/24 19:47:33.77
• [9.956 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 12/03/24 19:47:33.783
  I1203 19:47:33.783146 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename configmap @ 12/03/24 19:47:33.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:47:33.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:47:33.803
  STEP: Creating configMap with name configmap-test-volume-3518fd58-0c77-4631-8b26-f0322f2133d3 @ 12/03/24 19:47:33.807
  STEP: Creating a pod to test consume configMaps @ 12/03/24 19:47:33.813
  STEP: Saw pod success @ 12/03/24 19:47:37.838
  I1203 19:47:37.842491 23 output.go:196] Trying to get logs from node nodea17 pod pod-configmaps-0dfbefc2-474d-4d95-88b6-784769032562 container configmap-volume-test: <nil>
  STEP: delete the pod @ 12/03/24 19:47:37.849
  I1203 19:47:37.865436 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-873" for this suite. @ 12/03/24 19:47:37.869
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 12/03/24 19:47:37.877
  I1203 19:47:37.877580 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename container-probe @ 12/03/24 19:47:37.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:47:37.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:47:37.894
  I1203 19:47:59.985756 23 container_probe.go:92] Container started at 2024-12-03 19:47:38 +0000 UTC, pod became ready at 2024-12-03 19:47:58 +0000 UTC
  I1203 19:47:59.986070 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7160" for this suite. @ 12/03/24 19:47:59.992
• [22.122 seconds]
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:669
  STEP: Creating a kubernetes client @ 12/03/24 19:47:59.999
  I1203 19:48:00.000034 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename pv @ 12/03/24 19:48:00.001
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:48:00.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:48:00.02
  STEP: Creating initial PV and PVC @ 12/03/24 19:48:00.025
  I1203 19:48:00.025254 23 pv.go:390] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-2369" @ 12/03/24 19:48:00.04
  STEP: Listing PVCs in namespace "pv-2369" @ 12/03/24 19:48:00.044
  STEP: Reading "pvc-qh6xp" Status @ 12/03/24 19:48:00.049
  STEP: Reading "pv-2369-xz7s4" Status @ 12/03/24 19:48:00.054
  STEP: Patching "pvc-qh6xp" Status @ 12/03/24 19:48:00.062
  STEP: Patching "pv-2369-xz7s4" Status @ 12/03/24 19:48:00.072
  STEP: Updating "pvc-qh6xp" Status @ 12/03/24 19:48:00.079
  STEP: Updating "pv-2369-xz7s4" Status @ 12/03/24 19:48:00.087
  I1203 19:48:00.096456 23 persistent_volumes.go:407] AfterEach: deleting 1 PVCs and 1 PVs...
  I1203 19:48:00.096514 23 pv.go:201] Deleting PersistentVolumeClaim "pvc-qh6xp"
  I1203 19:48:00.101796 23 pv.go:189] Deleting PersistentVolume "pv-2369-xz7s4"
  I1203 19:48:00.108073 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-2369" for this suite. @ 12/03/24 19:48:00.112
• [0.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1284
  STEP: Creating a kubernetes client @ 12/03/24 19:48:00.118
  I1203 19:48:00.118364 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename services @ 12/03/24 19:48:00.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:48:00.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:48:00.133
  STEP: creating service nodeport-test with type=NodePort in namespace services-5417 @ 12/03/24 19:48:00.137
  STEP: creating replication controller nodeport-test in namespace services-5417 @ 12/03/24 19:48:00.152
  I1203 19:48:00.159583      23 runners.go:198] Created replication controller with name: nodeport-test, namespace: services-5417, replica count: 2
  I1203 19:48:03.211570      23 runners.go:198] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1203 19:48:03.211661 23 resource.go:361] Creating new exec pod
  I1203 19:48:06.234757 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-5417 exec execpodkr22s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I1203 19:48:06.402935 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I1203 19:48:06.403031 23 builder.go:147] stdout: ""
  I1203 19:48:07.234817 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-5417 exec execpodkr22s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I1203 19:48:07.403454 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I1203 19:48:07.403520 23 builder.go:147] stdout: "nodeport-test-89bng"
  I1203 19:48:07.403631 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-5417 exec execpodkr22s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.2.224 80'
  I1203 19:48:07.577380 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.103.2.224 80\nConnection to 10.103.2.224 80 port [tcp/http] succeeded!\n"
  I1203 19:48:07.577457 23 builder.go:147] stdout: ""
  I1203 19:48:08.404625 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-5417 exec execpodkr22s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.2.224 80'
  I1203 19:48:08.568190 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.103.2.224 80\nConnection to 10.103.2.224 80 port [tcp/http] succeeded!\n"
  I1203 19:48:08.568248 23 builder.go:147] stdout: "nodeport-test-rjp5z"
  I1203 19:48:08.568338 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-5417 exec execpodkr22s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.37 31385'
  I1203 19:48:08.729878 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.37 31385\nConnection to 192.168.100.37 31385 port [tcp/*] succeeded!\n"
  I1203 19:48:08.729966 23 builder.go:147] stdout: "nodeport-test-rjp5z"
  I1203 19:48:08.730089 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-5417 exec execpodkr22s -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.114 31385'
  I1203 19:48:08.893325 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.114 31385\nConnection to 192.168.100.114 31385 port [tcp/*] succeeded!\n"
  I1203 19:48:08.893401 23 builder.go:147] stdout: "nodeport-test-rjp5z"
  I1203 19:48:08.893560 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5417" for this suite. @ 12/03/24 19:48:08.899
• [8.788 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 12/03/24 19:48:08.906
  I1203 19:48:08.906582 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename events @ 12/03/24 19:48:08.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:48:08.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:48:08.925
  STEP: Create set of events @ 12/03/24 19:48:08.929
  I1203 19:48:08.933437 23 core_events.go:198] created test-event-1
  I1203 19:48:08.937647 23 core_events.go:198] created test-event-2
  I1203 19:48:08.941763 23 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 12/03/24 19:48:08.941
  STEP: delete collection of events @ 12/03/24 19:48:08.945
  I1203 19:48:08.945257 23 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 12/03/24 19:48:08.96
  I1203 19:48:08.960492 23 core_events.go:230] requesting list of events to confirm quantity
  I1203 19:48:08.963529 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-868" for this suite. @ 12/03/24 19:48:08.967
• [0.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 12/03/24 19:48:08.976
  I1203 19:48:08.976075 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename runtimeclass @ 12/03/24 19:48:08.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:48:08.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:48:08.993
  I1203 19:48:11.026550 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5818" for this suite. @ 12/03/24 19:48:11.031
• [2.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 12/03/24 19:48:11.038
  I1203 19:48:11.038944 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename downward-api @ 12/03/24 19:48:11.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:48:11.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:48:11.09
  STEP: Creating a pod to test downward API volume plugin @ 12/03/24 19:48:11.094
  STEP: Saw pod success @ 12/03/24 19:48:15.12
  I1203 19:48:15.124189 23 output.go:196] Trying to get logs from node nodea17 pod downwardapi-volume-2f428a05-f259-43ca-a94c-2c9f3a5ec9cc container client-container: <nil>
  STEP: delete the pod @ 12/03/24 19:48:15.131
  I1203 19:48:15.144735 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4013" for this suite. @ 12/03/24 19:48:15.149
• [4.115 seconds]
------------------------------
S
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 12/03/24 19:48:15.154
  I1203 19:48:15.154326 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename events @ 12/03/24 19:48:15.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:48:15.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:48:15.172
  STEP: creating a test event @ 12/03/24 19:48:15.176
  STEP: listing events in all namespaces @ 12/03/24 19:48:15.183
  STEP: listing events in test namespace @ 12/03/24 19:48:15.19
  STEP: listing events with field selection filtering on source @ 12/03/24 19:48:15.193
  STEP: listing events with field selection filtering on reportingController @ 12/03/24 19:48:15.197
  STEP: getting the test event @ 12/03/24 19:48:15.2
  STEP: patching the test event @ 12/03/24 19:48:15.202
  STEP: getting the test event @ 12/03/24 19:48:15.237
  STEP: updating the test event @ 12/03/24 19:48:15.239
  STEP: getting the test event @ 12/03/24 19:48:15.245
  STEP: deleting the test event @ 12/03/24 19:48:15.247
  STEP: listing events in all namespaces @ 12/03/24 19:48:15.252
  STEP: listing events in test namespace @ 12/03/24 19:48:15.257
  I1203 19:48:15.259675 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-7808" for this suite. @ 12/03/24 19:48:15.262
• [0.113 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 12/03/24 19:48:15.267
  I1203 19:48:15.267183 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename emptydir @ 12/03/24 19:48:15.268
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:48:15.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:48:15.284
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 12/03/24 19:48:15.288
  STEP: Saw pod success @ 12/03/24 19:48:19.315
  I1203 19:48:19.319440 23 output.go:196] Trying to get logs from node nodea17 pod pod-5d75a976-2d6c-4c6c-a530-2e57276448d2 container test-container: <nil>
  STEP: delete the pod @ 12/03/24 19:48:19.327
  I1203 19:48:19.344518 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1249" for this suite. @ 12/03/24 19:48:19.349
• [4.090 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 12/03/24 19:48:19.356
  I1203 19:48:19.356862 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename endpointslice @ 12/03/24 19:48:19.358
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:48:19.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:48:19.374
  I1203 19:48:19.388176 23 endpointslice.go:1045] Endpoints addresses: [192.168.100.86] , ports: [6443]
  I1203 19:48:19.388255 23 endpointslice.go:1075] EndpointSlices addresses: [192.168.100.86] , ports: [6443]
  I1203 19:48:19.388395 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1366" for this suite. @ 12/03/24 19:48:19.392
• [0.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 12/03/24 19:48:19.398
  I1203 19:48:19.398770 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename dns @ 12/03/24 19:48:19.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:48:19.414
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:48:19.418
  STEP: Creating a test externalName service @ 12/03/24 19:48:19.422
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8190.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-8190.svc.cluster.local; sleep 1; done
   @ 12/03/24 19:48:19.427
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8190.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-8190.svc.cluster.local; sleep 1; done
   @ 12/03/24 19:48:19.427
  STEP: creating a pod to probe DNS @ 12/03/24 19:48:19.427
  STEP: submitting the pod to kubernetes @ 12/03/24 19:48:19.428
  STEP: retrieving the pod @ 12/03/24 19:48:21.446
  STEP: looking for the results for each expected name from probers @ 12/03/24 19:48:21.45
  I1203 19:48:21.461847 23 dns_common.go:552] DNS probes using dns-test-e4229b8b-48dd-4dc7-a190-c893d87c8bc6 succeeded

  STEP: changing the externalName to bar.example.com @ 12/03/24 19:48:21.461
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8190.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-8190.svc.cluster.local; sleep 1; done
   @ 12/03/24 19:48:21.469
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8190.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-8190.svc.cluster.local; sleep 1; done
   @ 12/03/24 19:48:21.469
  STEP: creating a second pod to probe DNS @ 12/03/24 19:48:21.469
  STEP: submitting the pod to kubernetes @ 12/03/24 19:48:21.469
  STEP: retrieving the pod @ 12/03/24 19:48:23.487
  STEP: looking for the results for each expected name from probers @ 12/03/24 19:48:23.491
  I1203 19:48:23.497349 23 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-8190.svc.cluster.local from pod  dns-8190/dns-test-90b859ee-d03c-40b6-a9d4-b8b625cfaaa1 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1203 19:48:23.502541 23 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-8190.svc.cluster.local from pod  dns-8190/dns-test-90b859ee-d03c-40b6-a9d4-b8b625cfaaa1 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1203 19:48:23.502612 23 dns_common.go:489] Lookups using dns-8190/dns-test-90b859ee-d03c-40b6-a9d4-b8b625cfaaa1 failed for: [wheezy_udp@dns-test-service-3.dns-8190.svc.cluster.local jessie_udp@dns-test-service-3.dns-8190.svc.cluster.local]

  I1203 19:48:23.509681 23 dns_common.go:495] Pod client logs for webserver: 
  I1203 19:48:23.515728 23 dns_common.go:495] Pod client logs for querier: 
  I1203 19:48:23.522498 23 dns_common.go:495] Pod client logs for jessie-querier: 
  I1203 19:48:28.501114 23 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-8190.svc.cluster.local from pod  dns-8190/dns-test-90b859ee-d03c-40b6-a9d4-b8b625cfaaa1 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1203 19:48:28.505944 23 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-8190.svc.cluster.local from pod  dns-8190/dns-test-90b859ee-d03c-40b6-a9d4-b8b625cfaaa1 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1203 19:48:28.506043 23 dns_common.go:489] Lookups using dns-8190/dns-test-90b859ee-d03c-40b6-a9d4-b8b625cfaaa1 failed for: [wheezy_udp@dns-test-service-3.dns-8190.svc.cluster.local jessie_udp@dns-test-service-3.dns-8190.svc.cluster.local]

  I1203 19:48:28.513132 23 dns_common.go:495] Pod client logs for webserver: 
  I1203 19:48:28.519132 23 dns_common.go:495] Pod client logs for querier: 
  I1203 19:48:28.525711 23 dns_common.go:495] Pod client logs for jessie-querier: 
  I1203 19:48:33.498747 23 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-8190.svc.cluster.local from pod  dns-8190/dns-test-90b859ee-d03c-40b6-a9d4-b8b625cfaaa1 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1203 19:48:33.503769 23 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-8190.svc.cluster.local from pod  dns-8190/dns-test-90b859ee-d03c-40b6-a9d4-b8b625cfaaa1 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1203 19:48:33.503830 23 dns_common.go:489] Lookups using dns-8190/dns-test-90b859ee-d03c-40b6-a9d4-b8b625cfaaa1 failed for: [wheezy_udp@dns-test-service-3.dns-8190.svc.cluster.local jessie_udp@dns-test-service-3.dns-8190.svc.cluster.local]

  I1203 19:48:33.511590 23 dns_common.go:495] Pod client logs for webserver: 
  I1203 19:48:33.518463 23 dns_common.go:495] Pod client logs for querier: 
  I1203 19:48:33.524882 23 dns_common.go:495] Pod client logs for jessie-querier: 
  I1203 19:48:38.497193 23 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-8190.svc.cluster.local from pod  dns-8190/dns-test-90b859ee-d03c-40b6-a9d4-b8b625cfaaa1 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1203 19:48:38.502262 23 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-8190.svc.cluster.local from pod  dns-8190/dns-test-90b859ee-d03c-40b6-a9d4-b8b625cfaaa1 contains '' instead of 'bar.example.com.'
  I1203 19:48:38.502316 23 dns_common.go:489] Lookups using dns-8190/dns-test-90b859ee-d03c-40b6-a9d4-b8b625cfaaa1 failed for: [wheezy_udp@dns-test-service-3.dns-8190.svc.cluster.local jessie_udp@dns-test-service-3.dns-8190.svc.cluster.local]

  I1203 19:48:38.510334 23 dns_common.go:495] Pod client logs for webserver: 
  I1203 19:48:38.516767 23 dns_common.go:495] Pod client logs for querier: 
  I1203 19:48:38.523342 23 dns_common.go:495] Pod client logs for jessie-querier: 
  I1203 19:48:43.501032 23 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-8190.svc.cluster.local from pod  dns-8190/dns-test-90b859ee-d03c-40b6-a9d4-b8b625cfaaa1 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1203 19:48:43.505254 23 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-8190.svc.cluster.local from pod  dns-8190/dns-test-90b859ee-d03c-40b6-a9d4-b8b625cfaaa1 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1203 19:48:43.505300 23 dns_common.go:489] Lookups using dns-8190/dns-test-90b859ee-d03c-40b6-a9d4-b8b625cfaaa1 failed for: [wheezy_udp@dns-test-service-3.dns-8190.svc.cluster.local jessie_udp@dns-test-service-3.dns-8190.svc.cluster.local]

  I1203 19:48:43.511884 23 dns_common.go:495] Pod client logs for webserver: 
  I1203 19:48:43.516958 23 dns_common.go:495] Pod client logs for querier: 
  I1203 19:48:43.522149 23 dns_common.go:495] Pod client logs for jessie-querier: 
  I1203 19:48:48.500648 23 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-8190.svc.cluster.local from pod  dns-8190/dns-test-90b859ee-d03c-40b6-a9d4-b8b625cfaaa1 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1203 19:48:48.505511 23 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-8190.svc.cluster.local from pod  dns-8190/dns-test-90b859ee-d03c-40b6-a9d4-b8b625cfaaa1 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1203 19:48:48.505599 23 dns_common.go:489] Lookups using dns-8190/dns-test-90b859ee-d03c-40b6-a9d4-b8b625cfaaa1 failed for: [wheezy_udp@dns-test-service-3.dns-8190.svc.cluster.local jessie_udp@dns-test-service-3.dns-8190.svc.cluster.local]

  I1203 19:48:48.512478 23 dns_common.go:495] Pod client logs for webserver: 
  I1203 19:48:48.519136 23 dns_common.go:495] Pod client logs for querier: 
  I1203 19:48:48.525994 23 dns_common.go:495] Pod client logs for jessie-querier: 
  I1203 19:48:53.507144 23 dns_common.go:552] DNS probes using dns-test-90b859ee-d03c-40b6-a9d4-b8b625cfaaa1 succeeded

  STEP: changing the service to type=ClusterIP @ 12/03/24 19:48:53.507
  W1203 19:48:53.529206      23 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8190.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-8190.svc.cluster.local; sleep 1; done
   @ 12/03/24 19:48:53.529
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-8190.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-8190.svc.cluster.local; sleep 1; done
   @ 12/03/24 19:48:53.529
  STEP: creating a third pod to probe DNS @ 12/03/24 19:48:53.529
  STEP: submitting the pod to kubernetes @ 12/03/24 19:48:53.533
  STEP: retrieving the pod @ 12/03/24 19:48:55.552
  STEP: looking for the results for each expected name from probers @ 12/03/24 19:48:55.556
  I1203 19:48:55.567168 23 dns_common.go:552] DNS probes using dns-test-9affcae9-c932-4e58-82d1-e6daddcbfc53 succeeded

  STEP: deleting the pod @ 12/03/24 19:48:55.567
  STEP: deleting the pod @ 12/03/24 19:48:55.579
  STEP: deleting the pod @ 12/03/24 19:48:55.594
  STEP: deleting the test externalName service @ 12/03/24 19:48:55.603
  I1203 19:48:55.617917 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8190" for this suite. @ 12/03/24 19:48:55.621
• [36.227 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 12/03/24 19:48:55.626
  I1203 19:48:55.626695 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename secrets @ 12/03/24 19:48:55.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:48:55.639
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:48:55.644
  STEP: Creating secret with name secret-test-map-c66a61d5-f873-4034-a034-c9cb91637e29 @ 12/03/24 19:48:55.648
  STEP: Creating a pod to test consume secrets @ 12/03/24 19:48:55.653
  STEP: Saw pod success @ 12/03/24 19:48:59.676
  I1203 19:48:59.680220 23 output.go:196] Trying to get logs from node nodea17 pod pod-secrets-2a100c9d-d162-4078-baa7-f658d90e6c8c container secret-volume-test: <nil>
  STEP: delete the pod @ 12/03/24 19:48:59.688
  I1203 19:48:59.704590 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-261" for this suite. @ 12/03/24 19:48:59.709
• [4.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 12/03/24 19:48:59.719
  I1203 19:48:59.719765 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename emptydir @ 12/03/24 19:48:59.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:48:59.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:48:59.743
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 12/03/24 19:48:59.748
  STEP: Saw pod success @ 12/03/24 19:49:03.772
  I1203 19:49:03.777005 23 output.go:196] Trying to get logs from node nodea17 pod pod-cde0cd0a-0416-4bfa-9ee1-613a6d67dccc container test-container: <nil>
  STEP: delete the pod @ 12/03/24 19:49:03.784
  I1203 19:49:03.799876 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-240" for this suite. @ 12/03/24 19:49:03.804
• [4.091 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 12/03/24 19:49:03.811
  I1203 19:49:03.811448 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename container-probe @ 12/03/24 19:49:03.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:49:03.825
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:49:03.83
  STEP: Creating pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409 @ 12/03/24 19:49:03.836
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/03/24 19:49:05.853
  I1203 19:49:05.857622 23 container_probe.go:1749] Initial restart count of pod busybox-e3f971d6-f805-4072-92df-052ca248e896 is 0
  I1203 19:49:05.861227 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:49:07.866926 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:49:09.873350 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:49:11.879705 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:49:13.886458 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:49:15.892357 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:49:17.898967 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:49:19.905776 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:49:21.911182 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:49:23.918477 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:49:25.924391 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:49:27.930942 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:49:29.937385 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:49:31.943687 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:49:33.950272 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:49:35.955919 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:49:37.962207 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:49:39.967808 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:49:41.974076 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:49:43.981124 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:49:45.986354 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:49:47.992830 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:49:49.998239 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:49:52.003970 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:49:54.010458 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:49:56.015286 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:49:58.021557 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:50:00.027887 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:50:02.033585 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:50:04.040401 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:50:06.046641 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:50:08.052728 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:50:10.058737 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:50:12.064895 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:50:14.070778 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:50:16.075397 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:50:18.080662 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:50:20.086620 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:50:22.092231 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:50:24.098574 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:50:26.103176 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:50:28.109051 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:50:30.114918 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:50:32.123364 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:50:34.128685 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:50:36.133458 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:50:38.139834 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:50:40.145930 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:50:42.153721 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:50:44.160558 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:50:46.168276 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:50:48.175012 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:50:50.180930 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:50:52.188342 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:50:54.193005 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:50:56.197484 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:50:58.203655 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:51:00.210005 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:51:02.217192 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:51:04.223737 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:51:06.228814 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:51:08.234632 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:51:10.240699 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:51:12.246928 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:51:14.254726 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:51:16.260034 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:51:18.266162 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:51:20.272349 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:51:22.278299 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:51:24.284770 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:51:26.289536 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:51:28.295347 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:51:30.301522 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:51:32.307737 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:51:34.314761 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:51:36.320119 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:51:38.327605 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:51:40.332586 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:51:42.338238 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:51:44.345295 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:51:46.350984 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:51:48.357176 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:51:50.363294 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:51:52.370519 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:51:54.377479 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:51:56.382995 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:51:58.389261 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:52:00.394383 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:52:02.400515 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:52:04.407016 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:52:06.411934 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:52:08.418265 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:52:10.423576 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:52:12.429876 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:52:14.437699 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:52:16.443646 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:52:18.449668 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:52:20.454360 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:52:22.460181 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:52:24.465393 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:52:26.471841 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:52:28.477563 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:52:30.483195 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:52:32.489096 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:52:34.494782 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:52:36.501323 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:52:38.506695 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:52:40.511808 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:52:42.517511 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:52:44.523597 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:52:46.529217 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:52:48.535126 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:52:50.540393 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:52:52.546123 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:52:54.549839 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:52:56.555769 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:52:58.561803 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:53:00.567289 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:53:02.573893 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  I1203 19:53:04.579068 23 container_probe.go:1759] Get pod busybox-e3f971d6-f805-4072-92df-052ca248e896 in namespace container-probe-2409
  STEP: deleting the pod @ 12/03/24 19:53:06.58
  I1203 19:53:06.598627 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2409" for this suite. @ 12/03/24 19:53:06.603
• [242.798 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 12/03/24 19:53:06.61
  I1203 19:53:06.610060 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename containers @ 12/03/24 19:53:06.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:53:06.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:53:06.628
  STEP: Creating a pod to test override arguments @ 12/03/24 19:53:06.632
  STEP: Saw pod success @ 12/03/24 19:53:10.654
  I1203 19:53:10.658437 23 output.go:196] Trying to get logs from node nodea17 pod client-containers-b637280e-3246-451b-ad16-c306ec85225b container agnhost-container: <nil>
  STEP: delete the pod @ 12/03/24 19:53:10.679
  I1203 19:53:10.694413 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1979" for this suite. @ 12/03/24 19:53:10.699
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 12/03/24 19:53:10.705
  I1203 19:53:10.705682 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename projected @ 12/03/24 19:53:10.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:53:10.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:53:10.726
  STEP: Creating a pod to test downward API volume plugin @ 12/03/24 19:53:10.73
  STEP: Saw pod success @ 12/03/24 19:53:14.755
  I1203 19:53:14.759060 23 output.go:196] Trying to get logs from node nodea17 pod downwardapi-volume-fe6900f5-a5fa-4050-9035-9e48d1693134 container client-container: <nil>
  STEP: delete the pod @ 12/03/24 19:53:14.766
  I1203 19:53:14.780932 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7980" for this suite. @ 12/03/24 19:53:14.785
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 12/03/24 19:53:14.8
  I1203 19:53:14.800342 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename subpath @ 12/03/24 19:53:14.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:53:14.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:53:14.818
  STEP: Setting up data @ 12/03/24 19:53:14.823
  STEP: Creating pod pod-subpath-test-configmap-z9cd @ 12/03/24 19:53:14.834
  STEP: Creating a pod to test atomic-volume-subpath @ 12/03/24 19:53:14.834
  STEP: Saw pod success @ 12/03/24 19:53:38.914
  I1203 19:53:38.918775 23 output.go:196] Trying to get logs from node nodea17 pod pod-subpath-test-configmap-z9cd container test-container-subpath-configmap-z9cd: <nil>
  STEP: delete the pod @ 12/03/24 19:53:38.927
  STEP: Deleting pod pod-subpath-test-configmap-z9cd @ 12/03/24 19:53:38.944
  I1203 19:53:38.944202 23 delete.go:62] Deleting pod "pod-subpath-test-configmap-z9cd" in namespace "subpath-6843"
  I1203 19:53:38.947174 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6843" for this suite. @ 12/03/24 19:53:38.952
• [24.160 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 12/03/24 19:53:38.96
  I1203 19:53:38.960978 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/03/24 19:53:38.962
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:53:38.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:53:38.98
  STEP: create the container to handle the HTTPGet hook request. @ 12/03/24 19:53:38.988
  STEP: create the pod with lifecycle hook @ 12/03/24 19:53:41.011
  STEP: check poststart hook @ 12/03/24 19:53:43.033
  STEP: delete the pod with lifecycle hook @ 12/03/24 19:53:43.041
  I1203 19:53:45.058023 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7722" for this suite. @ 12/03/24 19:53:45.063
• [6.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 12/03/24 19:53:45.073
  I1203 19:53:45.073113 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename subpath @ 12/03/24 19:53:45.074
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:53:45.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:53:45.091
  STEP: Setting up data @ 12/03/24 19:53:45.096
  STEP: Creating pod pod-subpath-test-configmap-v6lb @ 12/03/24 19:53:45.106
  STEP: Creating a pod to test atomic-volume-subpath @ 12/03/24 19:53:45.106
  STEP: Saw pod success @ 12/03/24 19:54:07.185
  I1203 19:54:07.189258 23 output.go:196] Trying to get logs from node nodea17 pod pod-subpath-test-configmap-v6lb container test-container-subpath-configmap-v6lb: <nil>
  STEP: delete the pod @ 12/03/24 19:54:07.197
  STEP: Deleting pod pod-subpath-test-configmap-v6lb @ 12/03/24 19:54:07.21
  I1203 19:54:07.210677 23 delete.go:62] Deleting pod "pod-subpath-test-configmap-v6lb" in namespace "subpath-1015"
  I1203 19:54:07.213392 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1015" for this suite. @ 12/03/24 19:54:07.217
• [22.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 12/03/24 19:54:07.223
  I1203 19:54:07.223710 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename downward-api @ 12/03/24 19:54:07.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:54:07.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:54:07.241
  STEP: Creating the pod @ 12/03/24 19:54:07.245
  I1203 19:54:09.792807 23 pod_client.go:141] Successfully updated pod "annotationupdateeebbc34a-16c2-471c-967c-7ee56be1b7db"
  I1203 19:54:13.818893 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-562" for this suite. @ 12/03/24 19:54:13.823
• [6.607 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:882
  STEP: Creating a kubernetes client @ 12/03/24 19:54:13.831
  I1203 19:54:13.831548 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename kubectl @ 12/03/24 19:54:13.832
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:54:13.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:54:13.848
  STEP: validating api versions @ 12/03/24 19:54:13.852
  I1203 19:54:13.852785 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-5360 api-versions'
  I1203 19:54:13.945655 23 builder.go:146] stderr: ""
  I1203 19:54:13.945726 23 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I1203 19:54:13.945847 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5360" for this suite. @ 12/03/24 19:54:13.95
• [0.128 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1048
  STEP: Creating a kubernetes client @ 12/03/24 19:54:13.96
  I1203 19:54:13.960167 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename kubectl @ 12/03/24 19:54:13.961
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:54:13.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:54:13.977
  STEP: create deployment with httpd image @ 12/03/24 19:54:13.981
  I1203 19:54:13.981494 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-375 create -f -'
  I1203 19:54:14.132583 23 builder.go:146] stderr: ""
  I1203 19:54:14.132655 23 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 12/03/24 19:54:14.132
  I1203 19:54:14.132786 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-375 diff -f -'
  I1203 19:54:14.325689 23 builder.go:135] rc: 1
  I1203 19:54:14.325802 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-375 delete -f -'
  I1203 19:54:14.438066 23 builder.go:146] stderr: ""
  I1203 19:54:14.438116 23 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I1203 19:54:14.438225 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-375" for this suite. @ 12/03/24 19:54:14.446
• [0.493 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 12/03/24 19:54:14.459
  I1203 19:54:14.459322 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/03/24 19:54:14.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:54:14.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:54:14.476
  STEP: create the container to handle the HTTPGet hook request. @ 12/03/24 19:54:14.484
  STEP: create the pod with lifecycle hook @ 12/03/24 19:54:16.506
  STEP: delete the pod with lifecycle hook @ 12/03/24 19:54:18.525
  STEP: check prestop hook @ 12/03/24 19:54:20.542
  I1203 19:54:20.557047 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5716" for this suite. @ 12/03/24 19:54:20.561
• [6.107 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 12/03/24 19:54:20.568
  I1203 19:54:20.568651 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename proxy @ 12/03/24 19:54:20.57
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:54:20.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:54:20.585
  I1203 19:54:20.590356 23 proxy.go:387] Creating pod...
  I1203 19:54:22.605718 23 proxy.go:411] Creating service...
  I1203 19:54:22.621229 23 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2091/pods/agnhost/proxy?method=DELETE
  I1203 19:54:22.629403 23 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1203 19:54:22.629476 23 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2091/pods/agnhost/proxy?method=OPTIONS
  I1203 19:54:22.633713 23 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1203 19:54:22.633802 23 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2091/pods/agnhost/proxy?method=PATCH
  I1203 19:54:22.637421 23 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1203 19:54:22.637531 23 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2091/pods/agnhost/proxy?method=POST
  I1203 19:54:22.643229 23 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1203 19:54:22.643297 23 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2091/pods/agnhost/proxy?method=PUT
  I1203 19:54:22.647295 23 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1203 19:54:22.647358 23 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2091/services/e2e-proxy-test-service/proxy?method=DELETE
  I1203 19:54:22.652030 23 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1203 19:54:22.652130 23 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2091/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I1203 19:54:22.657308 23 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1203 19:54:22.657386 23 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2091/services/e2e-proxy-test-service/proxy?method=PATCH
  I1203 19:54:22.662049 23 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1203 19:54:22.662134 23 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2091/services/e2e-proxy-test-service/proxy?method=POST
  I1203 19:54:22.666898 23 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1203 19:54:22.666985 23 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2091/services/e2e-proxy-test-service/proxy?method=PUT
  I1203 19:54:22.671679 23 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1203 19:54:22.671758 23 proxy.go:479] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2091/pods/agnhost/proxy?method=GET
  I1203 19:54:22.676836 23 proxy.go:487] http.Client request:GET StatusCode:301
  I1203 19:54:22.676903 23 proxy.go:479] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2091/services/e2e-proxy-test-service/proxy?method=GET
  I1203 19:54:22.680713 23 proxy.go:487] http.Client request:GET StatusCode:301
  I1203 19:54:22.680780 23 proxy.go:479] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2091/pods/agnhost/proxy?method=HEAD
  I1203 19:54:22.683274 23 proxy.go:487] http.Client request:HEAD StatusCode:301
  I1203 19:54:22.683332 23 proxy.go:479] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2091/services/e2e-proxy-test-service/proxy?method=HEAD
  I1203 19:54:22.686526 23 proxy.go:487] http.Client request:HEAD StatusCode:301
  I1203 19:54:22.686827 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-2091" for this suite. @ 12/03/24 19:54:22.692
• [2.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 12/03/24 19:54:22.698
  I1203 19:54:22.698679 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename emptydir @ 12/03/24 19:54:22.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:54:22.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:54:22.718
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 12/03/24 19:54:22.723
  STEP: Saw pod success @ 12/03/24 19:54:26.748
  I1203 19:54:26.752718 23 output.go:196] Trying to get logs from node nodea17 pod pod-c593d3b9-0792-4d1c-b529-ae0b6bef76a2 container test-container: <nil>
  STEP: delete the pod @ 12/03/24 19:54:26.76
  I1203 19:54:26.777168 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2538" for this suite. @ 12/03/24 19:54:26.781
• [4.089 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1858
  STEP: Creating a kubernetes client @ 12/03/24 19:54:26.787
  I1203 19:54:26.787361 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename kubectl @ 12/03/24 19:54:26.788
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:54:26.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:54:26.803
  STEP: Starting the proxy @ 12/03/24 19:54:26.808
  I1203 19:54:26.808791 23 util.go:592] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-8892 proxy --unix-socket=/tmp/kubectl-proxy-unix3511606694/test'
  STEP: retrieving proxy /api/ output @ 12/03/24 19:54:26.886
  I1203 19:54:26.889020 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8892" for this suite. @ 12/03/24 19:54:26.895
• [0.115 seconds]
------------------------------
SS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 12/03/24 19:54:26.902
  I1203 19:54:26.902224 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename init-container @ 12/03/24 19:54:26.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:54:26.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:54:26.92
  STEP: creating the pod @ 12/03/24 19:54:26.925
  I1203 19:54:26.925814 23 init_container.go:499] PodSpec: initContainers in spec.initContainers
  I1203 19:54:31.217934 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2721" for this suite. @ 12/03/24 19:54:31.223
• [4.328 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 12/03/24 19:54:31.23
  I1203 19:54:31.230288 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename svcaccounts @ 12/03/24 19:54:31.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:54:31.246
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:54:31.25
  I1203 19:54:31.257297 23 service_accounts.go:754] Got root ca configmap in namespace "svcaccounts-6045"
  I1203 19:54:31.262202 23 service_accounts.go:757] Deleted root ca configmap in namespace "svcaccounts-6045"
  STEP: waiting for a new root ca configmap created @ 12/03/24 19:54:31.763
  I1203 19:54:31.767472 23 service_accounts.go:771] Recreated root ca configmap in namespace "svcaccounts-6045"
  I1203 19:54:31.772704 23 service_accounts.go:782] Updated root ca configmap in namespace "svcaccounts-6045"
  STEP: waiting for the root ca configmap reconciled @ 12/03/24 19:54:32.273
  I1203 19:54:32.277846 23 service_accounts.go:800] Reconciled root ca configmap in namespace "svcaccounts-6045"
  I1203 19:54:32.278010 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6045" for this suite. @ 12/03/24 19:54:32.283
• [1.069 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 12/03/24 19:54:32.3
  I1203 19:54:32.300311 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename pods @ 12/03/24 19:54:32.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:54:32.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:54:32.318
  I1203 19:54:32.322900 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: creating the pod @ 12/03/24 19:54:32.324
  STEP: submitting the pod to kubernetes @ 12/03/24 19:54:32.324
  I1203 19:54:34.451122 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4390" for this suite. @ 12/03/24 19:54:34.457
• [2.164 seconds]
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 12/03/24 19:54:34.464
  I1203 19:54:34.464184 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename container-runtime @ 12/03/24 19:54:34.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:54:34.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:54:34.485
  STEP: create the container @ 12/03/24 19:54:34.49
  W1203 19:54:34.505466      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 12/03/24 19:54:34.505
  STEP: get the container status @ 12/03/24 19:54:37.525
  STEP: the container should be terminated @ 12/03/24 19:54:37.529
  STEP: the termination message should be set @ 12/03/24 19:54:37.529
  I1203 19:54:37.529501 23 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 12/03/24 19:54:37.529
  I1203 19:54:37.545246 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-832" for this suite. @ 12/03/24 19:54:37.551
• [3.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 12/03/24 19:54:37.558
  I1203 19:54:37.558682 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename webhook @ 12/03/24 19:54:37.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:54:37.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:54:37.579
  STEP: Setting up server cert @ 12/03/24 19:54:37.6
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/03/24 19:54:37.887
  STEP: Deploying the webhook pod @ 12/03/24 19:54:37.896
  STEP: Wait for the deployment to be ready @ 12/03/24 19:54:37.911
  I1203 19:54:37.918597 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/03/24 19:54:39.933
  STEP: Verifying the service has paired with the endpoint @ 12/03/24 19:54:39.949
  I1203 19:54:40.950314 23 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 12/03/24 19:54:41.027
  STEP: Creating a configMap that should be mutated @ 12/03/24 19:54:41.047
  STEP: Deleting the collection of validation webhooks @ 12/03/24 19:54:41.089
  STEP: Creating a configMap that should not be mutated @ 12/03/24 19:54:41.13
  I1203 19:54:41.171852 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3661" for this suite. @ 12/03/24 19:54:41.177
  STEP: Destroying namespace "webhook-markers-5760" for this suite. @ 12/03/24 19:54:41.182
• [3.631 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 12/03/24 19:54:41.19
  I1203 19:54:41.190114 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename gc @ 12/03/24 19:54:41.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:54:41.202
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:54:41.206
  I1203 19:54:41.251930 23 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"4f70a576-5771-4357-b0f8-25c84f702b22", Controller:(*bool)(0xc003c7b056), BlockOwnerDeletion:(*bool)(0xc003c7b057)}}
  I1203 19:54:41.264530 23 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"53d9822d-5baf-406b-95b8-bda347a29402", Controller:(*bool)(0xc0043b85ae), BlockOwnerDeletion:(*bool)(0xc0043b85af)}}
  I1203 19:54:41.271555 23 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"b265cdb0-8d6f-4fd8-9e05-8ce6b708e321", Controller:(*bool)(0xc0043b884a), BlockOwnerDeletion:(*bool)(0xc0043b884b)}}
  I1203 19:54:46.281455 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6770" for this suite. @ 12/03/24 19:54:46.285
• [5.101 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 12/03/24 19:54:46.291
  I1203 19:54:46.291279 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename container-runtime @ 12/03/24 19:54:46.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:54:46.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:54:46.307
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 12/03/24 19:54:46.319
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 12/03/24 19:55:01.405
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 12/03/24 19:55:01.409
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 12/03/24 19:55:01.415
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 12/03/24 19:55:01.415
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 12/03/24 19:55:01.435
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 12/03/24 19:55:03.447
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 12/03/24 19:55:04.457
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 12/03/24 19:55:04.466
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 12/03/24 19:55:04.466
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 12/03/24 19:55:04.495
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 12/03/24 19:55:05.505
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 12/03/24 19:55:06.514
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 12/03/24 19:55:06.521
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 12/03/24 19:55:06.522
  I1203 19:55:06.544028 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3762" for this suite. @ 12/03/24 19:55:06.548
• [20.263 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 12/03/24 19:55:06.554
  I1203 19:55:06.554734 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename projected @ 12/03/24 19:55:06.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:55:06.568
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:55:06.572
  STEP: Creating projection with secret that has name projected-secret-test-map-dac029d6-bf1c-4cbd-89d4-ce33edeff73e @ 12/03/24 19:55:06.577
  STEP: Creating a pod to test consume secrets @ 12/03/24 19:55:06.583
  STEP: Saw pod success @ 12/03/24 19:55:10.608
  I1203 19:55:10.612399 23 output.go:196] Trying to get logs from node nodea17 pod pod-projected-secrets-bd7b5919-a98e-43d5-be0f-b0250236abd1 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/03/24 19:55:10.619
  I1203 19:55:10.633905 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1079" for this suite. @ 12/03/24 19:55:10.638
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 12/03/24 19:55:10.644
  I1203 19:55:10.644320 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename downward-api @ 12/03/24 19:55:10.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:55:10.658
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:55:10.662
  STEP: Creating a pod to test downward API volume plugin @ 12/03/24 19:55:10.665
  STEP: Saw pod success @ 12/03/24 19:55:14.687
  I1203 19:55:14.691596 23 output.go:196] Trying to get logs from node nodea17 pod downwardapi-volume-91c7bf20-9b99-4dba-84da-a86031f2323f container client-container: <nil>
  STEP: delete the pod @ 12/03/24 19:55:14.698
  I1203 19:55:14.723553 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3638" for this suite. @ 12/03/24 19:55:14.728
• [4.090 seconds]
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 12/03/24 19:55:14.734
  I1203 19:55:14.734661 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename configmap @ 12/03/24 19:55:14.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:55:14.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:55:14.752
  STEP: Creating configMap that has name configmap-test-emptyKey-fee55de8-8897-4cea-9fe5-429e64165e45 @ 12/03/24 19:55:14.757
  I1203 19:55:14.759777 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3134" for this suite. @ 12/03/24 19:55:14.763
• [0.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 12/03/24 19:55:14.769
  I1203 19:55:14.769809 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename aggregator @ 12/03/24 19:55:14.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:55:14.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:55:14.788
  I1203 19:55:14.792636 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Registering the sample API server. @ 12/03/24 19:55:14.793
  I1203 19:55:15.485504 23 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I1203 19:55:15.510913 23 deployment.go:222] deployment "sample-apiserver-deployment" doesn't have the required revision set
  I1203 19:55:17.587388 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6d5cdcb7b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1203 19:55:19.592958 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6d5cdcb7b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1203 19:55:21.593133 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6d5cdcb7b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1203 19:55:23.593701 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6d5cdcb7b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1203 19:55:25.593214 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6d5cdcb7b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1203 19:55:27.593350 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6d5cdcb7b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1203 19:55:29.595558 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6d5cdcb7b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1203 19:55:31.592782 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6d5cdcb7b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1203 19:55:33.593298 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6d5cdcb7b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1203 19:55:35.592701 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6d5cdcb7b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1203 19:55:37.593650 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6d5cdcb7b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1203 19:55:39.592797 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6d5cdcb7b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1203 19:55:41.593526 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6d5cdcb7b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1203 19:55:43.592701 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6d5cdcb7b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1203 19:55:45.593395 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6d5cdcb7b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1203 19:55:47.593513 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6d5cdcb7b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1203 19:55:49.594030 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6d5cdcb7b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1203 19:55:51.592489 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6d5cdcb7b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1203 19:55:53.595530 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 19, 55, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-6d5cdcb7b\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1203 19:55:55.722864 23 aggregator.go:755] Waited 120.825088ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 12/03/24 19:55:55.79
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 12/03/24 19:55:55.794
  STEP: List APIServices @ 12/03/24 19:55:55.801
  I1203 19:55:55.809233 23 aggregator.go:556] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 12/03/24 19:55:55.809
  I1203 19:55:55.824008 23 aggregator.go:581] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 12/03/24 19:55:55.824
  I1203 19:55:55.834163 23 aggregator.go:607] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.December, 3, 19, 55, 55, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 12/03/24 19:55:55.834
  I1203 19:55:55.837873 23 aggregator.go:625] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-12-03 19:55:55 +0000 UTC Passed all checks passed}
  I1203 19:55:55.837946 23 aggregator.go:621] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1203 19:55:55.837977 23 aggregator.go:631] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 12/03/24 19:55:55.838
  I1203 19:55:55.848817 23 aggregator.go:647] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-2131968460" @ 12/03/24 19:55:55.848
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 12/03/24 19:55:55.867
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 12/03/24 19:55:55.88
  STEP: Patch APIService Status @ 12/03/24 19:55:55.884
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 12/03/24 19:55:55.894
  I1203 19:55:55.897936 23 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-12-03 19:55:55 +0000 UTC Passed all checks passed}
  I1203 19:55:55.898014 23 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1203 19:55:55.898047 23 aggregator.go:721] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I1203 19:55:55.898086 23 aggregator.go:731] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 12/03/24 19:55:55.898
  STEP: Confirm that the generated APIService has been deleted @ 12/03/24 19:55:55.908
  I1203 19:55:55.908259 23 aggregator.go:792] Requesting list of APIServices to confirm quantity
  I1203 19:55:55.913899 23 aggregator.go:802] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I1203 19:55:55.913970 23 aggregator.go:744] APIService v1alpha1.wardle.example.com has been deleted.
  I1203 19:55:56.022403 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-4592" for this suite. @ 12/03/24 19:55:56.027
• [41.263 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 12/03/24 19:55:56.032
  I1203 19:55:56.032802 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename var-expansion @ 12/03/24 19:55:56.034
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:55:56.046
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:55:56.05
  I1203 19:55:58.072203 23 delete.go:62] Deleting pod "var-expansion-8aaab8f4-9f55-4718-86fc-6a3f9fd92cde" in namespace "var-expansion-1030"
  I1203 19:55:58.079538 23 delete.go:70] Wait up to 5m0s for pod "var-expansion-8aaab8f4-9f55-4718-86fc-6a3f9fd92cde" to be fully deleted
  I1203 19:56:00.089871 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1030" for this suite. @ 12/03/24 19:56:00.095
• [4.071 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 12/03/24 19:56:00.104
  I1203 19:56:00.104367 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename cronjob @ 12/03/24 19:56:00.105
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:56:00.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:56:00.127
  STEP: Creating a ForbidConcurrent cronjob @ 12/03/24 19:56:00.131
  STEP: Ensuring a job is scheduled @ 12/03/24 19:56:00.139
  STEP: Ensuring exactly one is scheduled @ 12/03/24 19:57:00.144
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 12/03/24 19:57:00.149
  STEP: Ensuring no more jobs are scheduled @ 12/03/24 19:57:00.153
  STEP: Removing cronjob @ 12/03/24 19:57:00.156
  I1203 19:57:00.161597 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3682" for this suite. @ 12/03/24 19:57:00.167
• [60.068 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 12/03/24 19:57:00.172
  I1203 19:57:00.172964 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename secrets @ 12/03/24 19:57:00.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:57:00.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:57:00.191
  STEP: Creating projection with secret that has name secret-emptykey-test-9ebf8d3d-cac4-4f43-a6ad-8538936a5129 @ 12/03/24 19:57:00.194
  I1203 19:57:00.197138 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2975" for this suite. @ 12/03/24 19:57:00.202
• [0.035 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 12/03/24 19:57:00.208
  I1203 19:57:00.208701 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename secrets @ 12/03/24 19:57:00.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:57:00.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:57:00.224
  STEP: Creating secret with name secret-test-3308a2d9-a9b6-4e69-9bbd-b93651ae28a7 @ 12/03/24 19:57:00.228
  STEP: Creating a pod to test consume secrets @ 12/03/24 19:57:00.231
  STEP: Saw pod success @ 12/03/24 19:57:04.254
  I1203 19:57:04.258466 23 output.go:196] Trying to get logs from node nodea17 pod pod-secrets-a383c3bb-4fb4-4b41-870f-442d92a53381 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/03/24 19:57:04.278
  I1203 19:57:04.294478 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8745" for this suite. @ 12/03/24 19:57:04.299
• [4.096 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:601
  STEP: Creating a kubernetes client @ 12/03/24 19:57:04.305
  I1203 19:57:04.305388 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename job @ 12/03/24 19:57:04.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:57:04.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:57:04.323
  STEP: Creating a job @ 12/03/24 19:57:04.328
  STEP: Ensuring job reaches completions @ 12/03/24 19:57:04.335
  I1203 19:57:14.342603 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-903" for this suite. @ 12/03/24 19:57:14.348
• [10.058 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 12/03/24 19:57:14.363
  I1203 19:57:14.363424 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename dns @ 12/03/24 19:57:14.365
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:57:14.377
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:57:14.381
  STEP: Creating a test headless service @ 12/03/24 19:57:14.385
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4745 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-4745;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4745 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-4745;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4745.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-4745.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4745.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-4745.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4745.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-4745.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4745.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-4745.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4745.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-4745.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4745.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-4745.svc;check="$$(dig +notcp +noall +answer +search 223.149.101.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.101.149.223_udp@PTR;check="$$(dig +tcp +noall +answer +search 223.149.101.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.101.149.223_tcp@PTR;sleep 1; done
   @ 12/03/24 19:57:14.403
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4745 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4745;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4745 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4745;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4745.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4745.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4745.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4745.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4745.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-4745.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4745.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-4745.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4745.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-4745.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4745.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-4745.svc;check="$$(dig +notcp +noall +answer +search 223.149.101.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.101.149.223_udp@PTR;check="$$(dig +tcp +noall +answer +search 223.149.101.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.101.149.223_tcp@PTR;sleep 1; done
   @ 12/03/24 19:57:14.403
  STEP: creating a pod to probe DNS @ 12/03/24 19:57:14.403
  STEP: submitting the pod to kubernetes @ 12/03/24 19:57:14.403
  STEP: retrieving the pod @ 12/03/24 19:57:16.422
  STEP: looking for the results for each expected name from probers @ 12/03/24 19:57:16.426
  I1203 19:57:16.432840 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:16.437254 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:16.441923 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-4745 from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:16.446592 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-4745 from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:16.451067 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:16.455139 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:16.459649 23 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:16.463662 23 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:16.484707 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:16.488661 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:16.492366 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-4745 from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:16.496028 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-4745 from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:16.499973 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:16.504010 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:16.508610 23 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:16.512804 23 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:16.529770 23 dns_common.go:489] Lookups using dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-4745 wheezy_tcp@dns-test-service.dns-4745 wheezy_udp@dns-test-service.dns-4745.svc wheezy_tcp@dns-test-service.dns-4745.svc wheezy_udp@_http._tcp.dns-test-service.dns-4745.svc wheezy_tcp@_http._tcp.dns-test-service.dns-4745.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-4745 jessie_tcp@dns-test-service.dns-4745 jessie_udp@dns-test-service.dns-4745.svc jessie_tcp@dns-test-service.dns-4745.svc jessie_udp@_http._tcp.dns-test-service.dns-4745.svc jessie_tcp@_http._tcp.dns-test-service.dns-4745.svc]

  I1203 19:57:16.536297 23 dns_common.go:495] Pod client logs for webserver: 
  I1203 19:57:16.542365 23 dns_common.go:495] Pod client logs for querier: 
  I1203 19:57:16.547872 23 dns_common.go:495] Pod client logs for jessie-querier: 
  I1203 19:57:21.434374 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:21.439769 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:21.445002 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-4745 from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:21.449520 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-4745 from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:21.453580 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:21.458157 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:21.462866 23 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:21.467675 23 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:21.487860 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:21.491785 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:21.496513 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-4745 from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:21.500761 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-4745 from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:21.505440 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:21.509740 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:21.514566 23 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:21.519145 23 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:21.537539 23 dns_common.go:489] Lookups using dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-4745 wheezy_tcp@dns-test-service.dns-4745 wheezy_udp@dns-test-service.dns-4745.svc wheezy_tcp@dns-test-service.dns-4745.svc wheezy_udp@_http._tcp.dns-test-service.dns-4745.svc wheezy_tcp@_http._tcp.dns-test-service.dns-4745.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-4745 jessie_tcp@dns-test-service.dns-4745 jessie_udp@dns-test-service.dns-4745.svc jessie_tcp@dns-test-service.dns-4745.svc jessie_udp@_http._tcp.dns-test-service.dns-4745.svc jessie_tcp@_http._tcp.dns-test-service.dns-4745.svc]

  I1203 19:57:21.545387 23 dns_common.go:495] Pod client logs for webserver: 
  I1203 19:57:21.551815 23 dns_common.go:495] Pod client logs for querier: 
  I1203 19:57:21.559293 23 dns_common.go:495] Pod client logs for jessie-querier: 
  I1203 19:57:26.433233 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:26.438071 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:26.442892 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-4745 from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:26.447270 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-4745 from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:26.452380 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:26.457516 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:26.461679 23 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:26.465970 23 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:26.486393 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:26.489828 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:26.493566 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-4745 from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:26.496846 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-4745 from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:26.500504 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:26.503986 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:26.507587 23 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:26.511526 23 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:26.527360 23 dns_common.go:489] Lookups using dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-4745 wheezy_tcp@dns-test-service.dns-4745 wheezy_udp@dns-test-service.dns-4745.svc wheezy_tcp@dns-test-service.dns-4745.svc wheezy_udp@_http._tcp.dns-test-service.dns-4745.svc wheezy_tcp@_http._tcp.dns-test-service.dns-4745.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-4745 jessie_tcp@dns-test-service.dns-4745 jessie_udp@dns-test-service.dns-4745.svc jessie_tcp@dns-test-service.dns-4745.svc jessie_udp@_http._tcp.dns-test-service.dns-4745.svc jessie_tcp@_http._tcp.dns-test-service.dns-4745.svc]

  I1203 19:57:26.534641 23 dns_common.go:495] Pod client logs for webserver: 
  I1203 19:57:26.541381 23 dns_common.go:495] Pod client logs for querier: 
  I1203 19:57:26.547398 23 dns_common.go:495] Pod client logs for jessie-querier: 
  I1203 19:57:31.433300 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:31.439011 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:31.443770 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-4745 from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:31.448245 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-4745 from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:31.452990 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:31.457674 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:31.462151 23 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:31.466547 23 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:31.487590 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:31.492084 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:31.496405 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-4745 from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:31.500847 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-4745 from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:31.505036 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:31.508817 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:31.512370 23 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:31.516049 23 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:31.532615 23 dns_common.go:489] Lookups using dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-4745 wheezy_tcp@dns-test-service.dns-4745 wheezy_udp@dns-test-service.dns-4745.svc wheezy_tcp@dns-test-service.dns-4745.svc wheezy_udp@_http._tcp.dns-test-service.dns-4745.svc wheezy_tcp@_http._tcp.dns-test-service.dns-4745.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-4745 jessie_tcp@dns-test-service.dns-4745 jessie_udp@dns-test-service.dns-4745.svc jessie_tcp@dns-test-service.dns-4745.svc jessie_udp@_http._tcp.dns-test-service.dns-4745.svc jessie_tcp@_http._tcp.dns-test-service.dns-4745.svc]

  I1203 19:57:31.539396 23 dns_common.go:495] Pod client logs for webserver: 
  I1203 19:57:31.545415 23 dns_common.go:495] Pod client logs for querier: 
  I1203 19:57:31.551985 23 dns_common.go:495] Pod client logs for jessie-querier: 
  I1203 19:57:36.440104 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:36.445036 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:36.449268 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-4745 from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:36.453839 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-4745 from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:36.457282 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:36.460979 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:36.464141 23 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:36.468486 23 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:36.487631 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:36.490861 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:36.494630 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-4745 from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:36.498403 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-4745 from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:36.502384 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:36.505769 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:36.509493 23 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:36.513757 23 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:36.529798 23 dns_common.go:489] Lookups using dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-4745 wheezy_tcp@dns-test-service.dns-4745 wheezy_udp@dns-test-service.dns-4745.svc wheezy_tcp@dns-test-service.dns-4745.svc wheezy_udp@_http._tcp.dns-test-service.dns-4745.svc wheezy_tcp@_http._tcp.dns-test-service.dns-4745.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-4745 jessie_tcp@dns-test-service.dns-4745 jessie_udp@dns-test-service.dns-4745.svc jessie_tcp@dns-test-service.dns-4745.svc jessie_udp@_http._tcp.dns-test-service.dns-4745.svc jessie_tcp@_http._tcp.dns-test-service.dns-4745.svc]

  I1203 19:57:36.537486 23 dns_common.go:495] Pod client logs for webserver: 
  I1203 19:57:36.544013 23 dns_common.go:495] Pod client logs for querier: 
  I1203 19:57:36.550676 23 dns_common.go:495] Pod client logs for jessie-querier: 
  I1203 19:57:41.434125 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:41.439505 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:41.444174 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-4745 from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:41.448958 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-4745 from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:41.453723 23 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:41.458780 23 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:41.463689 23 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:41.468043 23 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:41.490274 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:41.494270 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:41.499063 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-4745 from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:41.503466 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-4745 from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:41.507681 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:41.512229 23 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:41.516658 23 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:41.521368 23 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4745.svc from pod dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992: the server could not find the requested resource (get pods dns-test-167e333f-8224-4a4c-b221-878280bbe992)
  I1203 19:57:41.538016 23 dns_common.go:489] Lookups using dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-4745 wheezy_tcp@dns-test-service.dns-4745 wheezy_udp@dns-test-service.dns-4745.svc wheezy_tcp@dns-test-service.dns-4745.svc wheezy_udp@_http._tcp.dns-test-service.dns-4745.svc wheezy_tcp@_http._tcp.dns-test-service.dns-4745.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-4745 jessie_tcp@dns-test-service.dns-4745 jessie_udp@dns-test-service.dns-4745.svc jessie_tcp@dns-test-service.dns-4745.svc jessie_udp@_http._tcp.dns-test-service.dns-4745.svc jessie_tcp@_http._tcp.dns-test-service.dns-4745.svc]

  I1203 19:57:41.545798 23 dns_common.go:495] Pod client logs for webserver: 
  I1203 19:57:41.552586 23 dns_common.go:495] Pod client logs for querier: 
  I1203 19:57:41.559355 23 dns_common.go:495] Pod client logs for jessie-querier: 
  I1203 19:57:46.535082 23 dns_common.go:527] DNS probes using dns-4745/dns-test-167e333f-8224-4a4c-b221-878280bbe992 succeeded

  STEP: deleting the pod @ 12/03/24 19:57:46.535
  STEP: deleting the test service @ 12/03/24 19:57:46.548
  STEP: deleting the test headless service @ 12/03/24 19:57:46.573
  I1203 19:57:46.580841 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4745" for this suite. @ 12/03/24 19:57:46.585
• [32.227 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:355
  STEP: Creating a kubernetes client @ 12/03/24 19:57:46.59
  I1203 19:57:46.590593 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename kubectl @ 12/03/24 19:57:46.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:57:46.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:57:46.607
  STEP: creating a replication controller @ 12/03/24 19:57:46.611
  I1203 19:57:46.612146 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-3115 create -f -'
  I1203 19:57:46.799066 23 builder.go:146] stderr: ""
  I1203 19:57:46.799170 23 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/03/24 19:57:46.799
  I1203 19:57:46.799416 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-3115 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1203 19:57:46.897561 23 builder.go:146] stderr: ""
  I1203 19:57:46.897647 23 builder.go:147] stdout: "update-demo-nautilus-v9z4p update-demo-nautilus-w5lwq "
  I1203 19:57:46.897741 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-3115 get pods update-demo-nautilus-v9z4p -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1203 19:57:46.986847 23 builder.go:146] stderr: ""
  I1203 19:57:46.986922 23 builder.go:147] stdout: ""
  I1203 19:57:46.986944 23 kubectl.go:2501] update-demo-nautilus-v9z4p is created but not running
  I1203 19:57:51.987468 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-3115 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1203 19:57:52.093769 23 builder.go:146] stderr: ""
  I1203 19:57:52.093854 23 builder.go:147] stdout: "update-demo-nautilus-v9z4p update-demo-nautilus-w5lwq "
  I1203 19:57:52.093949 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-3115 get pods update-demo-nautilus-v9z4p -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1203 19:57:52.189154 23 builder.go:146] stderr: ""
  I1203 19:57:52.189215 23 builder.go:147] stdout: ""
  I1203 19:57:52.189237 23 kubectl.go:2501] update-demo-nautilus-v9z4p is created but not running
  I1203 19:57:57.189980 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-3115 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1203 19:57:57.292974 23 builder.go:146] stderr: ""
  I1203 19:57:57.293036 23 builder.go:147] stdout: "update-demo-nautilus-v9z4p update-demo-nautilus-w5lwq "
  I1203 19:57:57.293123 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-3115 get pods update-demo-nautilus-v9z4p -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1203 19:57:57.379275 23 builder.go:146] stderr: ""
  I1203 19:57:57.379337 23 builder.go:147] stdout: ""
  I1203 19:57:57.379357 23 kubectl.go:2501] update-demo-nautilus-v9z4p is created but not running
  I1203 19:58:02.381600 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-3115 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1203 19:58:02.481318 23 builder.go:146] stderr: ""
  I1203 19:58:02.481396 23 builder.go:147] stdout: "update-demo-nautilus-v9z4p update-demo-nautilus-w5lwq "
  I1203 19:58:02.481510 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-3115 get pods update-demo-nautilus-v9z4p -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1203 19:58:02.573677 23 builder.go:146] stderr: ""
  I1203 19:58:02.573756 23 builder.go:147] stdout: ""
  I1203 19:58:02.573780 23 kubectl.go:2501] update-demo-nautilus-v9z4p is created but not running
  I1203 19:58:07.574719 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-3115 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1203 19:58:07.685158 23 builder.go:146] stderr: ""
  I1203 19:58:07.685220 23 builder.go:147] stdout: "update-demo-nautilus-v9z4p update-demo-nautilus-w5lwq "
  I1203 19:58:07.685316 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-3115 get pods update-demo-nautilus-v9z4p -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1203 19:58:07.773744 23 builder.go:146] stderr: ""
  I1203 19:58:07.773814 23 builder.go:147] stdout: "true"
  I1203 19:58:07.773891 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-3115 get pods update-demo-nautilus-v9z4p -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1203 19:58:07.885142 23 builder.go:146] stderr: ""
  I1203 19:58:07.885204 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1203 19:58:07.885226 23 kubectl.go:2392] validating pod update-demo-nautilus-v9z4p
  I1203 19:58:07.891848 23 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I1203 19:58:07.892039 23 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1203 19:58:07.892076 23 kubectl.go:2519] update-demo-nautilus-v9z4p is verified up and running
  I1203 19:58:07.892163 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-3115 get pods update-demo-nautilus-w5lwq -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1203 19:58:07.978097 23 builder.go:146] stderr: ""
  I1203 19:58:07.978156 23 builder.go:147] stdout: "true"
  I1203 19:58:07.978235 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-3115 get pods update-demo-nautilus-w5lwq -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1203 19:58:08.086076 23 builder.go:146] stderr: ""
  I1203 19:58:08.086158 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1203 19:58:08.086194 23 kubectl.go:2392] validating pod update-demo-nautilus-w5lwq
  I1203 19:58:08.092816 23 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I1203 19:58:08.092921 23 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1203 19:58:08.092950 23 kubectl.go:2519] update-demo-nautilus-w5lwq is verified up and running
  STEP: scaling down the replication controller @ 12/03/24 19:58:08.092
  I1203 19:58:08.095793 23 kubectl.go:324] scanned /root for discovery docs: <nil>
  I1203 19:58:08.095886 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-3115 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  I1203 19:58:09.209027 23 builder.go:146] stderr: ""
  I1203 19:58:09.209116 23 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/03/24 19:58:09.209
  I1203 19:58:09.209306 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-3115 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1203 19:58:09.312730 23 builder.go:146] stderr: ""
  I1203 19:58:09.312818 23 builder.go:147] stdout: "update-demo-nautilus-v9z4p update-demo-nautilus-w5lwq "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 12/03/24 19:58:09.312
  I1203 19:58:14.316183 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-3115 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1203 19:58:14.418078 23 builder.go:146] stderr: ""
  I1203 19:58:14.418154 23 builder.go:147] stdout: "update-demo-nautilus-w5lwq "
  I1203 19:58:14.418243 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-3115 get pods update-demo-nautilus-w5lwq -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1203 19:58:14.523182 23 builder.go:146] stderr: ""
  I1203 19:58:14.523313 23 builder.go:147] stdout: "true"
  I1203 19:58:14.523405 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-3115 get pods update-demo-nautilus-w5lwq -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1203 19:58:14.604883 23 builder.go:146] stderr: ""
  I1203 19:58:14.604962 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1203 19:58:14.604989 23 kubectl.go:2392] validating pod update-demo-nautilus-w5lwq
  I1203 19:58:14.609097 23 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I1203 19:58:14.609165 23 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1203 19:58:14.609182 23 kubectl.go:2519] update-demo-nautilus-w5lwq is verified up and running
  STEP: scaling up the replication controller @ 12/03/24 19:58:14.609
  I1203 19:58:14.611087 23 kubectl.go:324] scanned /root for discovery docs: <nil>
  I1203 19:58:14.611153 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-3115 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  I1203 19:58:15.741427 23 builder.go:146] stderr: ""
  I1203 19:58:15.741505 23 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/03/24 19:58:15.741
  I1203 19:58:15.741705 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-3115 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1203 19:58:15.836464 23 builder.go:146] stderr: ""
  I1203 19:58:15.836545 23 builder.go:147] stdout: "update-demo-nautilus-l5j5f update-demo-nautilus-w5lwq "
  I1203 19:58:15.836626 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-3115 get pods update-demo-nautilus-l5j5f -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1203 19:58:15.928695 23 builder.go:146] stderr: ""
  I1203 19:58:15.928785 23 builder.go:147] stdout: ""
  I1203 19:58:15.928812 23 kubectl.go:2501] update-demo-nautilus-l5j5f is created but not running
  I1203 19:58:20.929405 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-3115 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1203 19:58:21.029090 23 builder.go:146] stderr: ""
  I1203 19:58:21.029197 23 builder.go:147] stdout: "update-demo-nautilus-l5j5f update-demo-nautilus-w5lwq "
  I1203 19:58:21.029273 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-3115 get pods update-demo-nautilus-l5j5f -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1203 19:58:21.126457 23 builder.go:146] stderr: ""
  I1203 19:58:21.126535 23 builder.go:147] stdout: "true"
  I1203 19:58:21.126613 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-3115 get pods update-demo-nautilus-l5j5f -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1203 19:58:21.216697 23 builder.go:146] stderr: ""
  I1203 19:58:21.216775 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1203 19:58:21.216807 23 kubectl.go:2392] validating pod update-demo-nautilus-l5j5f
  I1203 19:58:21.224705 23 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I1203 19:58:21.224806 23 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1203 19:58:21.224831 23 kubectl.go:2519] update-demo-nautilus-l5j5f is verified up and running
  I1203 19:58:21.224907 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-3115 get pods update-demo-nautilus-w5lwq -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1203 19:58:21.323062 23 builder.go:146] stderr: ""
  I1203 19:58:21.323128 23 builder.go:147] stdout: "true"
  I1203 19:58:21.323274 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-3115 get pods update-demo-nautilus-w5lwq -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1203 19:58:21.411393 23 builder.go:146] stderr: ""
  I1203 19:58:21.411481 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1203 19:58:21.411513 23 kubectl.go:2392] validating pod update-demo-nautilus-w5lwq
  I1203 19:58:21.416599 23 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I1203 19:58:21.416738 23 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1203 19:58:21.416767 23 kubectl.go:2519] update-demo-nautilus-w5lwq is verified up and running
  STEP: using delete to clean up resources @ 12/03/24 19:58:21.416
  I1203 19:58:21.416938 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-3115 delete --grace-period=0 --force -f -'
  I1203 19:58:21.509297 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1203 19:58:21.509381 23 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I1203 19:58:21.509494 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-3115 get rc,svc -l name=update-demo --no-headers'
  I1203 19:58:21.610260 23 builder.go:146] stderr: "No resources found in kubectl-3115 namespace.\n"
  I1203 19:58:21.610342 23 builder.go:147] stdout: ""
  I1203 19:58:21.610428 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-3115 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1203 19:58:21.710364 23 builder.go:146] stderr: ""
  I1203 19:58:21.710433 23 builder.go:147] stdout: ""
  I1203 19:58:21.710584 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3115" for this suite. @ 12/03/24 19:58:21.715
• [35.131 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 12/03/24 19:58:21.721
  I1203 19:58:21.721704 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename replication-controller @ 12/03/24 19:58:21.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:58:21.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:58:21.739
  I1203 19:58:21.743871 23 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 12/03/24 19:58:22.757
  STEP: Checking rc "condition-test" has the desired failure condition set @ 12/03/24 19:58:22.765
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 12/03/24 19:58:23.775
  I1203 19:58:23.788350 23 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 12/03/24 19:58:23.788
  I1203 19:58:24.799297 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7885" for this suite. @ 12/03/24 19:58:24.804
• [3.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 12/03/24 19:58:24.811
  I1203 19:58:24.811988 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/03/24 19:58:24.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:58:24.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:58:24.831
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 12/03/24 19:58:24.835
  I1203 19:58:24.836841 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  I1203 19:58:26.279396 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  I1203 19:58:31.910837 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1509" for this suite. @ 12/03/24 19:58:31.923
• [7.120 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 12/03/24 19:58:31.932
  I1203 19:58:31.932327 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename secrets @ 12/03/24 19:58:31.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:58:31.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:58:31.949
  STEP: Creating secret with name secret-test-9ca31862-525c-4182-8866-87cd07b9a279 @ 12/03/24 19:58:31.953
  STEP: Creating a pod to test consume secrets @ 12/03/24 19:58:31.958
  STEP: Saw pod success @ 12/03/24 19:58:35.98
  I1203 19:58:35.983933 23 output.go:196] Trying to get logs from node nodea17 pod pod-secrets-0678dde4-f9bf-45b4-a13d-6abf4a00ea74 container secret-env-test: <nil>
  STEP: delete the pod @ 12/03/24 19:58:35.995
  I1203 19:58:36.030547 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7971" for this suite. @ 12/03/24 19:58:36.035
• [4.111 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 12/03/24 19:58:36.043
  I1203 19:58:36.043862 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename container-probe @ 12/03/24 19:58:36.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 19:58:36.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 19:58:36.063
  STEP: Creating pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413 @ 12/03/24 19:58:36.067
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/03/24 19:58:38.083
  I1203 19:58:38.086764 23 container_probe.go:1749] Initial restart count of pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 is 0
  I1203 19:58:38.090288 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 19:58:40.095428 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 19:58:42.101053 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 19:58:44.107957 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 19:58:46.114277 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 19:58:48.123575 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 19:58:50.129401 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 19:58:52.134932 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 19:58:54.140086 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 19:58:56.146406 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 19:58:58.152079 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 19:59:00.157035 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 19:59:02.162520 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 19:59:04.168517 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 19:59:06.173664 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 19:59:08.178576 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 19:59:10.183392 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 19:59:12.188042 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 19:59:14.193000 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 19:59:16.199093 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 19:59:18.203981 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 19:59:20.208589 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 19:59:22.213668 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 19:59:24.219137 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 19:59:26.224883 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 19:59:28.230825 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 19:59:30.237227 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 19:59:32.243260 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 19:59:34.249378 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 19:59:36.255561 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 19:59:38.261792 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 19:59:40.267709 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 19:59:42.273152 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 19:59:44.279339 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 19:59:46.285358 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 19:59:48.292249 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 19:59:50.298242 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 19:59:52.304287 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 19:59:54.309907 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 19:59:56.316207 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 19:59:58.322165 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:00:00.328129 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:00:02.333463 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:00:04.338520 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:00:06.343828 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:00:08.348515 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:00:10.353239 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:00:12.358323 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:00:14.363775 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:00:16.369267 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:00:18.375403 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:00:20.380519 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:00:22.386672 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:00:24.392631 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:00:26.398372 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:00:28.404154 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:00:30.408956 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:00:32.414203 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:00:34.419168 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:00:36.424672 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:00:38.429530 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:00:40.434923 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:00:42.439874 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:00:44.444569 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:00:46.449107 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:00:48.453766 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:00:50.459014 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:00:52.464760 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:00:54.468424 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:00:56.474730 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:00:58.482333 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:01:00.488761 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:01:02.496484 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:01:04.501411 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:01:06.507315 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:01:08.512658 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:01:10.517650 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:01:12.522225 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:01:14.528063 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:01:16.533791 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:01:18.539509 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:01:20.545482 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:01:22.550894 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:01:24.555312 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:01:26.560821 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:01:28.565804 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:01:30.571438 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:01:32.577342 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:01:34.583552 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:01:36.589127 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:01:38.595108 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:01:40.601405 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:01:42.608675 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:01:44.614594 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:01:46.621222 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:01:48.627400 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:01:50.633927 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:01:52.640524 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:01:54.646303 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:01:56.652836 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:01:58.659165 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:02:00.664329 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:02:02.670819 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:02:04.677224 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:02:06.683957 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:02:08.690038 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:02:10.695854 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:02:12.702316 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:02:14.707853 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:02:16.714269 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:02:18.720843 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:02:20.727098 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:02:22.733112 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:02:24.739588 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:02:26.746133 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:02:28.752155 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:02:30.758908 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:02:32.766220 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:02:34.772049 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  I1203 20:02:36.778027 23 container_probe.go:1759] Get pod test-webserver-c28764d9-538b-48f2-8284-2b36426516a1 in namespace container-probe-1413
  STEP: deleting the pod @ 12/03/24 20:02:38.779
  I1203 20:02:38.790279 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1413" for this suite. @ 12/03/24 20:02:38.801
• [242.762 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 12/03/24 20:02:38.806
  I1203 20:02:38.806674 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename projected @ 12/03/24 20:02:38.809
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:02:38.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:02:38.824
  STEP: Creating configMap with name projected-configmap-test-volume-59d8b3d7-d60a-4c99-babf-365c023d728d @ 12/03/24 20:02:38.828
  STEP: Creating a pod to test consume configMaps @ 12/03/24 20:02:38.832
  STEP: Saw pod success @ 12/03/24 20:02:42.855
  I1203 20:02:42.858906 23 output.go:196] Trying to get logs from node nodea17 pod pod-projected-configmaps-9fb91eca-f30a-4f7a-9072-c19b5ce17453 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 12/03/24 20:02:42.88
  I1203 20:02:42.900617 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8468" for this suite. @ 12/03/24 20:02:42.905
• [4.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 12/03/24 20:02:42.91
  I1203 20:02:42.910794 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename proxy @ 12/03/24 20:02:42.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:02:42.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:02:42.929
  I1203 20:02:42.933815 23 proxy.go:293] Creating pod...
  I1203 20:02:44.951270 23 proxy.go:317] Creating service...
  I1203 20:02:44.964960 23 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2432/pods/agnhost/proxy/some/path/with/DELETE
  I1203 20:02:44.969702 23 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1203 20:02:44.969770 23 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2432/pods/agnhost/proxy/some/path/with/GET
  I1203 20:02:44.974147 23 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I1203 20:02:44.974213 23 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2432/pods/agnhost/proxy/some/path/with/HEAD
  I1203 20:02:44.978056 23 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I1203 20:02:44.978113 23 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2432/pods/agnhost/proxy/some/path/with/OPTIONS
  I1203 20:02:44.982110 23 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1203 20:02:44.982172 23 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2432/pods/agnhost/proxy/some/path/with/PATCH
  I1203 20:02:44.986075 23 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1203 20:02:44.986137 23 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2432/pods/agnhost/proxy/some/path/with/POST
  I1203 20:02:44.989815 23 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1203 20:02:44.989884 23 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2432/pods/agnhost/proxy/some/path/with/PUT
  I1203 20:02:44.993944 23 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1203 20:02:44.994008 23 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2432/services/test-service/proxy/some/path/with/DELETE
  I1203 20:02:44.998973 23 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1203 20:02:44.999026 23 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2432/services/test-service/proxy/some/path/with/GET
  I1203 20:02:45.003662 23 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I1203 20:02:45.003726 23 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2432/services/test-service/proxy/some/path/with/HEAD
  I1203 20:02:45.010646 23 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I1203 20:02:45.010695 23 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2432/services/test-service/proxy/some/path/with/OPTIONS
  I1203 20:02:45.015891 23 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1203 20:02:45.015956 23 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2432/services/test-service/proxy/some/path/with/PATCH
  I1203 20:02:45.020815 23 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1203 20:02:45.020893 23 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2432/services/test-service/proxy/some/path/with/POST
  I1203 20:02:45.025373 23 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1203 20:02:45.025434 23 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-2432/services/test-service/proxy/some/path/with/PUT
  I1203 20:02:45.030455 23 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1203 20:02:45.030621 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-2432" for this suite. @ 12/03/24 20:02:45.034
• [2.132 seconds]
------------------------------
SS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 12/03/24 20:02:45.042
  I1203 20:02:45.042511 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename replication-controller @ 12/03/24 20:02:45.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:02:45.056
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:02:45.06
  STEP: Creating ReplicationController "e2e-rc-28p98" @ 12/03/24 20:02:45.064
  I1203 20:02:45.071068 23 rc.go:792] Get Replication Controller "e2e-rc-28p98" to confirm replicas
  I1203 20:02:46.071611 23 rc.go:792] Get Replication Controller "e2e-rc-28p98" to confirm replicas
  I1203 20:02:46.075771 23 rc.go:801] Found 1 replicas for "e2e-rc-28p98" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-28p98" @ 12/03/24 20:02:46.075
  STEP: Updating a scale subresource @ 12/03/24 20:02:46.079
  STEP: Verifying replicas where modified for replication controller "e2e-rc-28p98" @ 12/03/24 20:02:46.088
  I1203 20:02:46.088528 23 rc.go:792] Get Replication Controller "e2e-rc-28p98" to confirm replicas
  I1203 20:02:47.089546 23 rc.go:792] Get Replication Controller "e2e-rc-28p98" to confirm replicas
  I1203 20:02:47.094477 23 rc.go:801] Found 2 replicas for "e2e-rc-28p98" replication controller
  I1203 20:02:47.094655 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-9782" for this suite. @ 12/03/24 20:02:47.1
• [2.065 seconds]
------------------------------
SS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 12/03/24 20:02:47.107
  I1203 20:02:47.107561 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename dns @ 12/03/24 20:02:47.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:02:47.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:02:47.138
  STEP: Creating a test headless service @ 12/03/24 20:02:47.142
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4248.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-4248.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4248.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-4248.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4248.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4248.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4248.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-4248.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4248.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-4248.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 238.84.102.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.102.84.238_udp@PTR;check="$$(dig +tcp +noall +answer +search 238.84.102.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.102.84.238_tcp@PTR;sleep 1; done
   @ 12/03/24 20:02:47.166
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-4248.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-4248.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-4248.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-4248.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-4248.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-4248.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-4248.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-4248.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-4248.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-4248.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 238.84.102.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.102.84.238_udp@PTR;check="$$(dig +tcp +noall +answer +search 238.84.102.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.102.84.238_tcp@PTR;sleep 1; done
   @ 12/03/24 20:02:47.166
  STEP: creating a pod to probe DNS @ 12/03/24 20:02:47.166
  STEP: submitting the pod to kubernetes @ 12/03/24 20:02:47.166
  STEP: retrieving the pod @ 12/03/24 20:02:49.183
  STEP: looking for the results for each expected name from probers @ 12/03/24 20:02:49.187
  I1203 20:02:49.204987 23 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local from pod dns-4248/dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd: the server could not find the requested resource (get pods dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd)
  I1203 20:02:49.209345 23 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local from pod dns-4248/dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd: the server could not find the requested resource (get pods dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd)
  I1203 20:02:49.230028 23 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-4248.svc.cluster.local from pod dns-4248/dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd: the server could not find the requested resource (get pods dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd)
  I1203 20:02:49.238064 23 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local from pod dns-4248/dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd: the server could not find the requested resource (get pods dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd)
  I1203 20:02:49.242425 23 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local from pod dns-4248/dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd: the server could not find the requested resource (get pods dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd)
  I1203 20:02:49.258986 23 dns_common.go:489] Lookups using dns-4248/dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd failed for: [wheezy_udp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local jessie_udp@dns-test-service.dns-4248.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local]

  I1203 20:02:49.266435 23 dns_common.go:495] Pod client logs for webserver: 
  I1203 20:02:49.271631 23 dns_common.go:495] Pod client logs for querier: 
  I1203 20:02:49.277313 23 dns_common.go:495] Pod client logs for jessie-querier: 
  I1203 20:02:54.205556 23 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local from pod dns-4248/dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd: the server could not find the requested resource (get pods dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd)
  I1203 20:02:54.210230 23 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local from pod dns-4248/dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd: the server could not find the requested resource (get pods dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd)
  I1203 20:02:54.239639 23 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local from pod dns-4248/dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd: the server could not find the requested resource (get pods dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd)
  I1203 20:02:54.243601 23 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local from pod dns-4248/dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd: the server could not find the requested resource (get pods dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd)
  I1203 20:02:54.260609 23 dns_common.go:489] Lookups using dns-4248/dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd failed for: [wheezy_udp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local]

  I1203 20:02:54.267044 23 dns_common.go:495] Pod client logs for webserver: 
  I1203 20:02:54.273284 23 dns_common.go:495] Pod client logs for querier: 
  I1203 20:02:54.280358 23 dns_common.go:495] Pod client logs for jessie-querier: 
  I1203 20:02:59.206978 23 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local from pod dns-4248/dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd: the server could not find the requested resource (get pods dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd)
  I1203 20:02:59.212056 23 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local from pod dns-4248/dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd: the server could not find the requested resource (get pods dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd)
  I1203 20:02:59.244021 23 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local from pod dns-4248/dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd: the server could not find the requested resource (get pods dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd)
  I1203 20:02:59.248644 23 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local from pod dns-4248/dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd: the server could not find the requested resource (get pods dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd)
  I1203 20:02:59.267394 23 dns_common.go:489] Lookups using dns-4248/dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd failed for: [wheezy_udp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local]

  I1203 20:02:59.275182 23 dns_common.go:495] Pod client logs for webserver: 
  I1203 20:02:59.282379 23 dns_common.go:495] Pod client logs for querier: 
  I1203 20:02:59.289178 23 dns_common.go:495] Pod client logs for jessie-querier: 
  I1203 20:03:04.206475 23 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local from pod dns-4248/dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd: the server could not find the requested resource (get pods dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd)
  I1203 20:03:04.210327 23 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local from pod dns-4248/dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd: the server could not find the requested resource (get pods dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd)
  I1203 20:03:04.240768 23 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local from pod dns-4248/dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd: the server could not find the requested resource (get pods dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd)
  I1203 20:03:04.244998 23 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local from pod dns-4248/dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd: the server could not find the requested resource (get pods dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd)
  I1203 20:03:04.262790 23 dns_common.go:489] Lookups using dns-4248/dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd failed for: [wheezy_udp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local]

  I1203 20:03:04.270648 23 dns_common.go:495] Pod client logs for webserver: 
  I1203 20:03:04.277595 23 dns_common.go:495] Pod client logs for querier: 
  I1203 20:03:04.283970 23 dns_common.go:495] Pod client logs for jessie-querier: 
  I1203 20:03:09.206787 23 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local from pod dns-4248/dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd: the server could not find the requested resource (get pods dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd)
  I1203 20:03:09.211951 23 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local from pod dns-4248/dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd: the server could not find the requested resource (get pods dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd)
  I1203 20:03:09.243973 23 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local from pod dns-4248/dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd: the server could not find the requested resource (get pods dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd)
  I1203 20:03:09.248412 23 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local from pod dns-4248/dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd: the server could not find the requested resource (get pods dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd)
  I1203 20:03:09.267413 23 dns_common.go:489] Lookups using dns-4248/dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd failed for: [wheezy_udp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local]

  I1203 20:03:09.276028 23 dns_common.go:495] Pod client logs for webserver: 
  I1203 20:03:09.283861 23 dns_common.go:495] Pod client logs for querier: 
  I1203 20:03:09.289348 23 dns_common.go:495] Pod client logs for jessie-querier: 
  I1203 20:03:14.205607 23 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local from pod dns-4248/dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd: the server could not find the requested resource (get pods dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd)
  I1203 20:03:14.210205 23 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local from pod dns-4248/dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd: the server could not find the requested resource (get pods dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd)
  I1203 20:03:14.237867 23 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local from pod dns-4248/dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd: the server could not find the requested resource (get pods dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd)
  I1203 20:03:14.242220 23 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local from pod dns-4248/dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd: the server could not find the requested resource (get pods dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd)
  I1203 20:03:14.258638 23 dns_common.go:489] Lookups using dns-4248/dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd failed for: [wheezy_udp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-4248.svc.cluster.local]

  I1203 20:03:14.265718 23 dns_common.go:495] Pod client logs for webserver: 
  I1203 20:03:14.272535 23 dns_common.go:495] Pod client logs for querier: 
  I1203 20:03:14.278425 23 dns_common.go:495] Pod client logs for jessie-querier: 
  I1203 20:03:19.267175 23 dns_common.go:527] DNS probes using dns-4248/dns-test-37f3c780-1c2c-4cec-a694-8d9bc01d10dd succeeded

  STEP: deleting the pod @ 12/03/24 20:03:19.267
  STEP: deleting the test service @ 12/03/24 20:03:19.283
  STEP: deleting the test headless service @ 12/03/24 20:03:19.311
  I1203 20:03:19.319113 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4248" for this suite. @ 12/03/24 20:03:19.325
• [32.224 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 12/03/24 20:03:19.332
  I1203 20:03:19.332392 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename podtemplate @ 12/03/24 20:03:19.333
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:03:19.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:03:19.35
  STEP: Create a pod template @ 12/03/24 20:03:19.355
  STEP: Replace a pod template @ 12/03/24 20:03:19.36
  I1203 20:03:19.368283 23 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I1203 20:03:19.368580 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-2742" for this suite. @ 12/03/24 20:03:19.372
• [0.046 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 12/03/24 20:03:19.38
  I1203 20:03:19.380523 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename projected @ 12/03/24 20:03:19.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:03:19.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:03:19.399
  STEP: Creating a pod to test downward API volume plugin @ 12/03/24 20:03:19.404
  STEP: Saw pod success @ 12/03/24 20:03:23.429
  I1203 20:03:23.432635 23 output.go:196] Trying to get logs from node nodea17 pod downwardapi-volume-051e11ef-3784-4bfa-be5f-5b71f913df75 container client-container: <nil>
  STEP: delete the pod @ 12/03/24 20:03:23.44
  I1203 20:03:23.457097 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1458" for this suite. @ 12/03/24 20:03:23.462
• [4.087 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 12/03/24 20:03:23.468
  I1203 20:03:23.468071 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename downward-api @ 12/03/24 20:03:23.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:03:23.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:03:23.487
  STEP: Creating a pod to test downward API volume plugin @ 12/03/24 20:03:23.491
  STEP: Saw pod success @ 12/03/24 20:03:27.518
  I1203 20:03:27.522236 23 output.go:196] Trying to get logs from node nodea17 pod downwardapi-volume-2645c7fb-fb5d-4d66-9de9-3ba36ca12c01 container client-container: <nil>
  STEP: delete the pod @ 12/03/24 20:03:27.53
  I1203 20:03:27.548175 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2693" for this suite. @ 12/03/24 20:03:27.552
• [4.090 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:644
  STEP: Creating a kubernetes client @ 12/03/24 20:03:27.558
  I1203 20:03:27.558420 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename statefulset @ 12/03/24 20:03:27.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:03:27.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:03:27.575
  STEP: Creating service test in namespace statefulset-6796 @ 12/03/24 20:03:27.579
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 12/03/24 20:03:27.584
  STEP: Creating stateful set ss in namespace statefulset-6796 @ 12/03/24 20:03:27.589
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-6796 @ 12/03/24 20:03:27.596
  I1203 20:03:27.599406 23 wait.go:40] Found 0 stateful pods, waiting for 1
  I1203 20:03:37.603497 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 12/03/24 20:03:37.603
  I1203 20:03:37.608271 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=statefulset-6796 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1203 20:03:37.786070 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1203 20:03:37.786147 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1203 20:03:37.786175 23 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1203 20:03:37.792279 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I1203 20:03:47.792163 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1203 20:03:47.792267 23 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1203 20:03:47.809930 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 9.99999954s
  I1203 20:03:48.815606 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 8.996528567s
  I1203 20:03:49.821383 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 7.990792625s
  I1203 20:03:50.826939 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 6.985106301s
  I1203 20:03:51.831724 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 5.979452882s
  I1203 20:03:52.836293 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 4.974583444s
  I1203 20:03:53.842167 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 3.969237215s
  I1203 20:03:54.848879 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 2.963267463s
  I1203 20:03:55.855679 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 1.95657938s
  I1203 20:03:56.861404 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 950.731889ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-6796 @ 12/03/24 20:03:57.861
  I1203 20:03:57.867083 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=statefulset-6796 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1203 20:03:58.026837 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1203 20:03:58.026924 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1203 20:03:58.026969 23 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1203 20:03:58.031466 23 wait.go:40] Found 1 stateful pods, waiting for 3
  I1203 20:04:08.035494 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1203 20:04:08.035585 23 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I1203 20:04:08.035622 23 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 12/03/24 20:04:08.035
  STEP: Scale down will halt with unhealthy stateful pod @ 12/03/24 20:04:08.035
  I1203 20:04:08.043869 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=statefulset-6796 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1203 20:04:08.205687 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1203 20:04:08.205776 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1203 20:04:08.205803 23 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1203 20:04:08.205892 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=statefulset-6796 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1203 20:04:08.413963 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1203 20:04:08.414034 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1203 20:04:08.414060 23 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1203 20:04:08.414153 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=statefulset-6796 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1203 20:04:08.584120 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1203 20:04:08.584197 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1203 20:04:08.584222 23 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1203 20:04:08.584244 23 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1203 20:04:08.588605 23 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I1203 20:04:18.596979 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1203 20:04:18.597051 23 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I1203 20:04:18.597080 23 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I1203 20:04:18.612537 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 9.999999577s
  I1203 20:04:19.618238 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.995362679s
  I1203 20:04:20.624349 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.988961684s
  I1203 20:04:21.631579 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.98357242s
  I1203 20:04:22.638435 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.975851269s
  I1203 20:04:23.645489 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.968650896s
  I1203 20:04:24.651812 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.961820222s
  I1203 20:04:25.658191 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.955505597s
  I1203 20:04:26.664070 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.94977004s
  I1203 20:04:27.669782 23 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 943.892717ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-6796 @ 12/03/24 20:04:28.67
  I1203 20:04:28.677504 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=statefulset-6796 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1203 20:04:28.834784 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1203 20:04:28.834868 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1203 20:04:28.834897 23 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1203 20:04:28.834979 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=statefulset-6796 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1203 20:04:29.015422 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1203 20:04:29.015499 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1203 20:04:29.015530 23 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1203 20:04:29.015630 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=statefulset-6796 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1203 20:04:29.176802 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1203 20:04:29.176920 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1203 20:04:29.176950 23 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1203 20:04:29.176979 23 rest.go:150] Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 12/03/24 20:04:39.19
  I1203 20:04:39.190568 23 statefulset.go:138] Deleting all statefulset in ns statefulset-6796
  I1203 20:04:39.194689 23 rest.go:150] Scaling statefulset ss to 0
  I1203 20:04:39.201850 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1203 20:04:39.205511 23 rest.go:88] Deleting statefulset ss
  I1203 20:04:39.219196 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6796" for this suite. @ 12/03/24 20:04:39.224
• [71.674 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 12/03/24 20:04:39.232
  I1203 20:04:39.232765 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/03/24 20:04:39.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:04:39.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:04:39.251
  STEP: fetching the /apis discovery document @ 12/03/24 20:04:39.256
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 12/03/24 20:04:39.258
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 12/03/24 20:04:39.258
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 12/03/24 20:04:39.258
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 12/03/24 20:04:39.26
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 12/03/24 20:04:39.26
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 12/03/24 20:04:39.262
  I1203 20:04:39.262521 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8000" for this suite. @ 12/03/24 20:04:39.267
• [0.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 12/03/24 20:04:39.274
  I1203 20:04:39.274242 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename sched-preemption @ 12/03/24 20:04:39.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:04:39.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:04:39.295
  I1203 20:04:39.316739 23 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1203 20:05:39.324451 23 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 12/03/24 20:05:39.328
  I1203 20:05:39.354520 23 preemption.go:269] Created pod: pod0-0-sched-preemption-low-priority
  I1203 20:05:39.360526 23 preemption.go:269] Created pod: pod0-1-sched-preemption-medium-priority
  I1203 20:05:39.376488 23 preemption.go:269] Created pod: pod1-0-sched-preemption-medium-priority
  I1203 20:05:39.390996 23 preemption.go:269] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 12/03/24 20:05:39.391
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 12/03/24 20:05:41.413
  I1203 20:05:45.513031 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-6326" for this suite. @ 12/03/24 20:05:45.517
• [66.249 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 12/03/24 20:05:45.522
  I1203 20:05:45.522881 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename projected @ 12/03/24 20:05:45.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:05:45.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:05:45.538
  STEP: Creating a pod to test downward API volume plugin @ 12/03/24 20:05:45.542
  STEP: Saw pod success @ 12/03/24 20:05:49.564
  I1203 20:05:49.568009 23 output.go:196] Trying to get logs from node nodea17 pod downwardapi-volume-1d1f41fe-aaab-4ea1-897e-2763746cb918 container client-container: <nil>
  STEP: delete the pod @ 12/03/24 20:05:49.591
  I1203 20:05:49.606432 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2050" for this suite. @ 12/03/24 20:05:49.611
• [4.094 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:234
  STEP: Creating a kubernetes client @ 12/03/24 20:05:49.617
  I1203 20:05:49.617200 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename resourcequota @ 12/03/24 20:05:49.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:05:49.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:05:49.636
  STEP: Counting existing ResourceQuota @ 12/03/24 20:05:49.641
  STEP: Creating a ResourceQuota @ 12/03/24 20:05:54.645
  STEP: Ensuring resource quota status is calculated @ 12/03/24 20:05:54.65
  STEP: Creating a Pod that fits quota @ 12/03/24 20:05:56.656
  STEP: Ensuring ResourceQuota status captures the pod usage @ 12/03/24 20:05:56.675
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 12/03/24 20:05:58.679
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 12/03/24 20:05:58.684
  STEP: Ensuring a pod cannot update its resource requirements @ 12/03/24 20:05:58.688
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 12/03/24 20:05:58.693
  STEP: Deleting the pod @ 12/03/24 20:06:00.699
  STEP: Ensuring resource quota status released the pod usage @ 12/03/24 20:06:00.712
  I1203 20:06:02.720318 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1666" for this suite. @ 12/03/24 20:06:02.725
• [13.116 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 12/03/24 20:06:02.733
  I1203 20:06:02.733452 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename webhook @ 12/03/24 20:06:02.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:06:02.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:06:02.752
  STEP: Setting up server cert @ 12/03/24 20:06:02.775
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/03/24 20:06:03.312
  STEP: Deploying the webhook pod @ 12/03/24 20:06:03.319
  STEP: Wait for the deployment to be ready @ 12/03/24 20:06:03.336
  I1203 20:06:03.345695 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/03/24 20:06:05.359
  STEP: Verifying the service has paired with the endpoint @ 12/03/24 20:06:05.372
  I1203 20:06:06.373018 23 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 12/03/24 20:06:06.457
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/03/24 20:06:06.488
  STEP: Deleting the collection of validation webhooks @ 12/03/24 20:06:06.509
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/03/24 20:06:06.545
  I1203 20:06:06.585397 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5745" for this suite. @ 12/03/24 20:06:06.588
  STEP: Destroying namespace "webhook-markers-1959" for this suite. @ 12/03/24 20:06:06.594
• [3.865 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 12/03/24 20:06:06.599
  I1203 20:06:06.599845 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename pod-network-test @ 12/03/24 20:06:06.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:06:06.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:06:06.614
  STEP: Performing setup for networking test in namespace pod-network-test-4144 @ 12/03/24 20:06:06.618
  STEP: creating a selector @ 12/03/24 20:06:06.618
  STEP: Creating the service pods in kubernetes @ 12/03/24 20:06:06.618
  I1203 20:06:06.618597 23 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 12/03/24 20:06:28.723
  I1203 20:06:30.741844 23 utils.go:779] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I1203 20:06:30.741918 23 networking.go:42] Breadth first check of 10.244.1.223 on host 192.168.100.37...
  I1203 20:06:30.745517 23 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.224:9080/dial?request=hostname&protocol=http&host=10.244.1.223&port=8083&tries=1'] Namespace:pod-network-test-4144 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1203 20:06:30.745580 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  I1203 20:06:30.746548 23 exec_util.go:62] ExecWithOptions: Clientset creation
  I1203 20:06:30.746667 23 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-4144/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.224%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.1.223%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1203 20:06:30.835560 23 utils.go:331] Waiting for responses: map[]
  I1203 20:06:30.835643 23 utils.go:335] reached 10.244.1.223 after 0/1 tries
  I1203 20:06:30.835669 23 networking.go:42] Breadth first check of 10.244.2.92 on host 192.168.100.114...
  I1203 20:06:30.839500 23 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.224:9080/dial?request=hostname&protocol=http&host=10.244.2.92&port=8083&tries=1'] Namespace:pod-network-test-4144 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1203 20:06:30.839552 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  I1203 20:06:30.840373 23 exec_util.go:62] ExecWithOptions: Clientset creation
  I1203 20:06:30.840482 23 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-4144/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.224%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.244.2.92%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1203 20:06:30.917411 23 utils.go:331] Waiting for responses: map[]
  I1203 20:06:30.917496 23 utils.go:335] reached 10.244.2.92 after 0/1 tries
  I1203 20:06:30.917533 23 networking.go:53] Going to retry 0 out of 2 pods....
  I1203 20:06:30.917689 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4144" for this suite. @ 12/03/24 20:06:30.924
• [24.333 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 12/03/24 20:06:30.937
  I1203 20:06:30.937532 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename csiinlinevolumes @ 12/03/24 20:06:30.939
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:06:30.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:06:30.955
  STEP: Creating two CSIDrivers @ 12/03/24 20:06:30.961
  STEP: Getting "inline-driver-158150f7-984e-43bf-a488-aa2196b644f3" & "inline-driver-18a7c45b-5c58-4565-8278-7128774c715d" @ 12/03/24 20:06:30.98
  STEP: Patching the CSIDriver "inline-driver-18a7c45b-5c58-4565-8278-7128774c715d" @ 12/03/24 20:06:30.985
  STEP: Updating the CSIDriver "inline-driver-18a7c45b-5c58-4565-8278-7128774c715d" @ 12/03/24 20:06:30.992
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-465" @ 12/03/24 20:06:31.001
  STEP: Deleting CSIDriver "inline-driver-158150f7-984e-43bf-a488-aa2196b644f3" @ 12/03/24 20:06:31.005
  STEP: Confirm deletion of CSIDriver "inline-driver-158150f7-984e-43bf-a488-aa2196b644f3" @ 12/03/24 20:06:31.022
  STEP: Deleting CSIDriver "inline-driver-18a7c45b-5c58-4565-8278-7128774c715d" via DeleteCollection @ 12/03/24 20:06:31.026
  STEP: Confirm deletion of CSIDriver "inline-driver-18a7c45b-5c58-4565-8278-7128774c715d" @ 12/03/24 20:06:31.033
  I1203 20:06:31.036534 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-465" for this suite. @ 12/03/24 20:06:31.04
• [0.109 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 12/03/24 20:06:31.047
  I1203 20:06:31.047137 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename webhook @ 12/03/24 20:06:31.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:06:31.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:06:31.063
  STEP: Setting up server cert @ 12/03/24 20:06:31.083
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/03/24 20:06:31.414
  STEP: Deploying the webhook pod @ 12/03/24 20:06:31.423
  STEP: Wait for the deployment to be ready @ 12/03/24 20:06:31.438
  I1203 20:06:31.447899 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/03/24 20:06:33.461
  STEP: Verifying the service has paired with the endpoint @ 12/03/24 20:06:33.474
  I1203 20:06:34.475503 23 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1203 20:06:34.485835 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-7864-crds.webhook.example.com via the AdmissionRegistration API @ 12/03/24 20:06:35.005
  STEP: Creating a custom resource while v1 is storage version @ 12/03/24 20:06:35.029
  STEP: Patching Custom Resource Definition to set v2 as storage @ 12/03/24 20:06:37.102
  STEP: Patching the custom resource while v2 is storage version @ 12/03/24 20:06:37.127
  I1203 20:06:37.724925 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8698" for this suite. @ 12/03/24 20:06:37.73
  STEP: Destroying namespace "webhook-markers-4476" for this suite. @ 12/03/24 20:06:37.737
• [6.698 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 12/03/24 20:06:37.745
  I1203 20:06:37.745467 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename pods @ 12/03/24 20:06:37.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:06:37.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:06:37.761
  STEP: creating the pod @ 12/03/24 20:06:37.766
  STEP: submitting the pod to kubernetes @ 12/03/24 20:06:37.766
  W1203 20:06:37.773728      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 12/03/24 20:06:39.786
  STEP: updating the pod @ 12/03/24 20:06:39.789
  I1203 20:06:40.305692 23 pod_client.go:141] Successfully updated pod "pod-update-activedeadlineseconds-a01d9fa7-b943-4ccc-8529-adbd46d556e8"
  I1203 20:06:44.321513 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4656" for this suite. @ 12/03/24 20:06:44.327
• [6.588 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 12/03/24 20:06:44.334
  I1203 20:06:44.334177 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename gc @ 12/03/24 20:06:44.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:06:44.352
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:06:44.356
  STEP: create the rc @ 12/03/24 20:06:44.365
  W1203 20:06:44.371712      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 12/03/24 20:06:50.377
  STEP: wait for the rc to be deleted @ 12/03/24 20:06:50.395
  I1203 20:06:51.418750 23 garbage_collector.go:670] 80 pods remaining
  I1203 20:06:51.418833 23 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I1203 20:06:51.418846 23 garbage_collector.go:678] 
  I1203 20:06:52.418645 23 garbage_collector.go:670] 71 pods remaining
  I1203 20:06:52.418708 23 garbage_collector.go:677] 70 pods has nil DeletionTimestamp
  I1203 20:06:52.418726 23 garbage_collector.go:678] 
  I1203 20:06:53.417363 23 garbage_collector.go:670] 60 pods remaining
  I1203 20:06:53.417437 23 garbage_collector.go:677] 60 pods has nil DeletionTimestamp
  I1203 20:06:53.417458 23 garbage_collector.go:678] 
  I1203 20:06:54.411926 23 garbage_collector.go:670] 40 pods remaining
  I1203 20:06:54.411991 23 garbage_collector.go:677] 40 pods has nil DeletionTimestamp
  I1203 20:06:54.412008 23 garbage_collector.go:678] 
  I1203 20:06:55.406184 23 garbage_collector.go:670] 31 pods remaining
  I1203 20:06:55.406263 23 garbage_collector.go:677] 31 pods has nil DeletionTimestamp
  I1203 20:06:55.406289 23 garbage_collector.go:678] 
  I1203 20:06:56.409135 23 garbage_collector.go:670] 20 pods remaining
  I1203 20:06:56.409207 23 garbage_collector.go:677] 20 pods has nil DeletionTimestamp
  I1203 20:06:56.409228 23 garbage_collector.go:678] 
  STEP: Gathering metrics @ 12/03/24 20:06:57.402
  I1203 20:06:57.526455 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1203 20:06:57.526695 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4457" for this suite. @ 12/03/24 20:06:57.53
• [13.202 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 12/03/24 20:06:57.535
  I1203 20:06:57.535882 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename daemonsets @ 12/03/24 20:06:57.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:06:57.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:06:57.554
  I1203 20:06:57.577464 23 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I1203 20:06:57.583025 23 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I1203 20:06:57.587193 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1203 20:06:57.590302 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1203 20:06:57.590363 23 fixtures.go:130] Node nodea17 is running 0 daemon pod, expected 1
  I1203 20:06:58.590672 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1203 20:06:58.595124 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1203 20:06:58.595185 23 fixtures.go:130] Node nodea17 is running 0 daemon pod, expected 1
  I1203 20:06:59.589825 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1203 20:06:59.593991 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1203 20:06:59.594052 23 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  I1203 20:06:59.594083 23 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I1203 20:06:59.609119 23 daemon_set.go:102] Updating DaemonSet daemon-set
  I1203 20:07:00.624391 23 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I1203 20:07:00.635018 23 daemon_set.go:102] Updating DaemonSet daemon-set
  I1203 20:07:00.635085 23 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I1203 20:07:00.639120 23 daemon_set.go:1178] Wrong image for pod: daemon-set-p6zlr. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I1203 20:07:00.639182 23 daemon_set.go:1183] Pod daemon-set-p6zlr is not available
  I1203 20:07:00.642446 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1203 20:07:01.645635 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1203 20:07:02.650589 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1203 20:07:03.640309 23 daemon_set.go:1183] Pod daemon-set-vgd9g is not available
  I1203 20:07:03.644018 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 12/03/24 20:07:03.65
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7179, will wait for the garbage collector to delete the pods @ 12/03/24 20:07:03.65
  I1203 20:07:03.709801 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 5.507539ms
  I1203 20:07:03.811051 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.248258ms
  I1203 20:07:05.814810 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1203 20:07:05.814882 23 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1203 20:07:05.818568 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"20013"},"items":null}

  I1203 20:07:05.822392 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"20013"},"items":null}

  I1203 20:07:05.834156 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7179" for this suite. @ 12/03/24 20:07:05.838
• [8.307 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:324
  STEP: Creating a kubernetes client @ 12/03/24 20:07:05.844
  I1203 20:07:05.844172 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename statefulset @ 12/03/24 20:07:05.845
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:07:05.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:07:05.862
  STEP: Creating service test in namespace statefulset-1939 @ 12/03/24 20:07:05.867
  STEP: Creating a new StatefulSet @ 12/03/24 20:07:05.872
  I1203 20:07:05.886808 23 wait.go:40] Found 0 stateful pods, waiting for 3
  I1203 20:07:15.889663 23 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1203 20:07:15.889745 23 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1203 20:07:15.889769 23 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I1203 20:07:15.902917 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=statefulset-1939 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1203 20:07:16.098282 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1203 20:07:16.098361 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1203 20:07:16.098389 23 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 12/03/24 20:07:26.107
  I1203 20:07:26.119147 23 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 12/03/24 20:07:26.119
  STEP: Updating Pods in reverse ordinal order @ 12/03/24 20:07:36.128
  I1203 20:07:36.132115 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=statefulset-1939 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1203 20:07:36.309952 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1203 20:07:36.310032 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1203 20:07:36.310059 23 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1203 20:07:56.328159 23 wait.go:158] Waiting for StatefulSet statefulset-1939/ss2 to complete update
  I1203 20:07:56.328246 23 wait.go:165] Waiting for Pod statefulset-1939/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Rolling back to a previous revision @ 12/03/24 20:08:06.332
  I1203 20:08:06.332141 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=statefulset-1939 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1203 20:08:06.533670 23 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1203 20:08:06.533755 23 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1203 20:08:06.533789 23 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1203 20:08:16.558378 23 statefulset.go:2507] Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 12/03/24 20:08:26.568
  I1203 20:08:26.573742 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=statefulset-1939 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1203 20:08:26.769447 23 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1203 20:08:26.769542 23 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1203 20:08:26.769572 23 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1203 20:08:36.788990 23 statefulset.go:138] Deleting all statefulset in ns statefulset-1939
  I1203 20:08:36.792594 23 rest.go:150] Scaling statefulset ss2 to 0
  I1203 20:08:46.809701 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1203 20:08:46.814055 23 rest.go:88] Deleting statefulset ss2
  I1203 20:08:46.827630 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1939" for this suite. @ 12/03/24 20:08:46.832
• [100.996 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 12/03/24 20:08:46.84
  I1203 20:08:46.840589 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename namespaces @ 12/03/24 20:08:46.842
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:08:46.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:08:46.856
  STEP: Creating namespace "e2e-ns-kdtrv" @ 12/03/24 20:08:46.86
  I1203 20:08:46.871667 23 namespace.go:411] Namespace "e2e-ns-kdtrv-7726" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-kdtrv-7726" @ 12/03/24 20:08:46.871
  I1203 20:08:46.882584 23 namespace.go:434] Namespace "e2e-ns-kdtrv-7726" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-kdtrv-7726" @ 12/03/24 20:08:46.882
  I1203 20:08:46.889580 23 namespace.go:463] Namespace "e2e-ns-kdtrv-7726" has []v1.FinalizerName{"kubernetes"}
  I1203 20:08:46.889734 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7380" for this suite. @ 12/03/24 20:08:46.893
  STEP: Destroying namespace "e2e-ns-kdtrv-7726" for this suite. @ 12/03/24 20:08:46.898
• [0.063 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 12/03/24 20:08:46.904
  I1203 20:08:46.904318 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename downward-api @ 12/03/24 20:08:46.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:08:46.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:08:46.922
  STEP: Creating a pod to test downward API volume plugin @ 12/03/24 20:08:46.926
  STEP: Saw pod success @ 12/03/24 20:08:50.947
  I1203 20:08:50.952160 23 output.go:196] Trying to get logs from node nodea17 pod downwardapi-volume-febdd76e-3a63-479e-8004-3a6ebfbb5fb8 container client-container: <nil>
  STEP: delete the pod @ 12/03/24 20:08:50.971
  I1203 20:08:50.987300 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-495" for this suite. @ 12/03/24 20:08:50.992
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 12/03/24 20:08:51.001
  I1203 20:08:51.001523 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename projected @ 12/03/24 20:08:51.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:08:51.016
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:08:51.02
  STEP: Creating projection with secret that has name projected-secret-test-362d94d0-bad4-4090-8f29-7dd97d4ee39f @ 12/03/24 20:08:51.024
  STEP: Creating a pod to test consume secrets @ 12/03/24 20:08:51.03
  STEP: Saw pod success @ 12/03/24 20:08:55.053
  I1203 20:08:55.057654 23 output.go:196] Trying to get logs from node nodea17 pod pod-projected-secrets-bb08e388-1c37-4820-9fbc-ae17f1648818 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/03/24 20:08:55.064
  I1203 20:08:55.078900 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-698" for this suite. @ 12/03/24 20:08:55.083
• [4.087 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 12/03/24 20:08:55.088
  I1203 20:08:55.088931 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename replicaset @ 12/03/24 20:08:55.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:08:55.103
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:08:55.107
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 12/03/24 20:08:55.112
  I1203 20:08:55.119456 23 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I1203 20:09:00.125053 23 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/03/24 20:09:00.125
  STEP: getting scale subresource @ 12/03/24 20:09:00.125
  STEP: updating a scale subresource @ 12/03/24 20:09:00.129
  STEP: verifying the replicaset Spec.Replicas was modified @ 12/03/24 20:09:00.135
  STEP: Patch a scale subresource @ 12/03/24 20:09:00.138
  I1203 20:09:00.148632 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6552" for this suite. @ 12/03/24 20:09:00.155
• [5.073 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:163
  STEP: Creating a kubernetes client @ 12/03/24 20:09:00.161
  I1203 20:09:00.161716 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename resourcequota @ 12/03/24 20:09:00.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:09:00.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:09:00.18
  STEP: Discovering how many secrets are in namespace by default @ 12/03/24 20:09:00.184
  STEP: Counting existing ResourceQuota @ 12/03/24 20:09:05.188
  STEP: Creating a ResourceQuota @ 12/03/24 20:09:10.194
  STEP: Ensuring resource quota status is calculated @ 12/03/24 20:09:10.202
  STEP: Creating a Secret @ 12/03/24 20:09:12.207
  STEP: Ensuring resource quota status captures secret creation @ 12/03/24 20:09:12.223
  STEP: Deleting a secret @ 12/03/24 20:09:14.227
  STEP: Ensuring resource quota status released usage @ 12/03/24 20:09:14.234
  I1203 20:09:16.241143 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5562" for this suite. @ 12/03/24 20:09:16.246
• [16.092 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 12/03/24 20:09:16.254
  I1203 20:09:16.254205 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/03/24 20:09:16.255
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:09:16.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:09:16.273
  I1203 20:09:16.278189 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 12/03/24 20:09:17.65
  I1203 20:09:17.650612 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=crd-publish-openapi-226 --namespace=crd-publish-openapi-226 create -f -'
  I1203 20:09:19.794357 23 builder.go:146] stderr: ""
  I1203 20:09:19.794466 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2107-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I1203 20:09:19.794607 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=crd-publish-openapi-226 --namespace=crd-publish-openapi-226 delete e2e-test-crd-publish-openapi-2107-crds test-cr'
  I1203 20:09:19.898465 23 builder.go:146] stderr: ""
  I1203 20:09:19.898587 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2107-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I1203 20:09:19.898759 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=crd-publish-openapi-226 --namespace=crd-publish-openapi-226 apply -f -'
  I1203 20:09:20.003841 23 builder.go:146] stderr: ""
  I1203 20:09:20.004021 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2107-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I1203 20:09:20.004132 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=crd-publish-openapi-226 --namespace=crd-publish-openapi-226 delete e2e-test-crd-publish-openapi-2107-crds test-cr'
  I1203 20:09:20.095157 23 builder.go:146] stderr: ""
  I1203 20:09:20.095291 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-2107-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 12/03/24 20:09:20.095
  I1203 20:09:20.095448 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=crd-publish-openapi-226 explain e2e-test-crd-publish-openapi-2107-crds'
  I1203 20:09:20.185059 23 builder.go:146] stderr: ""
  I1203 20:09:20.185166 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-2107-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  I1203 20:09:21.588517 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-226" for this suite. @ 12/03/24 20:09:21.607
• [5.360 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 12/03/24 20:09:21.614
  I1203 20:09:21.614786 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename container-probe @ 12/03/24 20:09:21.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:09:21.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:09:21.631
  STEP: Creating pod busybox-709aff9b-fe4f-4269-a5d9-7bafc4725706 in namespace container-probe-5788 @ 12/03/24 20:09:21.636
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/03/24 20:09:23.65
  I1203 20:09:23.654520 23 container_probe.go:1749] Initial restart count of pod busybox-709aff9b-fe4f-4269-a5d9-7bafc4725706 is 0
  I1203 20:09:23.657939 23 container_probe.go:1759] Get pod busybox-709aff9b-fe4f-4269-a5d9-7bafc4725706 in namespace container-probe-5788
  I1203 20:09:25.663330 23 container_probe.go:1759] Get pod busybox-709aff9b-fe4f-4269-a5d9-7bafc4725706 in namespace container-probe-5788
  I1203 20:09:27.669213 23 container_probe.go:1759] Get pod busybox-709aff9b-fe4f-4269-a5d9-7bafc4725706 in namespace container-probe-5788
  I1203 20:09:29.675381 23 container_probe.go:1759] Get pod busybox-709aff9b-fe4f-4269-a5d9-7bafc4725706 in namespace container-probe-5788
  I1203 20:09:31.682424 23 container_probe.go:1759] Get pod busybox-709aff9b-fe4f-4269-a5d9-7bafc4725706 in namespace container-probe-5788
  I1203 20:09:33.689259 23 container_probe.go:1759] Get pod busybox-709aff9b-fe4f-4269-a5d9-7bafc4725706 in namespace container-probe-5788
  I1203 20:09:35.694871 23 container_probe.go:1759] Get pod busybox-709aff9b-fe4f-4269-a5d9-7bafc4725706 in namespace container-probe-5788
  I1203 20:09:37.701101 23 container_probe.go:1759] Get pod busybox-709aff9b-fe4f-4269-a5d9-7bafc4725706 in namespace container-probe-5788
  I1203 20:09:39.707261 23 container_probe.go:1759] Get pod busybox-709aff9b-fe4f-4269-a5d9-7bafc4725706 in namespace container-probe-5788
  I1203 20:09:41.713408 23 container_probe.go:1759] Get pod busybox-709aff9b-fe4f-4269-a5d9-7bafc4725706 in namespace container-probe-5788
  I1203 20:09:43.719753 23 container_probe.go:1759] Get pod busybox-709aff9b-fe4f-4269-a5d9-7bafc4725706 in namespace container-probe-5788
  I1203 20:09:45.725985 23 container_probe.go:1759] Get pod busybox-709aff9b-fe4f-4269-a5d9-7bafc4725706 in namespace container-probe-5788
  I1203 20:09:47.731862 23 container_probe.go:1759] Get pod busybox-709aff9b-fe4f-4269-a5d9-7bafc4725706 in namespace container-probe-5788
  I1203 20:09:49.737766 23 container_probe.go:1759] Get pod busybox-709aff9b-fe4f-4269-a5d9-7bafc4725706 in namespace container-probe-5788
  I1203 20:09:51.744677 23 container_probe.go:1759] Get pod busybox-709aff9b-fe4f-4269-a5d9-7bafc4725706 in namespace container-probe-5788
  I1203 20:09:53.750281 23 container_probe.go:1759] Get pod busybox-709aff9b-fe4f-4269-a5d9-7bafc4725706 in namespace container-probe-5788
  I1203 20:09:55.755115 23 container_probe.go:1759] Get pod busybox-709aff9b-fe4f-4269-a5d9-7bafc4725706 in namespace container-probe-5788
  I1203 20:09:57.761178 23 container_probe.go:1759] Get pod busybox-709aff9b-fe4f-4269-a5d9-7bafc4725706 in namespace container-probe-5788
  I1203 20:09:59.766807 23 container_probe.go:1759] Get pod busybox-709aff9b-fe4f-4269-a5d9-7bafc4725706 in namespace container-probe-5788
  I1203 20:10:01.773939 23 container_probe.go:1759] Get pod busybox-709aff9b-fe4f-4269-a5d9-7bafc4725706 in namespace container-probe-5788
  I1203 20:10:03.780595 23 container_probe.go:1759] Get pod busybox-709aff9b-fe4f-4269-a5d9-7bafc4725706 in namespace container-probe-5788
  I1203 20:10:05.786443 23 container_probe.go:1759] Get pod busybox-709aff9b-fe4f-4269-a5d9-7bafc4725706 in namespace container-probe-5788
  I1203 20:10:07.792557 23 container_probe.go:1759] Get pod busybox-709aff9b-fe4f-4269-a5d9-7bafc4725706 in namespace container-probe-5788
  I1203 20:10:09.798325 23 container_probe.go:1759] Get pod busybox-709aff9b-fe4f-4269-a5d9-7bafc4725706 in namespace container-probe-5788
  I1203 20:10:11.804865 23 container_probe.go:1759] Get pod busybox-709aff9b-fe4f-4269-a5d9-7bafc4725706 in namespace container-probe-5788
  I1203 20:10:13.811087 23 container_probe.go:1759] Get pod busybox-709aff9b-fe4f-4269-a5d9-7bafc4725706 in namespace container-probe-5788
  I1203 20:10:13.811167 23 container_probe.go:1763] Restart count of pod container-probe-5788/busybox-709aff9b-fe4f-4269-a5d9-7bafc4725706 is now 1 (50.156571979s elapsed)
  STEP: deleting the pod @ 12/03/24 20:10:13.811
  I1203 20:10:13.823155 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5788" for this suite. @ 12/03/24 20:10:13.827
• [52.217 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 12/03/24 20:10:13.832
  I1203 20:10:13.832989 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename field-validation @ 12/03/24 20:10:13.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:10:13.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:10:13.848
  I1203 20:10:13.853053 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  W1203 20:10:16.412455      23 warnings.go:70] unknown field "alpha"
  W1203 20:10:16.412525      23 warnings.go:70] unknown field "beta"
  W1203 20:10:16.412537      23 warnings.go:70] unknown field "delta"
  W1203 20:10:16.412549      23 warnings.go:70] unknown field "epsilon"
  W1203 20:10:16.412560      23 warnings.go:70] unknown field "gamma"
  I1203 20:10:16.961774 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2478" for this suite. @ 12/03/24 20:10:16.967
• [3.140 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 12/03/24 20:10:16.973
  I1203 20:10:16.973341 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename pods @ 12/03/24 20:10:16.974
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:10:16.988
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:10:16.993
  STEP: creating the pod @ 12/03/24 20:10:16.997
  STEP: setting up watch @ 12/03/24 20:10:16.998
  STEP: submitting the pod to kubernetes @ 12/03/24 20:10:17.101
  STEP: verifying the pod is in kubernetes @ 12/03/24 20:10:17.113
  STEP: verifying pod creation was observed @ 12/03/24 20:10:17.117
  STEP: deleting the pod gracefully @ 12/03/24 20:10:19.131
  STEP: verifying pod deletion was observed @ 12/03/24 20:10:19.137
  I1203 20:10:20.324211 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2860" for this suite. @ 12/03/24 20:10:20.328
• [3.362 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 12/03/24 20:10:20.337
  I1203 20:10:20.337260 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename configmap @ 12/03/24 20:10:20.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:10:20.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:10:20.355
  STEP: Creating configMap with name configmap-test-volume-map-f7d0003c-40d6-4a7a-b51a-7682a409e4f3 @ 12/03/24 20:10:20.359
  STEP: Creating a pod to test consume configMaps @ 12/03/24 20:10:20.366
  STEP: Saw pod success @ 12/03/24 20:10:24.391
  I1203 20:10:24.395721 23 output.go:196] Trying to get logs from node nodea17 pod pod-configmaps-935e356f-3e8d-43bd-9033-66c2df74bb01 container agnhost-container: <nil>
  STEP: delete the pod @ 12/03/24 20:10:24.403
  I1203 20:10:24.418072 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-853" for this suite. @ 12/03/24 20:10:24.423
• [4.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 12/03/24 20:10:24.43
  I1203 20:10:24.430941 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename cronjob @ 12/03/24 20:10:24.432
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:10:24.445
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:10:24.45
  STEP: Creating a ReplaceConcurrent cronjob @ 12/03/24 20:10:24.455
  STEP: Ensuring a job is scheduled @ 12/03/24 20:10:24.461
  STEP: Ensuring exactly one is scheduled @ 12/03/24 20:11:00.466
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 12/03/24 20:11:00.47
  STEP: Ensuring the job is replaced with a new one @ 12/03/24 20:11:00.474
  STEP: Removing cronjob @ 12/03/24 20:12:00.479
  I1203 20:12:00.486578 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-9063" for this suite. @ 12/03/24 20:12:00.491
• [96.077 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1726
  STEP: Creating a kubernetes client @ 12/03/24 20:12:00.508
  I1203 20:12:00.508460 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename kubectl @ 12/03/24 20:12:00.509
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:12:00.524
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:12:00.528
  I1203 20:12:00.532128 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-4316 version'
  I1203 20:12:00.613380 23 builder.go:146] stderr: ""
  I1203 20:12:00.613498 23 builder.go:147] stdout: "Client Version: v1.30.6\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.30.6-ckp\n"
  I1203 20:12:00.613944 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4316" for this suite. @ 12/03/24 20:12:00.618
• [0.118 seconds]
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 12/03/24 20:12:00.626
  I1203 20:12:00.626685 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename endpointslice @ 12/03/24 20:12:00.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:12:00.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:12:00.645
  STEP: getting /apis @ 12/03/24 20:12:00.649
  STEP: getting /apis/discovery.k8s.io @ 12/03/24 20:12:00.655
  STEP: getting /apis/discovery.k8s.iov1 @ 12/03/24 20:12:00.657
  STEP: creating @ 12/03/24 20:12:00.659
  STEP: getting @ 12/03/24 20:12:00.674
  STEP: listing @ 12/03/24 20:12:00.677
  STEP: watching @ 12/03/24 20:12:00.68
  I1203 20:12:00.680893 23 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 12/03/24 20:12:00.682
  STEP: cluster-wide watching @ 12/03/24 20:12:00.685
  I1203 20:12:00.685866 23 endpointslice.go:459] starting watch
  STEP: patching @ 12/03/24 20:12:00.687
  STEP: updating @ 12/03/24 20:12:00.694
  I1203 20:12:00.702879 23 endpointslice.go:482] waiting for watch events with expected annotations
  I1203 20:12:00.702963 23 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 12/03/24 20:12:00.703
  STEP: deleting a collection @ 12/03/24 20:12:00.713
  I1203 20:12:00.727154 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8531" for this suite. @ 12/03/24 20:12:00.731
• [0.109 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:715
  STEP: Creating a kubernetes client @ 12/03/24 20:12:00.736
  I1203 20:12:00.736214 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename webhook @ 12/03/24 20:12:00.738
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:12:00.75
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:12:00.755
  STEP: Setting up server cert @ 12/03/24 20:12:00.777
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/03/24 20:12:01.224
  STEP: Deploying the webhook pod @ 12/03/24 20:12:01.234
  STEP: Wait for the deployment to be ready @ 12/03/24 20:12:01.249
  I1203 20:12:01.258245 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/03/24 20:12:03.273
  STEP: Verifying the service has paired with the endpoint @ 12/03/24 20:12:03.288
  I1203 20:12:04.289276 23 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 12/03/24 20:12:04.298
  STEP: verifying the validating webhook match conditions @ 12/03/24 20:12:04.307
  STEP: updating the validating webhook match conditions @ 12/03/24 20:12:04.311
  STEP: verifying the validating webhook match conditions @ 12/03/24 20:12:04.32
  I1203 20:12:04.375019 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7047" for this suite. @ 12/03/24 20:12:04.379
  STEP: Destroying namespace "webhook-markers-9088" for this suite. @ 12/03/24 20:12:04.384
• [3.654 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 12/03/24 20:12:04.39
  I1203 20:12:04.390809 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename limitrange @ 12/03/24 20:12:04.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:12:04.404
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:12:04.408
  STEP: Creating a LimitRange @ 12/03/24 20:12:04.413
  STEP: Setting up watch @ 12/03/24 20:12:04.413
  STEP: Submitting a LimitRange @ 12/03/24 20:12:04.518
  STEP: Verifying LimitRange creation was observed @ 12/03/24 20:12:04.525
  STEP: Fetching the LimitRange to ensure it has proper values @ 12/03/24 20:12:04.525
  I1203 20:12:04.529130 23 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I1203 20:12:04.529209 23 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 12/03/24 20:12:04.529
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 12/03/24 20:12:04.535
  I1203 20:12:04.539593 23 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I1203 20:12:04.539670 23 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 12/03/24 20:12:04.539
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 12/03/24 20:12:04.547
  I1203 20:12:04.550653 23 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I1203 20:12:04.550729 23 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 12/03/24 20:12:04.55
  STEP: Failing to create a Pod with more than max resources @ 12/03/24 20:12:04.553
  STEP: Updating a LimitRange @ 12/03/24 20:12:04.556
  STEP: Verifying LimitRange updating is effective @ 12/03/24 20:12:04.56
  STEP: Creating a Pod with less than former min resources @ 12/03/24 20:12:06.565
  STEP: Failing to create a Pod with more than max resources @ 12/03/24 20:12:06.573
  STEP: Deleting a LimitRange @ 12/03/24 20:12:06.577
  STEP: Verifying the LimitRange was deleted @ 12/03/24 20:12:06.582
  I1203 20:12:11.587256 23 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 12/03/24 20:12:11.587
  I1203 20:12:11.596378 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-709" for this suite. @ 12/03/24 20:12:11.601
• [7.216 seconds]
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 12/03/24 20:12:11.607
  I1203 20:12:11.607060 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename namespaces @ 12/03/24 20:12:11.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:12:11.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:12:11.625
  STEP: Creating a test namespace @ 12/03/24 20:12:11.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:12:11.641
  STEP: Creating a service in the namespace @ 12/03/24 20:12:11.645
  STEP: Deleting the namespace @ 12/03/24 20:12:11.657
  STEP: Waiting for the namespace to be removed. @ 12/03/24 20:12:11.666
  STEP: Recreating the namespace @ 12/03/24 20:12:17.669
  STEP: Verifying there is no service in the namespace @ 12/03/24 20:12:17.68
  I1203 20:12:17.683589 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4465" for this suite. @ 12/03/24 20:12:17.688
  STEP: Destroying namespace "nsdeletetest-580" for this suite. @ 12/03/24 20:12:17.694
  I1203 20:12:17.696721 23 framework.go:370] Namespace nsdeletetest-580 was already deleted
  STEP: Destroying namespace "nsdeletetest-4421" for this suite. @ 12/03/24 20:12:17.696
• [6.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 12/03/24 20:12:17.703
  I1203 20:12:17.703240 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename taint-single-pod @ 12/03/24 20:12:17.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:12:17.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:12:17.721
  I1203 20:12:17.726302 23 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1203 20:13:17.727840 23 util.go:400] Waiting for terminating namespaces to be deleted...
  I1203 20:13:17.732896 23 taints.go:150] Starting informer...
  STEP: Starting pod... @ 12/03/24 20:13:17.732
  I1203 20:13:17.951324 23 taints.go:300] Pod is running on nodea17. Tainting Node
  STEP: Trying to apply a taint on the Node @ 12/03/24 20:13:17.951
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/03/24 20:13:17.965
  STEP: Waiting short time to make sure Pod is queued for deletion @ 12/03/24 20:13:17.969
  I1203 20:13:17.969679 23 taints.go:319] Pod wasn't evicted. Proceeding
  I1203 20:13:17.969707 23 taints.go:326] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/03/24 20:13:17.982
  STEP: Waiting some time to make sure that toleration time passed. @ 12/03/24 20:13:17.985
  I1203 20:14:32.988334 23 taints.go:335] Pod wasn't evicted. Test successful
  I1203 20:14:32.988641 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-4793" for this suite. @ 12/03/24 20:14:32.995
• [135.299 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 12/03/24 20:14:33.002
  I1203 20:14:33.002617 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename ingressclass @ 12/03/24 20:14:33.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:14:33.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:14:33.021
  STEP: getting /apis @ 12/03/24 20:14:33.026
  STEP: getting /apis/networking.k8s.io @ 12/03/24 20:14:33.032
  STEP: getting /apis/networking.k8s.iov1 @ 12/03/24 20:14:33.034
  STEP: creating @ 12/03/24 20:14:33.036
  STEP: getting @ 12/03/24 20:14:33.052
  STEP: listing @ 12/03/24 20:14:33.056
  STEP: watching @ 12/03/24 20:14:33.059
  I1203 20:14:33.059623 23 ingressclass.go:348] starting watch
  STEP: patching @ 12/03/24 20:14:33.061
  STEP: updating @ 12/03/24 20:14:33.066
  I1203 20:14:33.071924 23 ingressclass.go:364] waiting for watch events with expected annotations
  I1203 20:14:33.072007 23 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 12/03/24 20:14:33.072
  STEP: deleting a collection @ 12/03/24 20:14:33.083
  I1203 20:14:33.095802 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-4848" for this suite. @ 12/03/24 20:14:33.1
• [0.104 seconds]
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 12/03/24 20:14:33.106
  I1203 20:14:33.106684 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename replication-controller @ 12/03/24 20:14:33.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:14:33.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:14:33.124
  STEP: Given a ReplicationController is created @ 12/03/24 20:14:33.128
  STEP: When the matched label of one of its pods change @ 12/03/24 20:14:33.134
  I1203 20:14:33.137611 23 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  I1203 20:14:38.145193 23 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 12/03/24 20:14:38.156
  I1203 20:14:39.164591 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1586" for this suite. @ 12/03/24 20:14:39.17
• [6.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 12/03/24 20:14:39.178
  I1203 20:14:39.178900 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename emptydir @ 12/03/24 20:14:39.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:14:39.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:14:39.197
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 12/03/24 20:14:39.201
  STEP: Saw pod success @ 12/03/24 20:14:43.224
  I1203 20:14:43.228364 23 output.go:196] Trying to get logs from node nodea17 pod pod-647ef2c0-c16d-44f6-8c19-672ebfda96c3 container test-container: <nil>
  STEP: delete the pod @ 12/03/24 20:14:43.248
  I1203 20:14:43.267123 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9997" for this suite. @ 12/03/24 20:14:43.27
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 12/03/24 20:14:43.276
  I1203 20:14:43.276571 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename endpointslice @ 12/03/24 20:14:43.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:14:43.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:14:43.295
  I1203 20:14:43.361619 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-546" for this suite. @ 12/03/24 20:14:43.365
• [0.094 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 12/03/24 20:14:43.371
  I1203 20:14:43.371106 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename downward-api @ 12/03/24 20:14:43.372
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:14:43.381
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:14:43.385
  STEP: Creating a pod to test downward api env vars @ 12/03/24 20:14:43.389
  STEP: Saw pod success @ 12/03/24 20:14:45.407
  I1203 20:14:45.410898 23 output.go:196] Trying to get logs from node nodea17 pod downward-api-b6fc719b-8022-44af-9abe-9d48bb1b9d1f container dapi-container: <nil>
  STEP: delete the pod @ 12/03/24 20:14:45.418
  I1203 20:14:45.432185 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9526" for this suite. @ 12/03/24 20:14:45.437
• [2.072 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:779
  STEP: Creating a kubernetes client @ 12/03/24 20:14:45.442
  I1203 20:14:45.442914 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename services @ 12/03/24 20:14:45.444
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:14:45.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:14:45.461
  I1203 20:14:45.469721 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7533" for this suite. @ 12/03/24 20:14:45.473
• [0.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3161
  STEP: Creating a kubernetes client @ 12/03/24 20:14:45.48
  I1203 20:14:45.480160 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename services @ 12/03/24 20:14:45.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:14:45.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:14:45.501
  STEP: creating an Endpoint @ 12/03/24 20:14:45.509
  STEP: waiting for available Endpoint @ 12/03/24 20:14:45.514
  STEP: listing all Endpoints @ 12/03/24 20:14:45.516
  STEP: updating the Endpoint @ 12/03/24 20:14:45.52
  STEP: fetching the Endpoint @ 12/03/24 20:14:45.528
  STEP: patching the Endpoint @ 12/03/24 20:14:45.531
  STEP: fetching the Endpoint @ 12/03/24 20:14:45.543
  STEP: deleting the Endpoint by Collection @ 12/03/24 20:14:45.548
  STEP: waiting for Endpoint deletion @ 12/03/24 20:14:45.556
  STEP: fetching the Endpoint @ 12/03/24 20:14:45.558
  I1203 20:14:45.561365 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7270" for this suite. @ 12/03/24 20:14:45.566
• [0.094 seconds]
------------------------------
SSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 12/03/24 20:14:45.573
  I1203 20:14:45.574019 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename hostport @ 12/03/24 20:14:45.575
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:14:45.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:14:45.592
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 12/03/24 20:14:45.6
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.100.114 on the node which pod1 resides and expect scheduled @ 12/03/24 20:14:49.623
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.100.114 but use UDP protocol on the node which pod2 resides @ 12/03/24 20:14:51.64
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 12/03/24 20:14:57.684
  I1203 20:14:57.684331 23 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.100.114 http://127.0.0.1:54323/hostname] Namespace:hostport-9827 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1203 20:14:57.684361 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  I1203 20:14:57.685500 23 exec_util.go:62] ExecWithOptions: Clientset creation
  I1203 20:14:57.685629 23 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-9827/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.100.114+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.100.114, port: 54323 @ 12/03/24 20:14:57.799
  I1203 20:14:57.799249 23 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.100.114:54323/hostname] Namespace:hostport-9827 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1203 20:14:57.799302 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  I1203 20:14:57.800260 23 exec_util.go:62] ExecWithOptions: Clientset creation
  I1203 20:14:57.800416 23 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-9827/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.100.114%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.100.114, port: 54323 UDP @ 12/03/24 20:14:57.904
  I1203 20:14:57.904640 23 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.100.114 54323] Namespace:hostport-9827 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1203 20:14:57.904671 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  I1203 20:14:57.905512 23 exec_util.go:62] ExecWithOptions: Clientset creation
  I1203 20:14:57.905633 23 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-9827/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.100.114+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  I1203 20:15:03.017208 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-9827" for this suite. @ 12/03/24 20:15:03.023
• [17.457 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 12/03/24 20:15:03.031
  I1203 20:15:03.031331 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename container-probe @ 12/03/24 20:15:03.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:15:03.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:15:03.047
  STEP: Creating pod test-grpc-b3f34ecc-9480-4fa4-b283-bdc3ad9b3eb0 in namespace container-probe-8172 @ 12/03/24 20:15:03.052
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/03/24 20:15:05.071
  I1203 20:15:05.075137 23 container_probe.go:1749] Initial restart count of pod test-grpc-b3f34ecc-9480-4fa4-b283-bdc3ad9b3eb0 is 0
  I1203 20:15:05.079237 23 container_probe.go:1759] Get pod test-grpc-b3f34ecc-9480-4fa4-b283-bdc3ad9b3eb0 in namespace container-probe-8172
  I1203 20:15:07.085660 23 container_probe.go:1759] Get pod test-grpc-b3f34ecc-9480-4fa4-b283-bdc3ad9b3eb0 in namespace container-probe-8172
  I1203 20:15:09.091610 23 container_probe.go:1759] Get pod test-grpc-b3f34ecc-9480-4fa4-b283-bdc3ad9b3eb0 in namespace container-probe-8172
  I1203 20:15:11.096666 23 container_probe.go:1759] Get pod test-grpc-b3f34ecc-9480-4fa4-b283-bdc3ad9b3eb0 in namespace container-probe-8172
  I1203 20:15:13.103296 23 container_probe.go:1759] Get pod test-grpc-b3f34ecc-9480-4fa4-b283-bdc3ad9b3eb0 in namespace container-probe-8172
  I1203 20:15:15.110566 23 container_probe.go:1759] Get pod test-grpc-b3f34ecc-9480-4fa4-b283-bdc3ad9b3eb0 in namespace container-probe-8172
  I1203 20:15:17.117245 23 container_probe.go:1759] Get pod test-grpc-b3f34ecc-9480-4fa4-b283-bdc3ad9b3eb0 in namespace container-probe-8172
  I1203 20:15:19.122523 23 container_probe.go:1759] Get pod test-grpc-b3f34ecc-9480-4fa4-b283-bdc3ad9b3eb0 in namespace container-probe-8172
  I1203 20:15:21.128478 23 container_probe.go:1759] Get pod test-grpc-b3f34ecc-9480-4fa4-b283-bdc3ad9b3eb0 in namespace container-probe-8172
  I1203 20:15:23.133962 23 container_probe.go:1759] Get pod test-grpc-b3f34ecc-9480-4fa4-b283-bdc3ad9b3eb0 in namespace container-probe-8172
  I1203 20:15:25.138502 23 container_probe.go:1759] Get pod test-grpc-b3f34ecc-9480-4fa4-b283-bdc3ad9b3eb0 in namespace container-probe-8172
  I1203 20:15:27.142937 23 container_probe.go:1759] Get pod test-grpc-b3f34ecc-9480-4fa4-b283-bdc3ad9b3eb0 in namespace container-probe-8172
  I1203 20:15:29.147816 23 container_probe.go:1759] Get pod test-grpc-b3f34ecc-9480-4fa4-b283-bdc3ad9b3eb0 in namespace container-probe-8172
  I1203 20:15:31.152735 23 container_probe.go:1759] Get pod test-grpc-b3f34ecc-9480-4fa4-b283-bdc3ad9b3eb0 in namespace container-probe-8172
  I1203 20:15:33.157354 23 container_probe.go:1759] Get pod test-grpc-b3f34ecc-9480-4fa4-b283-bdc3ad9b3eb0 in namespace container-probe-8172
  I1203 20:15:35.162297 23 container_probe.go:1759] Get pod test-grpc-b3f34ecc-9480-4fa4-b283-bdc3ad9b3eb0 in namespace container-probe-8172
  I1203 20:15:37.168400 23 container_probe.go:1759] Get pod test-grpc-b3f34ecc-9480-4fa4-b283-bdc3ad9b3eb0 in namespace container-probe-8172
  I1203 20:15:39.174316 23 container_probe.go:1759] Get pod test-grpc-b3f34ecc-9480-4fa4-b283-bdc3ad9b3eb0 in namespace container-probe-8172
  I1203 20:15:41.180517 23 container_probe.go:1759] Get pod test-grpc-b3f34ecc-9480-4fa4-b283-bdc3ad9b3eb0 in namespace container-probe-8172
  I1203 20:15:43.186304 23 container_probe.go:1759] Get pod test-grpc-b3f34ecc-9480-4fa4-b283-bdc3ad9b3eb0 in namespace container-probe-8172
  I1203 20:15:45.190803 23 container_probe.go:1759] Get pod test-grpc-b3f34ecc-9480-4fa4-b283-bdc3ad9b3eb0 in namespace container-probe-8172
  I1203 20:15:47.196917 23 container_probe.go:1759] Get pod test-grpc-b3f34ecc-9480-4fa4-b283-bdc3ad9b3eb0 in namespace container-probe-8172
  I1203 20:15:49.202535 23 container_probe.go:1759] Get pod test-grpc-b3f34ecc-9480-4fa4-b283-bdc3ad9b3eb0 in namespace container-probe-8172
  I1203 20:15:51.208579 23 container_probe.go:1759] Get pod test-grpc-b3f34ecc-9480-4fa4-b283-bdc3ad9b3eb0 in namespace container-probe-8172
  I1203 20:15:53.215347 23 container_probe.go:1759] Get pod test-grpc-b3f34ecc-9480-4fa4-b283-bdc3ad9b3eb0 in namespace container-probe-8172
  I1203 20:15:55.219968 23 container_probe.go:1759] Get pod test-grpc-b3f34ecc-9480-4fa4-b283-bdc3ad9b3eb0 in namespace container-probe-8172
  I1203 20:15:57.227416 23 container_probe.go:1759] Get pod test-grpc-b3f34ecc-9480-4fa4-b283-bdc3ad9b3eb0 in namespace container-probe-8172
  I1203 20:15:59.233523 23 container_probe.go:1759] Get pod test-grpc-b3f34ecc-9480-4fa4-b283-bdc3ad9b3eb0 in namespace container-probe-8172
  I1203 20:16:01.238238 23 container_probe.go:1759] Get pod test-grpc-b3f34ecc-9480-4fa4-b283-bdc3ad9b3eb0 in namespace container-probe-8172
  I1203 20:16:03.244035 23 container_probe.go:1759] Get pod test-grpc-b3f34ecc-9480-4fa4-b283-bdc3ad9b3eb0 in namespace container-probe-8172
  I1203 20:16:05.248522 23 container_probe.go:1759] Get pod test-grpc-b3f34ecc-9480-4fa4-b283-bdc3ad9b3eb0 in namespace container-probe-8172
  I1203 20:16:07.254753 23 container_probe.go:1759] Get pod test-grpc-b3f34ecc-9480-4fa4-b283-bdc3ad9b3eb0 in namespace container-probe-8172
  I1203 20:16:09.261232 23 container_probe.go:1759] Get pod test-grpc-b3f34ecc-9480-4fa4-b283-bdc3ad9b3eb0 in namespace container-probe-8172
  I1203 20:16:11.267279 23 container_probe.go:1759] Get pod test-grpc-b3f34ecc-9480-4fa4-b283-bdc3ad9b3eb0 in namespace container-probe-8172
  I1203 20:16:11.267359 23 container_probe.go:1763] Restart count of pod container-probe-8172/test-grpc-b3f34ecc-9480-4fa4-b283-bdc3ad9b3eb0 is now 1 (1m6.192150881s elapsed)
  STEP: deleting the pod @ 12/03/24 20:16:11.267
  I1203 20:16:11.278484 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8172" for this suite. @ 12/03/24 20:16:11.284
• [68.260 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 12/03/24 20:16:11.291
  I1203 20:16:11.291323 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/03/24 20:16:11.293
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:16:11.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:16:11.307
  I1203 20:16:11.312014 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  I1203 20:16:14.433905 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7524" for this suite. @ 12/03/24 20:16:14.44
• [3.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:103
  STEP: Creating a kubernetes client @ 12/03/24 20:16:14.45
  I1203 20:16:14.450035 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename resourcequota @ 12/03/24 20:16:14.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:16:14.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:16:14.472
  STEP: Counting existing ResourceQuota @ 12/03/24 20:16:14.477
  STEP: Creating a ResourceQuota @ 12/03/24 20:16:19.481
  STEP: Ensuring resource quota status is calculated @ 12/03/24 20:16:19.488
  STEP: Creating a Service @ 12/03/24 20:16:21.495
  STEP: Creating a NodePort Service @ 12/03/24 20:16:21.521
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 12/03/24 20:16:21.544
  STEP: Ensuring resource quota status captures service creation @ 12/03/24 20:16:21.574
  STEP: Deleting Services @ 12/03/24 20:16:23.579
  STEP: Ensuring resource quota status released usage @ 12/03/24 20:16:23.62
  I1203 20:16:25.626866 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9597" for this suite. @ 12/03/24 20:16:25.632
• [11.188 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 12/03/24 20:16:25.639
  I1203 20:16:25.639251 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename projected @ 12/03/24 20:16:25.64
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:16:25.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:16:25.658
  STEP: Creating secret with name s-test-opt-del-6769874b-f54f-45ee-98a8-59ad17159cdf @ 12/03/24 20:16:25.669
  STEP: Creating secret with name s-test-opt-upd-f034d00b-a636-4714-9cbf-15f6a72f32e7 @ 12/03/24 20:16:25.673
  STEP: Creating the pod @ 12/03/24 20:16:25.677
  STEP: Deleting secret s-test-opt-del-6769874b-f54f-45ee-98a8-59ad17159cdf @ 12/03/24 20:16:27.731
  STEP: Updating secret s-test-opt-upd-f034d00b-a636-4714-9cbf-15f6a72f32e7 @ 12/03/24 20:16:27.738
  STEP: Creating secret with name s-test-opt-create-6c18ac7c-56c2-4998-bb35-8d85e2c70d16 @ 12/03/24 20:16:27.744
  STEP: waiting to observe update in volume @ 12/03/24 20:16:27.749
  I1203 20:16:31.789693 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2442" for this suite. @ 12/03/24 20:16:31.795
• [6.162 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:78
  STEP: Creating a kubernetes client @ 12/03/24 20:16:31.801
  I1203 20:16:31.801887 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename resourcequota @ 12/03/24 20:16:31.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:16:31.817
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:16:31.821
  STEP: Counting existing ResourceQuota @ 12/03/24 20:16:31.825
  STEP: Creating a ResourceQuota @ 12/03/24 20:16:36.829
  STEP: Ensuring resource quota status is calculated @ 12/03/24 20:16:36.834
  I1203 20:16:38.839622 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9303" for this suite. @ 12/03/24 20:16:38.845
• [7.051 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 12/03/24 20:16:38.852
  I1203 20:16:38.853019 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename projected @ 12/03/24 20:16:38.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:16:38.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:16:38.869
  STEP: Creating a pod to test downward API volume plugin @ 12/03/24 20:16:38.874
  STEP: Saw pod success @ 12/03/24 20:16:42.9
  I1203 20:16:42.905129 23 output.go:196] Trying to get logs from node nodea17 pod downwardapi-volume-1cf5d1ca-6d8f-49b6-97fe-162c846f1654 container client-container: <nil>
  STEP: delete the pod @ 12/03/24 20:16:42.912
  I1203 20:16:42.927784 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5507" for this suite. @ 12/03/24 20:16:42.932
• [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 12/03/24 20:16:42.94
  I1203 20:16:42.940083 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename webhook @ 12/03/24 20:16:42.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:16:42.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:16:42.961
  STEP: Setting up server cert @ 12/03/24 20:16:43.034
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/03/24 20:16:43.428
  STEP: Deploying the webhook pod @ 12/03/24 20:16:43.436
  STEP: Wait for the deployment to be ready @ 12/03/24 20:16:43.45
  I1203 20:16:43.457358 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/03/24 20:16:45.471
  STEP: Verifying the service has paired with the endpoint @ 12/03/24 20:16:45.485
  I1203 20:16:46.486094 23 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1203 20:16:46.494052 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 12/03/24 20:16:47.008
  STEP: Creating a custom resource that should be denied by the webhook @ 12/03/24 20:16:47.033
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 12/03/24 20:16:49.065
  STEP: Updating the custom resource with disallowed data should be denied @ 12/03/24 20:16:49.073
  STEP: Deleting the custom resource should be denied @ 12/03/24 20:16:49.085
  STEP: Remove the offending key and value from the custom resource data @ 12/03/24 20:16:49.092
  STEP: Deleting the updated custom resource should be successful @ 12/03/24 20:16:49.104
  I1203 20:16:49.677357 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9777" for this suite. @ 12/03/24 20:16:49.683
  STEP: Destroying namespace "webhook-markers-589" for this suite. @ 12/03/24 20:16:49.69
• [6.758 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1537
  STEP: Creating a kubernetes client @ 12/03/24 20:16:49.698
  I1203 20:16:49.698792 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename services @ 12/03/24 20:16:49.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:16:49.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:16:49.718
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-1371 @ 12/03/24 20:16:49.722
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 12/03/24 20:16:49.742
  STEP: creating service externalsvc in namespace services-1371 @ 12/03/24 20:16:49.742
  STEP: creating replication controller externalsvc in namespace services-1371 @ 12/03/24 20:16:49.754
  I1203 20:16:49.774094      23 runners.go:198] Created replication controller with name: externalsvc, namespace: services-1371, replica count: 2
  I1203 20:16:52.827545      23 runners.go:198] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 12/03/24 20:16:52.832
  I1203 20:16:52.855035 23 resource.go:361] Creating new exec pod
  I1203 20:16:54.869575 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-1371 exec execpod7cn97 -- /bin/sh -x -c nslookup nodeport-service.services-1371.svc.cluster.local'
  I1203 20:16:55.080088 23 builder.go:146] stderr: "+ nslookup nodeport-service.services-1371.svc.cluster.local\n"
  I1203 20:16:55.080183 23 builder.go:147] stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nnodeport-service.services-1371.svc.cluster.local\tcanonical name = externalsvc.services-1371.svc.cluster.local.\nName:\texternalsvc.services-1371.svc.cluster.local\nAddress: 10.111.225.88\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-1371, will wait for the garbage collector to delete the pods @ 12/03/24 20:16:55.08
  I1203 20:16:55.142602 23 resources.go:139] Deleting ReplicationController externalsvc took: 6.895441ms
  I1203 20:16:55.243804 23 resources.go:163] Terminating ReplicationController externalsvc pods took: 101.181908ms
  I1203 20:16:58.567340 23 service.go:1548] Cleaning up the NodePort to ExternalName test service
  I1203 20:16:58.575865 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1371" for this suite. @ 12/03/24 20:16:58.58
• [8.888 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 12/03/24 20:16:58.586
  I1203 20:16:58.586918 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename chunking @ 12/03/24 20:16:58.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:16:58.6
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:16:58.604
  STEP: creating a large number of resources @ 12/03/24 20:16:58.609
  STEP: retrieving those results in paged fashion several times @ 12/03/24 20:17:16.294
  I1203 20:17:16.344041 23 chunking.go:98] Retrieved 17/17 results with rv 22806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDYsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I1203 20:17:16.394062 23 chunking.go:98] Retrieved 17/17 results with rv 22806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDYsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I1203 20:17:16.444354 23 chunking.go:98] Retrieved 17/17 results with rv 22806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDYsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I1203 20:17:16.493511 23 chunking.go:98] Retrieved 17/17 results with rv 22806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDYsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I1203 20:17:16.543651 23 chunking.go:98] Retrieved 17/17 results with rv 22806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDYsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I1203 20:17:16.594042 23 chunking.go:98] Retrieved 17/17 results with rv 22806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDYsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I1203 20:17:16.643875 23 chunking.go:98] Retrieved 17/17 results with rv 22806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDYsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I1203 20:17:16.693634 23 chunking.go:98] Retrieved 17/17 results with rv 22806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDYsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I1203 20:17:16.743345 23 chunking.go:98] Retrieved 17/17 results with rv 22806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDYsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I1203 20:17:16.793625 23 chunking.go:98] Retrieved 17/17 results with rv 22806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDYsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I1203 20:17:16.843361 23 chunking.go:98] Retrieved 17/17 results with rv 22806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDYsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I1203 20:17:16.892845 23 chunking.go:98] Retrieved 17/17 results with rv 22806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDYsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I1203 20:17:16.943815 23 chunking.go:98] Retrieved 17/17 results with rv 22806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDYsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I1203 20:17:16.993418 23 chunking.go:98] Retrieved 17/17 results with rv 22806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDYsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I1203 20:17:17.043446 23 chunking.go:98] Retrieved 17/17 results with rv 22806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDYsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I1203 20:17:17.093474 23 chunking.go:98] Retrieved 17/17 results with rv 22806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDYsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I1203 20:17:17.142769 23 chunking.go:98] Retrieved 17/17 results with rv 22806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDYsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I1203 20:17:17.192990 23 chunking.go:98] Retrieved 17/17 results with rv 22806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDYsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I1203 20:17:17.243389 23 chunking.go:98] Retrieved 17/17 results with rv 22806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDYsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I1203 20:17:17.292898 23 chunking.go:98] Retrieved 17/17 results with rv 22806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDYsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I1203 20:17:17.343073 23 chunking.go:98] Retrieved 17/17 results with rv 22806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDYsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I1203 20:17:17.394339 23 chunking.go:98] Retrieved 17/17 results with rv 22806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDYsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I1203 20:17:17.443883 23 chunking.go:98] Retrieved 17/17 results with rv 22806 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDYsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I1203 20:17:17.493335 23 chunking.go:98] Retrieved 9/17 results with rv 22806 and continue 
  I1203 20:17:17.543437 23 chunking.go:98] Retrieved 17/17 results with rv 22809 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDksInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I1203 20:17:17.593751 23 chunking.go:98] Retrieved 17/17 results with rv 22809 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDksInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I1203 20:17:17.644060 23 chunking.go:98] Retrieved 17/17 results with rv 22809 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDksInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I1203 20:17:17.695458 23 chunking.go:98] Retrieved 17/17 results with rv 22809 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDksInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I1203 20:17:17.743508 23 chunking.go:98] Retrieved 17/17 results with rv 22809 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDksInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I1203 20:17:17.793853 23 chunking.go:98] Retrieved 17/17 results with rv 22809 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDksInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I1203 20:17:17.843803 23 chunking.go:98] Retrieved 17/17 results with rv 22809 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDksInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I1203 20:17:17.893927 23 chunking.go:98] Retrieved 17/17 results with rv 22809 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDksInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I1203 20:17:17.944262 23 chunking.go:98] Retrieved 17/17 results with rv 22809 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDksInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I1203 20:17:17.993707 23 chunking.go:98] Retrieved 17/17 results with rv 22809 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDksInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I1203 20:17:18.044316 23 chunking.go:98] Retrieved 17/17 results with rv 22809 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDksInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I1203 20:17:18.093088 23 chunking.go:98] Retrieved 17/17 results with rv 22809 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDksInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I1203 20:17:18.144189 23 chunking.go:98] Retrieved 17/17 results with rv 22809 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDksInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I1203 20:17:18.193986 23 chunking.go:98] Retrieved 17/17 results with rv 22809 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDksInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I1203 20:17:18.243521 23 chunking.go:98] Retrieved 17/17 results with rv 22809 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDksInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I1203 20:17:18.293145 23 chunking.go:98] Retrieved 17/17 results with rv 22809 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDksInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I1203 20:17:18.344216 23 chunking.go:98] Retrieved 17/17 results with rv 22809 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDksInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I1203 20:17:18.393466 23 chunking.go:98] Retrieved 17/17 results with rv 22809 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDksInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I1203 20:17:18.443894 23 chunking.go:98] Retrieved 17/17 results with rv 22809 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDksInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I1203 20:17:18.494470 23 chunking.go:98] Retrieved 17/17 results with rv 22809 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDksInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I1203 20:17:18.544009 23 chunking.go:98] Retrieved 17/17 results with rv 22809 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDksInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I1203 20:17:18.593531 23 chunking.go:98] Retrieved 17/17 results with rv 22809 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDksInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I1203 20:17:18.643671 23 chunking.go:98] Retrieved 17/17 results with rv 22809 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MDksInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I1203 20:17:18.693309 23 chunking.go:98] Retrieved 9/17 results with rv 22809 and continue 
  I1203 20:17:18.743902 23 chunking.go:98] Retrieved 17/17 results with rv 22810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MTAsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I1203 20:17:18.794262 23 chunking.go:98] Retrieved 17/17 results with rv 22810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I1203 20:17:18.844880 23 chunking.go:98] Retrieved 17/17 results with rv 22810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MTAsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I1203 20:17:18.894511 23 chunking.go:98] Retrieved 17/17 results with rv 22810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MTAsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I1203 20:17:18.943871 23 chunking.go:98] Retrieved 17/17 results with rv 22810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MTAsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I1203 20:17:18.994395 23 chunking.go:98] Retrieved 17/17 results with rv 22810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MTAsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I1203 20:17:19.043966 23 chunking.go:98] Retrieved 17/17 results with rv 22810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MTAsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I1203 20:17:19.095612 23 chunking.go:98] Retrieved 17/17 results with rv 22810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MTAsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I1203 20:17:19.143753 23 chunking.go:98] Retrieved 17/17 results with rv 22810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MTAsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I1203 20:17:19.193655 23 chunking.go:98] Retrieved 17/17 results with rv 22810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MTAsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I1203 20:17:19.243658 23 chunking.go:98] Retrieved 17/17 results with rv 22810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MTAsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I1203 20:17:19.294241 23 chunking.go:98] Retrieved 17/17 results with rv 22810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MTAsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I1203 20:17:19.343486 23 chunking.go:98] Retrieved 17/17 results with rv 22810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MTAsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I1203 20:17:19.398388 23 chunking.go:98] Retrieved 17/17 results with rv 22810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MTAsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I1203 20:17:19.443786 23 chunking.go:98] Retrieved 17/17 results with rv 22810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MTAsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I1203 20:17:19.493834 23 chunking.go:98] Retrieved 17/17 results with rv 22810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MTAsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I1203 20:17:19.544059 23 chunking.go:98] Retrieved 17/17 results with rv 22810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MTAsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I1203 20:17:19.594194 23 chunking.go:98] Retrieved 17/17 results with rv 22810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MTAsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I1203 20:17:19.643489 23 chunking.go:98] Retrieved 17/17 results with rv 22810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MTAsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I1203 20:17:19.693746 23 chunking.go:98] Retrieved 17/17 results with rv 22810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MTAsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I1203 20:17:19.744707 23 chunking.go:98] Retrieved 17/17 results with rv 22810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MTAsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I1203 20:17:19.795028 23 chunking.go:98] Retrieved 17/17 results with rv 22810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MTAsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I1203 20:17:19.845051 23 chunking.go:98] Retrieved 17/17 results with rv 22810 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjI4MTAsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I1203 20:17:19.894425 23 chunking.go:98] Retrieved 9/17 results with rv 22810 and continue 
  STEP: retrieving those results all at once @ 12/03/24 20:17:19.894
  I1203 20:17:19.968147 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-2662" for this suite. @ 12/03/24 20:17:19.995
• [21.461 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 12/03/24 20:17:20.048
  I1203 20:17:20.048224 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename downward-api @ 12/03/24 20:17:20.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:17:20.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:17:20.069
  STEP: Creating a pod to test downward api env vars @ 12/03/24 20:17:20.073
  STEP: Saw pod success @ 12/03/24 20:17:24.099
  I1203 20:17:24.103301 23 output.go:196] Trying to get logs from node nodea17 pod downward-api-073dbed5-5e7c-40f2-a178-9b63e6daafda container dapi-container: <nil>
  STEP: delete the pod @ 12/03/24 20:17:24.11
  I1203 20:17:24.122590 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-981" for this suite. @ 12/03/24 20:17:24.126
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 12/03/24 20:17:24.133
  I1203 20:17:24.133250 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename lease-test @ 12/03/24 20:17:24.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:17:24.145
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:17:24.148
  I1203 20:17:24.209486 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-8113" for this suite. @ 12/03/24 20:17:24.213
• [0.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 12/03/24 20:17:24.22
  I1203 20:17:24.220183 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename secrets @ 12/03/24 20:17:24.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:17:24.233
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:17:24.237
  STEP: Creating secret with name secret-test-763338fe-62a9-464f-97cd-69c134a2d103 @ 12/03/24 20:17:24.241
  STEP: Creating a pod to test consume secrets @ 12/03/24 20:17:24.247
  STEP: Saw pod success @ 12/03/24 20:17:28.275
  I1203 20:17:28.279082 23 output.go:196] Trying to get logs from node nodea17 pod pod-secrets-f8abae57-e355-4302-94b5-fe05c50d7d12 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/03/24 20:17:28.287
  I1203 20:17:28.301599 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4317" for this suite. @ 12/03/24 20:17:28.306
• [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 12/03/24 20:17:28.313
  I1203 20:17:28.313228 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename sysctl @ 12/03/24 20:17:28.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:17:28.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:17:28.334
  STEP: Creating a pod with one valid and two invalid sysctls @ 12/03/24 20:17:28.339
  I1203 20:17:28.344763 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-6735" for this suite. @ 12/03/24 20:17:28.349
• [0.042 seconds]
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 12/03/24 20:17:28.354
  I1203 20:17:28.354876 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename init-container @ 12/03/24 20:17:28.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:17:28.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:17:28.372
  STEP: creating the pod @ 12/03/24 20:17:28.375
  I1203 20:17:28.375987 23 init_container.go:294] PodSpec: initContainers in spec.initContainers
  I1203 20:17:31.575142 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3196" for this suite. @ 12/03/24 20:17:31.579
• [3.235 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 12/03/24 20:17:31.59
  I1203 20:17:31.590280 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename init-container @ 12/03/24 20:17:31.591
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:17:31.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:17:31.608
  STEP: creating the pod @ 12/03/24 20:17:31.612
  I1203 20:17:31.612289 23 init_container.go:374] PodSpec: initContainers in spec.initContainers
  I1203 20:18:12.714758 23 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-98fd774e-cf5c-49d4-bc77-3d6a2e70a4da", GenerateName:"", Namespace:"init-container-5838", SelfLink:"", UID:"5713d7a1-f2ab-46e5-a2e5-ae07546f42c9", ResourceVersion:"23433", Generation:0, CreationTimestamp:time.Date(2024, time.December, 3, 20, 17, 31, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"612274465"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 20, 17, 31, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0048c5b78), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 3, 20, 18, 12, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0048c5bd8), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-s6mqk", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc00504afa0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-s6mqk", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-s6mqk", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-s6mqk", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc003fbff30), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"nodea17", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc001425480), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003fbffb0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc003fbffd0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc003fbffd8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc003fbffdc), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc000890840), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.December, 3, 20, 17, 32, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.December, 3, 20, 17, 31, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.December, 3, 20, 17, 31, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.December, 3, 20, 17, 31, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.December, 3, 20, 17, 31, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.100.37", HostIPs:[]v1.HostIP{v1.HostIP{IP:"192.168.100.37"}}, PodIP:"10.244.1.61", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.244.1.61"}}, StartTime:time.Date(2024, time.December, 3, 20, 17, 31, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc003f5cee0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://05c2d1ba35c7b7ad5cad26ec548c37ae5c054d90b4bebe0c31c618cc91cf3a80", Started:(*bool)(0xc003cf0075), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00504b000), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc003cf007b), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00504afe0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc003cf005f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I1203 20:18:12.714997 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5838" for this suite. @ 12/03/24 20:18:12.72
• [41.136 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:833
  STEP: Creating a kubernetes client @ 12/03/24 20:18:12.726
  I1203 20:18:12.726802 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename job @ 12/03/24 20:18:12.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:18:12.739
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:18:12.744
  STEP: Creating a job @ 12/03/24 20:18:12.749
  STEP: Ensure pods equal to parallelism count is attached to the job @ 12/03/24 20:18:12.754
  STEP: patching /status @ 12/03/24 20:18:14.76
  STEP: updating /status @ 12/03/24 20:18:14.771
  STEP: get /status @ 12/03/24 20:18:14.782
  I1203 20:18:14.786685 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7632" for this suite. @ 12/03/24 20:18:14.792
• [2.073 seconds]
------------------------------
SSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:134
  STEP: Creating a kubernetes client @ 12/03/24 20:18:14.8
  I1203 20:18:14.800142 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename kubelet-test @ 12/03/24 20:18:14.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:18:14.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:18:14.817
  I1203 20:18:14.845718 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9514" for this suite. @ 12/03/24 20:18:14.849
• [0.055 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 12/03/24 20:18:14.855
  I1203 20:18:14.855840 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename container-runtime @ 12/03/24 20:18:14.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:18:14.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:18:14.871
  STEP: create the container @ 12/03/24 20:18:14.876
  W1203 20:18:14.884090      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 12/03/24 20:18:14.884
  STEP: get the container status @ 12/03/24 20:18:18.907
  STEP: the container should be terminated @ 12/03/24 20:18:18.91
  STEP: the termination message should be set @ 12/03/24 20:18:18.91
  I1203 20:18:18.910648 23 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 12/03/24 20:18:18.91
  I1203 20:18:18.925353 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5600" for this suite. @ 12/03/24 20:18:18.929
• [4.079 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 12/03/24 20:18:18.935
  I1203 20:18:18.935120 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename svcaccounts @ 12/03/24 20:18:18.936
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:18:18.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:18:18.953
  STEP: Creating a pod to test service account token:  @ 12/03/24 20:18:18.957
  STEP: Saw pod success @ 12/03/24 20:18:22.98
  I1203 20:18:22.984382 23 output.go:196] Trying to get logs from node nodeb14 pod test-pod-a41fb0ca-54fc-4643-a01d-3dd4f1cb4ad3 container agnhost-container: <nil>
  STEP: delete the pod @ 12/03/24 20:18:23.005
  I1203 20:18:23.015394 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5790" for this suite. @ 12/03/24 20:18:23.02
• [4.090 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 12/03/24 20:18:23.025
  I1203 20:18:23.025443 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename security-context-test @ 12/03/24 20:18:23.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:18:23.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:18:23.04
  I1203 20:18:25.058144 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-847" for this suite. @ 12/03/24 20:18:25.062
• [2.045 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:177
  STEP: Creating a kubernetes client @ 12/03/24 20:18:25.07
  I1203 20:18:25.070480 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename crd-webhook @ 12/03/24 20:18:25.072
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:18:25.087
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:18:25.091
  STEP: Setting up server cert @ 12/03/24 20:18:25.095
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 12/03/24 20:18:25.388
  STEP: Deploying the custom resource conversion webhook pod @ 12/03/24 20:18:25.4
  STEP: Wait for the deployment to be ready @ 12/03/24 20:18:25.414
  I1203 20:18:25.421657 23 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/03/24 20:18:27.435
  STEP: Verifying the service has paired with the endpoint @ 12/03/24 20:18:27.451
  I1203 20:18:28.451859 23 util.go:427] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I1203 20:18:28.460832 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Creating a v1 custom resource @ 12/03/24 20:18:31.054
  STEP: Create a v2 custom resource @ 12/03/24 20:18:31.072
  STEP: List CRs in v1 @ 12/03/24 20:18:31.114
  STEP: List CRs in v2 @ 12/03/24 20:18:31.12
  I1203 20:18:31.670503 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-7592" for this suite. @ 12/03/24 20:18:31.674
• [6.618 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3136
  STEP: Creating a kubernetes client @ 12/03/24 20:18:31.688
  I1203 20:18:31.688912 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename services @ 12/03/24 20:18:31.689
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:18:31.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:18:31.705
  STEP: fetching services @ 12/03/24 20:18:31.709
  I1203 20:18:31.713672 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2209" for this suite. @ 12/03/24 20:18:31.717
• [0.034 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 12/03/24 20:18:31.723
  I1203 20:18:31.723857 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename downward-api @ 12/03/24 20:18:31.725
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:18:31.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:18:31.739
  STEP: Creating a pod to test downward api env vars @ 12/03/24 20:18:31.743
  STEP: Saw pod success @ 12/03/24 20:18:35.766
  I1203 20:18:35.770837 23 output.go:196] Trying to get logs from node nodea17 pod downward-api-2093b4ce-f020-44fe-900f-86f554fe0376 container dapi-container: <nil>
  STEP: delete the pod @ 12/03/24 20:18:35.78
  I1203 20:18:35.796630 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8248" for this suite. @ 12/03/24 20:18:35.801
• [4.082 seconds]
------------------------------
SS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 12/03/24 20:18:35.806
  I1203 20:18:35.806530 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename downward-api @ 12/03/24 20:18:35.808
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:18:35.821
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:18:35.826
  STEP: Creating a pod to test downward api env vars @ 12/03/24 20:18:35.83
  STEP: Saw pod success @ 12/03/24 20:18:39.854
  I1203 20:18:39.858050 23 output.go:196] Trying to get logs from node nodea17 pod downward-api-5a9e71c1-f5e4-48a8-924d-6149d474d981 container dapi-container: <nil>
  STEP: delete the pod @ 12/03/24 20:18:39.866
  I1203 20:18:39.886142 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-158" for this suite. @ 12/03/24 20:18:39.891
• [4.090 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 12/03/24 20:18:39.897
  I1203 20:18:39.897063 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename webhook @ 12/03/24 20:18:39.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:18:39.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:18:39.914
  STEP: Setting up server cert @ 12/03/24 20:18:39.934
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/03/24 20:18:40.332
  STEP: Deploying the webhook pod @ 12/03/24 20:18:40.337
  STEP: Wait for the deployment to be ready @ 12/03/24 20:18:40.351
  I1203 20:18:40.360688 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  I1203 20:18:42.375553 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 3, 20, 18, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 20, 18, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 3, 20, 18, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 20, 18, 40, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1203 20:18:44.381939 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 3, 20, 18, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 20, 18, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 3, 20, 18, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 20, 18, 40, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1203 20:18:46.381267 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 3, 20, 18, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 20, 18, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 3, 20, 18, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 20, 18, 40, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1203 20:18:48.381933 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 3, 20, 18, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 20, 18, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 3, 20, 18, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 20, 18, 40, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1203 20:18:50.381493 23 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 3, 20, 18, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 20, 18, 40, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 3, 20, 18, 40, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 20, 18, 40, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 12/03/24 20:18:52.382
  STEP: Verifying the service has paired with the endpoint @ 12/03/24 20:18:52.406
  I1203 20:18:53.407248 23 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 12/03/24 20:18:53.416
  STEP: create a pod @ 12/03/24 20:18:53.44
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 12/03/24 20:18:55.458
  I1203 20:18:55.458300 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=webhook-3843 attach --namespace=webhook-3843 to-be-attached-pod -i -c=container1'
  I1203 20:18:55.579744 23 builder.go:135] rc: 1
  I1203 20:18:55.617299 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3843" for this suite. @ 12/03/24 20:18:55.622
  STEP: Destroying namespace "webhook-markers-5626" for this suite. @ 12/03/24 20:18:55.626
• [15.735 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:905
  STEP: Creating a kubernetes client @ 12/03/24 20:18:55.64
  I1203 20:18:55.640943 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename statefulset @ 12/03/24 20:18:55.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:18:55.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:18:55.658
  STEP: Creating service test in namespace statefulset-8078 @ 12/03/24 20:18:55.663
  STEP: Creating statefulset ss in namespace statefulset-8078 @ 12/03/24 20:18:55.667
  I1203 20:18:55.687896 23 wait.go:40] Found 0 stateful pods, waiting for 1
  I1203 20:19:05.690013 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 12/03/24 20:19:05.698
  STEP: updating a scale subresource @ 12/03/24 20:19:05.707
  STEP: verifying the statefulset Spec.Replicas was modified @ 12/03/24 20:19:05.713
  STEP: Patch a scale subresource @ 12/03/24 20:19:05.718
  STEP: verifying the statefulset Spec.Replicas was modified @ 12/03/24 20:19:05.723
  I1203 20:19:05.727383 23 statefulset.go:138] Deleting all statefulset in ns statefulset-8078
  I1203 20:19:05.731066 23 rest.go:150] Scaling statefulset ss to 0
  I1203 20:19:15.744195 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1203 20:19:15.748540 23 rest.go:88] Deleting statefulset ss
  I1203 20:19:15.761766 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8078" for this suite. @ 12/03/24 20:19:15.767
• [20.133 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 12/03/24 20:19:15.774
  I1203 20:19:15.774776 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 12/03/24 20:19:15.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:19:15.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:19:15.791
  STEP: creating a target pod @ 12/03/24 20:19:15.796
  STEP: adding an ephemeral container @ 12/03/24 20:19:17.816
  STEP: checking pod container endpoints @ 12/03/24 20:19:19.845
  I1203 20:19:19.845887 23 exec_util.go:55] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-2450 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1203 20:19:19.845922 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  I1203 20:19:19.846964 23 exec_util.go:62] ExecWithOptions: Clientset creation
  I1203 20:19:19.847088 23 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-2450/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I1203 20:19:19.918712 23 exec_util.go:106] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 12/03/24 20:19:19.925
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 12/03/24 20:19:19.929
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 12/03/24 20:19:19.943
  I1203 20:19:19.948847 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-2450" for this suite. @ 12/03/24 20:19:19.952
• [4.184 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 12/03/24 20:19:19.958
  I1203 20:19:19.958426 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename validating-admission-policy @ 12/03/24 20:19:19.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:19:19.968
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:19:19.972
  STEP: creating a policy with variables @ 12/03/24 20:19:19.979
  STEP: waiting until the marker is denied @ 12/03/24 20:19:20.003
  STEP: testing a replicated Deployment to be allowed @ 12/03/24 20:19:20.613
  STEP: testing a non-replicated ReplicaSet not to be denied @ 12/03/24 20:19:20.626
  I1203 20:19:20.670869 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-8635" for this suite. @ 12/03/24 20:19:20.674
• [0.722 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 12/03/24 20:19:20.681
  I1203 20:19:20.681140 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename namespaces @ 12/03/24 20:19:20.682
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:19:20.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:19:20.696
  STEP: Updating Namespace "namespaces-170" @ 12/03/24 20:19:20.7
  I1203 20:19:20.709608 23 namespace.go:389] Namespace "namespaces-170" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"5bf20c14-ed9f-42ef-a1ac-7bd278aaf100", "kubernetes.io/metadata.name":"namespaces-170", "namespaces-170":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I1203 20:19:20.709943 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-170" for this suite. @ 12/03/24 20:19:20.714
• [0.038 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 12/03/24 20:19:20.72
  I1203 20:19:20.720907 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename pods @ 12/03/24 20:19:20.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:19:20.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:19:20.739
  STEP: creating a Pod with a static label @ 12/03/24 20:19:20.749
  STEP: watching for Pod to be ready @ 12/03/24 20:19:20.756
  I1203 20:19:20.758945 23 pods.go:945] observed Pod pod-test in namespace pods-3809 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I1203 20:19:20.762158 23 pods.go:945] observed Pod pod-test in namespace pods-3809 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-03 20:19:20 +0000 UTC  }]
  I1203 20:19:20.773404 23 pods.go:945] observed Pod pod-test in namespace pods-3809 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-12-03 20:19:20 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-03 20:19:20 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-12-03 20:19:20 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-12-03 20:19:20 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-03 20:19:20 +0000 UTC  }]
  I1203 20:19:21.979840 23 pods.go:948] Found Pod pod-test in namespace pods-3809 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-12-03 20:19:21 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-03 20:19:20 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-12-03 20:19:21 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-12-03 20:19:21 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-03 20:19:20 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 12/03/24 20:19:21.983
  STEP: getting the Pod and ensuring that it's patched @ 12/03/24 20:19:21.995
  STEP: replacing the Pod's status Ready condition to False @ 12/03/24 20:19:21.998
  STEP: check the Pod again to ensure its Ready conditions are False @ 12/03/24 20:19:22.012
  STEP: deleting the Pod via a Collection with a LabelSelector @ 12/03/24 20:19:22.012
  STEP: watching for the Pod to be deleted @ 12/03/24 20:19:22.019
  I1203 20:19:22.021564 23 pods.go:1058] observed event type MODIFIED
  I1203 20:19:23.983434 23 pods.go:1058] observed event type MODIFIED
  I1203 20:19:24.159144 23 pods.go:1058] observed event type MODIFIED
  I1203 20:19:24.988037 23 pods.go:1058] observed event type MODIFIED
  I1203 20:19:24.993321 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3809" for this suite. @ 12/03/24 20:19:24.997
• [4.281 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1079
  STEP: Creating a kubernetes client @ 12/03/24 20:19:25.002
  I1203 20:19:25.002160 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename kubectl @ 12/03/24 20:19:25.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:19:25.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:19:25.019
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/03/24 20:19:25.023
  I1203 20:19:25.023850 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-5211 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I1203 20:19:25.117112 23 builder.go:146] stderr: ""
  I1203 20:19:25.117186 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 12/03/24 20:19:25.117
  I1203 20:19:25.117315 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-5211 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I1203 20:19:25.216696 23 builder.go:146] stderr: ""
  I1203 20:19:25.216776 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/03/24 20:19:25.216
  I1203 20:19:25.219907 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-5211 delete pods e2e-test-httpd-pod'
  I1203 20:19:27.016677 23 builder.go:146] stderr: ""
  I1203 20:19:27.016759 23 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1203 20:19:27.016912 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5211" for this suite. @ 12/03/24 20:19:27.022
• [2.026 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 12/03/24 20:19:27.028
  I1203 20:19:27.028131 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename controllerrevisions @ 12/03/24 20:19:27.029
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:19:27.043
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:19:27.048
  STEP: Creating DaemonSet "e2e-xxfzg-daemon-set" @ 12/03/24 20:19:27.068
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/03/24 20:19:27.075
  I1203 20:19:27.079536 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1203 20:19:27.082324 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-xxfzg-daemon-set: 0
  I1203 20:19:27.082407 23 fixtures.go:130] Node nodea17 is running 0 daemon pod, expected 1
  I1203 20:19:28.081941 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1203 20:19:28.086568 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-xxfzg-daemon-set: 1
  I1203 20:19:28.086633 23 fixtures.go:130] Node nodeb14 is running 0 daemon pod, expected 1
  I1203 20:19:29.083715 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1203 20:19:29.088156 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-xxfzg-daemon-set: 2
  I1203 20:19:29.088243 23 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset e2e-xxfzg-daemon-set
  STEP: Confirm DaemonSet "e2e-xxfzg-daemon-set" successfully created with "daemonset-name=e2e-xxfzg-daemon-set" label @ 12/03/24 20:19:29.092
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-xxfzg-daemon-set" @ 12/03/24 20:19:29.1
  I1203 20:19:29.104548 23 controller_revision.go:162] Located ControllerRevision: "e2e-xxfzg-daemon-set-7fdf494c54"
  STEP: Patching ControllerRevision "e2e-xxfzg-daemon-set-7fdf494c54" @ 12/03/24 20:19:29.11
  I1203 20:19:29.119420 23 controller_revision.go:173] e2e-xxfzg-daemon-set-7fdf494c54 has been patched
  STEP: Create a new ControllerRevision @ 12/03/24 20:19:29.119
  I1203 20:19:29.127701 23 controller_revision.go:191] Created ControllerRevision: e2e-xxfzg-daemon-set-9ccc984b6
  STEP: Confirm that there are two ControllerRevisions @ 12/03/24 20:19:29.127
  I1203 20:19:29.127807 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1203 20:19:29.131056 23 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-xxfzg-daemon-set-7fdf494c54" @ 12/03/24 20:19:29.131
  STEP: Confirm that there is only one ControllerRevision @ 12/03/24 20:19:29.136
  I1203 20:19:29.136403 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1203 20:19:29.139613 23 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-xxfzg-daemon-set-9ccc984b6" @ 12/03/24 20:19:29.142
  I1203 20:19:29.151251 23 controller_revision.go:220] e2e-xxfzg-daemon-set-9ccc984b6 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 12/03/24 20:19:29.151
  W1203 20:19:29.159585      23 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 12/03/24 20:19:29.159
  I1203 20:19:29.159761 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1203 20:19:30.160787 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1203 20:19:30.177783 23 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-xxfzg-daemon-set-9ccc984b6=updated" @ 12/03/24 20:19:30.177
  STEP: Confirm that there is only one ControllerRevision @ 12/03/24 20:19:30.184
  I1203 20:19:30.184550 23 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1203 20:19:30.188922 23 controller_revision.go:265] Found 1 ControllerRevisions
  I1203 20:19:30.193148 23 controller_revision.go:246] ControllerRevision "e2e-xxfzg-daemon-set-5bd96bb4f9" has revision 3
  STEP: Deleting DaemonSet "e2e-xxfzg-daemon-set" @ 12/03/24 20:19:30.196
  STEP: deleting DaemonSet.extensions e2e-xxfzg-daemon-set in namespace controllerrevisions-8837, will wait for the garbage collector to delete the pods @ 12/03/24 20:19:30.196
  I1203 20:19:30.255266 23 resources.go:139] Deleting DaemonSet.extensions e2e-xxfzg-daemon-set took: 5.611713ms
  I1203 20:19:30.355583 23 resources.go:163] Terminating DaemonSet.extensions e2e-xxfzg-daemon-set pods took: 100.314541ms
  I1203 20:19:32.260232 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-xxfzg-daemon-set: 0
  I1203 20:19:32.260305 23 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-xxfzg-daemon-set
  I1203 20:19:32.263960 23 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"24326"},"items":null}

  I1203 20:19:32.267458 23 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"24326"},"items":null}

  I1203 20:19:32.279242 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-8837" for this suite. @ 12/03/24 20:19:32.283
• [5.262 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 12/03/24 20:19:32.29
  I1203 20:19:32.290588 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename projected @ 12/03/24 20:19:32.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:19:32.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:19:32.31
  STEP: Creating configMap with name projected-configmap-test-volume-map-09245faf-ff38-4482-b980-15e348065bbe @ 12/03/24 20:19:32.314
  STEP: Creating a pod to test consume configMaps @ 12/03/24 20:19:32.319
  STEP: Saw pod success @ 12/03/24 20:19:34.337
  I1203 20:19:34.341204 23 output.go:196] Trying to get logs from node nodea17 pod pod-projected-configmaps-f15702a0-96ff-4260-972c-bb3ccb3e07dd container agnhost-container: <nil>
  STEP: delete the pod @ 12/03/24 20:19:34.348
  I1203 20:19:34.364488 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1680" for this suite. @ 12/03/24 20:19:34.368
• [2.083 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 12/03/24 20:19:34.373
  I1203 20:19:34.373939 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename gc @ 12/03/24 20:19:34.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:19:34.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:19:34.391
  STEP: create the rc1 @ 12/03/24 20:19:34.399
  STEP: create the rc2 @ 12/03/24 20:19:34.405
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 12/03/24 20:19:40.418
  STEP: delete the rc simpletest-rc-to-be-deleted @ 12/03/24 20:19:40.919
  STEP: wait for the rc to be deleted @ 12/03/24 20:19:40.924
  I1203 20:19:45.941379 23 garbage_collector.go:762] 71 pods remaining
  I1203 20:19:45.941459 23 garbage_collector.go:769] 71 pods has nil DeletionTimestamp
  I1203 20:19:45.941479 23 garbage_collector.go:770] 
  STEP: Gathering metrics @ 12/03/24 20:19:50.945
  I1203 20:19:51.066444 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1203 20:19:51.066557 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-25kj9" in namespace "gc-1166"
  I1203 20:19:51.075912 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-288xh" in namespace "gc-1166"
  I1203 20:19:51.095816 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-28zw4" in namespace "gc-1166"
  I1203 20:19:51.105606 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2b62t" in namespace "gc-1166"
  I1203 20:19:51.119841 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2lb8f" in namespace "gc-1166"
  I1203 20:19:51.129683 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2w45m" in namespace "gc-1166"
  I1203 20:19:51.139263 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4dbcw" in namespace "gc-1166"
  I1203 20:19:51.147245 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4hmjj" in namespace "gc-1166"
  I1203 20:19:51.156120 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4rb7b" in namespace "gc-1166"
  I1203 20:19:51.167405 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4tv8n" in namespace "gc-1166"
  I1203 20:19:51.175055 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5mqtg" in namespace "gc-1166"
  I1203 20:19:51.193141 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5mtbt" in namespace "gc-1166"
  I1203 20:19:51.202290 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5w744" in namespace "gc-1166"
  I1203 20:19:51.209990 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6dt4t" in namespace "gc-1166"
  I1203 20:19:51.218768 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6gkf9" in namespace "gc-1166"
  I1203 20:19:51.226492 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-75wkd" in namespace "gc-1166"
  I1203 20:19:51.234537 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-76w94" in namespace "gc-1166"
  I1203 20:19:51.241560 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7zznp" in namespace "gc-1166"
  I1203 20:19:51.250653 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8bpv9" in namespace "gc-1166"
  I1203 20:19:51.258006 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8cs8b" in namespace "gc-1166"
  I1203 20:19:51.266839 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-95mp5" in namespace "gc-1166"
  I1203 20:19:51.276111 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b25fx" in namespace "gc-1166"
  I1203 20:19:51.293925 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b7rbq" in namespace "gc-1166"
  I1203 20:19:51.312523 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bmh2h" in namespace "gc-1166"
  I1203 20:19:51.323405 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bq8fn" in namespace "gc-1166"
  I1203 20:19:51.332798 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c982f" in namespace "gc-1166"
  I1203 20:19:51.340127 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cbrdp" in namespace "gc-1166"
  I1203 20:19:51.351152 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d6nmm" in namespace "gc-1166"
  I1203 20:19:51.357955 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dg877" in namespace "gc-1166"
  I1203 20:19:51.367645 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dgb8l" in namespace "gc-1166"
  I1203 20:19:51.379440 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dtklm" in namespace "gc-1166"
  I1203 20:19:51.386535 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dxmfr" in namespace "gc-1166"
  I1203 20:19:51.397088 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f75nz" in namespace "gc-1166"
  I1203 20:19:51.405217 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fvh8z" in namespace "gc-1166"
  I1203 20:19:51.413538 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g9swr" in namespace "gc-1166"
  I1203 20:19:51.421601 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gh2cb" in namespace "gc-1166"
  I1203 20:19:51.432187 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gjqx8" in namespace "gc-1166"
  I1203 20:19:51.442925 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-h9ll4" in namespace "gc-1166"
  I1203 20:19:51.454339 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hhzw6" in namespace "gc-1166"
  I1203 20:19:51.461808 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hnmmd" in namespace "gc-1166"
  I1203 20:19:51.470700 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hq66f" in namespace "gc-1166"
  I1203 20:19:51.480307 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hxfbx" in namespace "gc-1166"
  I1203 20:19:51.486269 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hxl6n" in namespace "gc-1166"
  I1203 20:19:51.495559 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hzpfv" in namespace "gc-1166"
  I1203 20:19:51.504837 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-j4zts" in namespace "gc-1166"
  I1203 20:19:51.514827 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-j6wt4" in namespace "gc-1166"
  I1203 20:19:51.522853 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jdg54" in namespace "gc-1166"
  I1203 20:19:51.536579 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jh28w" in namespace "gc-1166"
  I1203 20:19:51.545301 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jpb7h" in namespace "gc-1166"
  I1203 20:19:51.553425 23 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jvqnm" in namespace "gc-1166"
  I1203 20:19:51.562805 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1166" for this suite. @ 12/03/24 20:19:51.566
• [17.197 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 12/03/24 20:19:51.571
  I1203 20:19:51.571416 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename var-expansion @ 12/03/24 20:19:51.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:19:51.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:19:51.587
  STEP: Creating a pod to test env composition @ 12/03/24 20:19:51.59
  STEP: Saw pod success @ 12/03/24 20:19:55.612
  I1203 20:19:55.615884 23 output.go:196] Trying to get logs from node nodea17 pod var-expansion-7a28c6ec-ea2a-4fc7-a99d-abdadc4e17d4 container dapi-container: <nil>
  STEP: delete the pod @ 12/03/24 20:19:55.626
  I1203 20:19:55.641496 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-58" for this suite. @ 12/03/24 20:19:55.646
• [4.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 12/03/24 20:19:55.651
  I1203 20:19:55.651527 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename webhook @ 12/03/24 20:19:55.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:19:55.664
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:19:55.668
  STEP: Setting up server cert @ 12/03/24 20:19:55.688
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/03/24 20:19:56.114
  STEP: Deploying the webhook pod @ 12/03/24 20:19:56.124
  STEP: Wait for the deployment to be ready @ 12/03/24 20:19:56.138
  I1203 20:19:56.146639 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/03/24 20:19:58.158
  STEP: Verifying the service has paired with the endpoint @ 12/03/24 20:19:58.175
  I1203 20:19:59.175600 23 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 12/03/24 20:19:59.183
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/03/24 20:19:59.204
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 12/03/24 20:19:59.218
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/03/24 20:19:59.23
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 12/03/24 20:19:59.24
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/03/24 20:19:59.249
  I1203 20:19:59.296315 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1135" for this suite. @ 12/03/24 20:19:59.301
  STEP: Destroying namespace "webhook-markers-7465" for this suite. @ 12/03/24 20:19:59.316
• [3.671 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 12/03/24 20:19:59.322
  I1203 20:19:59.322986 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename downward-api @ 12/03/24 20:19:59.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:19:59.338
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:19:59.341
  STEP: Creating a pod to test downward API volume plugin @ 12/03/24 20:19:59.345
  STEP: Saw pod success @ 12/03/24 20:20:03.369
  I1203 20:20:03.373779 23 output.go:196] Trying to get logs from node nodea17 pod downwardapi-volume-293eca30-6479-41fa-9fda-95f685cd6856 container client-container: <nil>
  STEP: delete the pod @ 12/03/24 20:20:03.38
  I1203 20:20:03.393676 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-238" for this suite. @ 12/03/24 20:20:03.398
• [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 12/03/24 20:20:03.404
  I1203 20:20:03.404401 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename deployment @ 12/03/24 20:20:03.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:20:03.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:20:03.422
  I1203 20:20:03.426581 23 deployment.go:1196] Creating deployment "webserver-deployment"
  I1203 20:20:03.431089 23 deployment.go:1200] Waiting for observed generation 1
  I1203 20:20:05.439310 23 deployment.go:1205] Waiting for all required pods to come up
  I1203 20:20:05.445457 23 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 12/03/24 20:20:05.445
  I1203 20:20:05.445628 23 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I1203 20:20:05.452375 23 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I1203 20:20:05.463666 23 deployment.go:313] Updating deployment webserver-deployment
  I1203 20:20:05.463731 23 deployment.go:1224] Waiting for observed generation 2
  I1203 20:20:07.471556 23 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I1203 20:20:07.475542 23 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I1203 20:20:07.479128 23 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I1203 20:20:07.490433 23 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I1203 20:20:07.490504 23 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I1203 20:20:07.493975 23 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I1203 20:20:07.499765 23 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I1203 20:20:07.499831 23 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I1203 20:20:07.512045 23 deployment.go:313] Updating deployment webserver-deployment
  I1203 20:20:07.512116 23 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I1203 20:20:07.518974 23 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I1203 20:20:07.530209 23 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  I1203 20:20:07.541282 23 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4375",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6669b31d-70c6-4210-aa1e-bbc1d40801a9",
      ResourceVersion: (string) (len=5) "26592",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854003,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854005,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854003,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-67c89d485c\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1203 20:20:07.549046 23 deployment.go:39] New ReplicaSet "webserver-deployment-67c89d485c" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-67c89d485c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4375",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9fe4f65f-3723-40e2-bd82-561d6c7e7258",
      ResourceVersion: (string) (len=5) "26587",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854005,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "6669b31d-70c6-4210-aa1e-bbc1d40801a9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854005,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 36 36 39 62 33  31 64 2d 37 30 63 36 2d  |\"6669b31d-70c6-|
              00000120  34 32 31 30 2d 61 61 31  65 2d 62 62 63 31 64 34  |4210-aa1e-bbc1d4|
              00000130  30 38 30 31 61 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0801a9\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1203 20:20:07.550848 23 deployment.go:44] All old ReplicaSets of Deployment "webserver-deployment":
  I1203 20:20:07.551269 23 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-77db57d8df",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4375",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f87d7de4-0251-42cb-9f85-1e2d772834ed",
      ResourceVersion: (string) (len=5) "26586",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854003,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "6669b31d-70c6-4210-aa1e-bbc1d40801a9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854005,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 36 36 39 62 33  31 64 2d 37 30 63 36 2d  |\"6669b31d-70c6-|
              00000120  34 32 31 30 2d 61 61 31  65 2d 62 62 63 31 64 34  |4210-aa1e-bbc1d4|
              00000130  30 38 30 31 61 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0801a9\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1203 20:20:07.566205 23 deployment.go:67] Pod "webserver-deployment-67c89d485c-7vs6m" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-7vs6m",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-4375",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5a535306-e85e-4c0f-a32a-407ebfe221aa",
      ResourceVersion: (string) (len=5) "26605",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854007,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "9fe4f65f-3723-40e2-bd82-561d6c7e7258",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 66  65 34 66 36 35 66 2d 33  |d\":\"9fe4f65f-3|
              00000090  37 32 33 2d 34 30 65 32  2d 62 64 38 32 2d 35 36  |723-40e2-bd82-56|
              000000a0  31 64 36 63 37 65 37 32  35 38 5c 22 7d 22 3a 7b  |1d6c7e7258\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9rlg7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9rlg7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1203 20:20:07.567917 23 deployment.go:67] Pod "webserver-deployment-67c89d485c-bzrv6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-bzrv6",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-4375",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "003b9209-1287-47dc-911e-eea64a715067",
      ResourceVersion: (string) (len=5) "26563",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854005,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "9fe4f65f-3723-40e2-bd82-561d6c7e7258",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854005,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 66  65 34 66 36 35 66 2d 33  |d\":\"9fe4f65f-3|
              00000090  37 32 33 2d 34 30 65 32  2d 62 64 38 32 2d 35 36  |723-40e2-bd82-56|
              000000a0  31 64 36 63 37 65 37 32  35 38 5c 22 7d 22 3a 7b  |1d6c7e7258\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854005,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-876zg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-876zg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea17",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854005,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854005,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854005,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854005,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854005,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.100.37",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.100.37"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854005,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1203 20:20:07.570293 23 deployment.go:67] Pod "webserver-deployment-67c89d485c-cwdbh" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-cwdbh",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-4375",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f057a423-85c8-4841-8f73-c3e1acf14ab4",
      ResourceVersion: (string) (len=5) "26603",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854007,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "9fe4f65f-3723-40e2-bd82-561d6c7e7258",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 66  65 34 66 36 35 66 2d 33  |d\":\"9fe4f65f-3|
              00000090  37 32 33 2d 34 30 65 32  2d 62 64 38 32 2d 35 36  |723-40e2-bd82-56|
              000000a0  31 64 36 63 37 65 37 32  35 38 5c 22 7d 22 3a 7b  |1d6c7e7258\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7rbfm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7rbfm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea17",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1203 20:20:07.572003 23 deployment.go:67] Pod "webserver-deployment-67c89d485c-hh6vw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-hh6vw",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-4375",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "588e471d-fed0-4fb0-882f-f309881d2db2",
      ResourceVersion: (string) (len=5) "26537",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854005,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "9fe4f65f-3723-40e2-bd82-561d6c7e7258",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854005,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 66  65 34 66 36 35 66 2d 33  |d\":\"9fe4f65f-3|
              00000090  37 32 33 2d 34 30 65 32  2d 62 64 38 32 2d 35 36  |723-40e2-bd82-56|
              000000a0  31 64 36 63 37 65 37 32  35 38 5c 22 7d 22 3a 7b  |1d6c7e7258\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854005,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gxx7r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gxx7r",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea17",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854005,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854005,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854005,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854005,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854005,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.100.37",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.100.37"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854005,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1203 20:20:07.574335 23 deployment.go:67] Pod "webserver-deployment-67c89d485c-j89mb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-j89mb",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-4375",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d09ceddc-eb1e-480f-96d6-56f517d3ed29",
      ResourceVersion: (string) (len=5) "26612",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854007,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "9fe4f65f-3723-40e2-bd82-561d6c7e7258",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 66  65 34 66 36 35 66 2d 33  |d\":\"9fe4f65f-3|
              00000090  37 32 33 2d 34 30 65 32  2d 62 64 38 32 2d 35 36  |723-40e2-bd82-56|
              000000a0  31 64 36 63 37 65 37 32  35 38 5c 22 7d 22 3a 7b  |1d6c7e7258\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hml8g",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hml8g",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1203 20:20:07.575753 23 deployment.go:67] Pod "webserver-deployment-67c89d485c-lh4x6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-lh4x6",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-4375",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e7676aa4-9416-4939-b1be-0756bb770c17",
      ResourceVersion: (string) (len=5) "26614",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854007,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "9fe4f65f-3723-40e2-bd82-561d6c7e7258",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 66  65 34 66 36 35 66 2d 33  |d\":\"9fe4f65f-3|
              00000090  37 32 33 2d 34 30 65 32  2d 62 64 38 32 2d 35 36  |723-40e2-bd82-56|
              000000a0  31 64 36 63 37 65 37 32  35 38 5c 22 7d 22 3a 7b  |1d6c7e7258\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6vm7f",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6vm7f",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1203 20:20:07.577302 23 deployment.go:67] Pod "webserver-deployment-67c89d485c-nfn4c" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-nfn4c",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-4375",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ef406f32-afbe-4098-b3a0-89194c657d99",
      ResourceVersion: (string) (len=5) "26546",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854005,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "9fe4f65f-3723-40e2-bd82-561d6c7e7258",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854005,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 66  65 34 66 36 35 66 2d 33  |d\":\"9fe4f65f-3|
              00000090  37 32 33 2d 34 30 65 32  2d 62 64 38 32 2d 35 36  |723-40e2-bd82-56|
              000000a0  31 64 36 63 37 65 37 32  35 38 5c 22 7d 22 3a 7b  |1d6c7e7258\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854005,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z8x8n",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z8x8n",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea17",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854005,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854005,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854005,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854005,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854005,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.100.37",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.100.37"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854005,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1203 20:20:07.579613 23 deployment.go:67] Pod "webserver-deployment-67c89d485c-q8mhq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-q8mhq",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-4375",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fd4be77a-347f-4b9b-a68c-9a35ac78f625",
      ResourceVersion: (string) (len=5) "26594",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854007,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "9fe4f65f-3723-40e2-bd82-561d6c7e7258",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 66  65 34 66 36 35 66 2d 33  |d\":\"9fe4f65f-3|
              00000090  37 32 33 2d 34 30 65 32  2d 62 64 38 32 2d 35 36  |723-40e2-bd82-56|
              000000a0  31 64 36 63 37 65 37 32  35 38 5c 22 7d 22 3a 7b  |1d6c7e7258\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7p5d2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7p5d2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1203 20:20:07.581221 23 deployment.go:67] Pod "webserver-deployment-67c89d485c-rt2vp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-rt2vp",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-4375",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8558b64c-61f8-4410-ad05-dfc3d52dee31",
      ResourceVersion: (string) (len=5) "26578",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854005,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "9fe4f65f-3723-40e2-bd82-561d6c7e7258",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854005,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 66  65 34 66 36 35 66 2d 33  |d\":\"9fe4f65f-3|
              00000090  37 32 33 2d 34 30 65 32  2d 62 64 38 32 2d 35 36  |723-40e2-bd82-56|
              000000a0  31 64 36 63 37 65 37 32  35 38 5c 22 7d 22 3a 7b  |1d6c7e7258\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854006,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=706) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 32 34  |:{\"ip\":\"10.24|
              00000290  34 2e 32 2e 32 30 35 5c  22 7d 22 3a 7b 22 2e 22  |4.2.205\"}":{"."|
              000002a0  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              000002b0  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              000002c0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zx986",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zx986",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854006,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854005,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854005,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854005,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854005,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.114",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.100.114"
        }
      },
      PodIP: (string) (len=12) "10.244.2.205",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.2.205"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854005,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1203 20:20:07.583518 23 deployment.go:67] Pod "webserver-deployment-67c89d485c-sd7k2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-sd7k2",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-4375",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5c41db75-a494-41a4-a009-4afee7c2e034",
      ResourceVersion: (string) (len=5) "26610",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854007,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "9fe4f65f-3723-40e2-bd82-561d6c7e7258",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 66  65 34 66 36 35 66 2d 33  |d\":\"9fe4f65f-3|
              00000090  37 32 33 2d 34 30 65 32  2d 62 64 38 32 2d 35 36  |723-40e2-bd82-56|
              000000a0  31 64 36 63 37 65 37 32  35 38 5c 22 7d 22 3a 7b  |1d6c7e7258\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4mwm6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4mwm6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1203 20:20:07.584914 23 deployment.go:67] Pod "webserver-deployment-67c89d485c-t9qrp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-t9qrp",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-4375",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9ff8cc73-2f32-47e1-b1a2-10f7899dfe1f",
      ResourceVersion: (string) (len=5) "26608",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854007,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "9fe4f65f-3723-40e2-bd82-561d6c7e7258",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 66  65 34 66 36 35 66 2d 33  |d\":\"9fe4f65f-3|
              00000090  37 32 33 2d 34 30 65 32  2d 62 64 38 32 2d 35 36  |723-40e2-bd82-56|
              000000a0  31 64 36 63 37 65 37 32  35 38 5c 22 7d 22 3a 7b  |1d6c7e7258\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-58bsx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-58bsx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1203 20:20:07.586572 23 deployment.go:67] Pod "webserver-deployment-67c89d485c-xkdgc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-xkdgc",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-4375",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ca95dcfe-2f76-470d-a901-3b309bfa4807",
      ResourceVersion: (string) (len=5) "26562",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854005,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "9fe4f65f-3723-40e2-bd82-561d6c7e7258",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854005,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 66  65 34 66 36 35 66 2d 33  |d\":\"9fe4f65f-3|
              00000090  37 32 33 2d 34 30 65 32  2d 62 64 38 32 2d 35 36  |723-40e2-bd82-56|
              000000a0  31 64 36 63 37 65 37 32  35 38 5c 22 7d 22 3a 7b  |1d6c7e7258\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854005,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wbkpv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wbkpv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854005,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854005,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854005,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854005,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854005,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.114",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.100.114"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854005,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1203 20:20:07.589028 23 deployment.go:67] Pod "webserver-deployment-77db57d8df-2rxlj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-2rxlj",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4375",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "306a3023-f84c-45c9-8c66-65149718e85d",
      ResourceVersion: (string) (len=5) "26616",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854007,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "f87d7de4-0251-42cb-9f85-1e2d772834ed",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  37 64 37 64 65 34 2d 30  |d\":\"f87d7de4-0|
              00000090  32 35 31 2d 34 32 63 62  2d 39 66 38 35 2d 31 65  |251-42cb-9f85-1e|
              000000a0  32 64 37 37 32 38 33 34  65 64 5c 22 7d 22 3a 7b  |2d772834ed\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7sz9v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7sz9v",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea17",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.100.37",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.100.37"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854007,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1203 20:20:07.591304 23 deployment.go:67] Pod "webserver-deployment-77db57d8df-5gxhz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-5gxhz",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4375",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4f18341a-46f2-4982-8aa8-b1c659b48e19",
      ResourceVersion: (string) (len=5) "26607",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854007,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "f87d7de4-0251-42cb-9f85-1e2d772834ed",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  37 64 37 64 65 34 2d 30  |d\":\"f87d7de4-0|
              00000090  32 35 31 2d 34 32 63 62  2d 39 66 38 35 2d 31 65  |251-42cb-9f85-1e|
              000000a0  32 64 37 37 32 38 33 34  65 64 5c 22 7d 22 3a 7b  |2d772834ed\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-q66b2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-q66b2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1203 20:20:07.592717 23 deployment.go:67] Pod "webserver-deployment-77db57d8df-79htp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-79htp",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4375",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b2c64936-c4f2-43f5-8f94-f34ce65502d1",
      ResourceVersion: (string) (len=5) "26609",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854007,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "f87d7de4-0251-42cb-9f85-1e2d772834ed",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  37 64 37 64 65 34 2d 30  |d\":\"f87d7de4-0|
              00000090  32 35 31 2d 34 32 63 62  2d 39 66 38 35 2d 31 65  |251-42cb-9f85-1e|
              000000a0  32 64 37 37 32 38 33 34  65 64 5c 22 7d 22 3a 7b  |2d772834ed\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lk2gr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lk2gr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1203 20:20:07.594211 23 deployment.go:67] Pod "webserver-deployment-77db57d8df-7zxws" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-7zxws",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4375",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8e0d5b78-f9a0-47a4-828b-78281fc59321",
      ResourceVersion: (string) (len=5) "26505",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854003,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "f87d7de4-0251-42cb-9f85-1e2d772834ed",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854003,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  37 64 37 64 65 34 2d 30  |d\":\"f87d7de4-0|
              00000090  32 35 31 2d 34 32 63 62  2d 39 66 38 35 2d 31 65  |251-42cb-9f85-1e|
              000000a0  32 64 37 37 32 38 33 34  65 64 5c 22 7d 22 3a 7b  |2d772834ed\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854004,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 32 2e 32  30 32 5c 22 7d 22 3a 7b  |.244.2.202\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-knzrq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-knzrq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854004,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854003,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854004,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854004,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854003,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.114",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.100.114"
        }
      },
      PodIP: (string) (len=12) "10.244.2.202",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.2.202"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854003,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63868854004,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5780ebd6afe55701053be1a433b9948f7b04c80ec6356ecdbc3b126a2d2f3396",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1203 20:20:07.596703 23 deployment.go:67] Pod "webserver-deployment-77db57d8df-9xhwh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-9xhwh",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4375",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0ae03467-baab-4dd1-b1b7-56c222a85540",
      ResourceVersion: (string) (len=5) "26484",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854003,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "f87d7de4-0251-42cb-9f85-1e2d772834ed",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854003,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  37 64 37 64 65 34 2d 30  |d\":\"f87d7de4-0|
              00000090  32 35 31 2d 34 32 63 62  2d 39 66 38 35 2d 31 65  |251-42cb-9f85-1e|
              000000a0  32 64 37 37 32 38 33 34  65 64 5c 22 7d 22 3a 7b  |2d772834ed\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854004,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  33 35 5c 22 7d 22 3a 7b  |.244.1.135\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qkhff",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qkhff",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea17",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854004,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854003,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854004,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854004,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854003,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.100.37",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.100.37"
        }
      },
      PodIP: (string) (len=12) "10.244.1.135",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.135"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854003,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63868854004,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://0f0289ec4b0a9bbdfabab306f614520e95c7fccfc3e026ebe0ddf40e5306b099",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1203 20:20:07.599120 23 deployment.go:67] Pod "webserver-deployment-77db57d8df-bvf9x" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-bvf9x",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4375",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b6d1e4eb-1c3a-462c-ba10-e80aa630a93d",
      ResourceVersion: (string) (len=5) "26512",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854003,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "f87d7de4-0251-42cb-9f85-1e2d772834ed",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854003,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  37 64 37 64 65 34 2d 30  |d\":\"f87d7de4-0|
              00000090  32 35 31 2d 34 32 63 62  2d 39 66 38 35 2d 31 65  |251-42cb-9f85-1e|
              000000a0  32 64 37 37 32 38 33 34  65 64 5c 22 7d 22 3a 7b  |2d772834ed\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854004,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 32 2e 32  30 31 5c 22 7d 22 3a 7b  |.244.2.201\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5vkr7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5vkr7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854004,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854003,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854004,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854004,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854003,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.114",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.100.114"
        }
      },
      PodIP: (string) (len=12) "10.244.2.201",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.2.201"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854003,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63868854004,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7446b77983176c5cf7bb7af0fecdf7707262bf457250753b6ab5fc88b2319ae9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1203 20:20:07.601443 23 deployment.go:67] Pod "webserver-deployment-77db57d8df-cls22" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-cls22",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4375",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1c62a3b7-bc75-4f46-8ac2-24ad99e97649",
      ResourceVersion: (string) (len=5) "26606",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854007,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "f87d7de4-0251-42cb-9f85-1e2d772834ed",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  37 64 37 64 65 34 2d 30  |d\":\"f87d7de4-0|
              00000090  32 35 31 2d 34 32 63 62  2d 39 66 38 35 2d 31 65  |251-42cb-9f85-1e|
              000000a0  32 64 37 37 32 38 33 34  65 64 5c 22 7d 22 3a 7b  |2d772834ed\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hz7kx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hz7kx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1203 20:20:07.602855 23 deployment.go:67] Pod "webserver-deployment-77db57d8df-cqht7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-cqht7",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4375",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cdf5a71c-f270-48a8-a916-ceaebfc2e64f",
      ResourceVersion: (string) (len=5) "26611",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854007,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "f87d7de4-0251-42cb-9f85-1e2d772834ed",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  37 64 37 64 65 34 2d 30  |d\":\"f87d7de4-0|
              00000090  32 35 31 2d 34 32 63 62  2d 39 66 38 35 2d 31 65  |251-42cb-9f85-1e|
              000000a0  32 64 37 37 32 38 33 34  65 64 5c 22 7d 22 3a 7b  |2d772834ed\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4xp49",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4xp49",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea17",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1203 20:20:07.604352 23 deployment.go:67] Pod "webserver-deployment-77db57d8df-cz5gm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-cz5gm",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4375",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "10f46cf9-d888-421e-932d-ff4751c69bf8",
      ResourceVersion: (string) (len=5) "26604",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854007,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "f87d7de4-0251-42cb-9f85-1e2d772834ed",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  37 64 37 64 65 34 2d 30  |d\":\"f87d7de4-0|
              00000090  32 35 31 2d 34 32 63 62  2d 39 66 38 35 2d 31 65  |251-42cb-9f85-1e|
              000000a0  32 64 37 37 32 38 33 34  65 64 5c 22 7d 22 3a 7b  |2d772834ed\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rll6w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rll6w",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1203 20:20:07.605754 23 deployment.go:67] Pod "webserver-deployment-77db57d8df-j5ggj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-j5ggj",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4375",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d6a3aa09-e521-446d-a92d-af4cae31e8e8",
      ResourceVersion: (string) (len=5) "26602",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854007,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "f87d7de4-0251-42cb-9f85-1e2d772834ed",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  37 64 37 64 65 34 2d 30  |d\":\"f87d7de4-0|
              00000090  32 35 31 2d 34 32 63 62  2d 39 66 38 35 2d 31 65  |251-42cb-9f85-1e|
              000000a0  32 64 37 37 32 38 33 34  65 64 5c 22 7d 22 3a 7b  |2d772834ed\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lkjbj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lkjbj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854007,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1203 20:20:07.607393 23 deployment.go:67] Pod "webserver-deployment-77db57d8df-kgts5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-kgts5",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4375",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9a7142f6-933a-488f-9b6d-a598bd9d32f7",
      ResourceVersion: (string) (len=5) "26486",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854003,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "f87d7de4-0251-42cb-9f85-1e2d772834ed",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854003,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  37 64 37 64 65 34 2d 30  |d\":\"f87d7de4-0|
              00000090  32 35 31 2d 34 32 63 62  2d 39 66 38 35 2d 31 65  |251-42cb-9f85-1e|
              000000a0  32 64 37 37 32 38 33 34  65 64 5c 22 7d 22 3a 7b  |2d772834ed\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854004,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  33 33 5c 22 7d 22 3a 7b  |.244.1.133\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l5zn5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l5zn5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea17",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854004,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854003,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854004,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854004,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854003,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.100.37",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.100.37"
        }
      },
      PodIP: (string) (len=12) "10.244.1.133",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.133"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854003,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63868854004,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://5e171b13201b70bb2f7098ece752002f06752df83f42b8b7b59760f8baf455a0",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1203 20:20:07.610084 23 deployment.go:67] Pod "webserver-deployment-77db57d8df-nj2nr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-nj2nr",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4375",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fbd59cfe-6b4d-493a-8d85-f1a11b74a846",
      ResourceVersion: (string) (len=5) "26500",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854003,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "f87d7de4-0251-42cb-9f85-1e2d772834ed",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854003,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  37 64 37 64 65 34 2d 30  |d\":\"f87d7de4-0|
              00000090  32 35 31 2d 34 32 63 62  2d 39 66 38 35 2d 31 65  |251-42cb-9f85-1e|
              000000a0  32 64 37 37 32 38 33 34  65 64 5c 22 7d 22 3a 7b  |2d772834ed\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854004,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 32 2e 32  30 33 5c 22 7d 22 3a 7b  |.244.2.203\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pc72v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pc72v",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854004,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854003,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854004,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854004,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854003,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.114",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.100.114"
        }
      },
      PodIP: (string) (len=12) "10.244.2.203",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.2.203"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854003,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63868854004,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://ce19a137310fd0793b3bfb0e35b09029017da20868388ab8226bf49e3e214f2d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1203 20:20:07.612503 23 deployment.go:67] Pod "webserver-deployment-77db57d8df-p8vwv" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-p8vwv",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4375",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1d3ef598-90c7-45cf-a8f5-b9abd4f11c32",
      ResourceVersion: (string) (len=5) "26489",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854003,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "f87d7de4-0251-42cb-9f85-1e2d772834ed",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854003,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  37 64 37 64 65 34 2d 30  |d\":\"f87d7de4-0|
              00000090  32 35 31 2d 34 32 63 62  2d 39 66 38 35 2d 31 65  |251-42cb-9f85-1e|
              000000a0  32 64 37 37 32 38 33 34  65 64 5c 22 7d 22 3a 7b  |2d772834ed\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854004,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  33 32 5c 22 7d 22 3a 7b  |.244.1.132\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jcbw7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jcbw7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea17",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854004,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854003,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854004,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854004,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854003,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.100.37",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.100.37"
        }
      },
      PodIP: (string) (len=12) "10.244.1.132",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.132"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854003,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63868854004,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://82b0630efcc55eff894ac2dc4e1d2ab020075e499453e1533f7f799b42ab80aa",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1203 20:20:07.615004 23 deployment.go:67] Pod "webserver-deployment-77db57d8df-sx2vf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-sx2vf",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4375",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "161524c6-c948-4491-8b4f-8b9ba8834f03",
      ResourceVersion: (string) (len=5) "26502",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854003,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "f87d7de4-0251-42cb-9f85-1e2d772834ed",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854003,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  37 64 37 64 65 34 2d 30  |d\":\"f87d7de4-0|
              00000090  32 35 31 2d 34 32 63 62  2d 39 66 38 35 2d 31 65  |251-42cb-9f85-1e|
              000000a0  32 64 37 37 32 38 33 34  65 64 5c 22 7d 22 3a 7b  |2d772834ed\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854004,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 32 2e 32  30 34 5c 22 7d 22 3a 7b  |.244.2.204\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-88bnl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-88bnl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854004,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854003,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854004,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854004,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854003,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.114",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.100.114"
        }
      },
      PodIP: (string) (len=12) "10.244.2.204",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.2.204"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854003,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63868854004,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://09e6eda85c6b9d7c8c7fd52e19004289f3baba001d6b0b81050bd58549c1b810",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1203 20:20:07.617527 23 deployment.go:67] Pod "webserver-deployment-77db57d8df-z6cbg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-z6cbg",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4375",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "61621fb0-ab2b-470d-a120-a2f0ae9a887e",
      ResourceVersion: (string) (len=5) "26493",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854003,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "f87d7de4-0251-42cb-9f85-1e2d772834ed",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854003,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  37 64 37 64 65 34 2d 30  |d\":\"f87d7de4-0|
              00000090  32 35 31 2d 34 32 63 62  2d 39 66 38 35 2d 31 65  |251-42cb-9f85-1e|
              000000a0  32 64 37 37 32 38 33 34  65 64 5c 22 7d 22 3a 7b  |2d772834ed\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854004,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  33 34 5c 22 7d 22 3a 7b  |.244.1.134\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fzlvz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fzlvz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea17",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854004,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854003,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854004,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854004,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854003,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.100.37",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.100.37"
        }
      },
      PodIP: (string) (len=12) "10.244.1.134",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.134"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854003,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63868854004,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://755d3a431977a7da57abceea749357041dba81e77ee68a8a0c11032471db83bb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1203 20:20:07.619670 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4375" for this suite. @ 12/03/24 20:20:07.626
• [4.230 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 12/03/24 20:20:07.636
  I1203 20:20:07.637049 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename cronjob @ 12/03/24 20:20:07.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:20:07.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:20:07.652
  STEP: Creating a cronjob @ 12/03/24 20:20:07.655
  STEP: Ensuring more than one job is running at a time @ 12/03/24 20:20:07.66
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 12/03/24 20:22:01.666
  STEP: Removing cronjob @ 12/03/24 20:22:01.67
  I1203 20:22:01.676534 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4467" for this suite. @ 12/03/24 20:22:01.68
• [114.051 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:341
  STEP: Creating a kubernetes client @ 12/03/24 20:22:01.688
  I1203 20:22:01.688698 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename cronjob @ 12/03/24 20:22:01.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:22:01.702
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:22:01.707
  STEP: Creating a cronjob @ 12/03/24 20:22:01.711
  STEP: creating @ 12/03/24 20:22:01.711
  STEP: getting @ 12/03/24 20:22:01.719
  STEP: listing @ 12/03/24 20:22:01.722
  STEP: watching @ 12/03/24 20:22:01.729
  I1203 20:22:01.729393 23 cronjob.go:370] starting watch
  STEP: cluster-wide listing @ 12/03/24 20:22:01.731
  STEP: cluster-wide watching @ 12/03/24 20:22:01.735
  I1203 20:22:01.735091 23 cronjob.go:382] starting watch
  STEP: patching @ 12/03/24 20:22:01.736
  STEP: updating @ 12/03/24 20:22:01.743
  I1203 20:22:01.752855 23 cronjob.go:406] waiting for watch events with expected annotations
  I1203 20:22:01.752936 23 cronjob.go:420] saw patched and updated annotations
  STEP: patching /status @ 12/03/24 20:22:01.753
  STEP: updating /status @ 12/03/24 20:22:01.76
  STEP: get /status @ 12/03/24 20:22:01.768
  STEP: deleting @ 12/03/24 20:22:01.772
  STEP: deleting a collection @ 12/03/24 20:22:01.785
  I1203 20:22:01.794286 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5285" for this suite. @ 12/03/24 20:22:01.798
• [0.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 12/03/24 20:22:01.805
  I1203 20:22:01.805179 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename container-runtime @ 12/03/24 20:22:01.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:22:01.817
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:22:01.821
  STEP: create the container @ 12/03/24 20:22:01.825
  W1203 20:22:01.834303      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 12/03/24 20:22:01.834
  STEP: get the container status @ 12/03/24 20:22:04.853
  STEP: the container should be terminated @ 12/03/24 20:22:04.856
  STEP: the termination message should be set @ 12/03/24 20:22:04.856
  I1203 20:22:04.856594 23 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 12/03/24 20:22:04.856
  I1203 20:22:04.871567 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3497" for this suite. @ 12/03/24 20:22:04.876
• [3.077 seconds]
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 12/03/24 20:22:04.882
  I1203 20:22:04.882150 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename secrets @ 12/03/24 20:22:04.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:22:04.894
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:22:04.898
  STEP: Creating secret with name secret-test-3624e52e-a836-4f95-8040-7dc59dbd212a @ 12/03/24 20:22:04.903
  STEP: Creating a pod to test consume secrets @ 12/03/24 20:22:04.907
  STEP: Saw pod success @ 12/03/24 20:22:08.929
  I1203 20:22:08.933562 23 output.go:196] Trying to get logs from node nodea17 pod pod-secrets-db8d2b59-5041-4fc6-b367-35d33607596e container secret-volume-test: <nil>
  STEP: delete the pod @ 12/03/24 20:22:08.951
  I1203 20:22:08.967319 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7009" for this suite. @ 12/03/24 20:22:08.972
• [4.096 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 12/03/24 20:22:08.977
  I1203 20:22:08.977921 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename aggregateddiscovery @ 12/03/24 20:22:08.978
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:22:08.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:22:08.992
  I1203 20:22:09.002285 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-3077" for this suite. @ 12/03/24 20:22:09.006
• [0.034 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 12/03/24 20:22:09.011
  I1203 20:22:09.011916 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/03/24 20:22:09.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:22:09.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:22:09.028
  STEP: create the container to handle the HTTPGet hook request. @ 12/03/24 20:22:09.036
  STEP: create the pod with lifecycle hook @ 12/03/24 20:22:11.058
  STEP: delete the pod with lifecycle hook @ 12/03/24 20:22:13.081
  STEP: check prestop hook @ 12/03/24 20:22:15.098
  I1203 20:22:15.119026 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5445" for this suite. @ 12/03/24 20:22:15.124
• [6.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1793
  STEP: Creating a kubernetes client @ 12/03/24 20:22:15.132
  I1203 20:22:15.132421 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename kubectl @ 12/03/24 20:22:15.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:22:15.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:22:15.153
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/03/24 20:22:15.157
  I1203 20:22:15.158160 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-5753 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I1203 20:22:15.254057 23 builder.go:146] stderr: ""
  I1203 20:22:15.254124 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 12/03/24 20:22:15.254
  STEP: verifying the pod e2e-test-httpd-pod was created @ 12/03/24 20:22:20.305
  I1203 20:22:20.305588 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-5753 get pod e2e-test-httpd-pod -o json'
  I1203 20:22:20.395864 23 builder.go:146] stderr: ""
  I1203 20:22:20.396068 23 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-12-03T20:22:15Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-5753\",\n        \"resourceVersion\": \"27274\",\n        \"uid\": \"38f22f1c-2d1d-4a36-ab72-3e0425113c31\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-c8dhl\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"nodea17\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-c8dhl\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-12-03T20:22:15Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-12-03T20:22:15Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-12-03T20:22:15Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-12-03T20:22:15Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-12-03T20:22:15Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://5e9801533b747bcd6ae03ac899160ef98367fbca59b4474adaa86451a7b137b9\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-12-03T20:22:15Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"192.168.100.37\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"192.168.100.37\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.244.1.142\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.244.1.142\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-12-03T20:22:15Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 12/03/24 20:22:20.396
  I1203 20:22:20.396239 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-5753 replace -f -'
  I1203 20:22:20.590712 23 builder.go:146] stderr: ""
  I1203 20:22:20.590797 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 12/03/24 20:22:20.59
  I1203 20:22:20.594649 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-5753 delete pods e2e-test-httpd-pod'
  I1203 20:22:22.046862 23 builder.go:146] stderr: ""
  I1203 20:22:22.046942 23 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1203 20:22:22.047119 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5753" for this suite. @ 12/03/24 20:22:22.052
• [6.928 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 12/03/24 20:22:22.06
  I1203 20:22:22.060712 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename emptydir @ 12/03/24 20:22:22.061
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:22:22.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:22:22.077
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 12/03/24 20:22:22.081
  STEP: Saw pod success @ 12/03/24 20:22:26.105
  I1203 20:22:26.109068 23 output.go:196] Trying to get logs from node nodea17 pod pod-d1a04e22-ca3e-4124-bad3-0c3fcc415972 container test-container: <nil>
  STEP: delete the pod @ 12/03/24 20:22:26.116
  I1203 20:22:26.131165 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6735" for this suite. @ 12/03/24 20:22:26.135
• [4.079 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 12/03/24 20:22:26.139
  I1203 20:22:26.139978 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename runtimeclass @ 12/03/24 20:22:26.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:22:26.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:22:26.156
  STEP: getting /apis @ 12/03/24 20:22:26.16
  STEP: getting /apis/node.k8s.io @ 12/03/24 20:22:26.166
  STEP: getting /apis/node.k8s.io/v1 @ 12/03/24 20:22:26.168
  STEP: creating @ 12/03/24 20:22:26.17
  STEP: watching @ 12/03/24 20:22:26.184
  I1203 20:22:26.184435 23 runtimeclass.go:275] starting watch
  STEP: getting @ 12/03/24 20:22:26.192
  STEP: listing @ 12/03/24 20:22:26.195
  STEP: patching @ 12/03/24 20:22:26.198
  STEP: updating @ 12/03/24 20:22:26.203
  I1203 20:22:26.207976 23 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 12/03/24 20:22:26.208
  STEP: deleting a collection @ 12/03/24 20:22:26.218
  I1203 20:22:26.236687 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-673" for this suite. @ 12/03/24 20:22:26.24
• [0.107 seconds]
------------------------------
S
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 12/03/24 20:22:26.246
  I1203 20:22:26.246715 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename secrets @ 12/03/24 20:22:26.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:22:26.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:22:26.264
  STEP: creating a secret @ 12/03/24 20:22:26.268
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 12/03/24 20:22:26.272
  STEP: patching the secret @ 12/03/24 20:22:26.276
  STEP: deleting the secret using a LabelSelector @ 12/03/24 20:22:26.288
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 12/03/24 20:22:26.296
  I1203 20:22:26.299418 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8642" for this suite. @ 12/03/24 20:22:26.303
• [0.062 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1497
  STEP: Creating a kubernetes client @ 12/03/24 20:22:26.308
  I1203 20:22:26.308661 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename services @ 12/03/24 20:22:26.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:22:26.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:22:26.325
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-8200 @ 12/03/24 20:22:26.33
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 12/03/24 20:22:26.343
  STEP: creating service externalsvc in namespace services-8200 @ 12/03/24 20:22:26.343
  STEP: creating replication controller externalsvc in namespace services-8200 @ 12/03/24 20:22:26.371
  I1203 20:22:26.377491      23 runners.go:198] Created replication controller with name: externalsvc, namespace: services-8200, replica count: 2
  I1203 20:22:29.429706      23 runners.go:198] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 12/03/24 20:22:29.434
  I1203 20:22:29.455460 23 resource.go:361] Creating new exec pod
  I1203 20:22:31.473910 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-8200 exec execpodlw8wj -- /bin/sh -x -c nslookup clusterip-service.services-8200.svc.cluster.local'
  I1203 20:22:31.668620 23 builder.go:146] stderr: "+ nslookup clusterip-service.services-8200.svc.cluster.local\n"
  I1203 20:22:31.668714 23 builder.go:147] stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nclusterip-service.services-8200.svc.cluster.local\tcanonical name = externalsvc.services-8200.svc.cluster.local.\nName:\texternalsvc.services-8200.svc.cluster.local\nAddress: 10.96.13.8\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-8200, will wait for the garbage collector to delete the pods @ 12/03/24 20:22:31.669
  I1203 20:22:31.730967 23 resources.go:139] Deleting ReplicationController externalsvc took: 6.733717ms
  I1203 20:22:31.831184 23 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.204676ms
  I1203 20:22:35.460865 23 service.go:1506] Cleaning up the ClusterIP to ExternalName test service
  I1203 20:22:35.469922 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8200" for this suite. @ 12/03/24 20:22:35.475
• [9.174 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 12/03/24 20:22:35.482
  I1203 20:22:35.482856 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename container-runtime @ 12/03/24 20:22:35.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:22:35.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:22:35.502
  STEP: create the container @ 12/03/24 20:22:35.508
  W1203 20:22:35.518264      23 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 12/03/24 20:22:35.518
  STEP: get the container status @ 12/03/24 20:22:38.539
  STEP: the container should be terminated @ 12/03/24 20:22:38.543
  STEP: the termination message should be set @ 12/03/24 20:22:38.543
  I1203 20:22:38.543353 23 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 12/03/24 20:22:38.543
  I1203 20:22:38.558928 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5935" for this suite. @ 12/03/24 20:22:38.564
• [3.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 12/03/24 20:22:38.571
  I1203 20:22:38.571963 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/03/24 20:22:38.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:22:38.585
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:22:38.59
  I1203 20:22:38.595292 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  I1203 20:22:39.149622 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2108" for this suite. @ 12/03/24 20:22:39.155
• [0.599 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 12/03/24 20:22:39.171
  I1203 20:22:39.171385 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename sched-preemption @ 12/03/24 20:22:39.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:22:39.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:22:39.189
  I1203 20:22:39.205383 23 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1203 20:23:39.213861 23 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 12/03/24 20:23:39.217
  I1203 20:23:39.217906 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename sched-preemption-path @ 12/03/24 20:23:39.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:23:39.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:23:39.239
  I1203 20:23:39.261968 23 preemption.go:818] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I1203 20:23:39.265525 23 preemption.go:824] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  I1203 20:23:39.331030 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-5331" for this suite. @ 12/03/24 20:23:39.334
  I1203 20:23:39.338986 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2503" for this suite. @ 12/03/24 20:23:39.342
• [60.175 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 12/03/24 20:23:39.346
  I1203 20:23:39.346914 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename limitrange @ 12/03/24 20:23:39.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:23:39.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:23:39.367
  STEP: Creating LimitRange "e2e-limitrange-twzpt" in namespace "limitrange-9673" @ 12/03/24 20:23:39.371
  STEP: Creating another limitRange in another namespace @ 12/03/24 20:23:39.375
  I1203 20:23:39.387339 23 limit_range.go:299] Namespace "e2e-limitrange-twzpt-7849" created
  I1203 20:23:39.387393 23 limit_range.go:300] Creating LimitRange "e2e-limitrange-twzpt" in namespace "e2e-limitrange-twzpt-7849"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-twzpt" @ 12/03/24 20:23:39.391
  I1203 20:23:39.394723 23 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-twzpt" in "limitrange-9673" namespace @ 12/03/24 20:23:39.394
  I1203 20:23:39.403821 23 limit_range.go:335] LimitRange "e2e-limitrange-twzpt" has been patched
  STEP: Delete LimitRange "e2e-limitrange-twzpt" by Collection with labelSelector: "e2e-limitrange-twzpt=patched" @ 12/03/24 20:23:39.403
  STEP: Confirm that the limitRange "e2e-limitrange-twzpt" has been deleted @ 12/03/24 20:23:39.41
  I1203 20:23:39.410140 23 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I1203 20:23:39.412930 23 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-twzpt=patched"
  I1203 20:23:39.412992 23 limit_range.go:344] LimitRange "e2e-limitrange-twzpt" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-twzpt" @ 12/03/24 20:23:39.413
  I1203 20:23:39.418630 23 limit_range.go:350] Found 1 limitRange
  I1203 20:23:39.418777 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-9673" for this suite. @ 12/03/24 20:23:39.422
  STEP: Destroying namespace "e2e-limitrange-twzpt-7849" for this suite. @ 12/03/24 20:23:39.427
• [0.192 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:348
  STEP: Creating a kubernetes client @ 12/03/24 20:23:39.538
  I1203 20:23:39.538993 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename disruption @ 12/03/24 20:23:39.54
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:23:39.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:23:39.558
  STEP: Creating a pdb that targets all three pods in a test replica set @ 12/03/24 20:23:39.563
  STEP: Waiting for the pdb to be processed @ 12/03/24 20:23:39.568
  STEP: First trying to evict a pod which shouldn't be evictable @ 12/03/24 20:23:41.583
  STEP: Waiting for all pods to be running @ 12/03/24 20:23:41.583
  I1203 20:23:41.587257 23 disruption.go:567] pods: 0 < 3
  STEP: locating a running pod @ 12/03/24 20:23:43.59
  STEP: Updating the pdb to allow a pod to be evicted @ 12/03/24 20:23:43.603
  STEP: Waiting for the pdb to be processed @ 12/03/24 20:23:43.613
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 12/03/24 20:23:45.619
  STEP: Waiting for all pods to be running @ 12/03/24 20:23:45.619
  STEP: Waiting for the pdb to observed all healthy pods @ 12/03/24 20:23:45.624
  STEP: Patching the pdb to disallow a pod to be evicted @ 12/03/24 20:23:45.648
  STEP: Waiting for the pdb to be processed @ 12/03/24 20:23:45.678
  STEP: Waiting for all pods to be running @ 12/03/24 20:23:47.685
  STEP: locating a running pod @ 12/03/24 20:23:47.69
  STEP: Deleting the pdb to allow a pod to be evicted @ 12/03/24 20:23:47.7
  STEP: Waiting for the pdb to be deleted @ 12/03/24 20:23:47.706
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 12/03/24 20:23:47.709
  STEP: Waiting for all pods to be running @ 12/03/24 20:23:47.709
  I1203 20:23:47.723531 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9058" for this suite. @ 12/03/24 20:23:47.727
• [8.194 seconds]
------------------------------
S
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 12/03/24 20:23:47.733
  I1203 20:23:47.733191 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/03/24 20:23:47.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:23:47.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:23:47.75
  STEP: create the container to handle the HTTPGet hook request. @ 12/03/24 20:23:47.757
  STEP: create the pod with lifecycle hook @ 12/03/24 20:23:49.776
  STEP: check poststart hook @ 12/03/24 20:23:51.798
  STEP: delete the pod with lifecycle hook @ 12/03/24 20:23:51.822
  I1203 20:23:55.843305 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7057" for this suite. @ 12/03/24 20:23:55.849
• [8.124 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1459
  STEP: Creating a kubernetes client @ 12/03/24 20:23:55.858
  I1203 20:23:55.858097 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename services @ 12/03/24 20:23:55.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:23:55.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:23:55.877
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-1703 @ 12/03/24 20:23:55.881
  STEP: changing the ExternalName service to type=NodePort @ 12/03/24 20:23:55.887
  STEP: creating replication controller externalname-service in namespace services-1703 @ 12/03/24 20:23:55.908
  I1203 20:23:55.914072      23 runners.go:198] Created replication controller with name: externalname-service, namespace: services-1703, replica count: 2
  I1203 20:23:58.966316      23 runners.go:198] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1203 20:23:58.966439 23 resource.go:361] Creating new exec pod
  I1203 20:24:02.038865 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-1703 exec execpodb8j5f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1203 20:24:02.210242 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I1203 20:24:02.210330 23 builder.go:147] stdout: "externalname-service-b22w8"
  I1203 20:24:02.210493 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-1703 exec execpodb8j5f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.98.227.190 80'
  I1203 20:24:02.374050 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.98.227.190 80\nConnection to 10.98.227.190 80 port [tcp/http] succeeded!\n"
  I1203 20:24:02.374134 23 builder.go:147] stdout: ""
  I1203 20:24:03.211634 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-1703 exec execpodb8j5f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.98.227.190 80'
  I1203 20:24:03.382285 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.98.227.190 80\nConnection to 10.98.227.190 80 port [tcp/http] succeeded!\n"
  I1203 20:24:03.382374 23 builder.go:147] stdout: ""
  I1203 20:24:04.211356 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-1703 exec execpodb8j5f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.98.227.190 80'
  I1203 20:24:04.378347 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.98.227.190 80\nConnection to 10.98.227.190 80 port [tcp/http] succeeded!\n"
  I1203 20:24:04.378415 23 builder.go:147] stdout: "externalname-service-b22w8"
  I1203 20:24:04.378548 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-1703 exec execpodb8j5f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.37 31052'
  I1203 20:24:04.542744 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.37 31052\nConnection to 192.168.100.37 31052 port [tcp/*] succeeded!\n"
  I1203 20:24:04.542827 23 builder.go:147] stdout: "externalname-service-b22w8"
  I1203 20:24:04.542951 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-1703 exec execpodb8j5f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.114 31052'
  I1203 20:24:04.699720 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.114 31052\nConnection to 192.168.100.114 31052 port [tcp/*] succeeded!\n"
  I1203 20:24:04.699804 23 builder.go:147] stdout: ""
  I1203 20:24:05.543293 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-1703 exec execpodb8j5f -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.100.114 31052'
  I1203 20:24:05.708353 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.100.114 31052\nConnection to 192.168.100.114 31052 port [tcp/*] succeeded!\n"
  I1203 20:24:05.708435 23 builder.go:147] stdout: "externalname-service-cq696"
  I1203 20:24:05.708592 23 service.go:1468] Cleaning up the ExternalName to NodePort test service
  I1203 20:24:05.735856 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1703" for this suite. @ 12/03/24 20:24:05.74
• [9.888 seconds]
------------------------------
SS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 12/03/24 20:24:05.746
  I1203 20:24:05.746163 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename csistoragecapacity @ 12/03/24 20:24:05.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:24:05.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:24:05.763
  STEP: getting /apis @ 12/03/24 20:24:05.768
  STEP: getting /apis/storage.k8s.io @ 12/03/24 20:24:05.775
  STEP: getting /apis/storage.k8s.io/v1 @ 12/03/24 20:24:05.777
  STEP: creating @ 12/03/24 20:24:05.779
  STEP: watching @ 12/03/24 20:24:05.795
  I1203 20:24:05.795993 23 csistoragecapacity.go:143] starting watch
  STEP: getting @ 12/03/24 20:24:05.803
  STEP: listing in namespace @ 12/03/24 20:24:05.807
  STEP: listing across namespaces @ 12/03/24 20:24:05.811
  STEP: patching @ 12/03/24 20:24:05.816
  STEP: updating @ 12/03/24 20:24:05.822
  I1203 20:24:05.826196 23 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I1203 20:24:05.826364 23 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 12/03/24 20:24:05.826
  STEP: deleting a collection @ 12/03/24 20:24:05.84
  I1203 20:24:05.852956 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-7375" for this suite. @ 12/03/24 20:24:05.857
• [0.120 seconds]
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 12/03/24 20:24:05.866
  I1203 20:24:05.866629 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename tables @ 12/03/24 20:24:05.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:24:05.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:24:05.886
  I1203 20:24:05.894988 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-379" for this suite. @ 12/03/24 20:24:05.899
• [0.039 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 12/03/24 20:24:05.905
  I1203 20:24:05.905913 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename projected @ 12/03/24 20:24:05.906
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:24:05.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:24:05.922
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-d7cc2c63-4396-4960-988c-22558232f7fb @ 12/03/24 20:24:05.932
  STEP: Creating the pod @ 12/03/24 20:24:05.937
  STEP: Updating configmap projected-configmap-test-upd-d7cc2c63-4396-4960-988c-22558232f7fb @ 12/03/24 20:24:07.976
  STEP: waiting to observe update in volume @ 12/03/24 20:24:07.982
  I1203 20:25:18.361566 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7792" for this suite. @ 12/03/24 20:25:18.367
• [72.468 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 12/03/24 20:25:18.374
  I1203 20:25:18.374817 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename webhook @ 12/03/24 20:25:18.376
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:25:18.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:25:18.395
  STEP: Setting up server cert @ 12/03/24 20:25:18.415
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/03/24 20:25:19.193
  STEP: Deploying the webhook pod @ 12/03/24 20:25:19.203
  STEP: Wait for the deployment to be ready @ 12/03/24 20:25:19.217
  I1203 20:25:19.225553 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/03/24 20:25:21.238
  STEP: Verifying the service has paired with the endpoint @ 12/03/24 20:25:21.253
  I1203 20:25:22.254062 23 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1203 20:25:22.262754 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2989-crds.webhook.example.com via the AdmissionRegistration API @ 12/03/24 20:25:22.776
  STEP: Creating a custom resource that should be mutated by the webhook @ 12/03/24 20:25:22.798
  I1203 20:25:25.408717 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1991" for this suite. @ 12/03/24 20:25:25.414
  STEP: Destroying namespace "webhook-markers-5783" for this suite. @ 12/03/24 20:25:25.42
• [7.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 12/03/24 20:25:25.428
  I1203 20:25:25.428962 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename configmap @ 12/03/24 20:25:25.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:25:25.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:25:25.447
  STEP: Creating configMap with name configmap-test-volume-map-ebc38ccf-bdd6-497d-ad5d-270090c2bab8 @ 12/03/24 20:25:25.452
  STEP: Creating a pod to test consume configMaps @ 12/03/24 20:25:25.456
  STEP: Saw pod success @ 12/03/24 20:25:29.482
  I1203 20:25:29.486650 23 output.go:196] Trying to get logs from node nodea17 pod pod-configmaps-e27e7903-0fe2-4c98-820f-731366155d87 container agnhost-container: <nil>
  STEP: delete the pod @ 12/03/24 20:25:29.495
  I1203 20:25:29.513064 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7892" for this suite. @ 12/03/24 20:25:29.517
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 12/03/24 20:25:29.525
  I1203 20:25:29.525537 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename pods @ 12/03/24 20:25:29.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:25:29.542
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:25:29.546
  STEP: creating pod @ 12/03/24 20:25:29.55
  I1203 20:25:31.575914 23 pods.go:83] Pod pod-hostip-4eba5bcc-d6ed-4190-b282-3f207c146b3d has hostIP: 192.168.100.37
  I1203 20:25:31.576107 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6931" for this suite. @ 12/03/24 20:25:31.581
• [2.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:668
  STEP: Creating a kubernetes client @ 12/03/24 20:25:31.588
  I1203 20:25:31.588234 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename job @ 12/03/24 20:25:31.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:25:31.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:25:31.614
  STEP: Creating a job @ 12/03/24 20:25:31.619
  STEP: Ensuring active pods == parallelism @ 12/03/24 20:25:31.625
  STEP: delete a job @ 12/03/24 20:25:33.632
  STEP: deleting Job.batch foo in namespace job-2594, will wait for the garbage collector to delete the pods @ 12/03/24 20:25:33.632
  I1203 20:25:33.693752 23 resources.go:139] Deleting Job.batch foo took: 6.468642ms
  I1203 20:25:33.794865 23 resources.go:163] Terminating Job.batch foo pods took: 101.086461ms
  STEP: Ensuring job was deleted @ 12/03/24 20:25:34.995
  I1203 20:25:35.000040 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2594" for this suite. @ 12/03/24 20:25:35.005
• [3.423 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:397
  STEP: Creating a kubernetes client @ 12/03/24 20:25:35.011
  I1203 20:25:35.011197 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename kubectl @ 12/03/24 20:25:35.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:25:35.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:25:35.03
  STEP: creating all guestbook components @ 12/03/24 20:25:35.034
  I1203 20:25:35.034783 23 kubectl.go:403] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I1203 20:25:35.034955 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-746 create -f -'
  I1203 20:25:35.229143 23 builder.go:146] stderr: ""
  I1203 20:25:35.229980 23 builder.go:147] stdout: "service/agnhost-replica created\n"
  I1203 20:25:35.230369 23 kubectl.go:403] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I1203 20:25:35.230626 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-746 create -f -'
  I1203 20:25:35.454558 23 builder.go:146] stderr: ""
  I1203 20:25:35.454654 23 builder.go:147] stdout: "service/agnhost-primary created\n"
  I1203 20:25:35.454744 23 kubectl.go:403] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I1203 20:25:35.454961 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-746 create -f -'
  I1203 20:25:35.674217 23 builder.go:146] stderr: ""
  I1203 20:25:35.674302 23 builder.go:147] stdout: "service/frontend created\n"
  I1203 20:25:35.674455 23 kubectl.go:403] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I1203 20:25:35.674726 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-746 create -f -'
  I1203 20:25:35.815949 23 builder.go:146] stderr: ""
  I1203 20:25:35.816024 23 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I1203 20:25:35.816119 23 kubectl.go:403] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I1203 20:25:35.816320 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-746 create -f -'
  I1203 20:25:35.956153 23 builder.go:146] stderr: ""
  I1203 20:25:35.956250 23 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I1203 20:25:35.956379 23 kubectl.go:403] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I1203 20:25:35.956648 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-746 create -f -'
  I1203 20:25:36.098152 23 builder.go:146] stderr: ""
  I1203 20:25:36.098267 23 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 12/03/24 20:25:36.098
  I1203 20:25:36.098373 23 kubectl.go:2271] Waiting for all frontend pods to be Running.
  I1203 20:25:41.149116 23 kubectl.go:2275] Waiting for frontend to serve content.
  I1203 20:25:41.165394 23 kubectl.go:2280] Trying to add a new entry to the guestbook.
  I1203 20:25:41.182079 23 kubectl.go:2285] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 12/03/24 20:25:41.193
  I1203 20:25:41.193561 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-746 delete --grace-period=0 --force -f -'
  I1203 20:25:41.307263 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1203 20:25:41.307370 23 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 12/03/24 20:25:41.307
  I1203 20:25:41.307798 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-746 delete --grace-period=0 --force -f -'
  I1203 20:25:41.413175 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1203 20:25:41.413248 23 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 12/03/24 20:25:41.413
  I1203 20:25:41.413499 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-746 delete --grace-period=0 --force -f -'
  I1203 20:25:41.527949 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1203 20:25:41.528007 23 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 12/03/24 20:25:41.528
  I1203 20:25:41.528214 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-746 delete --grace-period=0 --force -f -'
  I1203 20:25:41.622429 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1203 20:25:41.622496 23 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 12/03/24 20:25:41.622
  I1203 20:25:41.622741 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-746 delete --grace-period=0 --force -f -'
  I1203 20:25:41.726272 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1203 20:25:41.726352 23 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 12/03/24 20:25:41.726
  I1203 20:25:41.726593 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-746 delete --grace-period=0 --force -f -'
  I1203 20:25:41.816495 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1203 20:25:41.816571 23 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I1203 20:25:41.816792 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-746" for this suite. @ 12/03/24 20:25:41.835
• [6.843 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 12/03/24 20:25:41.854
  I1203 20:25:41.854738 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename downward-api @ 12/03/24 20:25:41.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:25:41.87
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:25:41.873
  STEP: Creating a pod to test downward API volume plugin @ 12/03/24 20:25:41.877
  STEP: Saw pod success @ 12/03/24 20:25:45.9
  I1203 20:25:45.904357 23 output.go:196] Trying to get logs from node nodea17 pod downwardapi-volume-1ad262fd-3d1e-405e-8249-d25d4c1b7eaa container client-container: <nil>
  STEP: delete the pod @ 12/03/24 20:25:45.912
  I1203 20:25:45.928305 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8453" for this suite. @ 12/03/24 20:25:45.933
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 12/03/24 20:25:45.938
  I1203 20:25:45.939000 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename daemonsets @ 12/03/24 20:25:45.94
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:25:45.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:25:45.96
  STEP: Creating a simple DaemonSet "daemon-set" @ 12/03/24 20:25:45.981
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/03/24 20:25:45.986
  I1203 20:25:45.991363 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1203 20:25:46.000151 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1203 20:25:46.000518 23 fixtures.go:130] Node nodea17 is running 0 daemon pod, expected 1
  I1203 20:25:46.993288 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1203 20:25:46.996723 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1203 20:25:46.996793 23 fixtures.go:130] Node nodeb14 is running 0 daemon pod, expected 1
  I1203 20:25:47.993639 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1203 20:25:47.997679 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1203 20:25:47.997950 23 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 12/03/24 20:25:48.001
  I1203 20:25:48.020581 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1203 20:25:48.024485 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1203 20:25:48.024712 23 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 12/03/24 20:25:48.024
  STEP: Deleting DaemonSet "daemon-set" @ 12/03/24 20:25:49.031
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-459, will wait for the garbage collector to delete the pods @ 12/03/24 20:25:49.031
  I1203 20:25:49.093352 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.272905ms
  I1203 20:25:49.194355 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.996367ms
  I1203 20:25:51.097811 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1203 20:25:51.097901 23 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1203 20:25:51.100757 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"28646"},"items":null}

  I1203 20:25:51.103591 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"28646"},"items":null}

  I1203 20:25:51.113488 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-459" for this suite. @ 12/03/24 20:25:51.117
• [5.186 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:335
  STEP: Creating a kubernetes client @ 12/03/24 20:25:51.125
  I1203 20:25:51.126079 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename statefulset @ 12/03/24 20:25:51.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:25:51.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:25:51.144
  STEP: Creating service test in namespace statefulset-8544 @ 12/03/24 20:25:51.148
  STEP: Creating a new StatefulSet @ 12/03/24 20:25:51.153
  I1203 20:25:51.165649 23 wait.go:40] Found 0 stateful pods, waiting for 3
  I1203 20:26:01.165289 23 wait.go:40] Found 1 stateful pods, waiting for 3
  I1203 20:26:11.167334 23 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1203 20:26:11.167411 23 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1203 20:26:11.167436 23 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 12/03/24 20:26:11.179
  I1203 20:26:11.190594 23 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 12/03/24 20:26:11.19
  STEP: Not applying an update when the partition is greater than the number of replicas @ 12/03/24 20:26:21.2
  STEP: Performing a canary update @ 12/03/24 20:26:21.201
  I1203 20:26:21.214126 23 statefulset.go:2507] Updating stateful set ss2
  I1203 20:26:21.221403 23 wait.go:74] Waiting for Pod statefulset-8544/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 12/03/24 20:26:31.225
  I1203 20:26:31.257920 23 wait.go:40] Found 2 stateful pods, waiting for 3
  I1203 20:26:41.259537 23 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1203 20:26:41.259636 23 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1203 20:26:41.259661 23 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 12/03/24 20:26:41.267
  I1203 20:26:41.277213 23 statefulset.go:2507] Updating stateful set ss2
  I1203 20:26:41.284118 23 wait.go:74] Waiting for Pod statefulset-8544/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I1203 20:26:51.295353 23 statefulset.go:2507] Updating stateful set ss2
  I1203 20:26:51.305011 23 wait.go:56] Waiting for StatefulSet statefulset-8544/ss2 to complete update
  I1203 20:26:51.305084 23 wait.go:63] Waiting for Pod statefulset-8544/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I1203 20:27:01.306174 23 statefulset.go:138] Deleting all statefulset in ns statefulset-8544
  I1203 20:27:01.309651 23 rest.go:150] Scaling statefulset ss2 to 0
  I1203 20:27:11.328042 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1203 20:27:11.331877 23 rest.go:88] Deleting statefulset ss2
  I1203 20:27:11.344411 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8544" for this suite. @ 12/03/24 20:27:11.351
• [80.232 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 12/03/24 20:27:11.358
  I1203 20:27:11.358260 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename emptydir @ 12/03/24 20:27:11.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:27:11.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:27:11.373
  STEP: Creating a pod to test emptydir volume type on node default medium @ 12/03/24 20:27:11.377
  STEP: Saw pod success @ 12/03/24 20:27:15.398
  I1203 20:27:15.402568 23 output.go:196] Trying to get logs from node nodea17 pod pod-a0d9cec6-f4ca-4374-a750-b003c9310e57 container test-container: <nil>
  STEP: delete the pod @ 12/03/24 20:27:15.409
  I1203 20:27:15.423511 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1675" for this suite. @ 12/03/24 20:27:15.428
• [4.076 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 12/03/24 20:27:15.435
  I1203 20:27:15.435293 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename secrets @ 12/03/24 20:27:15.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:27:15.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:27:15.453
  STEP: Creating secret with name secret-test-add82b72-ca89-49e0-ab5d-2d73ca366837 @ 12/03/24 20:27:15.457
  STEP: Creating a pod to test consume secrets @ 12/03/24 20:27:15.461
  STEP: Saw pod success @ 12/03/24 20:27:19.486
  I1203 20:27:19.490609 23 output.go:196] Trying to get logs from node nodea17 pod pod-secrets-cda22c90-ca11-4beb-a464-01b612b5a88f container secret-volume-test: <nil>
  STEP: delete the pod @ 12/03/24 20:27:19.499
  I1203 20:27:19.512545 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9190" for this suite. @ 12/03/24 20:27:19.517
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 12/03/24 20:27:19.524
  I1203 20:27:19.524098 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename field-validation @ 12/03/24 20:27:19.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:27:19.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:27:19.541
  STEP: apply creating a deployment @ 12/03/24 20:27:19.545
  I1203 20:27:19.559360 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8243" for this suite. @ 12/03/24 20:27:19.563
• [0.046 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 12/03/24 20:27:19.57
  I1203 20:27:19.570648 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename resourcequota @ 12/03/24 20:27:19.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:27:19.584
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:27:19.588
  STEP: Creating a ResourceQuota @ 12/03/24 20:27:19.592
  STEP: Getting a ResourceQuota @ 12/03/24 20:27:19.597
  STEP: Listing all ResourceQuotas with LabelSelector @ 12/03/24 20:27:19.601
  STEP: Patching the ResourceQuota @ 12/03/24 20:27:19.604
  STEP: Deleting a Collection of ResourceQuotas @ 12/03/24 20:27:19.61
  STEP: Verifying the deleted ResourceQuota @ 12/03/24 20:27:19.618
  I1203 20:27:19.620859 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6957" for this suite. @ 12/03/24 20:27:19.625
• [0.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 12/03/24 20:27:19.631
  I1203 20:27:19.632003 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename proxy @ 12/03/24 20:27:19.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:27:19.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:27:19.647
  STEP: starting an echo server on multiple ports @ 12/03/24 20:27:19.69
  STEP: creating replication controller proxy-service-clxtc in namespace proxy-3436 @ 12/03/24 20:27:19.69
  I1203 20:27:19.697478      23 runners.go:198] Created replication controller with name: proxy-service-clxtc, namespace: proxy-3436, replica count: 1
  I1203 20:27:20.749398      23 runners.go:198] proxy-service-clxtc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1203 20:27:21.749600      23 runners.go:198] proxy-service-clxtc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1203 20:27:21.754283 23 proxy.go:230] setup took 2.102037449s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 12/03/24 20:27:21.754
  I1203 20:27:21.763614 23 proxy.go:558] (0) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:160/proxy/: foo (200; 8.945028ms)
  I1203 20:27:21.763676 23 proxy.go:558] (0) /api/v1/namespaces/proxy-3436/services/http:proxy-service-clxtc:portname2/proxy/: bar (200; 8.99025ms)
  I1203 20:27:21.764283 23 proxy.go:558] (0) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:162/proxy/: bar (200; 9.540723ms)
  I1203 20:27:21.764283 23 proxy.go:558] (0) /api/v1/namespaces/proxy-3436/services/http:proxy-service-clxtc:portname1/proxy/: foo (200; 9.786172ms)
  I1203 20:27:21.764653 23 proxy.go:558] (0) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:160/proxy/: foo (200; 9.886449ms)
  I1203 20:27:21.765236 23 proxy.go:558] (0) /api/v1/namespaces/proxy-3436/services/proxy-service-clxtc:portname1/proxy/: foo (200; 10.441143ms)
  I1203 20:27:21.765328 23 proxy.go:558] (0) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:162/proxy/: bar (200; 10.54538ms)
  I1203 20:27:21.765797 23 proxy.go:558] (0) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:1080/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:1080/proxy/rewriteme">... (200; 11.102307ms)
  I1203 20:27:21.765814 23 proxy.go:558] (0) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:1080/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:1080/proxy/rewriteme">test<... (200; 11.189109ms)
  I1203 20:27:21.765805 23 proxy.go:558] (0) /api/v1/namespaces/proxy-3436/services/proxy-service-clxtc:portname2/proxy/: bar (200; 11.030097ms)
  I1203 20:27:21.768548 23 proxy.go:558] (0) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2/proxy/rewriteme">test</a> (200; 13.82938ms)
  I1203 20:27:21.773465 23 proxy.go:558] (0) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:462/proxy/: tls qux (200; 18.646379ms)
  I1203 20:27:21.773590 23 proxy.go:558] (0) /api/v1/namespaces/proxy-3436/services/https:proxy-service-clxtc:tlsportname2/proxy/: tls qux (200; 19.158047ms)
  I1203 20:27:21.775438 23 proxy.go:558] (0) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:443/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:443/proxy/tlsrewritem... (200; 20.840197ms)
  I1203 20:27:21.775943 23 proxy.go:558] (0) /api/v1/namespaces/proxy-3436/services/https:proxy-service-clxtc:tlsportname1/proxy/: tls baz (200; 21.218542ms)
  I1203 20:27:21.775948 23 proxy.go:558] (0) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:460/proxy/: tls baz (200; 21.200027ms)
  I1203 20:27:21.779514 23 proxy.go:558] (1) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:460/proxy/: tls baz (200; 3.491965ms)
  I1203 20:27:21.783772 23 proxy.go:558] (1) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:162/proxy/: bar (200; 7.575918ms)
  I1203 20:27:21.783796 23 proxy.go:558] (1) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:162/proxy/: bar (200; 7.611062ms)
  I1203 20:27:21.783811 23 proxy.go:558] (1) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:160/proxy/: foo (200; 7.60212ms)
  I1203 20:27:21.783840 23 proxy.go:558] (1) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:462/proxy/: tls qux (200; 7.54839ms)
  I1203 20:27:21.783859 23 proxy.go:558] (1) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2/proxy/rewriteme">test</a> (200; 7.745093ms)
  I1203 20:27:21.783856 23 proxy.go:558] (1) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:1080/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:1080/proxy/rewriteme">... (200; 7.563531ms)
  I1203 20:27:21.783913 23 proxy.go:558] (1) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:1080/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:1080/proxy/rewriteme">test<... (200; 7.58451ms)
  I1203 20:27:21.783923 23 proxy.go:558] (1) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:160/proxy/: foo (200; 7.75008ms)
  I1203 20:27:21.784431 23 proxy.go:558] (1) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:443/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:443/proxy/tlsrewritem... (200; 8.130264ms)
  I1203 20:27:21.784920 23 proxy.go:558] (1) /api/v1/namespaces/proxy-3436/services/http:proxy-service-clxtc:portname1/proxy/: foo (200; 8.891063ms)
  I1203 20:27:21.784957 23 proxy.go:558] (1) /api/v1/namespaces/proxy-3436/services/proxy-service-clxtc:portname1/proxy/: foo (200; 8.719436ms)
  I1203 20:27:21.784968 23 proxy.go:558] (1) /api/v1/namespaces/proxy-3436/services/https:proxy-service-clxtc:tlsportname1/proxy/: tls baz (200; 8.660674ms)
  I1203 20:27:21.785053 23 proxy.go:558] (1) /api/v1/namespaces/proxy-3436/services/http:proxy-service-clxtc:portname2/proxy/: bar (200; 8.856538ms)
  I1203 20:27:21.785090 23 proxy.go:558] (1) /api/v1/namespaces/proxy-3436/services/proxy-service-clxtc:portname2/proxy/: bar (200; 8.759229ms)
  I1203 20:27:21.785153 23 proxy.go:558] (1) /api/v1/namespaces/proxy-3436/services/https:proxy-service-clxtc:tlsportname2/proxy/: tls qux (200; 9.057139ms)
  I1203 20:27:21.791289 23 proxy.go:558] (2) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:460/proxy/: tls baz (200; 5.973223ms)
  I1203 20:27:21.791386 23 proxy.go:558] (2) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:160/proxy/: foo (200; 6.011384ms)
  I1203 20:27:21.791686 23 proxy.go:558] (2) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:1080/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:1080/proxy/rewriteme">test<... (200; 6.281214ms)
  I1203 20:27:21.791727 23 proxy.go:558] (2) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2/proxy/rewriteme">test</a> (200; 6.254755ms)
  I1203 20:27:21.791749 23 proxy.go:558] (2) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:162/proxy/: bar (200; 6.252802ms)
  I1203 20:27:21.791773 23 proxy.go:558] (2) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:162/proxy/: bar (200; 6.267337ms)
  I1203 20:27:21.791854 23 proxy.go:558] (2) /api/v1/namespaces/proxy-3436/services/proxy-service-clxtc:portname1/proxy/: foo (200; 6.447141ms)
  I1203 20:27:21.791888 23 proxy.go:558] (2) /api/v1/namespaces/proxy-3436/services/https:proxy-service-clxtc:tlsportname2/proxy/: tls qux (200; 6.436128ms)
  I1203 20:27:21.791904 23 proxy.go:558] (2) /api/v1/namespaces/proxy-3436/services/http:proxy-service-clxtc:portname1/proxy/: foo (200; 6.621853ms)
  I1203 20:27:21.791927 23 proxy.go:558] (2) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:462/proxy/: tls qux (200; 6.470777ms)
  I1203 20:27:21.791974 23 proxy.go:558] (2) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:443/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:443/proxy/tlsrewritem... (200; 6.499978ms)
  I1203 20:27:21.791977 23 proxy.go:558] (2) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:1080/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:1080/proxy/rewriteme">... (200; 6.54062ms)
  I1203 20:27:21.793237 23 proxy.go:558] (2) /api/v1/namespaces/proxy-3436/services/http:proxy-service-clxtc:portname2/proxy/: bar (200; 7.865579ms)
  I1203 20:27:21.793273 23 proxy.go:558] (2) /api/v1/namespaces/proxy-3436/services/https:proxy-service-clxtc:tlsportname1/proxy/: tls baz (200; 7.934016ms)
  I1203 20:27:21.793282 23 proxy.go:558] (2) /api/v1/namespaces/proxy-3436/services/proxy-service-clxtc:portname2/proxy/: bar (200; 7.816474ms)
  I1203 20:27:21.793447 23 proxy.go:558] (2) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:160/proxy/: foo (200; 7.98324ms)
  I1203 20:27:21.798786 23 proxy.go:558] (3) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:160/proxy/: foo (200; 5.124264ms)
  I1203 20:27:21.798969 23 proxy.go:558] (3) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:162/proxy/: bar (200; 5.429746ms)
  I1203 20:27:21.799024 23 proxy.go:558] (3) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:162/proxy/: bar (200; 5.523686ms)
  I1203 20:27:21.799078 23 proxy.go:558] (3) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2/proxy/rewriteme">test</a> (200; 5.446501ms)
  I1203 20:27:21.799085 23 proxy.go:558] (3) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:1080/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:1080/proxy/rewriteme">... (200; 5.392271ms)
  I1203 20:27:21.799116 23 proxy.go:558] (3) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:443/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:443/proxy/tlsrewritem... (200; 5.329385ms)
  I1203 20:27:21.799145 23 proxy.go:558] (3) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:462/proxy/: tls qux (200; 5.27935ms)
  I1203 20:27:21.799167 23 proxy.go:558] (3) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:160/proxy/: foo (200; 5.646932ms)
  I1203 20:27:21.799203 23 proxy.go:558] (3) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:460/proxy/: tls baz (200; 5.610106ms)
  I1203 20:27:21.799309 23 proxy.go:558] (3) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:1080/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:1080/proxy/rewriteme">test<... (200; 5.50258ms)
  I1203 20:27:21.800202 23 proxy.go:558] (3) /api/v1/namespaces/proxy-3436/services/http:proxy-service-clxtc:portname2/proxy/: bar (200; 6.419535ms)
  I1203 20:27:21.800336 23 proxy.go:558] (3) /api/v1/namespaces/proxy-3436/services/https:proxy-service-clxtc:tlsportname1/proxy/: tls baz (200; 6.581072ms)
  I1203 20:27:21.800382 23 proxy.go:558] (3) /api/v1/namespaces/proxy-3436/services/http:proxy-service-clxtc:portname1/proxy/: foo (200; 6.482627ms)
  I1203 20:27:21.800346 23 proxy.go:558] (3) /api/v1/namespaces/proxy-3436/services/proxy-service-clxtc:portname1/proxy/: foo (200; 6.501967ms)
  I1203 20:27:21.800427 23 proxy.go:558] (3) /api/v1/namespaces/proxy-3436/services/https:proxy-service-clxtc:tlsportname2/proxy/: tls qux (200; 6.497147ms)
  I1203 20:27:21.800592 23 proxy.go:558] (3) /api/v1/namespaces/proxy-3436/services/proxy-service-clxtc:portname2/proxy/: bar (200; 6.866112ms)
  I1203 20:27:21.806178 23 proxy.go:558] (4) /api/v1/namespaces/proxy-3436/services/proxy-service-clxtc:portname2/proxy/: bar (200; 5.470266ms)
  I1203 20:27:21.806215 23 proxy.go:558] (4) /api/v1/namespaces/proxy-3436/services/proxy-service-clxtc:portname1/proxy/: foo (200; 5.29099ms)
  I1203 20:27:21.806453 23 proxy.go:558] (4) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:160/proxy/: foo (200; 5.66576ms)
  I1203 20:27:21.806546 23 proxy.go:558] (4) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:460/proxy/: tls baz (200; 5.639921ms)
  I1203 20:27:21.806596 23 proxy.go:558] (4) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:1080/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:1080/proxy/rewriteme">... (200; 5.653994ms)
  I1203 20:27:21.806620 23 proxy.go:558] (4) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:1080/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:1080/proxy/rewriteme">test<... (200; 5.718648ms)
  I1203 20:27:21.806653 23 proxy.go:558] (4) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:462/proxy/: tls qux (200; 5.773907ms)
  I1203 20:27:21.806654 23 proxy.go:558] (4) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:443/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:443/proxy/tlsrewritem... (200; 5.996431ms)
  I1203 20:27:21.806832 23 proxy.go:558] (4) /api/v1/namespaces/proxy-3436/services/https:proxy-service-clxtc:tlsportname2/proxy/: tls qux (200; 6.050337ms)
  I1203 20:27:21.806851 23 proxy.go:558] (4) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:162/proxy/: bar (200; 6.100186ms)
  I1203 20:27:21.806885 23 proxy.go:558] (4) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:162/proxy/: bar (200; 6.039506ms)
  I1203 20:27:21.806868 23 proxy.go:558] (4) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2/proxy/rewriteme">test</a> (200; 6.125315ms)
  I1203 20:27:21.807159 23 proxy.go:558] (4) /api/v1/namespaces/proxy-3436/services/http:proxy-service-clxtc:portname1/proxy/: foo (200; 6.355146ms)
  I1203 20:27:21.807233 23 proxy.go:558] (4) /api/v1/namespaces/proxy-3436/services/https:proxy-service-clxtc:tlsportname1/proxy/: tls baz (200; 6.386497ms)
  I1203 20:27:21.807267 23 proxy.go:558] (4) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:160/proxy/: foo (200; 6.376085ms)
  I1203 20:27:21.807326 23 proxy.go:558] (4) /api/v1/namespaces/proxy-3436/services/http:proxy-service-clxtc:portname2/proxy/: bar (200; 6.381808ms)
  I1203 20:27:21.813454 23 proxy.go:558] (5) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2/proxy/rewriteme">test</a> (200; 5.995886ms)
  I1203 20:27:21.813465 23 proxy.go:558] (5) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:443/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:443/proxy/tlsrewritem... (200; 6.012071ms)
  I1203 20:27:21.813515 23 proxy.go:558] (5) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:1080/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:1080/proxy/rewriteme">... (200; 6.087548ms)
  I1203 20:27:21.813532 23 proxy.go:558] (5) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:460/proxy/: tls baz (200; 5.991317ms)
  I1203 20:27:21.813553 23 proxy.go:558] (5) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:162/proxy/: bar (200; 6.022811ms)
  I1203 20:27:21.813563 23 proxy.go:558] (5) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:462/proxy/: tls qux (200; 6.198988ms)
  I1203 20:27:21.813582 23 proxy.go:558] (5) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:160/proxy/: foo (200; 6.016844ms)
  I1203 20:27:21.813594 23 proxy.go:558] (5) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:160/proxy/: foo (200; 6.081435ms)
  I1203 20:27:21.813580 23 proxy.go:558] (5) /api/v1/namespaces/proxy-3436/services/https:proxy-service-clxtc:tlsportname1/proxy/: tls baz (200; 6.215027ms)
  I1203 20:27:21.813589 23 proxy.go:558] (5) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:1080/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:1080/proxy/rewriteme">test<... (200; 6.114765ms)
  I1203 20:27:21.813636 23 proxy.go:558] (5) /api/v1/namespaces/proxy-3436/services/https:proxy-service-clxtc:tlsportname2/proxy/: tls qux (200; 6.137266ms)
  I1203 20:27:21.813549 23 proxy.go:558] (5) /api/v1/namespaces/proxy-3436/services/http:proxy-service-clxtc:portname2/proxy/: bar (200; 5.946068ms)
  I1203 20:27:21.814661 23 proxy.go:558] (5) /api/v1/namespaces/proxy-3436/services/proxy-service-clxtc:portname1/proxy/: foo (200; 7.175341ms)
  I1203 20:27:21.814736 23 proxy.go:558] (5) /api/v1/namespaces/proxy-3436/services/proxy-service-clxtc:portname2/proxy/: bar (200; 7.167931ms)
  I1203 20:27:21.814739 23 proxy.go:558] (5) /api/v1/namespaces/proxy-3436/services/http:proxy-service-clxtc:portname1/proxy/: foo (200; 7.298029ms)
  I1203 20:27:21.814749 23 proxy.go:558] (5) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:162/proxy/: bar (200; 7.189675ms)
  I1203 20:27:21.819713 23 proxy.go:558] (6) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:160/proxy/: foo (200; 4.828486ms)
  I1203 20:27:21.819726 23 proxy.go:558] (6) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:162/proxy/: bar (200; 4.728068ms)
  I1203 20:27:21.819758 23 proxy.go:558] (6) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:160/proxy/: foo (200; 4.700811ms)
  I1203 20:27:21.819797 23 proxy.go:558] (6) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:162/proxy/: bar (200; 4.680436ms)
  I1203 20:27:21.819811 23 proxy.go:558] (6) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:443/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:443/proxy/tlsrewritem... (200; 4.725956ms)
  I1203 20:27:21.819827 23 proxy.go:558] (6) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2/proxy/rewriteme">test</a> (200; 4.905647ms)
  I1203 20:27:21.820323 23 proxy.go:558] (6) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:460/proxy/: tls baz (200; 5.459984ms)
  I1203 20:27:21.820402 23 proxy.go:558] (6) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:1080/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:1080/proxy/rewriteme">... (200; 5.349643ms)
  I1203 20:27:21.820433 23 proxy.go:558] (6) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:462/proxy/: tls qux (200; 5.555981ms)
  I1203 20:27:21.820461 23 proxy.go:558] (6) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:1080/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:1080/proxy/rewriteme">test<... (200; 5.365254ms)
  I1203 20:27:21.821283 23 proxy.go:558] (6) /api/v1/namespaces/proxy-3436/services/http:proxy-service-clxtc:portname2/proxy/: bar (200; 6.30556ms)
  I1203 20:27:21.821333 23 proxy.go:558] (6) /api/v1/namespaces/proxy-3436/services/proxy-service-clxtc:portname2/proxy/: bar (200; 6.348389ms)
  I1203 20:27:21.821354 23 proxy.go:558] (6) /api/v1/namespaces/proxy-3436/services/proxy-service-clxtc:portname1/proxy/: foo (200; 6.273742ms)
  I1203 20:27:21.821358 23 proxy.go:558] (6) /api/v1/namespaces/proxy-3436/services/https:proxy-service-clxtc:tlsportname1/proxy/: tls baz (200; 6.334173ms)
  I1203 20:27:21.821386 23 proxy.go:558] (6) /api/v1/namespaces/proxy-3436/services/http:proxy-service-clxtc:portname1/proxy/: foo (200; 6.439461ms)
  I1203 20:27:21.821405 23 proxy.go:558] (6) /api/v1/namespaces/proxy-3436/services/https:proxy-service-clxtc:tlsportname2/proxy/: tls qux (200; 6.29618ms)
  I1203 20:27:21.826620 23 proxy.go:558] (7) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2/proxy/rewriteme">test</a> (200; 4.771151ms)
  I1203 20:27:21.826652 23 proxy.go:558] (7) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:162/proxy/: bar (200; 5.022134ms)
  I1203 20:27:21.827126 23 proxy.go:558] (7) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:162/proxy/: bar (200; 5.414993ms)
  I1203 20:27:21.827334 23 proxy.go:558] (7) /api/v1/namespaces/proxy-3436/services/proxy-service-clxtc:portname1/proxy/: foo (200; 5.497506ms)
  I1203 20:27:21.827366 23 proxy.go:558] (7) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:462/proxy/: tls qux (200; 5.532497ms)
  I1203 20:27:21.827369 23 proxy.go:558] (7) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:443/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:443/proxy/tlsrewritem... (200; 5.600412ms)
  I1203 20:27:21.827368 23 proxy.go:558] (7) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:160/proxy/: foo (200; 5.844564ms)
  I1203 20:27:21.827599 23 proxy.go:558] (7) /api/v1/namespaces/proxy-3436/services/https:proxy-service-clxtc:tlsportname2/proxy/: tls qux (200; 5.800303ms)
  I1203 20:27:21.827755 23 proxy.go:558] (7) /api/v1/namespaces/proxy-3436/services/https:proxy-service-clxtc:tlsportname1/proxy/: tls baz (200; 5.947194ms)
  I1203 20:27:21.827794 23 proxy.go:558] (7) /api/v1/namespaces/proxy-3436/services/proxy-service-clxtc:portname2/proxy/: bar (200; 5.992445ms)
  I1203 20:27:21.827792 23 proxy.go:558] (7) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:1080/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:1080/proxy/rewriteme">test<... (200; 6.122947ms)
  I1203 20:27:21.827817 23 proxy.go:558] (7) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:460/proxy/: tls baz (200; 5.994643ms)
  I1203 20:27:21.827829 23 proxy.go:558] (7) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:1080/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:1080/proxy/rewriteme">... (200; 6.119444ms)
  I1203 20:27:21.827819 23 proxy.go:558] (7) /api/v1/namespaces/proxy-3436/services/http:proxy-service-clxtc:portname2/proxy/: bar (200; 6.073103ms)
  I1203 20:27:21.828281 23 proxy.go:558] (7) /api/v1/namespaces/proxy-3436/services/http:proxy-service-clxtc:portname1/proxy/: foo (200; 6.541327ms)
  I1203 20:27:21.828355 23 proxy.go:558] (7) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:160/proxy/: foo (200; 6.499722ms)
  I1203 20:27:21.832189 23 proxy.go:558] (8) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:1080/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:1080/proxy/rewriteme">test<... (200; 3.748707ms)
  I1203 20:27:21.832230 23 proxy.go:558] (8) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:160/proxy/: foo (200; 3.703236ms)
  I1203 20:27:21.834348 23 proxy.go:558] (8) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:1080/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:1080/proxy/rewriteme">... (200; 5.802297ms)
  I1203 20:27:21.834385 23 proxy.go:558] (8) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:162/proxy/: bar (200; 5.799421ms)
  I1203 20:27:21.834434 23 proxy.go:558] (8) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2/proxy/rewriteme">test</a> (200; 5.968507ms)
  I1203 20:27:21.834482 23 proxy.go:558] (8) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:162/proxy/: bar (200; 5.915724ms)
  I1203 20:27:21.834519 23 proxy.go:558] (8) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:462/proxy/: tls qux (200; 5.924167ms)
  I1203 20:27:21.834484 23 proxy.go:558] (8) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:443/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:443/proxy/tlsrewritem... (200; 5.903869ms)
  I1203 20:27:21.834565 23 proxy.go:558] (8) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:460/proxy/: tls baz (200; 5.956775ms)
  I1203 20:27:21.834573 23 proxy.go:558] (8) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:160/proxy/: foo (200; 6.134395ms)
  I1203 20:27:21.834750 23 proxy.go:558] (8) /api/v1/namespaces/proxy-3436/services/https:proxy-service-clxtc:tlsportname2/proxy/: tls qux (200; 6.264297ms)
  I1203 20:27:21.836233 23 proxy.go:558] (8) /api/v1/namespaces/proxy-3436/services/http:proxy-service-clxtc:portname1/proxy/: foo (200; 7.591146ms)
  I1203 20:27:21.836314 23 proxy.go:558] (8) /api/v1/namespaces/proxy-3436/services/http:proxy-service-clxtc:portname2/proxy/: bar (200; 7.640768ms)
  I1203 20:27:21.836299 23 proxy.go:558] (8) /api/v1/namespaces/proxy-3436/services/https:proxy-service-clxtc:tlsportname1/proxy/: tls baz (200; 7.690637ms)
  I1203 20:27:21.836333 23 proxy.go:558] (8) /api/v1/namespaces/proxy-3436/services/proxy-service-clxtc:portname1/proxy/: foo (200; 7.681772ms)
  I1203 20:27:21.836344 23 proxy.go:558] (8) /api/v1/namespaces/proxy-3436/services/proxy-service-clxtc:portname2/proxy/: bar (200; 7.729193ms)
  I1203 20:27:21.840773 23 proxy.go:558] (9) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:1080/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:1080/proxy/rewriteme">test<... (200; 4.339345ms)
  I1203 20:27:21.840783 23 proxy.go:558] (9) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:162/proxy/: bar (200; 4.140391ms)
  I1203 20:27:21.840809 23 proxy.go:558] (9) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:160/proxy/: foo (200; 4.21834ms)
  I1203 20:27:21.841678 23 proxy.go:558] (9) /api/v1/namespaces/proxy-3436/services/proxy-service-clxtc:portname2/proxy/: bar (200; 5.197331ms)
  I1203 20:27:21.841769 23 proxy.go:558] (9) /api/v1/namespaces/proxy-3436/services/proxy-service-clxtc:portname1/proxy/: foo (200; 5.012837ms)
  I1203 20:27:21.841922 23 proxy.go:558] (9) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:462/proxy/: tls qux (200; 5.255086ms)
  I1203 20:27:21.841965 23 proxy.go:558] (9) /api/v1/namespaces/proxy-3436/services/https:proxy-service-clxtc:tlsportname1/proxy/: tls baz (200; 5.20415ms)
  I1203 20:27:21.841980 23 proxy.go:558] (9) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2/proxy/rewriteme">test</a> (200; 5.397042ms)
  I1203 20:27:21.842018 23 proxy.go:558] (9) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:443/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:443/proxy/tlsrewritem... (200; 5.299236ms)
  I1203 20:27:21.842126 23 proxy.go:558] (9) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:1080/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:1080/proxy/rewriteme">... (200; 5.334099ms)
  I1203 20:27:21.842150 23 proxy.go:558] (9) /api/v1/namespaces/proxy-3436/services/http:proxy-service-clxtc:portname1/proxy/: foo (200; 5.43325ms)
  I1203 20:27:21.842165 23 proxy.go:558] (9) /api/v1/namespaces/proxy-3436/services/https:proxy-service-clxtc:tlsportname2/proxy/: tls qux (200; 5.613805ms)
  I1203 20:27:21.842178 23 proxy.go:558] (9) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:460/proxy/: tls baz (200; 5.496828ms)
  I1203 20:27:21.842179 23 proxy.go:558] (9) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:162/proxy/: bar (200; 5.51634ms)
  I1203 20:27:21.842176 23 proxy.go:558] (9) /api/v1/namespaces/proxy-3436/services/http:proxy-service-clxtc:portname2/proxy/: bar (200; 5.39271ms)
  I1203 20:27:21.842460 23 proxy.go:558] (9) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:160/proxy/: foo (200; 5.748045ms)
  I1203 20:27:21.847064 23 proxy.go:558] (10) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:1080/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:1080/proxy/rewriteme">test<... (200; 4.263811ms)
  I1203 20:27:21.847070 23 proxy.go:558] (10) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:462/proxy/: tls qux (200; 4.371169ms)
  I1203 20:27:21.847065 23 proxy.go:558] (10) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:162/proxy/: bar (200; 4.31072ms)
  I1203 20:27:21.847471 23 proxy.go:558] (10) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:160/proxy/: foo (200; 4.635315ms)
  I1203 20:27:21.847477 23 proxy.go:558] (10) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:162/proxy/: bar (200; 4.761036ms)
  I1203 20:27:21.847507 23 proxy.go:558] (10) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:460/proxy/: tls baz (200; 4.698136ms)
  I1203 20:27:21.847528 23 proxy.go:558] (10) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:160/proxy/: foo (200; 4.864489ms)
  I1203 20:27:21.847536 23 proxy.go:558] (10) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:1080/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:1080/proxy/rewriteme">... (200; 4.766625ms)
  I1203 20:27:21.847572 23 proxy.go:558] (10) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:443/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:443/proxy/tlsrewritem... (200; 4.776784ms)
  I1203 20:27:21.847615 23 proxy.go:558] (10) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2/proxy/rewriteme">test</a> (200; 4.779199ms)
  I1203 20:27:21.849152 23 proxy.go:558] (10) /api/v1/namespaces/proxy-3436/services/http:proxy-service-clxtc:portname2/proxy/: bar (200; 6.377341ms)
  I1203 20:27:21.849313 23 proxy.go:558] (10) /api/v1/namespaces/proxy-3436/services/proxy-service-clxtc:portname2/proxy/: bar (200; 6.505174ms)
  I1203 20:27:21.849334 23 proxy.go:558] (10) /api/v1/namespaces/proxy-3436/services/proxy-service-clxtc:portname1/proxy/: foo (200; 6.745112ms)
  I1203 20:27:21.849375 23 proxy.go:558] (10) /api/v1/namespaces/proxy-3436/services/https:proxy-service-clxtc:tlsportname1/proxy/: tls baz (200; 6.732579ms)
  I1203 20:27:21.849556 23 proxy.go:558] (10) /api/v1/namespaces/proxy-3436/services/http:proxy-service-clxtc:portname1/proxy/: foo (200; 6.690929ms)
  I1203 20:27:21.849575 23 proxy.go:558] (10) /api/v1/namespaces/proxy-3436/services/https:proxy-service-clxtc:tlsportname2/proxy/: tls qux (200; 6.807593ms)
  I1203 20:27:21.857485 23 proxy.go:558] (11) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:162/proxy/: bar (200; 7.609355ms)
  I1203 20:27:21.857897 23 proxy.go:558] (11) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:443/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:443/proxy/tlsrewritem... (200; 8.153526ms)
  I1203 20:27:21.857951 23 proxy.go:558] (11) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2/proxy/rewriteme">test</a> (200; 7.978125ms)
  I1203 20:27:21.857983 23 proxy.go:558] (11) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:460/proxy/: tls baz (200; 8.089117ms)
  I1203 20:27:21.857997 23 proxy.go:558] (11) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:160/proxy/: foo (200; 8.274704ms)
  I1203 20:27:21.858243 23 proxy.go:558] (11) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:160/proxy/: foo (200; 8.458935ms)
  I1203 20:27:21.858280 23 proxy.go:558] (11) /api/v1/namespaces/proxy-3436/services/proxy-service-clxtc:portname2/proxy/: bar (200; 8.592135ms)
  I1203 20:27:21.858302 23 proxy.go:558] (11) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:1080/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:1080/proxy/rewriteme">... (200; 8.458044ms)
  I1203 20:27:21.858300 23 proxy.go:558] (11) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:462/proxy/: tls qux (200; 8.370402ms)
  I1203 20:27:21.859101 23 proxy.go:558] (11) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:162/proxy/: bar (200; 9.415509ms)
  I1203 20:27:21.859117 23 proxy.go:558] (11) /api/v1/namespaces/proxy-3436/services/https:proxy-service-clxtc:tlsportname2/proxy/: tls qux (200; 9.242382ms)
  I1203 20:27:21.859245 23 proxy.go:558] (11) /api/v1/namespaces/proxy-3436/services/proxy-service-clxtc:portname1/proxy/: foo (200; 9.475236ms)
  I1203 20:27:21.859289 23 proxy.go:558] (11) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:1080/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:1080/proxy/rewriteme">test<... (200; 9.442707ms)
  I1203 20:27:21.859324 23 proxy.go:558] (11) /api/v1/namespaces/proxy-3436/services/http:proxy-service-clxtc:portname2/proxy/: bar (200; 9.500237ms)
  I1203 20:27:21.859360 23 proxy.go:558] (11) /api/v1/namespaces/proxy-3436/services/http:proxy-service-clxtc:portname1/proxy/: foo (200; 9.369653ms)
  I1203 20:27:21.859464 23 proxy.go:558] (11) /api/v1/namespaces/proxy-3436/services/https:proxy-service-clxtc:tlsportname1/proxy/: tls baz (200; 9.676245ms)
  I1203 20:27:21.863442 23 proxy.go:558] (12) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:460/proxy/: tls baz (200; 3.882542ms)
  I1203 20:27:21.863448 23 proxy.go:558] (12) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:443/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:443/proxy/tlsrewritem... (200; 3.902279ms)
  I1203 20:27:21.864566 23 proxy.go:558] (12) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:162/proxy/: bar (200; 4.82543ms)
  I1203 20:27:21.864635 23 proxy.go:558] (12) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:160/proxy/: foo (200; 5.007441ms)
  I1203 20:27:21.864661 23 proxy.go:558] (12) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:1080/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:1080/proxy/rewriteme">test<... (200; 5.01338ms)
  I1203 20:27:21.865038 23 proxy.go:558] (12) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:1080/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:1080/proxy/rewriteme">... (200; 5.325695ms)
  I1203 20:27:21.865109 23 proxy.go:558] (12) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:462/proxy/: tls qux (200; 5.578712ms)
  I1203 20:27:21.865118 23 proxy.go:558] (12) /api/v1/namespaces/proxy-3436/services/https:proxy-service-clxtc:tlsportname1/proxy/: tls baz (200; 5.526913ms)
  I1203 20:27:21.865137 23 proxy.go:558] (12) /api/v1/namespaces/proxy-3436/services/http:proxy-service-clxtc:portname2/proxy/: bar (200; 5.395209ms)
  I1203 20:27:21.865164 23 proxy.go:558] (12) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:160/proxy/: foo (200; 5.393323ms)
  I1203 20:27:21.865167 23 proxy.go:558] (12) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2/proxy/rewriteme">test</a> (200; 5.383295ms)
  I1203 20:27:21.865925 23 proxy.go:558] (12) /api/v1/namespaces/proxy-3436/services/proxy-service-clxtc:portname2/proxy/: bar (200; 6.285711ms)
  I1203 20:27:21.865957 23 proxy.go:558] (12) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:162/proxy/: bar (200; 6.146183ms)
  I1203 20:27:21.865922 23 proxy.go:558] (12) /api/v1/namespaces/proxy-3436/services/http:proxy-service-clxtc:portname1/proxy/: foo (200; 6.21426ms)
  I1203 20:27:21.865984 23 proxy.go:558] (12) /api/v1/namespaces/proxy-3436/services/https:proxy-service-clxtc:tlsportname2/proxy/: tls qux (200; 6.304427ms)
  I1203 20:27:21.866009 23 proxy.go:558] (12) /api/v1/namespaces/proxy-3436/services/proxy-service-clxtc:portname1/proxy/: foo (200; 6.323968ms)
  I1203 20:27:21.869654 23 proxy.go:558] (13) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:162/proxy/: bar (200; 3.53258ms)
  I1203 20:27:21.871026 23 proxy.go:558] (13) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:162/proxy/: bar (200; 4.88215ms)
  I1203 20:27:21.871044 23 proxy.go:558] (13) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:462/proxy/: tls qux (200; 4.753074ms)
  I1203 20:27:21.871072 23 proxy.go:558] (13) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:460/proxy/: tls baz (200; 4.819341ms)
  I1203 20:27:21.871088 23 proxy.go:558] (13) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:160/proxy/: foo (200; 4.778649ms)
  I1203 20:27:21.871104 23 proxy.go:558] (13) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2/proxy/rewriteme">test</a> (200; 4.907851ms)
  I1203 20:27:21.871130 23 proxy.go:558] (13) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:1080/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:1080/proxy/rewriteme">test<... (200; 4.776461ms)
  I1203 20:27:21.871109 23 proxy.go:558] (13) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:1080/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:1080/proxy/rewriteme">... (200; 4.869327ms)
  I1203 20:27:21.871124 23 proxy.go:558] (13) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:443/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:443/proxy/tlsrewritem... (200; 4.789282ms)
  I1203 20:27:21.871141 23 proxy.go:558] (13) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:160/proxy/: foo (200; 5.05456ms)
  I1203 20:27:21.872414 23 proxy.go:558] (13) /api/v1/namespaces/proxy-3436/services/http:proxy-service-clxtc:portname2/proxy/: bar (200; 6.075266ms)
  I1203 20:27:21.872452 23 proxy.go:558] (13) /api/v1/namespaces/proxy-3436/services/proxy-service-clxtc:portname2/proxy/: bar (200; 6.27404ms)
  I1203 20:27:21.872625 23 proxy.go:558] (13) /api/v1/namespaces/proxy-3436/services/https:proxy-service-clxtc:tlsportname1/proxy/: tls baz (200; 6.371283ms)
  I1203 20:27:21.872712 23 proxy.go:558] (13) /api/v1/namespaces/proxy-3436/services/http:proxy-service-clxtc:portname1/proxy/: foo (200; 6.371114ms)
  I1203 20:27:21.872763 23 proxy.go:558] (13) /api/v1/namespaces/proxy-3436/services/https:proxy-service-clxtc:tlsportname2/proxy/: tls qux (200; 6.389877ms)
  I1203 20:27:21.872836 23 proxy.go:558] (13) /api/v1/namespaces/proxy-3436/services/proxy-service-clxtc:portname1/proxy/: foo (200; 6.476109ms)
  I1203 20:27:21.876914 23 proxy.go:558] (14) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:443/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:443/proxy/tlsrewritem... (200; 3.874714ms)
  I1203 20:27:21.876958 23 proxy.go:558] (14) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:460/proxy/: tls baz (200; 4.033097ms)
  I1203 20:27:21.877851 23 proxy.go:558] (14) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:462/proxy/: tls qux (200; 4.730732ms)
  I1203 20:27:21.877857 23 proxy.go:558] (14) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:1080/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:1080/proxy/rewriteme">test<... (200; 4.716278ms)
  I1203 20:27:21.877894 23 proxy.go:558] (14) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:160/proxy/: foo (200; 4.724818ms)
  I1203 20:27:21.877916 23 proxy.go:558] (14) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:160/proxy/: foo (200; 4.823685ms)
  I1203 20:27:21.878043 23 proxy.go:558] (14) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:162/proxy/: bar (200; 4.868846ms)
  I1203 20:27:21.878090 23 proxy.go:558] (14) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2/proxy/rewriteme">test</a> (200; 5.048622ms)
  I1203 20:27:21.878114 23 proxy.go:558] (14) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:1080/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:1080/proxy/rewriteme">... (200; 5.187068ms)
  I1203 20:27:21.878112 23 proxy.go:558] (14) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:162/proxy/: bar (200; 5.020739ms)
  I1203 20:27:21.879010 23 proxy.go:558] (14) /api/v1/namespaces/proxy-3436/services/proxy-service-clxtc:portname1/proxy/: foo (200; 5.948833ms)
  I1203 20:27:21.879067 23 proxy.go:558] (14) /api/v1/namespaces/proxy-3436/services/http:proxy-service-clxtc:portname1/proxy/: foo (200; 5.97984ms)
  I1203 20:27:21.879203 23 proxy.go:558] (14) /api/v1/namespaces/proxy-3436/services/proxy-service-clxtc:portname2/proxy/: bar (200; 6.248857ms)
  I1203 20:27:21.879232 23 proxy.go:558] (14) /api/v1/namespaces/proxy-3436/services/https:proxy-service-clxtc:tlsportname1/proxy/: tls baz (200; 6.018252ms)
  I1203 20:27:21.879263 23 proxy.go:558] (14) /api/v1/namespaces/proxy-3436/services/https:proxy-service-clxtc:tlsportname2/proxy/: tls qux (200; 6.259904ms)
  I1203 20:27:21.879590 23 proxy.go:558] (14) /api/v1/namespaces/proxy-3436/services/http:proxy-service-clxtc:portname2/proxy/: bar (200; 6.478866ms)
  I1203 20:27:21.886362 23 proxy.go:558] (15) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:1080/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:1080/proxy/rewriteme">test<... (200; 6.392261ms)
  I1203 20:27:21.886805 23 proxy.go:558] (15) /api/v1/namespaces/proxy-3436/services/proxy-service-clxtc:portname2/proxy/: bar (200; 6.891351ms)
  I1203 20:27:21.887105 23 proxy.go:558] (15) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:1080/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:1080/proxy/rewriteme">... (200; 7.344993ms)
  I1203 20:27:21.886978 23 proxy.go:558] (15) /api/v1/namespaces/proxy-3436/services/http:proxy-service-clxtc:portname2/proxy/: bar (200; 7.032472ms)
  I1203 20:27:21.886979 23 proxy.go:558] (15) /api/v1/namespaces/proxy-3436/services/https:proxy-service-clxtc:tlsportname2/proxy/: tls qux (200; 6.984436ms)
  I1203 20:27:21.887028 23 proxy.go:558] (15) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:462/proxy/: tls qux (200; 7.244281ms)
  I1203 20:27:21.887036 23 proxy.go:558] (15) /api/v1/namespaces/proxy-3436/services/proxy-service-clxtc:portname1/proxy/: foo (200; 7.180146ms)
  I1203 20:27:21.887026 23 proxy.go:558] (15) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:460/proxy/: tls baz (200; 7.135127ms)
  I1203 20:27:21.887063 23 proxy.go:558] (15) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:160/proxy/: foo (200; 7.190281ms)
  I1203 20:27:21.887076 23 proxy.go:558] (15) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2/proxy/rewriteme">test</a> (200; 7.227264ms)
  I1203 20:27:21.887089 23 proxy.go:558] (15) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:443/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:443/proxy/tlsrewritem... (200; 7.411537ms)
  I1203 20:27:21.887484 23 proxy.go:558] (15) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:162/proxy/: bar (200; 7.488816ms)
  I1203 20:27:21.887493 23 proxy.go:558] (15) /api/v1/namespaces/proxy-3436/services/https:proxy-service-clxtc:tlsportname1/proxy/: tls baz (200; 7.540101ms)
  I1203 20:27:21.887527 23 proxy.go:558] (15) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:162/proxy/: bar (200; 7.581832ms)
  I1203 20:27:21.887498 23 proxy.go:558] (15) /api/v1/namespaces/proxy-3436/services/http:proxy-service-clxtc:portname1/proxy/: foo (200; 7.584963ms)
  I1203 20:27:21.887530 23 proxy.go:558] (15) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:160/proxy/: foo (200; 7.864676ms)
  I1203 20:27:21.892842 23 proxy.go:558] (16) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:160/proxy/: foo (200; 5.08489ms)
  I1203 20:27:21.892844 23 proxy.go:558] (16) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:162/proxy/: bar (200; 5.254308ms)
  I1203 20:27:21.893796 23 proxy.go:558] (16) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:1080/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:1080/proxy/rewriteme">... (200; 5.945241ms)
  I1203 20:27:21.894386 23 proxy.go:558] (16) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:443/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:443/proxy/tlsrewritem... (200; 6.473633ms)
  I1203 20:27:21.894466 23 proxy.go:558] (16) /api/v1/namespaces/proxy-3436/services/https:proxy-service-clxtc:tlsportname1/proxy/: tls baz (200; 6.760529ms)
  I1203 20:27:21.894538 23 proxy.go:558] (16) /api/v1/namespaces/proxy-3436/services/proxy-service-clxtc:portname2/proxy/: bar (200; 6.958295ms)
  I1203 20:27:21.895028 23 proxy.go:558] (16) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:160/proxy/: foo (200; 6.831774ms)
  I1203 20:27:21.895153 23 proxy.go:558] (16) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2/proxy/rewriteme">test</a> (200; 7.019659ms)
  I1203 20:27:21.895185 23 proxy.go:558] (16) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:1080/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:1080/proxy/rewriteme">test<... (200; 7.380651ms)
  I1203 20:27:21.895400 23 proxy.go:558] (16) /api/v1/namespaces/proxy-3436/services/proxy-service-clxtc:portname1/proxy/: foo (200; 7.450714ms)
  I1203 20:27:21.895459 23 proxy.go:558] (16) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:162/proxy/: bar (200; 7.298523ms)
  I1203 20:27:21.895483 23 proxy.go:558] (16) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:460/proxy/: tls baz (200; 7.294493ms)
  I1203 20:27:21.895521 23 proxy.go:558] (16) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:462/proxy/: tls qux (200; 7.52897ms)
  I1203 20:27:21.895672 23 proxy.go:558] (16) /api/v1/namespaces/proxy-3436/services/https:proxy-service-clxtc:tlsportname2/proxy/: tls qux (200; 7.536886ms)
  I1203 20:27:21.895719 23 proxy.go:558] (16) /api/v1/namespaces/proxy-3436/services/http:proxy-service-clxtc:portname2/proxy/: bar (200; 7.622401ms)
  I1203 20:27:21.895727 23 proxy.go:558] (16) /api/v1/namespaces/proxy-3436/services/http:proxy-service-clxtc:portname1/proxy/: foo (200; 8.068719ms)
  I1203 20:27:21.901382 23 proxy.go:558] (17) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:162/proxy/: bar (200; 4.844928ms)
  I1203 20:27:21.901438 23 proxy.go:558] (17) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:160/proxy/: foo (200; 5.402234ms)
  I1203 20:27:21.901445 23 proxy.go:558] (17) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2/proxy/rewriteme">test</a> (200; 5.072814ms)
  I1203 20:27:21.901755 23 proxy.go:558] (17) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:443/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:443/proxy/tlsrewritem... (200; 5.944288ms)
  I1203 20:27:21.901826 23 proxy.go:558] (17) /api/v1/namespaces/proxy-3436/services/https:proxy-service-clxtc:tlsportname1/proxy/: tls baz (200; 5.870963ms)
  I1203 20:27:21.902006 23 proxy.go:558] (17) /api/v1/namespaces/proxy-3436/services/https:proxy-service-clxtc:tlsportname2/proxy/: tls qux (200; 5.907573ms)
  I1203 20:27:21.902039 23 proxy.go:558] (17) /api/v1/namespaces/proxy-3436/services/proxy-service-clxtc:portname1/proxy/: foo (200; 5.865292ms)
  I1203 20:27:21.902078 23 proxy.go:558] (17) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:162/proxy/: bar (200; 5.670645ms)
  I1203 20:27:21.902135 23 proxy.go:558] (17) /api/v1/namespaces/proxy-3436/services/http:proxy-service-clxtc:portname1/proxy/: foo (200; 5.916797ms)
  I1203 20:27:21.902157 23 proxy.go:558] (17) /api/v1/namespaces/proxy-3436/services/proxy-service-clxtc:portname2/proxy/: bar (200; 6.257334ms)
  I1203 20:27:21.902307 23 proxy.go:558] (17) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:462/proxy/: tls qux (200; 5.839624ms)
  I1203 20:27:21.902322 23 proxy.go:558] (17) /api/v1/namespaces/proxy-3436/services/http:proxy-service-clxtc:portname2/proxy/: bar (200; 6.059035ms)
  I1203 20:27:21.902259 23 proxy.go:558] (17) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:1080/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:1080/proxy/rewriteme">test<... (200; 5.961741ms)
  I1203 20:27:21.902635 23 proxy.go:558] (17) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:1080/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:1080/proxy/rewriteme">... (200; 6.302773ms)
  I1203 20:27:21.902644 23 proxy.go:558] (17) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:460/proxy/: tls baz (200; 6.829763ms)
  I1203 20:27:21.902623 23 proxy.go:558] (17) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:160/proxy/: foo (200; 6.127178ms)
  I1203 20:27:21.906856 23 proxy.go:558] (18) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:1080/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:1080/proxy/rewriteme">test<... (200; 3.975809ms)
  I1203 20:27:21.906900 23 proxy.go:558] (18) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:162/proxy/: bar (200; 3.844989ms)
  I1203 20:27:21.906944 23 proxy.go:558] (18) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:462/proxy/: tls qux (200; 4.103294ms)
  I1203 20:27:21.906968 23 proxy.go:558] (18) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:160/proxy/: foo (200; 3.928605ms)
  I1203 20:27:21.907016 23 proxy.go:558] (18) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:162/proxy/: bar (200; 3.942668ms)
  I1203 20:27:21.907052 23 proxy.go:558] (18) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2/proxy/rewriteme">test</a> (200; 4.049074ms)
  I1203 20:27:21.907114 23 proxy.go:558] (18) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:1080/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:1080/proxy/rewriteme">... (200; 4.056853ms)
  I1203 20:27:21.907125 23 proxy.go:558] (18) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:460/proxy/: tls baz (200; 4.201366ms)
  I1203 20:27:21.907149 23 proxy.go:558] (18) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:443/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:443/proxy/tlsrewritem... (200; 4.289188ms)
  I1203 20:27:21.907725 23 proxy.go:558] (18) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:160/proxy/: foo (200; 4.692622ms)
  I1203 20:27:21.907799 23 proxy.go:558] (18) /api/v1/namespaces/proxy-3436/services/proxy-service-clxtc:portname2/proxy/: bar (200; 4.853614ms)
  I1203 20:27:21.908457 23 proxy.go:558] (18) /api/v1/namespaces/proxy-3436/services/proxy-service-clxtc:portname1/proxy/: foo (200; 5.496208ms)
  I1203 20:27:21.908502 23 proxy.go:558] (18) /api/v1/namespaces/proxy-3436/services/http:proxy-service-clxtc:portname2/proxy/: bar (200; 5.49281ms)
  I1203 20:27:21.908619 23 proxy.go:558] (18) /api/v1/namespaces/proxy-3436/services/http:proxy-service-clxtc:portname1/proxy/: foo (200; 5.636179ms)
  I1203 20:27:21.908694 23 proxy.go:558] (18) /api/v1/namespaces/proxy-3436/services/https:proxy-service-clxtc:tlsportname2/proxy/: tls qux (200; 5.634132ms)
  I1203 20:27:21.908710 23 proxy.go:558] (18) /api/v1/namespaces/proxy-3436/services/https:proxy-service-clxtc:tlsportname1/proxy/: tls baz (200; 5.696712ms)
  I1203 20:27:21.911027 23 proxy.go:558] (19) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:460/proxy/: tls baz (200; 2.193416ms)
  I1203 20:27:21.911346 23 proxy.go:558] (19) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:162/proxy/: bar (200; 2.420718ms)
  I1203 20:27:21.913272 23 proxy.go:558] (19) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2/proxy/rewriteme">test</a> (200; 4.335893ms)
  I1203 20:27:21.913274 23 proxy.go:558] (19) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:1080/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:1080/proxy/rewriteme">... (200; 4.167842ms)
  I1203 20:27:21.913994 23 proxy.go:558] (19) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:160/proxy/: foo (200; 5.013532ms)
  I1203 20:27:21.914058 23 proxy.go:558] (19) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:462/proxy/: tls qux (200; 5.050323ms)
  I1203 20:27:21.914068 23 proxy.go:558] (19) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:162/proxy/: bar (200; 5.095965ms)
  I1203 20:27:21.914101 23 proxy.go:558] (19) /api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:1080/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/proxy-service-clxtc-wvbj2:1080/proxy/rewriteme">test<... (200; 5.047848ms)
  I1203 20:27:21.914140 23 proxy.go:558] (19) /api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:443/proxy/: <a href="/api/v1/namespaces/proxy-3436/pods/https:proxy-service-clxtc-wvbj2:443/proxy/tlsrewritem... (200; 5.084436ms)
  I1203 20:27:21.914105 23 proxy.go:558] (19) /api/v1/namespaces/proxy-3436/services/https:proxy-service-clxtc:tlsportname1/proxy/: tls baz (200; 5.233777ms)
  I1203 20:27:21.914163 23 proxy.go:558] (19) /api/v1/namespaces/proxy-3436/pods/http:proxy-service-clxtc-wvbj2:160/proxy/: foo (200; 5.145448ms)
  I1203 20:27:21.914119 23 proxy.go:558] (19) /api/v1/namespaces/proxy-3436/services/https:proxy-service-clxtc:tlsportname2/proxy/: tls qux (200; 5.198366ms)
  I1203 20:27:21.914175 23 proxy.go:558] (19) /api/v1/namespaces/proxy-3436/services/proxy-service-clxtc:portname1/proxy/: foo (200; 5.114585ms)
  I1203 20:27:21.914314 23 proxy.go:558] (19) /api/v1/namespaces/proxy-3436/services/proxy-service-clxtc:portname2/proxy/: bar (200; 5.298649ms)
  I1203 20:27:21.914394 23 proxy.go:558] (19) /api/v1/namespaces/proxy-3436/services/http:proxy-service-clxtc:portname1/proxy/: foo (200; 5.560969ms)
  I1203 20:27:21.914395 23 proxy.go:558] (19) /api/v1/namespaces/proxy-3436/services/http:proxy-service-clxtc:portname2/proxy/: bar (200; 5.367982ms)
  STEP: deleting ReplicationController proxy-service-clxtc in namespace proxy-3436, will wait for the garbage collector to delete the pods @ 12/03/24 20:27:21.914
  I1203 20:27:21.975920 23 resources.go:139] Deleting ReplicationController proxy-service-clxtc took: 7.373166ms
  I1203 20:27:22.076353 23 resources.go:163] Terminating ReplicationController proxy-service-clxtc pods took: 100.433137ms
  I1203 20:27:24.177010 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-3436" for this suite. @ 12/03/24 20:27:24.182
• [4.556 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 12/03/24 20:27:24.188
  I1203 20:27:24.188784 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename deployment @ 12/03/24 20:27:24.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:27:24.204
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:27:24.208
  STEP: creating a Deployment @ 12/03/24 20:27:24.22
  I1203 20:27:24.220960 23 deployment.go:507] Creating simple deployment test-deployment-glqcw
  I1203 20:27:24.232577 23 deployment.go:222] deployment "test-deployment-glqcw" doesn't have the required revision set
  STEP: Getting /status @ 12/03/24 20:27:26.252
  I1203 20:27:26.257174 23 deployment.go:532] Deployment test-deployment-glqcw has Conditions: [{Available True 2024-12-03 20:27:25 +0000 UTC 2024-12-03 20:27:25 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-12-03 20:27:25 +0000 UTC 2024-12-03 20:27:24 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-glqcw-c8586b885" has successfully progressed.}]
  STEP: updating Deployment Status @ 12/03/24 20:27:26.257
  I1203 20:27:26.265432 23 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.December, 3, 20, 27, 25, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 20, 27, 25, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 3, 20, 27, 25, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 3, 20, 27, 24, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-glqcw-c8586b885\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 12/03/24 20:27:26.265
  I1203 20:27:26.268074 23 deployment.go:579] Observed &Deployment event: ADDED
  I1203 20:27:26.268159 23 deployment.go:575] Observed Deployment test-deployment-glqcw in namespace deployment-7628 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-03 20:27:24 +0000 UTC 2024-12-03 20:27:24 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-glqcw-c8586b885"}
  I1203 20:27:26.268339 23 deployment.go:579] Observed &Deployment event: MODIFIED
  I1203 20:27:26.268393 23 deployment.go:575] Observed Deployment test-deployment-glqcw in namespace deployment-7628 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-03 20:27:24 +0000 UTC 2024-12-03 20:27:24 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-glqcw-c8586b885"}
  I1203 20:27:26.268419 23 deployment.go:575] Observed Deployment test-deployment-glqcw in namespace deployment-7628 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-12-03 20:27:24 +0000 UTC 2024-12-03 20:27:24 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1203 20:27:26.268602 23 deployment.go:579] Observed &Deployment event: MODIFIED
  I1203 20:27:26.268652 23 deployment.go:575] Observed Deployment test-deployment-glqcw in namespace deployment-7628 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-12-03 20:27:24 +0000 UTC 2024-12-03 20:27:24 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1203 20:27:26.268679 23 deployment.go:575] Observed Deployment test-deployment-glqcw in namespace deployment-7628 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-03 20:27:24 +0000 UTC 2024-12-03 20:27:24 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-glqcw-c8586b885" is progressing.}
  I1203 20:27:26.268867 23 deployment.go:579] Observed &Deployment event: MODIFIED
  I1203 20:27:26.268917 23 deployment.go:575] Observed Deployment test-deployment-glqcw in namespace deployment-7628 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-12-03 20:27:25 +0000 UTC 2024-12-03 20:27:25 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1203 20:27:26.268944 23 deployment.go:575] Observed Deployment test-deployment-glqcw in namespace deployment-7628 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-03 20:27:25 +0000 UTC 2024-12-03 20:27:24 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-glqcw-c8586b885" has successfully progressed.}
  I1203 20:27:26.269129 23 deployment.go:579] Observed &Deployment event: MODIFIED
  I1203 20:27:26.269185 23 deployment.go:575] Observed Deployment test-deployment-glqcw in namespace deployment-7628 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-12-03 20:27:25 +0000 UTC 2024-12-03 20:27:25 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1203 20:27:26.269211 23 deployment.go:575] Observed Deployment test-deployment-glqcw in namespace deployment-7628 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-03 20:27:25 +0000 UTC 2024-12-03 20:27:24 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-glqcw-c8586b885" has successfully progressed.}
  I1203 20:27:26.269243 23 deployment.go:572] Found Deployment test-deployment-glqcw in namespace deployment-7628 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1203 20:27:26.269266 23 deployment.go:583] Deployment test-deployment-glqcw has an updated status
  STEP: patching the Statefulset Status @ 12/03/24 20:27:26.269
  I1203 20:27:26.269341 23 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1203 20:27:26.277248 23 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 12/03/24 20:27:26.277
  I1203 20:27:26.279558 23 deployment.go:616] Observed &Deployment event: ADDED
  I1203 20:27:26.279635 23 deployment.go:612] Observed deployment test-deployment-glqcw in namespace deployment-7628 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-03 20:27:24 +0000 UTC 2024-12-03 20:27:24 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-glqcw-c8586b885"}
  I1203 20:27:26.279811 23 deployment.go:616] Observed &Deployment event: MODIFIED
  I1203 20:27:26.279863 23 deployment.go:612] Observed deployment test-deployment-glqcw in namespace deployment-7628 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-03 20:27:24 +0000 UTC 2024-12-03 20:27:24 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-glqcw-c8586b885"}
  I1203 20:27:26.279891 23 deployment.go:612] Observed deployment test-deployment-glqcw in namespace deployment-7628 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-12-03 20:27:24 +0000 UTC 2024-12-03 20:27:24 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1203 20:27:26.280091 23 deployment.go:616] Observed &Deployment event: MODIFIED
  I1203 20:27:26.280210 23 deployment.go:612] Observed deployment test-deployment-glqcw in namespace deployment-7628 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-12-03 20:27:24 +0000 UTC 2024-12-03 20:27:24 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1203 20:27:26.280268 23 deployment.go:612] Observed deployment test-deployment-glqcw in namespace deployment-7628 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-03 20:27:24 +0000 UTC 2024-12-03 20:27:24 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-glqcw-c8586b885" is progressing.}
  I1203 20:27:26.280512 23 deployment.go:616] Observed &Deployment event: MODIFIED
  I1203 20:27:26.280628 23 deployment.go:612] Observed deployment test-deployment-glqcw in namespace deployment-7628 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-12-03 20:27:25 +0000 UTC 2024-12-03 20:27:25 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1203 20:27:26.280683 23 deployment.go:612] Observed deployment test-deployment-glqcw in namespace deployment-7628 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-03 20:27:25 +0000 UTC 2024-12-03 20:27:24 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-glqcw-c8586b885" has successfully progressed.}
  I1203 20:27:26.280960 23 deployment.go:616] Observed &Deployment event: MODIFIED
  I1203 20:27:26.281016 23 deployment.go:612] Observed deployment test-deployment-glqcw in namespace deployment-7628 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-12-03 20:27:25 +0000 UTC 2024-12-03 20:27:25 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1203 20:27:26.281044 23 deployment.go:612] Observed deployment test-deployment-glqcw in namespace deployment-7628 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-03 20:27:25 +0000 UTC 2024-12-03 20:27:24 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-glqcw-c8586b885" has successfully progressed.}
  I1203 20:27:26.281072 23 deployment.go:612] Observed deployment test-deployment-glqcw in namespace deployment-7628 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1203 20:27:26.281367 23 deployment.go:616] Observed &Deployment event: MODIFIED
  I1203 20:27:26.281469 23 deployment.go:609] Found deployment test-deployment-glqcw in namespace deployment-7628 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I1203 20:27:26.281513 23 deployment.go:620] Deployment test-deployment-glqcw has a patched status
  I1203 20:27:26.285546 23 deployment.go:633] Deployment "test-deployment-glqcw":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-glqcw",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7628",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c9800cd1-5e4b-4d37-ac41-9fb3c5413d9c",
      ResourceVersion: (string) (len=5) "29253",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854444,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854444,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=3) "e2e": (string) (len=7) "testing"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854446,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=55) "Found new replica set \"test-deployment-glqcw-c8586b885\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1203 20:27:26.292579 23 deployment.go:39] New ReplicaSet "test-deployment-glqcw-c8586b885" of Deployment "test-deployment-glqcw":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-glqcw-c8586b885",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7628",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "71885d49-d1ba-457c-964e-30e346616662",
      ResourceVersion: (string) (len=5) "29248",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854444,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885",
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-glqcw",
          UID: (types.UID) (len=36) "c9800cd1-5e4b-4d37-ac41-9fb3c5413d9c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854444,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 63 39 38  |k:{\"uid\":\"c98|
              00000120  30 30 63 64 31 2d 35 65  34 62 2d 34 64 33 37 2d  |00cd1-5e4b-4d37-|
              00000130  61 63 34 31 2d 39 66 62  33 63 35 34 31 33 64 39  |ac41-9fb3c5413d9|
              00000140  63 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |c\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854445,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1203 20:27:26.298679 23 deployment.go:67] Pod "test-deployment-glqcw-c8586b885-zxlmh" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "test-deployment-glqcw-c8586b885-zxlmh",
      GenerateName: (string) (len=32) "test-deployment-glqcw-c8586b885-",
      Namespace: (string) (len=15) "deployment-7628",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6213d51f-2c74-4f2d-b510-d6e24724fcf2",
      ResourceVersion: (string) (len=5) "29246",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854444,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "test-deployment-glqcw-c8586b885",
          UID: (types.UID) (len=36) "71885d49-d1ba-457c-964e-30e346616662",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854444,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 37 31 38 38 35 64 34  39 2d 64 31 62 61 2d 34  |"71885d49-d1ba-4|
              000000a0  35 37 63 2d 39 36 34 65  2d 33 30 65 33 34 36 36  |57c-964e-30e3466|
              000000b0  31 36 36 36 32 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |16662\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854445,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=661) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 34 34 2e 31 2e 31  37 33 5c 22 7d 22 3a 7b  |.244.1.173\"}":{|
              00000270  22 2e 22 3a 7b 7d 2c 22  66 3a 69 70 22 3a 7b 7d  |".":{},"f:ip":{}|
              00000280  7d 7d 2c 22 66 3a 73 74  61 72 74 54 69 6d 65 22  |}},"f:startTime"|
              00000290  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s75wx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s75wx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodea17",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854445,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854444,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854445,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854445,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854444,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=14) "192.168.100.37",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=14) "192.168.100.37"
        }
      },
      PodIP: (string) (len=12) "10.244.1.173",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=12) "10.244.1.173"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854444,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63868854444,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://33fce7273017c622756738aa5ad26708a84971240ebdd57d513dd8125d00c4e3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1203 20:27:26.301838 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7628" for this suite. @ 12/03/24 20:27:26.306
• [2.122 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 12/03/24 20:27:26.31
  I1203 20:27:26.311009 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename disruption @ 12/03/24 20:27:26.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:27:26.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:27:26.329
  STEP: Creating a kubernetes client @ 12/03/24 20:27:26.333
  I1203 20:27:26.334016 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename disruption-2 @ 12/03/24 20:27:26.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:27:26.346
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:27:26.35
  STEP: Waiting for the pdb to be processed @ 12/03/24 20:27:26.358
  STEP: Waiting for the pdb to be processed @ 12/03/24 20:27:28.372
  STEP: Waiting for the pdb to be processed @ 12/03/24 20:27:30.384
  STEP: listing a collection of PDBs across all namespaces @ 12/03/24 20:27:32.39
  STEP: listing a collection of PDBs in namespace disruption-1573 @ 12/03/24 20:27:32.394
  STEP: deleting a collection of PDBs @ 12/03/24 20:27:32.397
  STEP: Waiting for the PDB collection to be deleted @ 12/03/24 20:27:32.408
  I1203 20:27:32.413640 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-9346" for this suite. @ 12/03/24 20:27:32.418
  I1203 20:27:32.423589 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1573" for this suite. @ 12/03/24 20:27:32.427
• [6.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 12/03/24 20:27:32.436
  I1203 20:27:32.436164 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename watch @ 12/03/24 20:27:32.436
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:27:32.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:27:32.455
  STEP: creating a watch on configmaps @ 12/03/24 20:27:32.459
  STEP: creating a new configmap @ 12/03/24 20:27:32.461
  STEP: modifying the configmap once @ 12/03/24 20:27:32.466
  STEP: closing the watch once it receives two notifications @ 12/03/24 20:27:32.476
  I1203 20:27:32.476527 23 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1673  bea7cdf9-b785-4b25-abb0-1660637023b3 29318 0 2024-12-03 20:27:32 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-12-03 20:27:32 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1203 20:27:32.476805 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1673  bea7cdf9-b785-4b25-abb0-1660637023b3 29319 0 2024-12-03 20:27:32 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-12-03 20:27:32 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 12/03/24 20:27:32.476
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 12/03/24 20:27:32.485
  STEP: deleting the configmap @ 12/03/24 20:27:32.487
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 12/03/24 20:27:32.492
  I1203 20:27:32.493039 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1673  bea7cdf9-b785-4b25-abb0-1660637023b3 29320 0 2024-12-03 20:27:32 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-12-03 20:27:32 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1203 20:27:32.493168 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-1673  bea7cdf9-b785-4b25-abb0-1660637023b3 29321 0 2024-12-03 20:27:32 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-12-03 20:27:32 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1203 20:27:32.493255 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1673" for this suite. @ 12/03/24 20:27:32.497
• [0.067 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2203
  STEP: Creating a kubernetes client @ 12/03/24 20:27:32.503
  I1203 20:27:32.503392 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename services @ 12/03/24 20:27:32.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:27:32.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:27:32.522
  STEP: creating service in namespace services-7578 @ 12/03/24 20:27:32.527
  STEP: creating service affinity-clusterip-transition in namespace services-7578 @ 12/03/24 20:27:32.527
  STEP: creating replication controller affinity-clusterip-transition in namespace services-7578 @ 12/03/24 20:27:32.544
  I1203 20:27:32.550702      23 runners.go:198] Created replication controller with name: affinity-clusterip-transition, namespace: services-7578, replica count: 3
  I1203 20:27:35.602585      23 runners.go:198] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1203 20:27:35.610672 23 resource.go:361] Creating new exec pod
  I1203 20:27:38.630348 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-7578 exec execpod-affinitynft8z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I1203 20:27:40.808495 23 builder.go:135] rc: 1
  I1203 20:27:40.808614 23 jig.go:916] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-7578 exec execpod-affinitynft8z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 affinity-clusterip-transition 80
  nc: connect to affinity-clusterip-transition port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1203 20:27:40.808773 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-7578 exec execpod-affinitynft8z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I1203 20:27:42.969286 23 builder.go:135] rc: 1
  I1203 20:27:42.969428 23 jig.go:916] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-7578 exec execpod-affinitynft8z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 affinity-clusterip-transition 80
  nc: connect to affinity-clusterip-transition port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1203 20:27:42.969634 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-7578 exec execpod-affinitynft8z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I1203 20:27:45.138419 23 builder.go:135] rc: 1
  I1203 20:27:45.138512 23 jig.go:916] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-7578 exec execpod-affinitynft8z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 affinity-clusterip-transition 80
  nc: connect to affinity-clusterip-transition port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1203 20:27:45.138700 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-7578 exec execpod-affinitynft8z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I1203 20:27:47.310383 23 builder.go:135] rc: 1
  I1203 20:27:47.310495 23 jig.go:916] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-7578 exec execpod-affinitynft8z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 affinity-clusterip-transition 80
  nc: connect to affinity-clusterip-transition port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1203 20:27:47.310690 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-7578 exec execpod-affinitynft8z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I1203 20:27:47.478444 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  I1203 20:27:47.478533 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1203 20:27:47.478716 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-7578 exec execpod-affinitynft8z -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.104.223.135 80'
  I1203 20:27:47.644760 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.104.223.135 80\nConnection to 10.104.223.135 80 port [tcp/http] succeeded!\n"
  I1203 20:27:47.644843 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1203 20:27:47.655183 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-7578 exec execpod-affinitynft8z -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.104.223.135:80/ ; done'
  I1203 20:27:47.944003 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.223.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.223.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.223.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.223.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.223.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.223.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.223.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.223.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.223.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.223.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.223.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.223.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.223.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.223.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.223.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.223.135:80/\n"
  I1203 20:27:47.944096 23 builder.go:147] stdout: "\naffinity-clusterip-transition-4ns27\naffinity-clusterip-transition-fcdfr\naffinity-clusterip-transition-4ns27\naffinity-clusterip-transition-c8rh2\naffinity-clusterip-transition-4ns27\naffinity-clusterip-transition-c8rh2\naffinity-clusterip-transition-fcdfr\naffinity-clusterip-transition-fcdfr\naffinity-clusterip-transition-4ns27\naffinity-clusterip-transition-fcdfr\naffinity-clusterip-transition-c8rh2\naffinity-clusterip-transition-c8rh2\naffinity-clusterip-transition-c8rh2\naffinity-clusterip-transition-4ns27\naffinity-clusterip-transition-fcdfr\naffinity-clusterip-transition-fcdfr"
  I1203 20:27:47.944130 23 service.go:242] Received response from host: affinity-clusterip-transition-4ns27
  I1203 20:27:47.944152 23 service.go:242] Received response from host: affinity-clusterip-transition-fcdfr
  I1203 20:27:47.944171 23 service.go:242] Received response from host: affinity-clusterip-transition-4ns27
  I1203 20:27:47.944191 23 service.go:242] Received response from host: affinity-clusterip-transition-c8rh2
  I1203 20:27:47.944211 23 service.go:242] Received response from host: affinity-clusterip-transition-4ns27
  I1203 20:27:47.944229 23 service.go:242] Received response from host: affinity-clusterip-transition-c8rh2
  I1203 20:27:47.944254 23 service.go:242] Received response from host: affinity-clusterip-transition-fcdfr
  I1203 20:27:47.944288 23 service.go:242] Received response from host: affinity-clusterip-transition-fcdfr
  I1203 20:27:47.944339 23 service.go:242] Received response from host: affinity-clusterip-transition-4ns27
  I1203 20:27:47.944399 23 service.go:242] Received response from host: affinity-clusterip-transition-fcdfr
  I1203 20:27:47.944422 23 service.go:242] Received response from host: affinity-clusterip-transition-c8rh2
  I1203 20:27:47.944444 23 service.go:242] Received response from host: affinity-clusterip-transition-c8rh2
  I1203 20:27:47.944462 23 service.go:242] Received response from host: affinity-clusterip-transition-c8rh2
  I1203 20:27:47.944481 23 service.go:242] Received response from host: affinity-clusterip-transition-4ns27
  I1203 20:27:47.944499 23 service.go:242] Received response from host: affinity-clusterip-transition-fcdfr
  I1203 20:27:47.944517 23 service.go:242] Received response from host: affinity-clusterip-transition-fcdfr
  I1203 20:27:47.955810 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-7578 exec execpod-affinitynft8z -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.104.223.135:80/ ; done'
  I1203 20:27:48.251502 23 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.223.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.223.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.223.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.223.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.223.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.223.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.223.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.223.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.223.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.223.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.223.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.223.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.223.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.223.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.223.135:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.223.135:80/\n"
  I1203 20:27:48.251601 23 builder.go:147] stdout: "\naffinity-clusterip-transition-fcdfr\naffinity-clusterip-transition-fcdfr\naffinity-clusterip-transition-fcdfr\naffinity-clusterip-transition-fcdfr\naffinity-clusterip-transition-fcdfr\naffinity-clusterip-transition-fcdfr\naffinity-clusterip-transition-fcdfr\naffinity-clusterip-transition-fcdfr\naffinity-clusterip-transition-fcdfr\naffinity-clusterip-transition-fcdfr\naffinity-clusterip-transition-fcdfr\naffinity-clusterip-transition-fcdfr\naffinity-clusterip-transition-fcdfr\naffinity-clusterip-transition-fcdfr\naffinity-clusterip-transition-fcdfr\naffinity-clusterip-transition-fcdfr"
  I1203 20:27:48.251635 23 service.go:242] Received response from host: affinity-clusterip-transition-fcdfr
  I1203 20:27:48.251658 23 service.go:242] Received response from host: affinity-clusterip-transition-fcdfr
  I1203 20:27:48.251677 23 service.go:242] Received response from host: affinity-clusterip-transition-fcdfr
  I1203 20:27:48.251696 23 service.go:242] Received response from host: affinity-clusterip-transition-fcdfr
  I1203 20:27:48.251715 23 service.go:242] Received response from host: affinity-clusterip-transition-fcdfr
  I1203 20:27:48.251733 23 service.go:242] Received response from host: affinity-clusterip-transition-fcdfr
  I1203 20:27:48.251759 23 service.go:242] Received response from host: affinity-clusterip-transition-fcdfr
  I1203 20:27:48.251791 23 service.go:242] Received response from host: affinity-clusterip-transition-fcdfr
  I1203 20:27:48.251812 23 service.go:242] Received response from host: affinity-clusterip-transition-fcdfr
  I1203 20:27:48.251830 23 service.go:242] Received response from host: affinity-clusterip-transition-fcdfr
  I1203 20:27:48.251848 23 service.go:242] Received response from host: affinity-clusterip-transition-fcdfr
  I1203 20:27:48.251866 23 service.go:242] Received response from host: affinity-clusterip-transition-fcdfr
  I1203 20:27:48.251884 23 service.go:242] Received response from host: affinity-clusterip-transition-fcdfr
  I1203 20:27:48.251901 23 service.go:242] Received response from host: affinity-clusterip-transition-fcdfr
  I1203 20:27:48.251919 23 service.go:242] Received response from host: affinity-clusterip-transition-fcdfr
  I1203 20:27:48.251937 23 service.go:242] Received response from host: affinity-clusterip-transition-fcdfr
  I1203 20:27:48.252057 23 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-7578, will wait for the garbage collector to delete the pods @ 12/03/24 20:27:48.264
  I1203 20:27:48.325028 23 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 6.707775ms
  I1203 20:27:48.425512 23 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 100.477917ms
  I1203 20:27:51.446064 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7578" for this suite. @ 12/03/24 20:27:51.451
• [18.953 seconds]
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 12/03/24 20:27:51.456
  I1203 20:27:51.456903 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename configmap @ 12/03/24 20:27:51.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:27:51.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:27:51.473
  STEP: Creating configMap with name configmap-test-upd-a8df725d-2154-48ba-b836-954007df25e3 @ 12/03/24 20:27:51.481
  STEP: Creating the pod @ 12/03/24 20:27:51.486
  STEP: Waiting for pod with text data @ 12/03/24 20:27:53.504
  STEP: Waiting for pod with binary data @ 12/03/24 20:27:53.512
  I1203 20:27:53.519561 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8733" for this suite. @ 12/03/24 20:27:53.523
• [2.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 12/03/24 20:27:53.53
  I1203 20:27:53.530235 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename deployment @ 12/03/24 20:27:53.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:27:53.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:27:53.559
  I1203 20:27:53.563686 23 deployment.go:792] Creating deployment "test-recreate-deployment"
  I1203 20:27:53.569112 23 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I1203 20:27:53.577876 23 deployment.go:222] deployment "test-recreate-deployment" doesn't have the required revision set
  I1203 20:27:55.587984 23 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I1203 20:27:55.591848 23 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I1203 20:27:55.604306 23 deployment.go:313] Updating deployment test-recreate-deployment
  I1203 20:27:55.604386 23 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I1203 20:27:55.693336 23 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4907",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "631fbf5b-4bc2-4f53-a9f5-d88364a910a2",
      ResourceVersion: (string) (len=5) "29521",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854473,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854473,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-66b65d9f8f\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1203 20:27:55.702091 23 deployment.go:39] New ReplicaSet "test-recreate-deployment-66b65d9f8f" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-66b65d9f8f",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4907",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8161c830-1b84-4a01-a6b8-0b0177bad02a",
      ResourceVersion: (string) (len=5) "29518",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854475,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "631fbf5b-4bc2-4f53-a9f5-d88364a910a2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 33 31 66 62 66  35 62 2d 34 62 63 32 2d  |\"631fbf5b-4bc2-|
              00000120  34 66 35 33 2d 61 39 66  35 2d 64 38 38 33 36 34  |4f53-a9f5-d88364|
              00000130  61 39 31 30 61 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a910a2\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f",
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1203 20:27:55.704288 23 deployment.go:44] All old ReplicaSets of Deployment "test-recreate-deployment":
  I1203 20:27:55.704724 23 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-6b6d9cd7b6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4907",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ea100ab1-5678-4b36-90c1-9f0c86fc55e3",
      ResourceVersion: (string) (len=5) "29510",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854473,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6b6d9cd7b6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "631fbf5b-4bc2-4f53-a9f5-d88364a910a2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 33 31 66 62 66  35 62 2d 34 62 63 32 2d  |\"631fbf5b-4bc2-|
              00000120  34 66 35 33 2d 61 39 66  35 2d 64 38 38 33 36 34  |4f53-a9f5-d88364|
              00000130  61 39 31 30 61 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a910a2\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6b6d9cd7b6"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6b6d9cd7b6"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1203 20:27:55.711714 23 deployment.go:67] Pod "test-recreate-deployment-66b65d9f8f-hv8l5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-66b65d9f8f-hv8l5",
      GenerateName: (string) (len=36) "test-recreate-deployment-66b65d9f8f-",
      Namespace: (string) (len=15) "deployment-4907",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "93c44d78-7eb9-4aa1-9431-100a55c04efd",
      ResourceVersion: (string) (len=5) "29522",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854475,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-66b65d9f8f",
          UID: (types.UID) (len=36) "8161c830-1b84-4a01-a6b8-0b0177bad02a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 31  36 31 63 38 33 30 2d 31  |d\":\"8161c830-1|
              00000090  62 38 34 2d 34 61 30 31  2d 61 36 62 38 2d 30 62  |b84-4a01-a6b8-0b|
              000000a0  30 31 37 37 62 61 64 30  32 61 5c 22 7d 22 3a 7b  |0177bad02a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-296xt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-296xt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=7) "nodeb14",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63868854475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.100.114",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.100.114"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63868854475,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1203 20:27:55.714563 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4907" for this suite. @ 12/03/24 20:27:55.719
• [2.196 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 12/03/24 20:27:55.726
  I1203 20:27:55.726482 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename dns @ 12/03/24 20:27:55.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:27:55.741
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:27:55.745
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 12/03/24 20:27:55.75
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 12/03/24 20:27:55.75
  STEP: creating a pod to probe DNS @ 12/03/24 20:27:55.75
  STEP: submitting the pod to kubernetes @ 12/03/24 20:27:55.75
  STEP: retrieving the pod @ 12/03/24 20:27:57.77
  STEP: looking for the results for each expected name from probers @ 12/03/24 20:27:57.774
  I1203 20:27:57.794393 23 dns_common.go:527] DNS probes using dns-4550/dns-test-4023e70b-bcb1-4d32-9c3a-ae9aaaf48664 succeeded

  STEP: deleting the pod @ 12/03/24 20:27:57.794
  I1203 20:27:57.808702 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4550" for this suite. @ 12/03/24 20:27:57.813
• [2.092 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 12/03/24 20:27:57.819
  I1203 20:27:57.819426 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename projected @ 12/03/24 20:27:57.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:27:57.831
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:27:57.836
  STEP: Creating the pod @ 12/03/24 20:27:57.84
  I1203 20:28:00.386367 23 pod_client.go:141] Successfully updated pod "labelsupdateb481602b-9102-44db-b9fb-d385b5ae9d57"
  I1203 20:28:02.402604 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4592" for this suite. @ 12/03/24 20:28:02.407
• [4.596 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 12/03/24 20:28:02.415
  I1203 20:28:02.415851 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename svcaccounts @ 12/03/24 20:28:02.417
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:28:02.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:28:02.434
  I1203 20:28:02.457689 23 service_accounts.go:253] created pod pod-service-account-defaultsa
  I1203 20:28:02.457746 23 service_accounts.go:267] pod pod-service-account-defaultsa service account token volume mount: true
  I1203 20:28:02.464501 23 service_accounts.go:253] created pod pod-service-account-mountsa
  I1203 20:28:02.464551 23 service_accounts.go:267] pod pod-service-account-mountsa service account token volume mount: true
  I1203 20:28:02.472741 23 service_accounts.go:253] created pod pod-service-account-nomountsa
  I1203 20:28:02.472797 23 service_accounts.go:267] pod pod-service-account-nomountsa service account token volume mount: false
  I1203 20:28:02.480183 23 service_accounts.go:253] created pod pod-service-account-defaultsa-mountspec
  I1203 20:28:02.480236 23 service_accounts.go:267] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I1203 20:28:02.501011 23 service_accounts.go:253] created pod pod-service-account-mountsa-mountspec
  I1203 20:28:02.501050 23 service_accounts.go:267] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I1203 20:28:02.507379 23 service_accounts.go:253] created pod pod-service-account-nomountsa-mountspec
  I1203 20:28:02.507446 23 service_accounts.go:267] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I1203 20:28:02.514338 23 service_accounts.go:253] created pod pod-service-account-defaultsa-nomountspec
  I1203 20:28:02.514397 23 service_accounts.go:267] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I1203 20:28:02.520068 23 service_accounts.go:253] created pod pod-service-account-mountsa-nomountspec
  I1203 20:28:02.520113 23 service_accounts.go:267] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I1203 20:28:02.526480 23 service_accounts.go:253] created pod pod-service-account-nomountsa-nomountspec
  I1203 20:28:02.526511 23 service_accounts.go:267] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I1203 20:28:02.526657 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6995" for this suite. @ 12/03/24 20:28:02.53
• [0.133 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:866
  STEP: Creating a kubernetes client @ 12/03/24 20:28:02.548
  I1203 20:28:02.548754 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename webhook @ 12/03/24 20:28:02.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:28:02.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:28:02.567
  STEP: Setting up server cert @ 12/03/24 20:28:02.583
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/03/24 20:28:03.275
  STEP: Deploying the webhook pod @ 12/03/24 20:28:03.283
  STEP: Wait for the deployment to be ready @ 12/03/24 20:28:03.306
  I1203 20:28:03.314307 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/03/24 20:28:05.328
  STEP: Verifying the service has paired with the endpoint @ 12/03/24 20:28:05.341
  I1203 20:28:06.341694 23 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 12/03/24 20:28:06.35
  STEP: create the configmap with a random name @ 12/03/24 20:28:06.379
  STEP: verify the configmap is mutated @ 12/03/24 20:28:06.395
  STEP: create the configmap with 'skip-me' name @ 12/03/24 20:28:06.395
  I1203 20:28:06.444863 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3635" for this suite. @ 12/03/24 20:28:06.45
  STEP: Destroying namespace "webhook-markers-5497" for this suite. @ 12/03/24 20:28:06.454
• [3.910 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 12/03/24 20:28:06.458
  I1203 20:28:06.459033 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename field-validation @ 12/03/24 20:28:06.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:28:06.472
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:28:06.476
  I1203 20:28:06.480116 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  W1203 20:28:06.481342      23 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc000e263e0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W1203 20:28:09.044111      23 warnings.go:70] unknown field "alpha"
  W1203 20:28:09.044174      23 warnings.go:70] unknown field "beta"
  W1203 20:28:09.044186      23 warnings.go:70] unknown field "delta"
  W1203 20:28:09.044198      23 warnings.go:70] unknown field "epsilon"
  W1203 20:28:09.044209      23 warnings.go:70] unknown field "gamma"
  I1203 20:28:09.591361 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2871" for this suite. @ 12/03/24 20:28:09.595
• [3.144 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:397
  STEP: Creating a kubernetes client @ 12/03/24 20:28:09.603
  I1203 20:28:09.603435 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename resourcequota @ 12/03/24 20:28:09.604
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:28:09.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:28:09.621
  STEP: Counting existing ResourceQuota @ 12/03/24 20:28:09.625
  STEP: Creating a ResourceQuota @ 12/03/24 20:28:14.63
  STEP: Ensuring resource quota status is calculated @ 12/03/24 20:28:14.638
  STEP: Creating a ReplicationController @ 12/03/24 20:28:16.644
  STEP: Ensuring resource quota status captures replication controller creation @ 12/03/24 20:28:16.657
  STEP: Deleting a ReplicationController @ 12/03/24 20:28:18.663
  STEP: Ensuring resource quota status released usage @ 12/03/24 20:28:18.669
  I1203 20:28:20.676087 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8693" for this suite. @ 12/03/24 20:28:20.682
• [11.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 12/03/24 20:28:20.69
  I1203 20:28:20.690956 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename projected @ 12/03/24 20:28:20.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:28:20.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:28:20.711
  STEP: Creating a pod to test downward API volume plugin @ 12/03/24 20:28:20.716
  STEP: Saw pod success @ 12/03/24 20:28:24.74
  I1203 20:28:24.743915 23 output.go:196] Trying to get logs from node nodea17 pod downwardapi-volume-6265ab35-9c22-4dd1-9d6d-c671c59d420c container client-container: <nil>
  STEP: delete the pod @ 12/03/24 20:28:24.751
  I1203 20:28:24.766907 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1332" for this suite. @ 12/03/24 20:28:24.771
• [4.086 seconds]
------------------------------
S
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3572
  STEP: Creating a kubernetes client @ 12/03/24 20:28:24.777
  I1203 20:28:24.777265 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename services @ 12/03/24 20:28:24.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:28:24.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:28:24.794
  STEP: creating a collection of services @ 12/03/24 20:28:24.798
  I1203 20:28:24.798545 23 service.go:3608] Creating e2e-svc-a-sb8vt
  I1203 20:28:24.812959 23 service.go:3608] Creating e2e-svc-b-5mdf5
  I1203 20:28:24.827340 23 service.go:3608] Creating e2e-svc-c-db7hj
  STEP: deleting service collection @ 12/03/24 20:28:24.846
  I1203 20:28:24.902634 23 service.go:3643] Collection of services has been deleted
  I1203 20:28:24.902831 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1005" for this suite. @ 12/03/24 20:28:24.907
• [0.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 12/03/24 20:28:24.913
  I1203 20:28:24.913104 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename ingress @ 12/03/24 20:28:24.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:28:24.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:28:24.93
  STEP: getting /apis @ 12/03/24 20:28:24.934
  STEP: getting /apis/networking.k8s.io @ 12/03/24 20:28:24.94
  STEP: getting /apis/networking.k8s.iov1 @ 12/03/24 20:28:24.942
  STEP: creating @ 12/03/24 20:28:24.944
  STEP: getting @ 12/03/24 20:28:24.96
  STEP: listing @ 12/03/24 20:28:24.962
  STEP: watching @ 12/03/24 20:28:24.965
  I1203 20:28:24.965631 23 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 12/03/24 20:28:24.967
  STEP: cluster-wide watching @ 12/03/24 20:28:24.97
  I1203 20:28:24.970884 23 ingress.go:198] starting watch
  STEP: patching @ 12/03/24 20:28:24.972
  STEP: updating @ 12/03/24 20:28:24.978
  I1203 20:28:24.986008 23 ingress.go:221] waiting for watch events with expected annotations
  I1203 20:28:24.986093 23 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 12/03/24 20:28:24.986
  STEP: updating /status @ 12/03/24 20:28:24.993
  STEP: get /status @ 12/03/24 20:28:25.017
  STEP: deleting @ 12/03/24 20:28:25.021
  STEP: deleting a collection @ 12/03/24 20:28:25.032
  I1203 20:28:25.044805 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-6810" for this suite. @ 12/03/24 20:28:25.048
• [0.140 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 12/03/24 20:28:25.053
  I1203 20:28:25.053635 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename container-probe @ 12/03/24 20:28:25.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:28:25.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:28:25.072
  STEP: Creating pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378 @ 12/03/24 20:28:25.076
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/03/24 20:28:27.092
  I1203 20:28:27.096505 23 container_probe.go:1749] Initial restart count of pod liveness-30924a30-c5c0-450f-8659-95386ae7afea is 0
  I1203 20:28:27.100537 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:28:29.106952 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:28:31.112302 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:28:33.118851 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:28:35.125998 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:28:37.133483 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:28:39.138994 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:28:41.144919 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:28:43.151005 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:28:45.157951 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:28:47.164646 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:28:47.164750 23 container_probe.go:1763] Restart count of pod container-probe-7378/liveness-30924a30-c5c0-450f-8659-95386ae7afea is now 1 (20.068173785s elapsed)
  I1203 20:28:49.169801 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:28:51.174861 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:28:53.180130 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:28:55.185898 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:28:57.192758 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:28:59.199046 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:29:01.205053 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:29:03.211399 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:29:05.217400 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:29:07.222771 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:29:07.222860 23 container_probe.go:1763] Restart count of pod container-probe-7378/liveness-30924a30-c5c0-450f-8659-95386ae7afea is now 2 (40.126285481s elapsed)
  I1203 20:29:09.229092 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:29:11.235409 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:29:13.241082 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:29:15.246233 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:29:17.251596 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:29:19.256858 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:29:21.261825 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:29:23.267729 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:29:25.273129 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:29:27.279848 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:29:27.279932 23 container_probe.go:1763] Restart count of pod container-probe-7378/liveness-30924a30-c5c0-450f-8659-95386ae7afea is now 3 (1m0.183356985s elapsed)
  I1203 20:29:29.286638 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:29:31.292492 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:29:33.298733 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:29:35.305680 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:29:37.312168 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:29:39.317181 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:29:41.323625 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:29:43.329607 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:29:45.335788 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:29:47.341669 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:29:47.341748 23 container_probe.go:1763] Restart count of pod container-probe-7378/liveness-30924a30-c5c0-450f-8659-95386ae7afea is now 4 (1m20.245171705s elapsed)
  I1203 20:29:49.347899 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:29:51.353856 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:29:53.360136 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:29:55.365815 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:29:57.371425 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:29:59.377516 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:30:01.383365 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:30:03.390276 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:30:05.396126 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:30:07.402609 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:30:09.409280 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:30:11.414570 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:30:13.420547 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:30:15.427189 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:30:17.433701 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:30:19.439731 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:30:21.446176 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:30:23.452347 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:30:25.458118 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:30:27.464984 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:30:29.471983 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:30:31.478455 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:30:33.483391 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:30:35.489486 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:30:37.495352 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:30:39.501352 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:30:41.507444 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:30:43.513404 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:30:45.519086 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:30:47.525298 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:30:49.530314 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:30:51.536634 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:30:53.543046 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:30:55.549164 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:30:57.555416 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:30:59.560619 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:31:01.566019 23 container_probe.go:1759] Get pod liveness-30924a30-c5c0-450f-8659-95386ae7afea in namespace container-probe-7378
  I1203 20:31:01.566077 23 container_probe.go:1763] Restart count of pod container-probe-7378/liveness-30924a30-c5c0-450f-8659-95386ae7afea is now 5 (2m34.469503702s elapsed)
  STEP: deleting the pod @ 12/03/24 20:31:01.566
  I1203 20:31:01.579159 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7378" for this suite. @ 12/03/24 20:31:01.583
• [156.535 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 12/03/24 20:31:01.588
  I1203 20:31:01.588933 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename taint-multiple-pods @ 12/03/24 20:31:01.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:31:01.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:31:01.607
  I1203 20:31:01.611161 23 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1203 20:32:01.612311 23 util.go:400] Waiting for terminating namespaces to be deleted...
  I1203 20:32:01.617643 23 taints.go:150] Starting informer...
  STEP: Starting pods... @ 12/03/24 20:32:01.617
  I1203 20:32:01.840352 23 taints.go:469] Pod1 is running on nodea17. Tainting Node
  I1203 20:32:04.063735 23 taints.go:477] Pod2 is running on nodea17. Tainting Node
  STEP: Trying to apply a taint on the Node @ 12/03/24 20:32:04.063
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/03/24 20:32:04.08
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 12/03/24 20:32:04.083
  I1203 20:32:09.989807 23 taints.go:498] Noticed Pod "taint-eviction-b1" gets evicted.
  I1203 20:32:30.049238 23 taints.go:498] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/03/24 20:32:30.064
  I1203 20:32:30.067936 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-2926" for this suite. @ 12/03/24 20:32:30.071
• [88.488 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 12/03/24 20:32:30.076
  I1203 20:32:30.076841 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename emptydir @ 12/03/24 20:32:30.078
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:32:30.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:32:30.104
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 12/03/24 20:32:30.108
  STEP: Saw pod success @ 12/03/24 20:32:34.134
  I1203 20:32:34.138109 23 output.go:196] Trying to get logs from node nodea17 pod pod-0b2642c8-6545-4cb9-b168-0521f801a707 container test-container: <nil>
  STEP: delete the pod @ 12/03/24 20:32:34.161
  I1203 20:32:34.182792 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3689" for this suite. @ 12/03/24 20:32:34.187
• [4.119 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 12/03/24 20:32:34.196
  I1203 20:32:34.196662 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename dns @ 12/03/24 20:32:34.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:32:34.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:32:34.212
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 12/03/24 20:32:34.216
  I1203 20:32:34.224031 23 dns.go:419] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-6067  b6333fd1-900a-4001-8478-c1e22a5f7cec 30433 0 2024-12-03 20:32:34 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-12-03 20:32:34 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-th4px,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.47,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-th4px,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 12/03/24 20:32:36.232
  I1203 20:32:36.232446 23 exec_util.go:55] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-6067 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1203 20:32:36.232494 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  I1203 20:32:36.233462 23 exec_util.go:62] ExecWithOptions: Clientset creation
  I1203 20:32:36.233568 23 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-6067/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 12/03/24 20:32:36.325
  I1203 20:32:36.325364 23 exec_util.go:55] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-6067 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1203 20:32:36.325401 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  I1203 20:32:36.326461 23 exec_util.go:62] ExecWithOptions: Clientset creation
  I1203 20:32:36.326555 23 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-6067/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1203 20:32:36.417656 23 dns.go:421] Deleting pod test-dns-nameservers...
  I1203 20:32:36.428798 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6067" for this suite. @ 12/03/24 20:32:36.44
• [2.265 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 12/03/24 20:32:36.462
  I1203 20:32:36.462730 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename svcaccounts @ 12/03/24 20:32:36.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:32:36.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:32:36.477
  STEP: reading a file in the container @ 12/03/24 20:32:38.501
  I1203 20:32:38.501447 23 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-563 pod-service-account-20e2a70c-dd24-41ab-8313-ad395c37a9dc -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 12/03/24 20:32:38.669
  I1203 20:32:38.669230 23 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-563 pod-service-account-20e2a70c-dd24-41ab-8313-ad395c37a9dc -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 12/03/24 20:32:38.841
  I1203 20:32:38.841305 23 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-563 pod-service-account-20e2a70c-dd24-41ab-8313-ad395c37a9dc -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I1203 20:32:39.007110 23 service_accounts.go:114] Got root ca configmap in namespace "svcaccounts-563"
  I1203 20:32:39.011371 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-563" for this suite. @ 12/03/24 20:32:39.016
• [2.561 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 12/03/24 20:32:39.024
  I1203 20:32:39.024361 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename runtimeclass @ 12/03/24 20:32:39.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:32:39.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:32:39.044
  STEP: Deleting RuntimeClass runtimeclass-5092-delete-me @ 12/03/24 20:32:39.053
  STEP: Waiting for the RuntimeClass to disappear @ 12/03/24 20:32:39.062
  I1203 20:32:39.073898 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5092" for this suite. @ 12/03/24 20:32:39.078
• [0.059 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 12/03/24 20:32:39.084
  I1203 20:32:39.084211 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename aggregateddiscovery @ 12/03/24 20:32:39.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:32:39.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:32:39.105
  I1203 20:32:39.116577 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-4543" for this suite. @ 12/03/24 20:32:39.12
• [0.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 12/03/24 20:32:39.126
  I1203 20:32:39.126534 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename projected @ 12/03/24 20:32:39.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:32:39.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:32:39.146
  STEP: Creating configMap with name configmap-projected-all-test-volume-e5e35bdd-6afb-4a8a-983e-eb67ea792eb6 @ 12/03/24 20:32:39.151
  STEP: Creating secret with name secret-projected-all-test-volume-a4febc1a-ab7e-46ab-bbd3-b9dcd5b40dc0 @ 12/03/24 20:32:39.157
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 12/03/24 20:32:39.172
  STEP: Saw pod success @ 12/03/24 20:32:43.195
  I1203 20:32:43.200151 23 output.go:196] Trying to get logs from node nodea17 pod projected-volume-2c06822f-7126-4ad4-a2e8-8ae5494f60b3 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 12/03/24 20:32:43.207
  I1203 20:32:43.221118 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5313" for this suite. @ 12/03/24 20:32:43.225
• [4.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 12/03/24 20:32:43.244
  I1203 20:32:43.244383 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename pod-network-test @ 12/03/24 20:32:43.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:32:43.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:32:43.261
  STEP: Performing setup for networking test in namespace pod-network-test-5050 @ 12/03/24 20:32:43.266
  STEP: creating a selector @ 12/03/24 20:32:43.266
  STEP: Creating the service pods in kubernetes @ 12/03/24 20:32:43.266
  I1203 20:32:43.266219 23 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 12/03/24 20:33:09.38
  I1203 20:33:11.414425 23 utils.go:779] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I1203 20:33:11.414508 23 utils.go:472] Going to poll 10.244.1.192 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I1203 20:33:11.417724 23 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.1.192:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5050 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1203 20:33:11.417785 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  I1203 20:33:11.419096 23 exec_util.go:62] ExecWithOptions: Clientset creation
  I1203 20:33:11.419284 23 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-5050/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.1.192%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1203 20:33:11.504238 23 utils.go:489] Found all 1 expected endpoints: [netserver-0]
  I1203 20:33:11.504289 23 utils.go:472] Going to poll 10.244.2.224 on port 8083 at least 0 times, with a maximum of 34 tries before failing
  I1203 20:33:11.508962 23 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.244.2.224:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5050 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1203 20:33:11.509031 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  I1203 20:33:11.510049 23 exec_util.go:62] ExecWithOptions: Clientset creation
  I1203 20:33:11.510167 23 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-5050/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.244.2.224%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1203 20:33:11.598236 23 utils.go:489] Found all 1 expected endpoints: [netserver-1]
  I1203 20:33:11.598386 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5050" for this suite. @ 12/03/24 20:33:11.603
• [28.365 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 12/03/24 20:33:11.61
  I1203 20:33:11.610107 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename webhook @ 12/03/24 20:33:11.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:33:11.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:33:11.628
  STEP: Setting up server cert @ 12/03/24 20:33:11.649
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/03/24 20:33:12.066
  STEP: Deploying the webhook pod @ 12/03/24 20:33:12.076
  STEP: Wait for the deployment to be ready @ 12/03/24 20:33:12.09
  I1203 20:33:12.099282 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/03/24 20:33:14.112
  STEP: Verifying the service has paired with the endpoint @ 12/03/24 20:33:14.125
  I1203 20:33:15.126121 23 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 12/03/24 20:33:15.135
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/03/24 20:33:15.135
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 12/03/24 20:33:15.157
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 12/03/24 20:33:16.168
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/03/24 20:33:16.168
  STEP: Having no error when timeout is longer than webhook latency @ 12/03/24 20:33:17.199
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/03/24 20:33:17.199
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 12/03/24 20:33:22.235
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/03/24 20:33:22.235
  I1203 20:33:27.342918 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9378" for this suite. @ 12/03/24 20:33:27.347
  STEP: Destroying namespace "webhook-markers-2072" for this suite. @ 12/03/24 20:33:27.358
• [15.755 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 12/03/24 20:33:27.367
  I1203 20:33:27.367541 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename emptydir @ 12/03/24 20:33:27.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:33:27.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:33:27.389
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 12/03/24 20:33:27.394
  STEP: Saw pod success @ 12/03/24 20:33:31.42
  I1203 20:33:31.424391 23 output.go:196] Trying to get logs from node nodea17 pod pod-85b5dec1-384c-4857-bbdf-79b9fc97eeee container test-container: <nil>
  STEP: delete the pod @ 12/03/24 20:33:31.431
  I1203 20:33:31.446819 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2372" for this suite. @ 12/03/24 20:33:31.45
• [4.089 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 12/03/24 20:33:31.458
  I1203 20:33:31.458051 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename webhook @ 12/03/24 20:33:31.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:33:31.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:33:31.478
  STEP: Setting up server cert @ 12/03/24 20:33:31.505
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/03/24 20:33:31.904
  STEP: Deploying the webhook pod @ 12/03/24 20:33:31.913
  STEP: Wait for the deployment to be ready @ 12/03/24 20:33:31.927
  I1203 20:33:31.935676 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/03/24 20:33:33.949
  STEP: Verifying the service has paired with the endpoint @ 12/03/24 20:33:33.966
  I1203 20:33:34.966776 23 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 12/03/24 20:33:34.973
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 12/03/24 20:33:34.993
  STEP: Creating a dummy validating-webhook-configuration object @ 12/03/24 20:33:35.01
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 12/03/24 20:33:35.021
  STEP: Creating a dummy mutating-webhook-configuration object @ 12/03/24 20:33:35.026
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 12/03/24 20:33:35.034
  I1203 20:33:35.086284 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1541" for this suite. @ 12/03/24 20:33:35.091
  STEP: Destroying namespace "webhook-markers-4018" for this suite. @ 12/03/24 20:33:35.097
• [3.646 seconds]
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:342
  STEP: Creating a kubernetes client @ 12/03/24 20:33:35.104
  I1203 20:33:35.104264 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename kubectl @ 12/03/24 20:33:35.106
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:33:35.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:33:35.121
  STEP: creating a replication controller @ 12/03/24 20:33:35.126
  I1203 20:33:35.126676 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-7370 create -f -'
  I1203 20:33:35.312203 23 builder.go:146] stderr: ""
  I1203 20:33:35.312289 23 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/03/24 20:33:35.312
  I1203 20:33:35.312507 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-7370 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1203 20:33:35.403170 23 builder.go:146] stderr: ""
  I1203 20:33:35.403286 23 builder.go:147] stdout: "update-demo-nautilus-7gght update-demo-nautilus-9gnxw "
  I1203 20:33:35.403394 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-7370 get pods update-demo-nautilus-7gght -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1203 20:33:35.487857 23 builder.go:146] stderr: ""
  I1203 20:33:35.487953 23 builder.go:147] stdout: ""
  I1203 20:33:35.487981 23 kubectl.go:2501] update-demo-nautilus-7gght is created but not running
  I1203 20:33:40.488352 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-7370 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1203 20:33:40.582972 23 builder.go:146] stderr: ""
  I1203 20:33:40.583065 23 builder.go:147] stdout: "update-demo-nautilus-7gght update-demo-nautilus-9gnxw "
  I1203 20:33:40.583162 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-7370 get pods update-demo-nautilus-7gght -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1203 20:33:40.665997 23 builder.go:146] stderr: ""
  I1203 20:33:40.666075 23 builder.go:147] stdout: "true"
  I1203 20:33:40.666160 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-7370 get pods update-demo-nautilus-7gght -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1203 20:33:40.754787 23 builder.go:146] stderr: ""
  I1203 20:33:40.754874 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1203 20:33:40.754914 23 kubectl.go:2392] validating pod update-demo-nautilus-7gght
  I1203 20:33:40.761629 23 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I1203 20:33:40.761723 23 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1203 20:33:40.761749 23 kubectl.go:2519] update-demo-nautilus-7gght is verified up and running
  I1203 20:33:40.761815 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-7370 get pods update-demo-nautilus-9gnxw -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1203 20:33:40.854123 23 builder.go:146] stderr: ""
  I1203 20:33:40.854211 23 builder.go:147] stdout: "true"
  I1203 20:33:40.854312 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-7370 get pods update-demo-nautilus-9gnxw -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1203 20:33:40.945138 23 builder.go:146] stderr: ""
  I1203 20:33:40.945207 23 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1203 20:33:40.945232 23 kubectl.go:2392] validating pod update-demo-nautilus-9gnxw
  I1203 20:33:40.952461 23 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I1203 20:33:40.952558 23 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1203 20:33:40.952584 23 kubectl.go:2519] update-demo-nautilus-9gnxw is verified up and running
  STEP: using delete to clean up resources @ 12/03/24 20:33:40.952
  I1203 20:33:40.952727 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-7370 delete --grace-period=0 --force -f -'
  I1203 20:33:41.044717 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1203 20:33:41.044795 23 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I1203 20:33:41.044899 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-7370 get rc,svc -l name=update-demo --no-headers'
  I1203 20:33:41.142623 23 builder.go:146] stderr: "No resources found in kubectl-7370 namespace.\n"
  I1203 20:33:41.142701 23 builder.go:147] stdout: ""
  I1203 20:33:41.142790 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-7370 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1203 20:33:41.234050 23 builder.go:146] stderr: ""
  I1203 20:33:41.234127 23 builder.go:147] stdout: ""
  I1203 20:33:41.234351 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7370" for this suite. @ 12/03/24 20:33:41.24
• [6.143 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 12/03/24 20:33:41.247
  I1203 20:33:41.247637 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename field-validation @ 12/03/24 20:33:41.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:33:41.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:33:41.268
  I1203 20:33:41.273613 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  W1203 20:33:43.827071      23 warnings.go:70] unknown field "alpha"
  W1203 20:33:43.827159      23 warnings.go:70] unknown field "beta"
  W1203 20:33:43.827172      23 warnings.go:70] unknown field "delta"
  W1203 20:33:43.827183      23 warnings.go:70] unknown field "epsilon"
  W1203 20:33:43.827194      23 warnings.go:70] unknown field "gamma"
  I1203 20:33:44.374765 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3796" for this suite. @ 12/03/24 20:33:44.379
• [3.138 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 12/03/24 20:33:44.385
  I1203 20:33:44.385993 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename sched-preemption @ 12/03/24 20:33:44.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:33:44.401
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:33:44.406
  I1203 20:33:44.430521 23 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1203 20:34:44.437128 23 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 12/03/24 20:34:44.441
  I1203 20:34:44.469585 23 preemption.go:178] Created pod: pod0-0-sched-preemption-low-priority
  I1203 20:34:44.475486 23 preemption.go:178] Created pod: pod0-1-sched-preemption-medium-priority
  I1203 20:34:44.494038 23 preemption.go:178] Created pod: pod1-0-sched-preemption-medium-priority
  I1203 20:34:44.506541 23 preemption.go:178] Created pod: pod1-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 12/03/24 20:34:44.506
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 12/03/24 20:34:46.531
  I1203 20:34:48.597567 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9269" for this suite. @ 12/03/24 20:34:48.601
• [64.221 seconds]
------------------------------
S
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 12/03/24 20:34:48.606
  I1203 20:34:48.606915 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename disruption @ 12/03/24 20:34:48.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:34:48.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:34:48.625
  STEP: creating the pdb @ 12/03/24 20:34:48.63
  STEP: Waiting for the pdb to be processed @ 12/03/24 20:34:48.635
  STEP: updating the pdb @ 12/03/24 20:34:50.639
  STEP: Waiting for the pdb to be processed @ 12/03/24 20:34:50.649
  STEP: patching the pdb @ 12/03/24 20:34:50.656
  STEP: Waiting for the pdb to be processed @ 12/03/24 20:34:50.665
  STEP: Waiting for the pdb to be deleted @ 12/03/24 20:34:50.673
  I1203 20:34:50.676673 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4470" for this suite. @ 12/03/24 20:34:50.68
• [2.079 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 12/03/24 20:34:50.685
  I1203 20:34:50.685862 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename replicaset @ 12/03/24 20:34:50.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:34:50.699
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:34:50.703
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 12/03/24 20:34:50.707
  STEP: When a replicaset with a matching selector is created @ 12/03/24 20:34:52.727
  STEP: Then the orphan pod is adopted @ 12/03/24 20:34:52.733
  STEP: When the matched label of one of its pods change @ 12/03/24 20:34:53.741
  I1203 20:34:53.744555 23 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 12/03/24 20:34:53.756
  I1203 20:34:54.765668 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-48" for this suite. @ 12/03/24 20:34:54.77
• [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 12/03/24 20:34:54.779
  I1203 20:34:54.779095 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename configmap @ 12/03/24 20:34:54.78
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:34:54.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:34:54.795
  STEP: Creating configMap with name configmap-test-volume-map-18126687-fcf7-480b-8f37-761ec9e4293f @ 12/03/24 20:34:54.8
  STEP: Creating a pod to test consume configMaps @ 12/03/24 20:34:54.804
  STEP: Saw pod success @ 12/03/24 20:34:58.829
  I1203 20:34:58.833008 23 output.go:196] Trying to get logs from node nodea17 pod pod-configmaps-f05d91cf-dc35-4f55-9ccb-6e4b502af39e container agnhost-container: <nil>
  STEP: delete the pod @ 12/03/24 20:34:58.84
  I1203 20:34:58.853655 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4107" for this suite. @ 12/03/24 20:34:58.859
• [4.088 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 12/03/24 20:34:58.867
  I1203 20:34:58.867587 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename configmap @ 12/03/24 20:34:58.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:34:58.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:34:58.887
  I1203 20:34:58.930506 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7782" for this suite. @ 12/03/24 20:34:58.934
• [0.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 12/03/24 20:34:58.941
  I1203 20:34:58.941076 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename projected @ 12/03/24 20:34:58.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:34:58.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:34:58.959
  STEP: Creating a pod to test downward API volume plugin @ 12/03/24 20:34:58.963
  STEP: Saw pod success @ 12/03/24 20:35:02.988
  I1203 20:35:02.992134 23 output.go:196] Trying to get logs from node nodea17 pod downwardapi-volume-7e563b0b-6de1-4f98-96e5-f541c729322c container client-container: <nil>
  STEP: delete the pod @ 12/03/24 20:35:02.999
  I1203 20:35:03.014430 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3020" for this suite. @ 12/03/24 20:35:03.018
• [4.082 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 12/03/24 20:35:03.024
  I1203 20:35:03.024060 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename replication-controller @ 12/03/24 20:35:03.025
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:35:03.037
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:35:03.041
  STEP: Creating replication controller my-hostname-basic-96603d85-c105-46d7-be3c-b9968b16c3f9 @ 12/03/24 20:35:03.044
  I1203 20:35:03.054630 23 resource.go:87] Pod name my-hostname-basic-96603d85-c105-46d7-be3c-b9968b16c3f9: Found 0 pods out of 1
  I1203 20:35:08.060351 23 resource.go:87] Pod name my-hostname-basic-96603d85-c105-46d7-be3c-b9968b16c3f9: Found 1 pods out of 1
  I1203 20:35:08.060428 23 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-96603d85-c105-46d7-be3c-b9968b16c3f9" are running
  I1203 20:35:08.063122 23 rc.go:523] Pod "my-hostname-basic-96603d85-c105-46d7-be3c-b9968b16c3f9-pbvdh" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-03 20:35:04 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-03 20:35:03 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-03 20:35:04 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-03 20:35:04 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-03 20:35:03 +0000 UTC Reason: Message:}])
  I1203 20:35:08.063184 23 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 12/03/24 20:35:08.063
  I1203 20:35:23.406346 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7939" for this suite. @ 12/03/24 20:35:23.411
• [20.393 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 12/03/24 20:35:23.417
  I1203 20:35:23.417902 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename prestop @ 12/03/24 20:35:23.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:35:23.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:35:23.435
  STEP: Creating server pod server in namespace prestop-9618 @ 12/03/24 20:35:23.439
  STEP: Waiting for pods to come up. @ 12/03/24 20:35:23.446
  STEP: Creating tester pod tester in namespace prestop-9618 @ 12/03/24 20:35:25.461
  STEP: Deleting pre-stop pod @ 12/03/24 20:35:27.478
  I1203 20:35:32.495179 23 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 12/03/24 20:35:32.495
  I1203 20:35:32.512186 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-9618" for this suite. @ 12/03/24 20:35:32.517
• [9.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 12/03/24 20:35:32.523
  I1203 20:35:32.523096 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename watch @ 12/03/24 20:35:32.524
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:35:32.538
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:35:32.542
  STEP: getting a starting resourceVersion @ 12/03/24 20:35:32.547
  STEP: starting a background goroutine to produce watch events @ 12/03/24 20:35:32.55
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 12/03/24 20:35:32.55
  I1203 20:35:35.331184 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6561" for this suite. @ 12/03/24 20:35:35.38
• [2.908 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 12/03/24 20:35:35.432
  I1203 20:35:35.432241 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 12/03/24 20:35:35.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:35:35.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:35:35.452
  STEP: creating a target pod @ 12/03/24 20:35:35.456
  STEP: adding an ephemeral container @ 12/03/24 20:35:37.476
  STEP: checking pod container endpoints @ 12/03/24 20:35:39.495
  I1203 20:35:39.495726 23 exec_util.go:55] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-6435 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1203 20:35:39.495759 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  I1203 20:35:39.496742 23 exec_util.go:62] ExecWithOptions: Clientset creation
  I1203 20:35:39.496854 23 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-6435/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I1203 20:35:39.566543 23 exec_util.go:106] Exec stderr: ""
  I1203 20:35:39.574985 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-6435" for this suite. @ 12/03/24 20:35:39.579
• [4.154 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 12/03/24 20:35:39.586
  I1203 20:35:39.586421 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename pods @ 12/03/24 20:35:39.587
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:35:39.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:35:39.604
  STEP: Saw pod success @ 12/03/24 20:35:45.667
  I1203 20:35:45.671266 23 output.go:196] Trying to get logs from node nodea17 pod client-envvars-8abacafa-7826-42b2-8d64-bbdbcc0b406c container env3cont: <nil>
  STEP: delete the pod @ 12/03/24 20:35:45.68
  I1203 20:35:45.694317 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-127" for this suite. @ 12/03/24 20:35:45.698
• [6.118 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 12/03/24 20:35:45.704
  I1203 20:35:45.704294 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/03/24 20:35:45.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:35:45.719
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:35:45.723
  I1203 20:35:45.728897 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 12/03/24 20:35:47.127
  I1203 20:35:47.127935 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=crd-publish-openapi-522 --namespace=crd-publish-openapi-522 create -f -'
  I1203 20:35:47.271546 23 builder.go:146] stderr: ""
  I1203 20:35:47.271616 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8713-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I1203 20:35:47.271721 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=crd-publish-openapi-522 --namespace=crd-publish-openapi-522 delete e2e-test-crd-publish-openapi-8713-crds test-cr'
  I1203 20:35:47.367767 23 builder.go:146] stderr: ""
  I1203 20:35:47.367862 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8713-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I1203 20:35:47.367966 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=crd-publish-openapi-522 --namespace=crd-publish-openapi-522 apply -f -'
  I1203 20:35:47.468082 23 builder.go:146] stderr: ""
  I1203 20:35:47.468170 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8713-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I1203 20:35:47.468265 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=crd-publish-openapi-522 --namespace=crd-publish-openapi-522 delete e2e-test-crd-publish-openapi-8713-crds test-cr'
  I1203 20:35:47.562432 23 builder.go:146] stderr: ""
  I1203 20:35:47.562521 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8713-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 12/03/24 20:35:47.562
  I1203 20:35:47.562651 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=crd-publish-openapi-522 explain e2e-test-crd-publish-openapi-8713-crds'
  I1203 20:35:47.653785 23 builder.go:146] stderr: ""
  I1203 20:35:47.653894 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-8713-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I1203 20:35:49.030724 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-522" for this suite. @ 12/03/24 20:35:49.044
• [3.346 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:766
  STEP: Creating a kubernetes client @ 12/03/24 20:35:49.05
  I1203 20:35:49.050643 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename webhook @ 12/03/24 20:35:49.052
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:35:49.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:35:49.07
  STEP: Setting up server cert @ 12/03/24 20:35:49.093
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/03/24 20:35:49.545
  STEP: Deploying the webhook pod @ 12/03/24 20:35:49.555
  STEP: Wait for the deployment to be ready @ 12/03/24 20:35:49.567
  I1203 20:35:49.575109 23 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 12/03/24 20:35:51.59
  STEP: Verifying the service has paired with the endpoint @ 12/03/24 20:35:51.602
  I1203 20:35:52.602842 23 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 12/03/24 20:35:52.611
  STEP: verifying the mutating webhook match conditions @ 12/03/24 20:35:52.62
  STEP: updating the mutating webhook match conditions @ 12/03/24 20:35:52.623
  STEP: verifying the mutating webhook match conditions @ 12/03/24 20:35:52.632
  I1203 20:35:52.669850 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1798" for this suite. @ 12/03/24 20:35:52.673
  STEP: Destroying namespace "webhook-markers-3718" for this suite. @ 12/03/24 20:35:52.688
• [3.643 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 12/03/24 20:35:52.693
  I1203 20:35:52.693649 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename certificates @ 12/03/24 20:35:52.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:35:52.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:35:52.709
  STEP: getting /apis @ 12/03/24 20:35:53.384
  STEP: getting /apis/certificates.k8s.io @ 12/03/24 20:35:53.391
  STEP: getting /apis/certificates.k8s.io/v1 @ 12/03/24 20:35:53.393
  STEP: creating @ 12/03/24 20:35:53.395
  STEP: getting @ 12/03/24 20:35:53.412
  STEP: listing @ 12/03/24 20:35:53.416
  STEP: watching @ 12/03/24 20:35:53.419
  I1203 20:35:53.419942 23 certificates.go:316] starting watch
  STEP: patching @ 12/03/24 20:35:53.421
  STEP: updating @ 12/03/24 20:35:53.428
  I1203 20:35:53.434886 23 certificates.go:332] waiting for watch events with expected annotations
  I1203 20:35:53.434972 23 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 12/03/24 20:35:53.435
  STEP: patching /approval @ 12/03/24 20:35:53.439
  STEP: updating /approval @ 12/03/24 20:35:53.445
  STEP: getting /status @ 12/03/24 20:35:53.453
  STEP: patching /status @ 12/03/24 20:35:53.456
  STEP: updating /status @ 12/03/24 20:35:53.463
  STEP: deleting @ 12/03/24 20:35:53.47
  STEP: deleting a collection @ 12/03/24 20:35:53.483
  I1203 20:35:53.494846 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-9389" for this suite. @ 12/03/24 20:35:53.499
• [0.810 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 12/03/24 20:35:53.503
  I1203 20:35:53.503990 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename projected @ 12/03/24 20:35:53.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:35:53.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:35:53.519
  STEP: Creating configMap with name projected-configmap-test-volume-310f369b-5dc1-48b3-9fe0-dd8f8e101c4c @ 12/03/24 20:35:53.523
  STEP: Creating a pod to test consume configMaps @ 12/03/24 20:35:53.527
  STEP: Saw pod success @ 12/03/24 20:35:57.561
  I1203 20:35:57.566127 23 output.go:196] Trying to get logs from node nodea17 pod pod-projected-configmaps-aab0e87f-b42b-42da-9561-a4176a5f3b90 container agnhost-container: <nil>
  STEP: delete the pod @ 12/03/24 20:35:57.574
  I1203 20:35:57.589868 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9263" for this suite. @ 12/03/24 20:35:57.594
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:927
  STEP: Creating a kubernetes client @ 12/03/24 20:35:57.601
  I1203 20:35:57.601466 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename job @ 12/03/24 20:35:57.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:35:57.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:35:57.621
  STEP: Creating a suspended job @ 12/03/24 20:35:57.629
  STEP: Patching the Job @ 12/03/24 20:35:57.634
  STEP: Watching for Job to be patched @ 12/03/24 20:35:57.66
  I1203 20:35:57.662888 23 job.go:1109] Event ADDED observed for Job e2e-9vppx in namespace job-4987 with labels: map[e2e-job-label:e2e-9vppx] and annotations: map[]
  I1203 20:35:57.663010 23 job.go:1109] Event MODIFIED observed for Job e2e-9vppx in namespace job-4987 with labels: map[e2e-job-label:e2e-9vppx] and annotations: map[]
  I1203 20:35:57.663079 23 job.go:1112] Event MODIFIED found for Job e2e-9vppx in namespace job-4987 with labels: map[e2e-9vppx:patched e2e-job-label:e2e-9vppx] and annotations: map[]
  STEP: Updating the job @ 12/03/24 20:35:57.663
  STEP: Watching for Job to be updated @ 12/03/24 20:35:57.672
  I1203 20:35:57.674403 23 job.go:1112] Event MODIFIED found for Job e2e-9vppx in namespace job-4987 with labels: map[e2e-9vppx:patched e2e-job-label:e2e-9vppx] and annotations: map[updated:true]
  I1203 20:35:57.674509 23 job.go:1005] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 12/03/24 20:35:57.674
  I1203 20:35:57.677861 23 job.go:1012] Job: e2e-9vppx as labels: map[e2e-9vppx:patched e2e-job-label:e2e-9vppx]
  STEP: Waiting for job to complete @ 12/03/24 20:35:57.677
  STEP: Delete a job collection with a labelselector @ 12/03/24 20:36:05.683
  STEP: Watching for Job to be deleted @ 12/03/24 20:36:05.692
  I1203 20:36:05.695152 23 job.go:1109] Event MODIFIED observed for Job e2e-9vppx in namespace job-4987 with labels: map[e2e-9vppx:patched e2e-job-label:e2e-9vppx] and annotations: map[updated:true]
  I1203 20:36:05.695601 23 job.go:1109] Event MODIFIED observed for Job e2e-9vppx in namespace job-4987 with labels: map[e2e-9vppx:patched e2e-job-label:e2e-9vppx] and annotations: map[updated:true]
  I1203 20:36:05.695696 23 job.go:1109] Event MODIFIED observed for Job e2e-9vppx in namespace job-4987 with labels: map[e2e-9vppx:patched e2e-job-label:e2e-9vppx] and annotations: map[updated:true]
  I1203 20:36:05.695736 23 job.go:1109] Event MODIFIED observed for Job e2e-9vppx in namespace job-4987 with labels: map[e2e-9vppx:patched e2e-job-label:e2e-9vppx] and annotations: map[updated:true]
  I1203 20:36:05.695954 23 job.go:1109] Event MODIFIED observed for Job e2e-9vppx in namespace job-4987 with labels: map[e2e-9vppx:patched e2e-job-label:e2e-9vppx] and annotations: map[updated:true]
  I1203 20:36:05.696066 23 job.go:1112] Event DELETED found for Job e2e-9vppx in namespace job-4987 with labels: map[e2e-9vppx:patched e2e-job-label:e2e-9vppx] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 12/03/24 20:36:05.696
  I1203 20:36:05.699388 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4987" for this suite. @ 12/03/24 20:36:05.704
• [8.112 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 12/03/24 20:36:05.713
  I1203 20:36:05.713395 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename projected @ 12/03/24 20:36:05.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:36:05.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:36:05.728
  STEP: Creating a pod to test downward API volume plugin @ 12/03/24 20:36:05.732
  STEP: Saw pod success @ 12/03/24 20:36:09.756
  I1203 20:36:09.760332 23 output.go:196] Trying to get logs from node nodea17 pod downwardapi-volume-dbb469c9-da7c-4e1e-8f08-f17862403e38 container client-container: <nil>
  STEP: delete the pod @ 12/03/24 20:36:09.767
  I1203 20:36:09.782781 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4381" for this suite. @ 12/03/24 20:36:09.787
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 12/03/24 20:36:09.792
  I1203 20:36:09.792423 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename containers @ 12/03/24 20:36:09.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:36:09.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:36:09.814
  STEP: Creating a pod to test override all @ 12/03/24 20:36:09.818
  STEP: Saw pod success @ 12/03/24 20:36:13.84
  I1203 20:36:13.844597 23 output.go:196] Trying to get logs from node nodea17 pod client-containers-6287f5a1-82c9-4c2a-8bb8-af18e89a9c73 container agnhost-container: <nil>
  STEP: delete the pod @ 12/03/24 20:36:13.852
  I1203 20:36:13.864609 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3787" for this suite. @ 12/03/24 20:36:13.869
• [4.083 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:695
  STEP: Creating a kubernetes client @ 12/03/24 20:36:13.876
  I1203 20:36:13.876319 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename resourcequota @ 12/03/24 20:36:13.877
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:36:13.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:36:13.894
  STEP: Creating a ResourceQuota with terminating scope @ 12/03/24 20:36:13.899
  STEP: Ensuring ResourceQuota status is calculated @ 12/03/24 20:36:13.906
  STEP: Creating a ResourceQuota with not terminating scope @ 12/03/24 20:36:15.91
  STEP: Ensuring ResourceQuota status is calculated @ 12/03/24 20:36:15.915
  STEP: Creating a long running pod @ 12/03/24 20:36:17.922
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 12/03/24 20:36:17.938
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 12/03/24 20:36:19.944
  STEP: Deleting the pod @ 12/03/24 20:36:21.95
  STEP: Ensuring resource quota status released the pod usage @ 12/03/24 20:36:21.962
  STEP: Creating a terminating pod @ 12/03/24 20:36:23.968
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 12/03/24 20:36:23.982
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 12/03/24 20:36:25.988
  STEP: Deleting the pod @ 12/03/24 20:36:27.993
  STEP: Ensuring resource quota status released the pod usage @ 12/03/24 20:36:28.005
  I1203 20:36:30.010065 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8751" for this suite. @ 12/03/24 20:36:30.016
• [16.146 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1833
  STEP: Creating a kubernetes client @ 12/03/24 20:36:30.022
  I1203 20:36:30.022968 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename kubectl @ 12/03/24 20:36:30.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:36:30.038
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:36:30.042
  STEP: starting the proxy server @ 12/03/24 20:36:30.046
  I1203 20:36:30.046839 23 util.go:592] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-2736 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 12/03/24 20:36:30.112
  I1203 20:36:30.125521 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  I1203 20:36:30.129147 23 kubectl.go:2223] kubectl proxy stdout: Starting to serve on 127.0.0.1:41357

  I1203 20:36:30.129167 23 kubectl.go:2228] kubectl proxy stderr: W1203 20:36:30.111474    2790 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-2736" for this suite. @ 12/03/24 20:36:30.13
• [0.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 12/03/24 20:36:30.141
  I1203 20:36:30.141360 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename downward-api @ 12/03/24 20:36:30.142
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:36:30.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:36:30.16
  STEP: Creating the pod @ 12/03/24 20:36:30.164
  I1203 20:36:32.715305 23 pod_client.go:141] Successfully updated pod "labelsupdateb1d03602-ed51-46e9-be6f-06392537d8aa"
  I1203 20:36:36.742870 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6839" for this suite. @ 12/03/24 20:36:36.748
• [6.615 seconds]
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 12/03/24 20:36:36.755
  I1203 20:36:36.755863 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename namespaces @ 12/03/24 20:36:36.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:36:36.769
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:36:36.774
  STEP: Creating a test namespace @ 12/03/24 20:36:36.779
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:36:36.791
  STEP: Creating a pod in the namespace @ 12/03/24 20:36:36.795
  STEP: Waiting for the pod to have running status @ 12/03/24 20:36:36.803
  STEP: Deleting the namespace @ 12/03/24 20:36:38.813
  STEP: Waiting for the namespace to be removed. @ 12/03/24 20:36:38.822
  STEP: Recreating the namespace @ 12/03/24 20:36:49.827
  STEP: Verifying there are no pods in the namespace @ 12/03/24 20:36:49.841
  I1203 20:36:49.844788 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8371" for this suite. @ 12/03/24 20:36:49.849
  STEP: Destroying namespace "nsdeletetest-9741" for this suite. @ 12/03/24 20:36:49.855
  I1203 20:36:49.858672 23 framework.go:370] Namespace nsdeletetest-9741 was already deleted
  STEP: Destroying namespace "nsdeletetest-782" for this suite. @ 12/03/24 20:36:49.858
• [13.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 12/03/24 20:36:49.865
  I1203 20:36:49.865606 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename security-context-test @ 12/03/24 20:36:49.867
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:36:49.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:36:49.885
  I1203 20:36:53.914840 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9418" for this suite. @ 12/03/24 20:36:53.92
• [4.061 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 12/03/24 20:36:53.927
  I1203 20:36:53.927530 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename security-context-test @ 12/03/24 20:36:53.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:36:53.941
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:36:53.946
  I1203 20:36:57.981265 23 security_context.go:538] Got logs for pod "busybox-privileged-false-3a6e1edc-4fd4-45df-b533-5132c34adb7d": "ip: RTNETLINK answers: Operation not permitted\n"
  I1203 20:36:57.981447 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4463" for this suite. @ 12/03/24 20:36:57.986
• [4.064 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 12/03/24 20:36:57.992
  I1203 20:36:57.992132 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename gc @ 12/03/24 20:36:57.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:36:58.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:36:58.009
  STEP: create the rc @ 12/03/24 20:36:58.013
  W1203 20:36:58.018021      23 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 12/03/24 20:37:03.023
  STEP: wait for all pods to be garbage collected @ 12/03/24 20:37:03.028
  STEP: Gathering metrics @ 12/03/24 20:37:08.039
  I1203 20:37:08.171278 23 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1203 20:37:08.171495 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9279" for this suite. @ 12/03/24 20:37:08.176
• [10.191 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 12/03/24 20:37:08.182
  I1203 20:37:08.182964 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename daemonsets @ 12/03/24 20:37:08.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:37:08.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:37:08.2
  STEP: Creating simple DaemonSet "daemon-set" @ 12/03/24 20:37:08.22
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/03/24 20:37:08.225
  I1203 20:37:08.230807 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1203 20:37:08.234045 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1203 20:37:08.234111 23 fixtures.go:130] Node nodea17 is running 0 daemon pod, expected 1
  I1203 20:37:09.232172 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1203 20:37:09.235967 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1203 20:37:09.236029 23 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 12/03/24 20:37:09.239
  I1203 20:37:09.256066 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1203 20:37:09.259509 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1203 20:37:09.259573 23 fixtures.go:130] Node nodeb14 is running 0 daemon pod, expected 1
  I1203 20:37:10.258177 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1203 20:37:10.262256 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1203 20:37:10.262319 23 fixtures.go:130] Node nodeb14 is running 0 daemon pod, expected 1
  I1203 20:37:11.258446 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1203 20:37:11.263294 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1203 20:37:11.263356 23 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 12/03/24 20:37:11.267
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-6989, will wait for the garbage collector to delete the pods @ 12/03/24 20:37:11.267
  I1203 20:37:11.328439 23 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.028403ms
  I1203 20:37:11.429612 23 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.167419ms
  I1203 20:37:13.136511 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1203 20:37:13.136585 23 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1203 20:37:13.139648 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"32299"},"items":null}

  I1203 20:37:13.142430 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"32299"},"items":null}

  I1203 20:37:13.154472 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6989" for this suite. @ 12/03/24 20:37:13.158
• [4.981 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:420
  STEP: Creating a kubernetes client @ 12/03/24 20:37:13.164
  I1203 20:37:13.164522 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename job @ 12/03/24 20:37:13.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:37:13.176
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:37:13.18
  STEP: Creating Indexed job @ 12/03/24 20:37:13.185
  STEP: Ensuring job reaches completions @ 12/03/24 20:37:13.192
  STEP: Ensuring pods with index for job exist @ 12/03/24 20:37:21.196
  I1203 20:37:21.202151 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3748" for this suite. @ 12/03/24 20:37:21.206
• [8.049 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:183
  STEP: Creating a kubernetes client @ 12/03/24 20:37:21.213
  I1203 20:37:21.213549 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename kubelet-test @ 12/03/24 20:37:21.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:37:21.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:37:21.232
  I1203 20:37:23.264356 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6499" for this suite. @ 12/03/24 20:37:23.269
• [2.075 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 12/03/24 20:37:23.289
  I1203 20:37:23.289300 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename container-probe @ 12/03/24 20:37:23.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:37:23.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:37:23.309
  I1203 20:38:23.328297 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3125" for this suite. @ 12/03/24 20:38:23.334
• [60.051 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 12/03/24 20:38:23.34
  I1203 20:38:23.340741 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename webhook @ 12/03/24 20:38:23.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:38:23.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:38:23.361
  STEP: Setting up server cert @ 12/03/24 20:38:23.382
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/03/24 20:38:23.764
  STEP: Deploying the webhook pod @ 12/03/24 20:38:23.773
  STEP: Wait for the deployment to be ready @ 12/03/24 20:38:23.785
  I1203 20:38:23.794181 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/03/24 20:38:25.807
  STEP: Verifying the service has paired with the endpoint @ 12/03/24 20:38:25.825
  I1203 20:38:26.825998 23 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 12/03/24 20:38:26.834
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 12/03/24 20:38:26.863
  STEP: Creating a configMap that should not be mutated @ 12/03/24 20:38:26.871
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 12/03/24 20:38:26.882
  STEP: Creating a configMap that should be mutated @ 12/03/24 20:38:26.889
  I1203 20:38:26.950139 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9494" for this suite. @ 12/03/24 20:38:26.954
  STEP: Destroying namespace "webhook-markers-6957" for this suite. @ 12/03/24 20:38:26.959
• [3.623 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 12/03/24 20:38:26.964
  I1203 20:38:26.964454 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename container-probe @ 12/03/24 20:38:26.965
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:38:26.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:38:26.981
  STEP: Creating pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650 @ 12/03/24 20:38:26.986
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/03/24 20:38:29.002
  I1203 20:38:29.006570 23 container_probe.go:1749] Initial restart count of pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 is 0
  I1203 20:38:29.010198 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:38:31.015995 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:38:33.021692 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:38:35.026659 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:38:37.034121 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:38:39.039990 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:38:41.046937 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:38:43.051680 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:38:45.057883 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:38:47.064372 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:38:49.070808 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:38:51.076063 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:38:53.083028 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:38:55.089039 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:38:57.095192 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:38:59.101359 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:39:01.106408 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:39:03.112897 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:39:05.119114 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:39:07.125250 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:39:09.130437 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:39:11.136328 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:39:13.141949 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:39:15.147867 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:39:17.154326 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:39:19.160498 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:39:21.165047 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:39:23.171182 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:39:25.176713 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:39:27.183525 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:39:29.189892 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:39:31.194881 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:39:33.199931 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:39:35.205739 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:39:37.212102 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:39:39.218084 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:39:41.223179 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:39:43.229165 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:39:45.234545 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:39:47.241455 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:39:49.247016 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:39:51.251519 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:39:53.257298 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:39:55.262403 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:39:57.270003 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:39:59.276460 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:40:01.282068 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:40:03.287828 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:40:05.292369 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:40:07.298982 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:40:09.305085 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:40:11.311513 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:40:13.317389 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:40:15.322669 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:40:17.329942 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:40:19.336507 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:40:21.342335 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:40:23.348051 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:40:25.353741 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:40:27.359416 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:40:29.365578 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:40:31.371113 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:40:33.376911 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:40:35.382779 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:40:37.388874 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:40:39.394667 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:40:41.400439 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:40:43.406782 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:40:45.412753 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:40:47.419109 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:40:49.425150 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:40:51.431445 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:40:53.437052 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:40:55.443057 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:40:57.449913 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:40:59.456088 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:41:01.461910 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:41:03.469783 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:41:05.475815 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:41:07.482538 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:41:09.489159 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:41:11.494380 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:41:13.500170 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:41:15.505659 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:41:17.512476 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:41:19.518554 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:41:21.524730 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:41:23.530702 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:41:25.536266 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:41:27.542411 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:41:29.547572 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:41:31.554422 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:41:33.560901 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:41:35.566028 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:41:37.571404 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:41:39.577355 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:41:41.582929 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:41:43.588613 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:41:45.593619 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:41:47.600263 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:41:49.606151 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:41:51.612241 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:41:53.618282 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:41:55.625117 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:41:57.631860 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:41:59.637772 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:42:01.643453 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:42:03.649627 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:42:05.654660 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:42:07.661587 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:42:09.666983 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:42:11.672742 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:42:13.678888 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:42:15.684575 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:42:17.690403 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:42:19.696615 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:42:21.702929 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:42:23.709137 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:42:25.714794 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  I1203 20:42:27.720582 23 container_probe.go:1759] Get pod test-grpc-77c7e58e-39d6-42ea-92cd-80cfa5707cd5 in namespace container-probe-3650
  STEP: deleting the pod @ 12/03/24 20:42:29.722
  I1203 20:42:29.736292 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3650" for this suite. @ 12/03/24 20:42:29.741
• [242.783 seconds]
------------------------------
SSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:334
  STEP: Creating a kubernetes client @ 12/03/24 20:42:29.749
  I1203 20:42:29.749784 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename sched-pred @ 12/03/24 20:42:29.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:42:29.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:42:29.766
  I1203 20:42:29.770049 23 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1203 20:42:29.783342 23 util.go:400] Waiting for terminating namespaces to be deleted...
  I1203 20:42:29.786849 23 predicates.go:121] 
  Logging pods the apiserver thinks is on node nodea17 before test
  I1203 20:42:29.793671 23 predicates.go:887] kube-flannel-ds-d4gxd from kube-flannel started at 2024-12-03 18:59:59 +0000 UTC (1 container statuses recorded)
  I1203 20:42:29.793725 23 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I1203 20:42:29.793748 23 predicates.go:887] kube-proxy-5qrm9 from kube-system started at 2024-12-03 18:59:59 +0000 UTC (1 container statuses recorded)
  I1203 20:42:29.793764 23 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I1203 20:42:29.793781 23 predicates.go:887] sonobuoy from sonobuoy started at 2024-12-03 19:02:18 +0000 UTC (1 container statuses recorded)
  I1203 20:42:29.793795 23 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I1203 20:42:29.793811 23 predicates.go:887] sonobuoy-e2e-job-b4c9b24bd0eb40b5 from sonobuoy started at 2024-12-03 19:02:24 +0000 UTC (2 container statuses recorded)
  I1203 20:42:29.793825 23 predicates.go:889] 	Container e2e ready: true, restart count 0
  I1203 20:42:29.793841 23 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I1203 20:42:29.793858 23 predicates.go:887] sonobuoy-systemd-logs-daemon-set-2a7ed7b0c9d74150-7w6fj from sonobuoy started at 2024-12-03 19:02:24 +0000 UTC (2 container statuses recorded)
  I1203 20:42:29.793874 23 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I1203 20:42:29.793889 23 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I1203 20:42:29.793904 23 predicates.go:121] 
  Logging pods the apiserver thinks is on node nodeb14 before test
  I1203 20:42:29.799966 23 predicates.go:887] kube-flannel-ds-67rcm from kube-flannel started at 2024-12-03 19:00:11 +0000 UTC (1 container statuses recorded)
  I1203 20:42:29.800022 23 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I1203 20:42:29.800044 23 predicates.go:887] kube-proxy-vp99b from kube-system started at 2024-12-03 19:00:11 +0000 UTC (1 container statuses recorded)
  I1203 20:42:29.800061 23 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I1203 20:42:29.800080 23 predicates.go:887] sonobuoy-systemd-logs-daemon-set-2a7ed7b0c9d74150-wqtb5 from sonobuoy started at 2024-12-03 19:02:24 +0000 UTC (2 container statuses recorded)
  I1203 20:42:29.800098 23 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I1203 20:42:29.800113 23 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node nodea17 @ 12/03/24 20:42:29.819
  STEP: verifying the node has the label node nodeb14 @ 12/03/24 20:42:29.833
  I1203 20:42:29.844399 23 predicates.go:374] Pod kube-flannel-ds-67rcm requesting resource cpu=100m on Node nodeb14
  I1203 20:42:29.844434 23 predicates.go:374] Pod kube-flannel-ds-d4gxd requesting resource cpu=100m on Node nodea17
  I1203 20:42:29.844446 23 predicates.go:374] Pod kube-proxy-5qrm9 requesting resource cpu=0m on Node nodea17
  I1203 20:42:29.844456 23 predicates.go:374] Pod kube-proxy-vp99b requesting resource cpu=0m on Node nodeb14
  I1203 20:42:29.844465 23 predicates.go:374] Pod sonobuoy requesting resource cpu=0m on Node nodea17
  I1203 20:42:29.844474 23 predicates.go:374] Pod sonobuoy-e2e-job-b4c9b24bd0eb40b5 requesting resource cpu=0m on Node nodea17
  I1203 20:42:29.844484 23 predicates.go:374] Pod sonobuoy-systemd-logs-daemon-set-2a7ed7b0c9d74150-7w6fj requesting resource cpu=0m on Node nodea17
  I1203 20:42:29.844493 23 predicates.go:374] Pod sonobuoy-systemd-logs-daemon-set-2a7ed7b0c9d74150-wqtb5 requesting resource cpu=0m on Node nodeb14
  STEP: Starting Pods to consume most of the cluster CPU. @ 12/03/24 20:42:29.844
  I1203 20:42:29.844530 23 predicates.go:384] Creating a pod which consumes cpu=11130m on Node nodea17
  I1203 20:42:29.852941 23 predicates.go:384] Creating a pod which consumes cpu=5530m on Node nodeb14
  STEP: Creating another pod that requires unavailable amount of CPU. @ 12/03/24 20:42:31.872
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6dfc0313-9a4b-4591-adba-b95aac2045d4.180dc577c7accd24], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8065/filler-pod-6dfc0313-9a4b-4591-adba-b95aac2045d4 to nodea17] @ 12/03/24 20:42:31.877
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6dfc0313-9a4b-4591-adba-b95aac2045d4.180dc577e405f0cd], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 12/03/24 20:42:31.877
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6dfc0313-9a4b-4591-adba-b95aac2045d4.180dc577e50b8ae3], Reason = [Created], Message = [Created container filler-pod-6dfc0313-9a4b-4591-adba-b95aac2045d4] @ 12/03/24 20:42:31.877
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6dfc0313-9a4b-4591-adba-b95aac2045d4.180dc577ead6de5e], Reason = [Started], Message = [Started container filler-pod-6dfc0313-9a4b-4591-adba-b95aac2045d4] @ 12/03/24 20:42:31.877
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-93421779-b5f7-4b6a-ad7a-e012444432cf.180dc577c7d3c42a], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8065/filler-pod-93421779-b5f7-4b6a-ad7a-e012444432cf to nodeb14] @ 12/03/24 20:42:31.878
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-93421779-b5f7-4b6a-ad7a-e012444432cf.180dc577ea75782c], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 12/03/24 20:42:31.878
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-93421779-b5f7-4b6a-ad7a-e012444432cf.180dc577ebd8f6ed], Reason = [Created], Message = [Created container filler-pod-93421779-b5f7-4b6a-ad7a-e012444432cf] @ 12/03/24 20:42:31.878
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-93421779-b5f7-4b6a-ad7a-e012444432cf.180dc577f48c69b2], Reason = [Started], Message = [Started container filler-pod-93421779-b5f7-4b6a-ad7a-e012444432cf] @ 12/03/24 20:42:31.878
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.180dc578409f7686], Reason = [FailedScheduling], Message = [0/3 nodes are available: 1 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 2 Insufficient cpu. preemption: 0/3 nodes are available: 1 Preemption is not helpful for scheduling, 2 No preemption victims found for incoming pod.] @ 12/03/24 20:42:31.898
  STEP: removing the label node off the node nodea17 @ 12/03/24 20:42:32.894
  STEP: verifying the node doesn't have the label node @ 12/03/24 20:42:32.911
  STEP: removing the label node off the node nodeb14 @ 12/03/24 20:42:32.917
  STEP: verifying the node doesn't have the label node @ 12/03/24 20:42:32.929
  I1203 20:42:32.932100 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8065" for this suite. @ 12/03/24 20:42:32.936
• [3.191 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1627
  STEP: Creating a kubernetes client @ 12/03/24 20:42:32.943
  I1203 20:42:32.943101 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename kubectl @ 12/03/24 20:42:32.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:42:32.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:42:32.959
  STEP: creating the pod @ 12/03/24 20:42:32.964
  I1203 20:42:32.964609 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-6622 create -f -'
  I1203 20:42:33.145768 23 builder.go:146] stderr: ""
  I1203 20:42:33.145845 23 builder.go:147] stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 12/03/24 20:42:35.154
  I1203 20:42:35.154294 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-6622 label pods pause testing-label=testing-label-value'
  I1203 20:42:35.251405 23 builder.go:146] stderr: ""
  I1203 20:42:35.251502 23 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 12/03/24 20:42:35.251
  I1203 20:42:35.251687 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-6622 get pod pause -L testing-label'
  I1203 20:42:35.338082 23 builder.go:146] stderr: ""
  I1203 20:42:35.338148 23 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 12/03/24 20:42:35.338
  I1203 20:42:35.338277 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-6622 label pods pause testing-label-'
  I1203 20:42:35.432539 23 builder.go:146] stderr: ""
  I1203 20:42:35.432598 23 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 12/03/24 20:42:35.432
  I1203 20:42:35.432720 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-6622 get pod pause -L testing-label'
  I1203 20:42:35.520311 23 builder.go:146] stderr: ""
  I1203 20:42:35.520367 23 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 12/03/24 20:42:35.52
  I1203 20:42:35.520545 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-6622 delete --grace-period=0 --force -f -'
  I1203 20:42:35.617833 23 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1203 20:42:35.617896 23 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I1203 20:42:35.617975 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-6622 get rc,svc -l name=pause --no-headers'
  I1203 20:42:35.712001 23 builder.go:146] stderr: "No resources found in kubectl-6622 namespace.\n"
  I1203 20:42:35.712073 23 builder.go:147] stdout: ""
  I1203 20:42:35.712170 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-6622 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1203 20:42:35.796983 23 builder.go:146] stderr: ""
  I1203 20:42:35.797045 23 builder.go:147] stdout: ""
  I1203 20:42:35.797226 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6622" for this suite. @ 12/03/24 20:42:35.802
• [2.868 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 12/03/24 20:42:35.812
  I1203 20:42:35.812686 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename projected @ 12/03/24 20:42:35.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:42:35.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:42:35.83
  STEP: Creating projection with secret that has name projected-secret-test-9e24b5cc-9787-4443-8dc1-836d6d044289 @ 12/03/24 20:42:35.835
  STEP: Creating a pod to test consume secrets @ 12/03/24 20:42:35.84
  STEP: Saw pod success @ 12/03/24 20:42:39.864
  I1203 20:42:39.867853 23 output.go:196] Trying to get logs from node nodea17 pod pod-projected-secrets-0764b685-30cb-436f-a79d-5cb9542bb6ad container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/03/24 20:42:39.893
  I1203 20:42:39.907633 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4515" for this suite. @ 12/03/24 20:42:39.912
• [4.106 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 12/03/24 20:42:39.919
  I1203 20:42:39.919261 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/03/24 20:42:39.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:42:39.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:42:39.939
  I1203 20:42:39.943845 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 12/03/24 20:42:41.372
  I1203 20:42:41.372137 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=crd-publish-openapi-9575 --namespace=crd-publish-openapi-9575 create -f -'
  I1203 20:42:41.506166 23 builder.go:146] stderr: ""
  I1203 20:42:41.506241 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9327-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I1203 20:42:41.506446 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=crd-publish-openapi-9575 --namespace=crd-publish-openapi-9575 delete e2e-test-crd-publish-openapi-9327-crds test-cr'
  I1203 20:42:41.598897 23 builder.go:146] stderr: ""
  I1203 20:42:41.598972 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9327-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I1203 20:42:41.599242 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=crd-publish-openapi-9575 --namespace=crd-publish-openapi-9575 apply -f -'
  I1203 20:42:41.703514 23 builder.go:146] stderr: ""
  I1203 20:42:41.703600 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9327-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I1203 20:42:41.703724 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=crd-publish-openapi-9575 --namespace=crd-publish-openapi-9575 delete e2e-test-crd-publish-openapi-9327-crds test-cr'
  I1203 20:42:41.797829 23 builder.go:146] stderr: ""
  I1203 20:42:41.797910 23 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9327-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 12/03/24 20:42:41.797
  I1203 20:42:41.798038 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=crd-publish-openapi-9575 explain e2e-test-crd-publish-openapi-9327-crds'
  I1203 20:42:41.886042 23 builder.go:146] stderr: ""
  I1203 20:42:41.886161 23 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-9327-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I1203 20:42:43.269000 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9575" for this suite. @ 12/03/24 20:42:43.281
• [3.368 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 12/03/24 20:42:43.287
  I1203 20:42:43.287965 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename container-probe @ 12/03/24 20:42:43.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:42:43.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:42:43.308
  STEP: Creating pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147 @ 12/03/24 20:42:43.313
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/03/24 20:42:45.331
  I1203 20:42:45.336200 23 container_probe.go:1749] Initial restart count of pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 is 0
  I1203 20:42:45.339782 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:42:47.345316 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:42:49.351846 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:42:51.356648 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:42:53.362711 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:42:55.370267 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:42:57.380229 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:42:59.385775 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:43:01.391564 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:43:03.397977 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:43:05.404502 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:43:07.410994 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:43:09.420351 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:43:11.426485 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:43:13.431845 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:43:15.438042 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:43:17.444761 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:43:19.451474 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:43:21.457817 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:43:23.464282 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:43:25.469895 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:43:27.476001 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:43:29.482694 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:43:31.489288 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:43:33.496052 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:43:35.501632 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:43:37.508080 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:43:39.514647 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:43:41.521554 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:43:43.528612 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:43:45.534398 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:43:47.540668 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:43:49.548278 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:43:51.554066 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:43:53.560589 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:43:55.565751 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:43:57.571826 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:43:59.578295 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:44:01.584284 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:44:03.590254 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:44:05.595856 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:44:07.602059 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:44:09.607789 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:44:11.614659 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:44:13.620634 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:44:15.626427 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:44:17.632245 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:44:19.639147 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:44:21.645139 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:44:23.652478 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:44:25.657559 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:44:27.663414 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:44:29.670551 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:44:31.677002 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:44:33.683096 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:44:35.688617 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:44:37.694880 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:44:39.700718 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:44:41.706829 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:44:43.715950 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:44:45.721566 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:44:47.727358 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:44:49.734511 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:44:51.739522 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:44:53.746050 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:44:55.751493 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:44:57.757700 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:44:59.764034 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:45:01.770388 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:45:03.776081 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:45:05.781533 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:45:07.787450 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:45:09.793889 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:45:11.799606 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:45:13.806319 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:45:15.812794 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:45:17.818574 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:45:19.824950 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:45:21.831431 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:45:23.837742 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:45:25.843172 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:45:27.849248 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:45:29.855786 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:45:31.862053 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:45:33.868312 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:45:35.873885 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:45:37.880144 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:45:39.886282 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:45:41.891775 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:45:43.897877 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:45:45.903669 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:45:47.911909 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:45:49.917845 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:45:51.923389 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:45:53.929129 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:45:55.933704 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:45:57.939872 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:45:59.946503 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:46:01.953656 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:46:03.959337 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:46:05.964429 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:46:07.969309 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:46:09.975415 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:46:11.982325 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:46:13.991036 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:46:15.996891 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:46:18.003392 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:46:20.009712 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:46:22.015450 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:46:24.020837 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:46:26.026194 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:46:28.032194 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:46:30.039061 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:46:32.044913 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:46:34.051116 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:46:36.056802 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:46:38.063107 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:46:40.069214 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:46:42.076798 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  I1203 20:46:44.081821 23 container_probe.go:1759] Get pod liveness-42ec44f9-387a-4379-a50a-67754fc99836 in namespace container-probe-3147
  STEP: deleting the pod @ 12/03/24 20:46:46.082
  I1203 20:46:46.098002 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3147" for this suite. @ 12/03/24 20:46:46.103
• [242.822 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 12/03/24 20:46:46.109
  I1203 20:46:46.110033 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename security-context @ 12/03/24 20:46:46.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:46:46.129
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:46:46.134
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 12/03/24 20:46:46.138
  STEP: Saw pod success @ 12/03/24 20:46:50.158
  I1203 20:46:50.162354 23 output.go:196] Trying to get logs from node nodea17 pod security-context-5cef4d40-3744-4072-b7ff-4a11e5dd4d16 container test-container: <nil>
  STEP: delete the pod @ 12/03/24 20:46:50.185
  I1203 20:46:50.197978 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-7178" for this suite. @ 12/03/24 20:46:50.203
• [4.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:406
  STEP: Creating a kubernetes client @ 12/03/24 20:46:50.209
  I1203 20:46:50.209433 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename validating-admission-policy @ 12/03/24 20:46:50.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:46:50.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:46:50.228
  STEP: getting /apis @ 12/03/24 20:46:50.238
  STEP: getting /apis/admissionregistration.k8s.io @ 12/03/24 20:46:50.244
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 12/03/24 20:46:50.246
  STEP: creating @ 12/03/24 20:46:50.248
  STEP: getting @ 12/03/24 20:46:50.267
  STEP: listing @ 12/03/24 20:46:50.269
  STEP: watching @ 12/03/24 20:46:50.272
  I1203 20:46:50.272654 23 validatingadmissionpolicy.go:523] starting watch
  STEP: patching @ 12/03/24 20:46:50.274
  STEP: updating @ 12/03/24 20:46:50.286
  I1203 20:46:50.314056 23 validatingadmissionpolicy.go:552] waiting for watch events with expected annotations
  I1203 20:46:50.314142 23 validatingadmissionpolicy.go:568] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 12/03/24 20:46:50.314
  STEP: patching /status @ 12/03/24 20:46:50.317
  STEP: updating /status @ 12/03/24 20:46:50.322
  STEP: deleting @ 12/03/24 20:46:50.331
  STEP: deleting a collection @ 12/03/24 20:46:50.342
  I1203 20:46:50.356608 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-4794" for this suite. @ 12/03/24 20:46:50.36
• [0.156 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 12/03/24 20:46:50.366
  I1203 20:46:50.366861 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename daemonsets @ 12/03/24 20:46:50.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:46:50.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:46:50.383
  STEP: Creating simple DaemonSet "daemon-set" @ 12/03/24 20:46:50.403
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/03/24 20:46:50.41
  I1203 20:46:50.414630 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1203 20:46:50.417894 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1203 20:46:50.417944 23 fixtures.go:130] Node nodea17 is running 0 daemon pod, expected 1
  I1203 20:46:51.417694 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1203 20:46:51.421621 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1203 20:46:51.421697 23 fixtures.go:130] Node nodea17 is running 0 daemon pod, expected 1
  I1203 20:46:52.417966 23 fixtures.go:89] DaemonSet pods can't tolerate node noded36 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1203 20:46:52.422629 23 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1203 20:46:52.422691 23 fixtures.go:135] Number of running nodes: 2, number of available pods: 2 in daemonset daemon-set
  STEP: listing all DaemonSets @ 12/03/24 20:46:52.426
  STEP: DeleteCollection of the DaemonSets @ 12/03/24 20:46:52.43
  STEP: Verify that ReplicaSets have been deleted @ 12/03/24 20:46:52.438
  I1203 20:46:52.452392 23 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"33657"},"items":null}

  I1203 20:46:52.455938 23 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"33657"},"items":[{"metadata":{"name":"daemon-set-2pjhl","generateName":"daemon-set-","namespace":"daemonsets-4360","uid":"f84e3cf2-0ee2-400e-8ef8-e6560e04b60a","resourceVersion":"33655","creationTimestamp":"2024-12-03T20:46:50Z","deletionTimestamp":"2024-12-03T20:47:22Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"7d79bd845c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"8dff7124-2d78-44f4-867a-55b169b02e98","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-12-03T20:46:50Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8dff7124-2d78-44f4-867a-55b169b02e98\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-12-03T20:46:51Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.1.236\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-8pzmb","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-8pzmb","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"nodea17","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["nodea17"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-03T20:46:51Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-03T20:46:50Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-03T20:46:51Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-03T20:46:51Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-03T20:46:50Z"}],"hostIP":"192.168.100.37","hostIPs":[{"ip":"192.168.100.37"}],"podIP":"10.244.1.236","podIPs":[{"ip":"10.244.1.236"}],"startTime":"2024-12-03T20:46:50Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-12-03T20:46:50Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://a19aee083671db9794d268b631b00822f3efe12bbda937ce6891825dd69e51bc","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-6t4q9","generateName":"daemon-set-","namespace":"daemonsets-4360","uid":"02cff71d-5522-4b73-877d-b927defc36a4","resourceVersion":"33657","creationTimestamp":"2024-12-03T20:46:50Z","deletionTimestamp":"2024-12-03T20:47:22Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"7d79bd845c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"8dff7124-2d78-44f4-867a-55b169b02e98","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-12-03T20:46:50Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8dff7124-2d78-44f4-867a-55b169b02e98\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-12-03T20:46:51Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.244.2.234\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-jgvd6","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-jgvd6","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"nodeb14","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["nodeb14"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-03T20:46:51Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-03T20:46:50Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-03T20:46:51Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-03T20:46:51Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-03T20:46:50Z"}],"hostIP":"192.168.100.114","hostIPs":[{"ip":"192.168.100.114"}],"podIP":"10.244.2.234","podIPs":[{"ip":"10.244.2.234"}],"startTime":"2024-12-03T20:46:50Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-12-03T20:46:51Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://665fcb258fb8cad1dce8341e6394ae278343c8948134a12106f1886497c4d8b3","started":true}],"qosClass":"BestEffort"}}]}

  I1203 20:46:52.466584 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4360" for this suite. @ 12/03/24 20:46:52.47
• [2.116 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 12/03/24 20:46:52.483
  I1203 20:46:52.483467 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename webhook @ 12/03/24 20:46:52.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:46:52.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:46:52.502
  STEP: Setting up server cert @ 12/03/24 20:46:52.526
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/03/24 20:46:52.903
  STEP: Deploying the webhook pod @ 12/03/24 20:46:52.914
  STEP: Wait for the deployment to be ready @ 12/03/24 20:46:52.93
  I1203 20:46:52.942624 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/03/24 20:46:54.955
  STEP: Verifying the service has paired with the endpoint @ 12/03/24 20:46:54.969
  I1203 20:46:55.970217 23 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 12/03/24 20:46:55.978
  STEP: create a namespace for the webhook @ 12/03/24 20:46:56.002
  STEP: create a configmap should be unconditionally rejected by the webhook @ 12/03/24 20:46:56.016
  I1203 20:46:56.072496 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1555" for this suite. @ 12/03/24 20:46:56.078
  STEP: Destroying namespace "webhook-markers-227" for this suite. @ 12/03/24 20:46:56.083
  STEP: Destroying namespace "fail-closed-namespace-3018" for this suite. @ 12/03/24 20:46:56.088
• [3.610 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1394
  STEP: Creating a kubernetes client @ 12/03/24 20:46:56.094
  I1203 20:46:56.094366 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename kubectl @ 12/03/24 20:46:56.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:46:56.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:46:56.112
  I1203 20:46:56.117107 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-4002 create -f -'
  I1203 20:46:56.302617 23 builder.go:146] stderr: ""
  I1203 20:46:56.302702 23 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I1203 20:46:56.302796 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-4002 create -f -'
  I1203 20:46:56.491450 23 builder.go:146] stderr: ""
  I1203 20:46:56.491523 23 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 12/03/24 20:46:56.491
  I1203 20:46:57.497434 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1203 20:46:57.497533 23 framework.go:733] Found 0 / 1
  I1203 20:46:58.497456 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1203 20:46:58.497526 23 framework.go:733] Found 1 / 1
  I1203 20:46:58.497569 23 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I1203 20:46:58.501808 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1203 20:46:58.501865 23 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1203 20:46:58.501960 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-4002 describe pod agnhost-primary-f2tgf'
  I1203 20:46:58.605086 23 builder.go:146] stderr: ""
  I1203 20:46:58.605231 23 builder.go:147] stdout: "Name:             agnhost-primary-f2tgf\nNamespace:        kubectl-4002\nPriority:         0\nService Account:  default\nNode:             nodea17/192.168.100.37\nStart Time:       Tue, 03 Dec 2024 20:46:56 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.244.1.238\nIPs:\n  IP:           10.244.1.238\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://c2b3f33534be82005e19ff54caf5aa8a64a9000a12c481fc3107601480772eec\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Tue, 03 Dec 2024 20:46:56 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-5zckx (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-5zckx:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-4002/agnhost-primary-f2tgf to nodea17\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    2s    kubelet            Created container agnhost-primary\n  Normal  Started    2s    kubelet            Started container agnhost-primary\n"
  I1203 20:46:58.605385 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-4002 describe rc agnhost-primary'
  I1203 20:46:58.710940 23 builder.go:146] stderr: ""
  I1203 20:46:58.711043 23 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-4002\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.47\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-f2tgf\n"
  I1203 20:46:58.711199 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-4002 describe service agnhost-primary'
  I1203 20:46:58.815603 23 builder.go:146] stderr: ""
  I1203 20:46:58.815689 23 builder.go:147] stdout: "Name:              agnhost-primary\nNamespace:         kubectl-4002\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.104.156.251\nIPs:               10.104.156.251\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.244.1.238:6379\nSession Affinity:  None\nEvents:            <none>\n"
  I1203 20:46:58.820879 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-4002 describe node nodea17'
  I1203 20:46:58.944597 23 builder.go:146] stderr: ""
  I1203 20:46:58.944849 23 builder.go:147] stdout: "Name:               nodea17\nRoles:              <none>\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=nodea17\n                    kubernetes.io/os=linux\nAnnotations:        flannel.alpha.coreos.com/backend-data: {\"VNI\":1,\"VtepMAC\":\"aa:6b:80:d0:f3:34\"}\n                    flannel.alpha.coreos.com/backend-type: vxlan\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 192.168.100.37\n                    kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/containerd/containerd.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Tue, 03 Dec 2024 18:59:58 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  nodea17\n  AcquireTime:     <unset>\n  RenewTime:       Tue, 03 Dec 2024 20:46:55 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Tue, 03 Dec 2024 19:00:22 +0000   Tue, 03 Dec 2024 19:00:22 +0000   FlannelIsUp                  Flannel is running on this node\n  MemoryPressure       False   Tue, 03 Dec 2024 20:43:49 +0000   Tue, 03 Dec 2024 18:59:58 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Tue, 03 Dec 2024 20:43:49 +0000   Tue, 03 Dec 2024 18:59:58 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Tue, 03 Dec 2024 20:43:49 +0000   Tue, 03 Dec 2024 18:59:58 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Tue, 03 Dec 2024 20:43:49 +0000   Tue, 03 Dec 2024 19:00:20 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  192.168.100.37\n  Hostname:    nodea17\nCapacity:\n  cpu:                    16\n  ephemeral-storage:      162406320Ki\n  example.com/fakecpu:    1k\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 65841676Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nAllocatable:\n  cpu:                    16\n  ephemeral-storage:      149673664265\n  example.com/fakecpu:    1k\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 65739276Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nSystem Info:\n  Machine ID:                 c4cd4217ed3246c78d457562307d45c0\n  System UUID:                c4cd4217-ed32-46c7-8d45-7562307d45c0\n  Boot ID:                    2bd8f1fd-3854-4375-aed2-510b515b14c3\n  Kernel Version:             5.15.0-101-generic\n  OS Image:                   Ubuntu 22.04.4 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.6.36\n  Kubelet Version:            v1.30.6-ckp\n  Kube-Proxy Version:         v1.30.6-ckp\nPodCIDR:                      10.244.1.0/24\nPodCIDRs:                     10.244.1.0/24\nNon-terminated Pods:          (6 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-flannel                kube-flannel-ds-d4gxd                                      100m (0%)     0 (0%)      50Mi (0%)        0 (0%)         107m\n  kube-system                 kube-proxy-5qrm9                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         107m\n  kubectl-4002                agnhost-primary-f2tgf                                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         2s\n  sonobuoy                    sonobuoy                                                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         104m\n  sonobuoy                    sonobuoy-e2e-job-b4c9b24bd0eb40b5                          0 (0%)        0 (0%)      0 (0%)           0 (0%)         104m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-2a7ed7b0c9d74150-7w6fj    0 (0%)        0 (0%)      0 (0%)           0 (0%)         104m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource               Requests   Limits\n  --------               --------   ------\n  cpu                    100m (0%)  0 (0%)\n  memory                 50Mi (0%)  0 (0%)\n  ephemeral-storage      0 (0%)     0 (0%)\n  hugepages-1Gi          0 (0%)     0 (0%)\n  hugepages-2Mi          0 (0%)     0 (0%)\n  example.com/fakecpu    0          0\n  scheduling.k8s.io/foo  0          0\nEvents:                  <none>\n"
  I1203 20:46:58.945034 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-4002 describe namespace kubectl-4002'
  I1203 20:46:59.043589 23 builder.go:146] stderr: ""
  I1203 20:46:59.043692 23 builder.go:147] stdout: "Name:         kubectl-4002\nLabels:       e2e-framework=kubectl\n              e2e-run=5bf20c14-ed9f-42ef-a1ac-7bd278aaf100\n              kubernetes.io/metadata.name=kubectl-4002\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I1203 20:46:59.043879 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4002" for this suite. @ 12/03/24 20:46:59.049
• [2.961 seconds]
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:673
  STEP: Creating a kubernetes client @ 12/03/24 20:46:59.055
  I1203 20:46:59.056034 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename validating-admission-policy @ 12/03/24 20:46:59.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:46:59.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:46:59.077
  STEP: getting /apis @ 12/03/24 20:46:59.094
  STEP: getting /apis/admissionregistration.k8s.io @ 12/03/24 20:46:59.104
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 12/03/24 20:46:59.106
  STEP: creating @ 12/03/24 20:46:59.108
  STEP: getting @ 12/03/24 20:46:59.124
  STEP: listing @ 12/03/24 20:46:59.128
  STEP: watching @ 12/03/24 20:46:59.132
  I1203 20:46:59.132210 23 validatingadmissionpolicy.go:768] starting watch
  STEP: patching @ 12/03/24 20:46:59.133
  STEP: updating @ 12/03/24 20:46:59.139
  I1203 20:46:59.147136 23 validatingadmissionpolicy.go:796] waiting for watch events with expected annotations
  STEP: deleting @ 12/03/24 20:46:59.147
  STEP: deleting a collection @ 12/03/24 20:46:59.157
  I1203 20:46:59.173395 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-5687" for this suite. @ 12/03/24 20:46:59.178
• [0.130 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 12/03/24 20:46:59.186
  I1203 20:46:59.186488 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename webhook @ 12/03/24 20:46:59.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:46:59.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:46:59.206
  STEP: Setting up server cert @ 12/03/24 20:46:59.227
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/03/24 20:46:59.768
  STEP: Deploying the webhook pod @ 12/03/24 20:46:59.778
  STEP: Wait for the deployment to be ready @ 12/03/24 20:46:59.791
  I1203 20:46:59.799238 23 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/03/24 20:47:01.814
  STEP: Verifying the service has paired with the endpoint @ 12/03/24 20:47:01.832
  I1203 20:47:02.832539 23 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 12/03/24 20:47:02.841
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 12/03/24 20:47:02.843
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 12/03/24 20:47:02.843
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 12/03/24 20:47:02.843
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 12/03/24 20:47:02.845
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 12/03/24 20:47:02.845
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 12/03/24 20:47:02.848
  I1203 20:47:02.881447 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6984" for this suite. @ 12/03/24 20:47:02.885
  STEP: Destroying namespace "webhook-markers-2842" for this suite. @ 12/03/24 20:47:02.89
• [3.709 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 12/03/24 20:47:02.896
  I1203 20:47:02.896192 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/03/24 20:47:02.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:47:02.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:47:02.912
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 12/03/24 20:47:02.916
  I1203 20:47:02.917681 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  I1203 20:47:04.282662 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  I1203 20:47:09.977355 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-593" for this suite. @ 12/03/24 20:47:09.991
• [7.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 12/03/24 20:47:09.997
  I1203 20:47:09.997502 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename pod-network-test @ 12/03/24 20:47:09.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:47:10.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:47:10.017
  STEP: Performing setup for networking test in namespace pod-network-test-4697 @ 12/03/24 20:47:10.021
  STEP: creating a selector @ 12/03/24 20:47:10.021
  STEP: Creating the service pods in kubernetes @ 12/03/24 20:47:10.021
  I1203 20:47:10.021174 23 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 12/03/24 20:47:22.095
  I1203 20:47:24.114201 23 utils.go:779] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I1203 20:47:24.114275 23 networking.go:42] Breadth first check of 10.244.1.240 on host 192.168.100.37...
  I1203 20:47:24.117662 23 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.241:9080/dial?request=hostname&protocol=udp&host=10.244.1.240&port=8081&tries=1'] Namespace:pod-network-test-4697 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1203 20:47:24.117749 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  I1203 20:47:24.119462 23 exec_util.go:62] ExecWithOptions: Clientset creation
  I1203 20:47:24.119638 23 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-4697/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.241%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.1.240%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1203 20:47:24.211271 23 utils.go:331] Waiting for responses: map[]
  I1203 20:47:24.211313 23 utils.go:335] reached 10.244.1.240 after 0/1 tries
  I1203 20:47:24.211327 23 networking.go:42] Breadth first check of 10.244.2.235 on host 192.168.100.114...
  I1203 20:47:24.214744 23 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.244.1.241:9080/dial?request=hostname&protocol=udp&host=10.244.2.235&port=8081&tries=1'] Namespace:pod-network-test-4697 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1203 20:47:24.214808 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  I1203 20:47:24.215753 23 exec_util.go:62] ExecWithOptions: Clientset creation
  I1203 20:47:24.215875 23 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-4697/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.244.1.241%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.244.2.235%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1203 20:47:24.288131 23 utils.go:331] Waiting for responses: map[]
  I1203 20:47:24.288223 23 utils.go:335] reached 10.244.2.235 after 0/1 tries
  I1203 20:47:24.288261 23 networking.go:53] Going to retry 0 out of 2 pods....
  I1203 20:47:24.288407 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4697" for this suite. @ 12/03/24 20:47:24.293
• [14.302 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 12/03/24 20:47:24.3
  I1203 20:47:24.300183 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename crd-watch @ 12/03/24 20:47:24.301
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:47:24.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:47:24.32
  I1203 20:47:24.325332 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Creating first CR  @ 12/03/24 20:47:26.912
  I1203 20:47:26.919195 23 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-12-03T20:47:26Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-12-03T20:47:26Z]] name:name1 resourceVersion:33992 uid:309e8f3a-d78d-47fa-a46a-b340c8e71a8c] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 12/03/24 20:47:36.919
  I1203 20:47:36.926874 23 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-12-03T20:47:36Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-12-03T20:47:36Z]] name:name2 resourceVersion:34037 uid:4358f17e-d80d-4f10-98a9-a376e41522c1] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 12/03/24 20:47:46.928
  I1203 20:47:46.937076 23 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-12-03T20:47:26Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-12-03T20:47:46Z]] name:name1 resourceVersion:34053 uid:309e8f3a-d78d-47fa-a46a-b340c8e71a8c] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 12/03/24 20:47:56.938
  I1203 20:47:56.948250 23 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-12-03T20:47:36Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-12-03T20:47:56Z]] name:name2 resourceVersion:34068 uid:4358f17e-d80d-4f10-98a9-a376e41522c1] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 12/03/24 20:48:06.949
  I1203 20:48:06.957978 23 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-12-03T20:47:26Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-12-03T20:47:46Z]] name:name1 resourceVersion:34084 uid:309e8f3a-d78d-47fa-a46a-b340c8e71a8c] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 12/03/24 20:48:16.959
  I1203 20:48:16.968709 23 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-12-03T20:47:36Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-12-03T20:47:56Z]] name:name2 resourceVersion:34100 uid:4358f17e-d80d-4f10-98a9-a376e41522c1] num:map[num1:9223372036854775807 num2:1000000]]}
  I1203 20:48:27.485416 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-3550" for this suite. @ 12/03/24 20:48:27.491
• [63.198 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 12/03/24 20:48:27.498
  I1203 20:48:27.498894 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename emptydir-wrapper @ 12/03/24 20:48:27.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:48:27.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:48:27.518
  STEP: Cleaning up the secret @ 12/03/24 20:48:29.554
  STEP: Cleaning up the configmap @ 12/03/24 20:48:29.56
  STEP: Cleaning up the pod @ 12/03/24 20:48:29.565
  I1203 20:48:29.574699 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-4583" for this suite. @ 12/03/24 20:48:29.579
• [2.086 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:147
  STEP: Creating a kubernetes client @ 12/03/24 20:48:29.585
  I1203 20:48:29.585863 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename kubelet-test @ 12/03/24 20:48:29.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:48:29.601
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:48:29.605
  STEP: Waiting for pod completion @ 12/03/24 20:48:29.618
  I1203 20:48:33.656883 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2916" for this suite. @ 12/03/24 20:48:33.661
• [4.088 seconds]
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 12/03/24 20:48:33.673
  I1203 20:48:33.673867 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename pod-network-test @ 12/03/24 20:48:33.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:48:33.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:48:33.695
  STEP: Performing setup for networking test in namespace pod-network-test-2450 @ 12/03/24 20:48:33.699
  STEP: creating a selector @ 12/03/24 20:48:33.699
  STEP: Creating the service pods in kubernetes @ 12/03/24 20:48:33.699
  I1203 20:48:33.699989 23 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 12/03/24 20:48:45.775
  I1203 20:48:47.807535 23 utils.go:779] Setting MaxTries for pod polling to 34 for networking test based on endpoint count 2
  I1203 20:48:47.807611 23 utils.go:472] Going to poll 10.244.1.244 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I1203 20:48:47.811353 23 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.1.244 8081 | grep -v '^\s*$'] Namespace:pod-network-test-2450 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1203 20:48:47.811414 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  I1203 20:48:47.812430 23 exec_util.go:62] ExecWithOptions: Clientset creation
  I1203 20:48:47.812547 23 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-2450/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.1.244+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1203 20:48:48.890140 23 utils.go:489] Found all 1 expected endpoints: [netserver-0]
  I1203 20:48:48.890228 23 utils.go:472] Going to poll 10.244.2.236 on port 8081 at least 0 times, with a maximum of 34 tries before failing
  I1203 20:48:48.896842 23 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.244.2.236 8081 | grep -v '^\s*$'] Namespace:pod-network-test-2450 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1203 20:48:48.896891 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  I1203 20:48:48.897608 23 exec_util.go:62] ExecWithOptions: Clientset creation
  I1203 20:48:48.897698 23 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-2450/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.244.2.236+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1203 20:48:49.975771 23 utils.go:489] Found all 1 expected endpoints: [netserver-1]
  I1203 20:48:49.975959 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-2450" for this suite. @ 12/03/24 20:48:49.982
• [16.314 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 12/03/24 20:48:49.988
  I1203 20:48:49.988457 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename namespaces @ 12/03/24 20:48:49.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:48:50.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:48:50.005
  STEP: creating a Namespace @ 12/03/24 20:48:50.01
  STEP: patching the Namespace @ 12/03/24 20:48:50.021
  STEP: get the Namespace and ensuring it has the label @ 12/03/24 20:48:50.025
  I1203 20:48:50.028383 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4506" for this suite. @ 12/03/24 20:48:50.032
  STEP: Destroying namespace "nspatchtest-e3715be7-b4c3-445c-882a-e1507b4fc801-5563" for this suite. @ 12/03/24 20:48:50.036
• [0.053 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 12/03/24 20:48:50.041
  I1203 20:48:50.041829 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename namespaces @ 12/03/24 20:48:50.043
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:48:50.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:48:50.059
  STEP: Read namespace status @ 12/03/24 20:48:50.064
  I1203 20:48:50.067756 23 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 12/03/24 20:48:50.067
  I1203 20:48:50.073512 23 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 12/03/24 20:48:50.073
  I1203 20:48:50.083823 23 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I1203 20:48:50.083969 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4305" for this suite. @ 12/03/24 20:48:50.088
• [0.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1693
  STEP: Creating a kubernetes client @ 12/03/24 20:48:50.094
  I1203 20:48:50.094366 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename kubectl @ 12/03/24 20:48:50.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:48:50.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:48:50.112
  STEP: creating Agnhost RC @ 12/03/24 20:48:50.117
  I1203 20:48:50.117499 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-5162 create -f -'
  I1203 20:48:50.287969 23 builder.go:146] stderr: ""
  I1203 20:48:50.288043 23 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 12/03/24 20:48:50.288
  I1203 20:48:51.293398 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1203 20:48:51.293475 23 framework.go:733] Found 1 / 1
  I1203 20:48:51.293519 23 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 12/03/24 20:48:51.293
  I1203 20:48:51.297479 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1203 20:48:51.297537 23 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1203 20:48:51.297616 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-5162 patch pod agnhost-primary-wmqth -p {"metadata":{"annotations":{"x":"y"}}}'
  I1203 20:48:51.395690 23 builder.go:146] stderr: ""
  I1203 20:48:51.395759 23 builder.go:147] stdout: "pod/agnhost-primary-wmqth patched\n"
  STEP: checking annotations @ 12/03/24 20:48:51.395
  I1203 20:48:51.399131 23 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1203 20:48:51.399184 23 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1203 20:48:51.399356 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5162" for this suite. @ 12/03/24 20:48:51.403
• [1.316 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 12/03/24 20:48:51.411
  I1203 20:48:51.411154 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/03/24 20:48:51.413
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:48:51.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:48:51.428
  STEP: set up a multi version CRD @ 12/03/24 20:48:51.433
  I1203 20:48:51.434515 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: mark a version not serverd @ 12/03/24 20:48:55.066
  STEP: check the unserved version gets removed @ 12/03/24 20:48:55.103
  STEP: check the other version is not changed @ 12/03/24 20:48:55.957
  I1203 20:48:58.825725 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8687" for this suite. @ 12/03/24 20:48:58.835
• [7.430 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 12/03/24 20:48:58.842
  I1203 20:48:58.842050 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename pods @ 12/03/24 20:48:58.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:48:58.864
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:48:58.868
  STEP: creating the pod @ 12/03/24 20:48:58.872
  STEP: submitting the pod to kubernetes @ 12/03/24 20:48:58.873
  STEP: verifying QOS class is set on the pod @ 12/03/24 20:48:58.88
  I1203 20:48:58.883793 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2271" for this suite. @ 12/03/24 20:48:58.888
• [0.052 seconds]
------------------------------
SSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 12/03/24 20:48:58.894
  I1203 20:48:58.894078 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename configmap @ 12/03/24 20:48:58.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:48:58.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:48:58.912
  STEP: Creating configMap configmap-8873/configmap-test-fb924c05-322a-4db3-815c-81530d9ede68 @ 12/03/24 20:48:58.916
  STEP: Creating a pod to test consume configMaps @ 12/03/24 20:48:58.919
  STEP: Saw pod success @ 12/03/24 20:49:02.943
  I1203 20:49:02.946692 23 output.go:196] Trying to get logs from node nodea17 pod pod-configmaps-cc79d40e-b661-45fa-ba3a-1f36c7da3376 container env-test: <nil>
  STEP: delete the pod @ 12/03/24 20:49:02.954
  I1203 20:49:02.965744 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8873" for this suite. @ 12/03/24 20:49:02.97
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 12/03/24 20:49:02.977
  I1203 20:49:02.977214 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename pods @ 12/03/24 20:49:02.978
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:49:02.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:49:02.994
  I1203 20:49:02.998440 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: creating the pod @ 12/03/24 20:49:02.999
  STEP: submitting the pod to kubernetes @ 12/03/24 20:49:02.999
  I1203 20:49:05.033126 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5270" for this suite. @ 12/03/24 20:49:05.038
• [2.068 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1034
  STEP: Creating a kubernetes client @ 12/03/24 20:49:05.045
  I1203 20:49:05.045241 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename statefulset @ 12/03/24 20:49:05.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:49:05.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:49:05.064
  STEP: Creating service test in namespace statefulset-914 @ 12/03/24 20:49:05.068
  STEP: Creating statefulset ss in namespace statefulset-914 @ 12/03/24 20:49:05.075
  I1203 20:49:05.086181 23 wait.go:40] Found 0 stateful pods, waiting for 1
  I1203 20:49:15.088803 23 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 12/03/24 20:49:15.096
  STEP: Getting /status @ 12/03/24 20:49:15.115
  I1203 20:49:15.121474 23 statefulset.go:1070] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 12/03/24 20:49:15.121
  I1203 20:49:15.132392 23 statefulset.go:1090] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 12/03/24 20:49:15.132
  I1203 20:49:15.135143 23 statefulset.go:1118] Observed &StatefulSet event: ADDED
  I1203 20:49:15.135251 23 statefulset.go:1111] Found Statefulset ss in namespace statefulset-914 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1203 20:49:15.135281 23 statefulset.go:1122] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 12/03/24 20:49:15.135
  I1203 20:49:15.135378 23 statefulset.go:1126] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1203 20:49:15.144734 23 statefulset.go:1130] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 12/03/24 20:49:15.144
  I1203 20:49:15.147657 23 statefulset.go:1155] Observed &StatefulSet event: ADDED
  I1203 20:49:15.147872 23 statefulset.go:138] Deleting all statefulset in ns statefulset-914
  I1203 20:49:15.151195 23 rest.go:150] Scaling statefulset ss to 0
  I1203 20:49:25.167358 23 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1203 20:49:25.171164 23 rest.go:88] Deleting statefulset ss
  I1203 20:49:25.184665 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-914" for this suite. @ 12/03/24 20:49:25.188
• [20.149 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 12/03/24 20:49:25.194
  I1203 20:49:25.194349 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename projected @ 12/03/24 20:49:25.195
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:49:25.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:49:25.211
  STEP: Creating configMap with name projected-configmap-test-volume-map-d084c98f-cd04-4e33-9c7a-9b58eb9c82b1 @ 12/03/24 20:49:25.216
  STEP: Creating a pod to test consume configMaps @ 12/03/24 20:49:25.22
  STEP: Saw pod success @ 12/03/24 20:49:29.245
  I1203 20:49:29.248841 23 output.go:196] Trying to get logs from node nodea17 pod pod-projected-configmaps-a4402b26-5dde-4f3c-90e2-18fcdc26aba3 container agnhost-container: <nil>
  STEP: delete the pod @ 12/03/24 20:49:29.257
  I1203 20:49:29.273586 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2167" for this suite. @ 12/03/24 20:49:29.278
• [4.089 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 12/03/24 20:49:29.283
  I1203 20:49:29.283249 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/03/24 20:49:29.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:49:29.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:49:29.302
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 12/03/24 20:49:29.307
  I1203 20:49:29.307880 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 12/03/24 20:49:35.108
  I1203 20:49:35.109596 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  I1203 20:49:36.484969 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  I1203 20:49:42.113272 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-196" for this suite. @ 12/03/24 20:49:42.127
• [12.851 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 12/03/24 20:49:42.135
  I1203 20:49:42.135393 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename emptydir @ 12/03/24 20:49:42.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:49:42.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:49:42.154
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 12/03/24 20:49:42.159
  STEP: Saw pod success @ 12/03/24 20:49:46.182
  I1203 20:49:46.186464 23 output.go:196] Trying to get logs from node nodea17 pod pod-7b25a9ab-1e97-496c-bbf1-1c88a4ad6179 container test-container: <nil>
  STEP: delete the pod @ 12/03/24 20:49:46.194
  I1203 20:49:46.209785 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2268" for this suite. @ 12/03/24 20:49:46.214
• [4.085 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 12/03/24 20:49:46.22
  I1203 20:49:46.220642 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename configmap @ 12/03/24 20:49:46.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:49:46.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:49:46.253
  STEP: Creating configMap with name configmap-test-volume-9dcad3f1-b0dc-4ef0-bd86-54927c4449e7 @ 12/03/24 20:49:46.258
  STEP: Creating a pod to test consume configMaps @ 12/03/24 20:49:46.264
  STEP: Saw pod success @ 12/03/24 20:49:50.288
  I1203 20:49:50.292775 23 output.go:196] Trying to get logs from node nodea17 pod pod-configmaps-75cd08b0-1c12-428f-bc13-1c1b3770f7bc container agnhost-container: <nil>
  STEP: delete the pod @ 12/03/24 20:49:50.3
  I1203 20:49:50.318301 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4605" for this suite. @ 12/03/24 20:49:50.322
• [4.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 12/03/24 20:49:50.328
  I1203 20:49:50.328993 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename downward-api @ 12/03/24 20:49:50.33
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:49:50.344
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:49:50.348
  STEP: Creating a pod to test downward api env vars @ 12/03/24 20:49:50.353
  STEP: Saw pod success @ 12/03/24 20:49:54.375
  I1203 20:49:54.379871 23 output.go:196] Trying to get logs from node nodea17 pod downward-api-11ead25c-a32d-4720-b966-e72a3ceb6b5e container dapi-container: <nil>
  STEP: delete the pod @ 12/03/24 20:49:54.388
  I1203 20:49:54.403024 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3800" for this suite. @ 12/03/24 20:49:54.407
• [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 12/03/24 20:49:54.414
  I1203 20:49:54.414241 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename svc-latency @ 12/03/24 20:49:54.415
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:49:54.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:49:54.434
  I1203 20:49:54.438704 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-4512 @ 12/03/24 20:49:54.439
  I1203 20:49:54.445615      23 runners.go:198] Created replication controller with name: svc-latency-rc, namespace: svc-latency-4512, replica count: 1
  I1203 20:49:55.497059      23 runners.go:198] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1203 20:49:55.614188 23 service_latency.go:356] Created: latency-svc-njr4p
  I1203 20:49:55.623093 23 service_latency.go:363] Got endpoints: latency-svc-njr4p [25.128345ms]
  I1203 20:49:55.638067 23 service_latency.go:356] Created: latency-svc-9p4mg
  I1203 20:49:55.643714 23 service_latency.go:363] Got endpoints: latency-svc-9p4mg [20.335267ms]
  I1203 20:49:55.648745 23 service_latency.go:356] Created: latency-svc-8f288
  I1203 20:49:55.663940 23 service_latency.go:363] Got endpoints: latency-svc-8f288 [40.412085ms]
  I1203 20:49:55.670916 23 service_latency.go:356] Created: latency-svc-jnj2v
  I1203 20:49:55.682270 23 service_latency.go:363] Got endpoints: latency-svc-jnj2v [58.61317ms]
  I1203 20:49:55.686521 23 service_latency.go:356] Created: latency-svc-mwrbp
  I1203 20:49:55.691925 23 service_latency.go:363] Got endpoints: latency-svc-mwrbp [68.435608ms]
  I1203 20:49:55.702042 23 service_latency.go:356] Created: latency-svc-lz98p
  I1203 20:49:55.718604 23 service_latency.go:363] Got endpoints: latency-svc-lz98p [95.02138ms]
  I1203 20:49:55.718690 23 service_latency.go:356] Created: latency-svc-bz8pb
  I1203 20:49:55.722635 23 service_latency.go:363] Got endpoints: latency-svc-bz8pb [98.835397ms]
  I1203 20:49:55.731447 23 service_latency.go:356] Created: latency-svc-7glmb
  I1203 20:49:55.741789 23 service_latency.go:363] Got endpoints: latency-svc-7glmb [118.045115ms]
  I1203 20:49:55.744465 23 service_latency.go:356] Created: latency-svc-6fjk5
  I1203 20:49:55.749699 23 service_latency.go:363] Got endpoints: latency-svc-6fjk5 [125.809389ms]
  I1203 20:49:55.756626 23 service_latency.go:356] Created: latency-svc-nqtvj
  I1203 20:49:55.790710 23 service_latency.go:363] Got endpoints: latency-svc-nqtvj [166.947655ms]
  I1203 20:49:55.795657 23 service_latency.go:356] Created: latency-svc-fxfv8
  I1203 20:49:55.803672 23 service_latency.go:363] Got endpoints: latency-svc-fxfv8 [179.834854ms]
  I1203 20:49:55.806531 23 service_latency.go:356] Created: latency-svc-6mtkf
  I1203 20:49:55.811259 23 service_latency.go:363] Got endpoints: latency-svc-6mtkf [187.546688ms]
  I1203 20:49:55.830343 23 service_latency.go:356] Created: latency-svc-59xfr
  I1203 20:49:55.838307 23 service_latency.go:363] Got endpoints: latency-svc-59xfr [214.408786ms]
  I1203 20:49:55.839051 23 service_latency.go:356] Created: latency-svc-nwpmp
  I1203 20:49:55.844183 23 service_latency.go:363] Got endpoints: latency-svc-nwpmp [220.273089ms]
  I1203 20:49:55.856755 23 service_latency.go:356] Created: latency-svc-gksqw
  I1203 20:49:55.861964 23 service_latency.go:363] Got endpoints: latency-svc-gksqw [238.192262ms]
  I1203 20:49:55.869490 23 service_latency.go:356] Created: latency-svc-wbsv6
  I1203 20:49:55.873430 23 service_latency.go:363] Got endpoints: latency-svc-wbsv6 [249.543013ms]
  I1203 20:49:55.920522 23 service_latency.go:356] Created: latency-svc-w6wnk
  I1203 20:49:55.929460 23 service_latency.go:363] Got endpoints: latency-svc-w6wnk [285.668248ms]
  I1203 20:49:55.932235 23 service_latency.go:356] Created: latency-svc-wzqkn
  I1203 20:49:55.941365 23 service_latency.go:363] Got endpoints: latency-svc-wzqkn [277.321323ms]
  I1203 20:49:55.947395 23 service_latency.go:356] Created: latency-svc-5qk86
  I1203 20:49:55.953725 23 service_latency.go:363] Got endpoints: latency-svc-5qk86 [271.364999ms]
  I1203 20:49:55.969196 23 service_latency.go:356] Created: latency-svc-vtg6t
  I1203 20:49:55.973449 23 service_latency.go:363] Got endpoints: latency-svc-vtg6t [281.452306ms]
  I1203 20:49:55.981640 23 service_latency.go:356] Created: latency-svc-zn5r5
  I1203 20:49:55.991868 23 service_latency.go:363] Got endpoints: latency-svc-zn5r5 [273.188456ms]
  I1203 20:49:56.005369 23 service_latency.go:356] Created: latency-svc-s69fc
  I1203 20:49:56.009847 23 service_latency.go:363] Got endpoints: latency-svc-s69fc [287.130176ms]
  I1203 20:49:56.044884 23 service_latency.go:356] Created: latency-svc-zkbww
  I1203 20:49:56.055641 23 service_latency.go:356] Created: latency-svc-44h2s
  I1203 20:49:56.059744 23 service_latency.go:363] Got endpoints: latency-svc-zkbww [317.880244ms]
  I1203 20:49:56.061109 23 service_latency.go:363] Got endpoints: latency-svc-44h2s [311.340209ms]
  I1203 20:49:56.064765 23 service_latency.go:356] Created: latency-svc-lxfvn
  I1203 20:49:56.066038 23 service_latency.go:363] Got endpoints: latency-svc-lxfvn [275.253234ms]
  I1203 20:49:56.078219 23 service_latency.go:356] Created: latency-svc-5pk5w
  I1203 20:49:56.082011 23 service_latency.go:363] Got endpoints: latency-svc-5pk5w [278.268666ms]
  I1203 20:49:56.097737 23 service_latency.go:356] Created: latency-svc-bs8fc
  I1203 20:49:56.106121 23 service_latency.go:363] Got endpoints: latency-svc-bs8fc [294.77477ms]
  I1203 20:49:56.109760 23 service_latency.go:356] Created: latency-svc-bkcmf
  I1203 20:49:56.119234 23 service_latency.go:363] Got endpoints: latency-svc-bkcmf [280.824223ms]
  I1203 20:49:56.165105 23 service_latency.go:356] Created: latency-svc-5lxww
  I1203 20:49:56.173412 23 service_latency.go:363] Got endpoints: latency-svc-5lxww [329.156404ms]
  I1203 20:49:56.174645 23 service_latency.go:356] Created: latency-svc-c45pt
  I1203 20:49:56.178747 23 service_latency.go:363] Got endpoints: latency-svc-c45pt [316.719844ms]
  I1203 20:49:56.190600 23 service_latency.go:356] Created: latency-svc-spsjr
  I1203 20:49:56.194242 23 service_latency.go:363] Got endpoints: latency-svc-spsjr [320.74416ms]
  I1203 20:49:56.216587 23 service_latency.go:356] Created: latency-svc-shqfp
  I1203 20:49:56.225086 23 service_latency.go:363] Got endpoints: latency-svc-shqfp [295.528664ms]
  I1203 20:49:56.226228 23 service_latency.go:356] Created: latency-svc-xlll7
  I1203 20:49:56.246659 23 service_latency.go:363] Got endpoints: latency-svc-xlll7 [305.199083ms]
  I1203 20:49:56.248913 23 service_latency.go:356] Created: latency-svc-xqsff
  I1203 20:49:56.252897 23 service_latency.go:363] Got endpoints: latency-svc-xqsff [299.108985ms]
  I1203 20:49:56.292545 23 service_latency.go:356] Created: latency-svc-dp2sj
  I1203 20:49:56.298680 23 service_latency.go:356] Created: latency-svc-lfn6q
  I1203 20:49:56.298798 23 service_latency.go:363] Got endpoints: latency-svc-dp2sj [325.280498ms]
  I1203 20:49:56.307089 23 service_latency.go:363] Got endpoints: latency-svc-lfn6q [315.154779ms]
  I1203 20:49:56.315639 23 service_latency.go:356] Created: latency-svc-bbln6
  I1203 20:49:56.319976 23 service_latency.go:363] Got endpoints: latency-svc-bbln6 [310.053269ms]
  I1203 20:49:56.331329 23 service_latency.go:356] Created: latency-svc-5wp8q
  I1203 20:49:56.341922 23 service_latency.go:363] Got endpoints: latency-svc-5wp8q [282.096398ms]
  I1203 20:49:56.349213 23 service_latency.go:356] Created: latency-svc-9jbr5
  I1203 20:49:56.354323 23 service_latency.go:363] Got endpoints: latency-svc-9jbr5 [293.1327ms]
  I1203 20:49:56.356178 23 service_latency.go:356] Created: latency-svc-4v2x2
  I1203 20:49:56.361665 23 service_latency.go:363] Got endpoints: latency-svc-4v2x2 [295.526724ms]
  I1203 20:49:56.368436 23 service_latency.go:356] Created: latency-svc-jb6t5
  I1203 20:49:56.375301 23 service_latency.go:363] Got endpoints: latency-svc-jb6t5 [293.167111ms]
  I1203 20:49:56.386988 23 service_latency.go:356] Created: latency-svc-lzp5s
  I1203 20:49:56.423090 23 service_latency.go:363] Got endpoints: latency-svc-lzp5s [316.907334ms]
  I1203 20:49:56.426436 23 service_latency.go:356] Created: latency-svc-z9b26
  I1203 20:49:56.434857 23 service_latency.go:363] Got endpoints: latency-svc-z9b26 [315.551555ms]
  I1203 20:49:56.437676 23 service_latency.go:356] Created: latency-svc-rz5fn
  I1203 20:49:56.446460 23 service_latency.go:363] Got endpoints: latency-svc-rz5fn [272.950424ms]
  I1203 20:49:56.449064 23 service_latency.go:356] Created: latency-svc-86j6m
  I1203 20:49:56.455570 23 service_latency.go:363] Got endpoints: latency-svc-86j6m [276.760289ms]
  I1203 20:49:56.467324 23 service_latency.go:356] Created: latency-svc-fwwfq
  I1203 20:49:56.471937 23 service_latency.go:363] Got endpoints: latency-svc-fwwfq [277.632948ms]
  I1203 20:49:56.474839 23 service_latency.go:356] Created: latency-svc-zqwld
  I1203 20:49:56.486625 23 service_latency.go:363] Got endpoints: latency-svc-zqwld [261.427249ms]
  I1203 20:49:56.489618 23 service_latency.go:356] Created: latency-svc-2644h
  I1203 20:49:56.501535 23 service_latency.go:356] Created: latency-svc-9fr7f
  I1203 20:49:56.507340 23 service_latency.go:356] Created: latency-svc-4sb9h
  I1203 20:49:56.520019 23 service_latency.go:363] Got endpoints: latency-svc-2644h [273.295012ms]
  I1203 20:49:56.521844 23 service_latency.go:356] Created: latency-svc-l46fb
  I1203 20:49:56.545103 23 service_latency.go:356] Created: latency-svc-w8c7b
  I1203 20:49:56.554581 23 service_latency.go:356] Created: latency-svc-75st6
  I1203 20:49:56.570602 23 service_latency.go:363] Got endpoints: latency-svc-9fr7f [317.650913ms]
  I1203 20:49:56.574049 23 service_latency.go:356] Created: latency-svc-mc2vm
  I1203 20:49:56.583947 23 service_latency.go:356] Created: latency-svc-rzvx7
  I1203 20:49:56.596963 23 service_latency.go:356] Created: latency-svc-bblmr
  I1203 20:49:56.608880 23 service_latency.go:356] Created: latency-svc-49xhc
  I1203 20:49:56.619615 23 service_latency.go:356] Created: latency-svc-667j7
  I1203 20:49:56.626382 23 service_latency.go:363] Got endpoints: latency-svc-4sb9h [327.52714ms]
  I1203 20:49:56.637072 23 service_latency.go:356] Created: latency-svc-sm522
  I1203 20:49:56.691014 23 service_latency.go:363] Got endpoints: latency-svc-l46fb [383.82312ms]
  I1203 20:49:56.691681 23 service_latency.go:356] Created: latency-svc-rbv64
  I1203 20:49:56.694207 23 service_latency.go:356] Created: latency-svc-7q96h
  I1203 20:49:56.704291 23 service_latency.go:356] Created: latency-svc-7jl58
  I1203 20:49:56.712116 23 service_latency.go:356] Created: latency-svc-qtf7g
  I1203 20:49:56.723498 23 service_latency.go:363] Got endpoints: latency-svc-w8c7b [403.420447ms]
  I1203 20:49:56.735516 23 service_latency.go:356] Created: latency-svc-cxnzw
  I1203 20:49:56.747107 23 service_latency.go:356] Created: latency-svc-vxrhp
  I1203 20:49:56.762268 23 service_latency.go:356] Created: latency-svc-dq4zq
  I1203 20:49:56.779288 23 service_latency.go:363] Got endpoints: latency-svc-75st6 [437.281564ms]
  I1203 20:49:56.782403 23 service_latency.go:356] Created: latency-svc-tqt48
  I1203 20:49:56.820571 23 service_latency.go:363] Got endpoints: latency-svc-mc2vm [466.175534ms]
  I1203 20:49:56.838233 23 service_latency.go:356] Created: latency-svc-qpjd4
  I1203 20:49:56.854315 23 service_latency.go:356] Created: latency-svc-9lhcw
  I1203 20:49:56.871449 23 service_latency.go:363] Got endpoints: latency-svc-rzvx7 [509.69381ms]
  I1203 20:49:56.898511 23 service_latency.go:356] Created: latency-svc-4qcl8
  I1203 20:49:56.936888 23 service_latency.go:363] Got endpoints: latency-svc-bblmr [561.520384ms]
  I1203 20:49:56.965261 23 service_latency.go:356] Created: latency-svc-4qxct
  I1203 20:49:56.969931 23 service_latency.go:363] Got endpoints: latency-svc-49xhc [546.777425ms]
  I1203 20:49:56.989409 23 service_latency.go:356] Created: latency-svc-8xd7h
  I1203 20:49:57.021994 23 service_latency.go:363] Got endpoints: latency-svc-667j7 [587.052088ms]
  I1203 20:49:57.061661 23 service_latency.go:356] Created: latency-svc-b7chx
  I1203 20:49:57.070490 23 service_latency.go:363] Got endpoints: latency-svc-sm522 [623.944701ms]
  I1203 20:49:57.087074 23 service_latency.go:356] Created: latency-svc-xgnsq
  I1203 20:49:57.120308 23 service_latency.go:363] Got endpoints: latency-svc-rbv64 [664.672539ms]
  I1203 20:49:57.137431 23 service_latency.go:356] Created: latency-svc-gz9sc
  I1203 20:49:57.173796 23 service_latency.go:363] Got endpoints: latency-svc-7q96h [701.787187ms]
  I1203 20:49:57.191750 23 service_latency.go:356] Created: latency-svc-hjbgq
  I1203 20:49:57.221472 23 service_latency.go:363] Got endpoints: latency-svc-7jl58 [734.784064ms]
  I1203 20:49:57.258031 23 service_latency.go:356] Created: latency-svc-9lzd7
  I1203 20:49:57.271704 23 service_latency.go:363] Got endpoints: latency-svc-qtf7g [751.594986ms]
  I1203 20:49:57.301568 23 service_latency.go:356] Created: latency-svc-kl2jt
  I1203 20:49:57.320712 23 service_latency.go:363] Got endpoints: latency-svc-cxnzw [750.046293ms]
  I1203 20:49:57.357367 23 service_latency.go:356] Created: latency-svc-v8jbp
  I1203 20:49:57.374728 23 service_latency.go:363] Got endpoints: latency-svc-vxrhp [748.238833ms]
  I1203 20:49:57.416591 23 service_latency.go:356] Created: latency-svc-vcwj6
  I1203 20:49:57.420294 23 service_latency.go:363] Got endpoints: latency-svc-dq4zq [729.2294ms]
  I1203 20:49:57.471288 23 service_latency.go:363] Got endpoints: latency-svc-tqt48 [747.729715ms]
  I1203 20:49:57.510038 23 service_latency.go:356] Created: latency-svc-kg4xs
  I1203 20:49:57.545337 23 service_latency.go:363] Got endpoints: latency-svc-qpjd4 [765.660554ms]
  I1203 20:49:57.548836 23 service_latency.go:356] Created: latency-svc-hjwlw
  I1203 20:49:57.570493 23 service_latency.go:356] Created: latency-svc-sbgr4
  I1203 20:49:57.571551 23 service_latency.go:363] Got endpoints: latency-svc-9lhcw [750.64085ms]
  I1203 20:49:57.606546 23 service_latency.go:356] Created: latency-svc-hpvkc
  I1203 20:49:57.619795 23 service_latency.go:363] Got endpoints: latency-svc-4qcl8 [748.279543ms]
  I1203 20:49:57.634241 23 service_latency.go:356] Created: latency-svc-4d5pd
  I1203 20:49:57.671947 23 service_latency.go:363] Got endpoints: latency-svc-4qxct [734.986294ms]
  I1203 20:49:57.688367 23 service_latency.go:356] Created: latency-svc-q9wbj
  I1203 20:49:57.721060 23 service_latency.go:363] Got endpoints: latency-svc-8xd7h [751.056838ms]
  I1203 20:49:57.736968 23 service_latency.go:356] Created: latency-svc-xjbgx
  I1203 20:49:57.770414 23 service_latency.go:363] Got endpoints: latency-svc-b7chx [748.343684ms]
  I1203 20:49:57.796365 23 service_latency.go:356] Created: latency-svc-86f7z
  I1203 20:49:57.820983 23 service_latency.go:363] Got endpoints: latency-svc-xgnsq [750.427553ms]
  I1203 20:49:57.839744 23 service_latency.go:356] Created: latency-svc-hcdx6
  I1203 20:49:57.877637 23 service_latency.go:363] Got endpoints: latency-svc-gz9sc [757.261157ms]
  I1203 20:49:57.894582 23 service_latency.go:356] Created: latency-svc-djpq2
  I1203 20:49:57.921577 23 service_latency.go:363] Got endpoints: latency-svc-hjbgq [747.704286ms]
  I1203 20:49:57.936874 23 service_latency.go:356] Created: latency-svc-92nfq
  I1203 20:49:57.970811 23 service_latency.go:363] Got endpoints: latency-svc-9lzd7 [749.26619ms]
  I1203 20:49:58.002209 23 service_latency.go:356] Created: latency-svc-n26rj
  I1203 20:49:58.022118 23 service_latency.go:363] Got endpoints: latency-svc-kl2jt [750.344077ms]
  I1203 20:49:58.046078 23 service_latency.go:356] Created: latency-svc-jzq64
  I1203 20:49:58.073996 23 service_latency.go:363] Got endpoints: latency-svc-v8jbp [753.171145ms]
  I1203 20:49:58.118459 23 service_latency.go:356] Created: latency-svc-fgtzk
  I1203 20:49:58.121175 23 service_latency.go:363] Got endpoints: latency-svc-vcwj6 [746.3772ms]
  I1203 20:49:58.135804 23 service_latency.go:356] Created: latency-svc-qqwf2
  I1203 20:49:58.172259 23 service_latency.go:363] Got endpoints: latency-svc-kg4xs [751.889779ms]
  I1203 20:49:58.186865 23 service_latency.go:356] Created: latency-svc-scqcv
  I1203 20:49:58.223584 23 service_latency.go:363] Got endpoints: latency-svc-hjwlw [752.203419ms]
  I1203 20:49:58.277310 23 service_latency.go:363] Got endpoints: latency-svc-sbgr4 [731.873837ms]
  I1203 20:49:58.281324 23 service_latency.go:356] Created: latency-svc-gw5gs
  I1203 20:49:58.294805 23 service_latency.go:356] Created: latency-svc-v4mqx
  I1203 20:49:58.322259 23 service_latency.go:363] Got endpoints: latency-svc-hpvkc [750.631798ms]
  I1203 20:49:58.370384 23 service_latency.go:356] Created: latency-svc-kn47b
  I1203 20:49:58.374548 23 service_latency.go:363] Got endpoints: latency-svc-4d5pd [754.663275ms]
  I1203 20:49:58.402114 23 service_latency.go:356] Created: latency-svc-jhldn
  I1203 20:49:58.420984 23 service_latency.go:363] Got endpoints: latency-svc-q9wbj [748.961325ms]
  I1203 20:49:58.455065 23 service_latency.go:356] Created: latency-svc-m6q7r
  I1203 20:49:58.470801 23 service_latency.go:363] Got endpoints: latency-svc-xjbgx [749.678641ms]
  I1203 20:49:58.488810 23 service_latency.go:356] Created: latency-svc-slph7
  I1203 20:49:58.520418 23 service_latency.go:363] Got endpoints: latency-svc-86f7z [749.940153ms]
  I1203 20:49:58.537692 23 service_latency.go:356] Created: latency-svc-l48b4
  I1203 20:49:58.570261 23 service_latency.go:363] Got endpoints: latency-svc-hcdx6 [749.210842ms]
  I1203 20:49:58.590390 23 service_latency.go:356] Created: latency-svc-4thvv
  I1203 20:49:58.621504 23 service_latency.go:363] Got endpoints: latency-svc-djpq2 [743.786147ms]
  I1203 20:49:58.638697 23 service_latency.go:356] Created: latency-svc-lks96
  I1203 20:49:58.672879 23 service_latency.go:363] Got endpoints: latency-svc-92nfq [751.228471ms]
  I1203 20:49:58.696069 23 service_latency.go:356] Created: latency-svc-mss5k
  I1203 20:49:58.721036 23 service_latency.go:363] Got endpoints: latency-svc-n26rj [750.149154ms]
  I1203 20:49:58.740292 23 service_latency.go:356] Created: latency-svc-vvjnv
  I1203 20:49:58.770270 23 service_latency.go:363] Got endpoints: latency-svc-jzq64 [748.044887ms]
  I1203 20:49:58.821424 23 service_latency.go:356] Created: latency-svc-5skcw
  I1203 20:49:58.822437 23 service_latency.go:363] Got endpoints: latency-svc-fgtzk [748.375741ms]
  I1203 20:49:58.837172 23 service_latency.go:356] Created: latency-svc-p4g7r
  I1203 20:49:58.871398 23 service_latency.go:363] Got endpoints: latency-svc-qqwf2 [750.159889ms]
  I1203 20:49:58.887124 23 service_latency.go:356] Created: latency-svc-t7pbq
  I1203 20:49:58.921646 23 service_latency.go:363] Got endpoints: latency-svc-scqcv [749.323525ms]
  I1203 20:49:58.950418 23 service_latency.go:356] Created: latency-svc-h4tk9
  I1203 20:49:58.972041 23 service_latency.go:363] Got endpoints: latency-svc-gw5gs [748.389171ms]
  I1203 20:49:58.988378 23 service_latency.go:356] Created: latency-svc-w87f7
  I1203 20:49:59.025189 23 service_latency.go:363] Got endpoints: latency-svc-v4mqx [747.806455ms]
  I1203 20:49:59.042728 23 service_latency.go:356] Created: latency-svc-6dx2z
  I1203 20:49:59.070809 23 service_latency.go:363] Got endpoints: latency-svc-kn47b [748.477064ms]
  I1203 20:49:59.086358 23 service_latency.go:356] Created: latency-svc-pcznq
  I1203 20:49:59.122285 23 service_latency.go:363] Got endpoints: latency-svc-jhldn [747.669427ms]
  I1203 20:49:59.140854 23 service_latency.go:356] Created: latency-svc-hmflr
  I1203 20:49:59.170888 23 service_latency.go:363] Got endpoints: latency-svc-m6q7r [749.841588ms]
  I1203 20:49:59.187049 23 service_latency.go:356] Created: latency-svc-gplbw
  I1203 20:49:59.240775 23 service_latency.go:363] Got endpoints: latency-svc-slph7 [769.912621ms]
  I1203 20:49:59.256897 23 service_latency.go:356] Created: latency-svc-hdcft
  I1203 20:49:59.270696 23 service_latency.go:363] Got endpoints: latency-svc-l48b4 [750.234065ms]
  I1203 20:49:59.287408 23 service_latency.go:356] Created: latency-svc-tc97v
  I1203 20:49:59.320766 23 service_latency.go:363] Got endpoints: latency-svc-4thvv [750.427593ms]
  I1203 20:49:59.340847 23 service_latency.go:356] Created: latency-svc-7lgn5
  I1203 20:49:59.370816 23 service_latency.go:363] Got endpoints: latency-svc-lks96 [749.236046ms]
  I1203 20:49:59.394740 23 service_latency.go:356] Created: latency-svc-xz962
  I1203 20:49:59.420854 23 service_latency.go:363] Got endpoints: latency-svc-mss5k [747.914727ms]
  I1203 20:49:59.436534 23 service_latency.go:356] Created: latency-svc-lzq5n
  I1203 20:49:59.470849 23 service_latency.go:363] Got endpoints: latency-svc-vvjnv [749.732472ms]
  I1203 20:49:59.499295 23 service_latency.go:356] Created: latency-svc-cm7pr
  I1203 20:49:59.521190 23 service_latency.go:363] Got endpoints: latency-svc-5skcw [750.856429ms]
  I1203 20:49:59.534708 23 service_latency.go:356] Created: latency-svc-spvtl
  I1203 20:49:59.578725 23 service_latency.go:363] Got endpoints: latency-svc-p4g7r [756.229895ms]
  I1203 20:49:59.597529 23 service_latency.go:356] Created: latency-svc-plvf7
  I1203 20:49:59.620059 23 service_latency.go:363] Got endpoints: latency-svc-t7pbq [748.597399ms]
  I1203 20:49:59.634540 23 service_latency.go:356] Created: latency-svc-2xcbw
  I1203 20:49:59.669944 23 service_latency.go:363] Got endpoints: latency-svc-h4tk9 [748.245924ms]
  I1203 20:49:59.703681 23 service_latency.go:356] Created: latency-svc-8lv9n
  I1203 20:49:59.720195 23 service_latency.go:363] Got endpoints: latency-svc-w87f7 [748.09344ms]
  I1203 20:49:59.734189 23 service_latency.go:356] Created: latency-svc-6wzkw
  I1203 20:49:59.770513 23 service_latency.go:363] Got endpoints: latency-svc-6dx2z [745.238399ms]
  I1203 20:49:59.787717 23 service_latency.go:356] Created: latency-svc-9vvdg
  I1203 20:49:59.822025 23 service_latency.go:363] Got endpoints: latency-svc-pcznq [751.137946ms]
  I1203 20:49:59.837492 23 service_latency.go:356] Created: latency-svc-dtksn
  I1203 20:49:59.874432 23 service_latency.go:363] Got endpoints: latency-svc-hmflr [752.080754ms]
  I1203 20:49:59.890662 23 service_latency.go:356] Created: latency-svc-gdv7z
  I1203 20:49:59.921026 23 service_latency.go:363] Got endpoints: latency-svc-gplbw [750.060102ms]
  I1203 20:49:59.941026 23 service_latency.go:356] Created: latency-svc-vttxc
  I1203 20:49:59.971567 23 service_latency.go:363] Got endpoints: latency-svc-hdcft [730.730333ms]
  I1203 20:49:59.994616 23 service_latency.go:356] Created: latency-svc-kvcvh
  I1203 20:50:00.043910 23 service_latency.go:363] Got endpoints: latency-svc-tc97v [773.159721ms]
  I1203 20:50:00.059054 23 service_latency.go:356] Created: latency-svc-dl85k
  I1203 20:50:00.070802 23 service_latency.go:363] Got endpoints: latency-svc-7lgn5 [749.962649ms]
  I1203 20:50:00.084888 23 service_latency.go:356] Created: latency-svc-gdf2j
  I1203 20:50:00.121854 23 service_latency.go:363] Got endpoints: latency-svc-xz962 [750.968486ms]
  I1203 20:50:00.139480 23 service_latency.go:356] Created: latency-svc-hd85p
  I1203 20:50:00.171148 23 service_latency.go:363] Got endpoints: latency-svc-lzq5n [750.213766ms]
  I1203 20:50:00.196100 23 service_latency.go:356] Created: latency-svc-fcps6
  I1203 20:50:00.222737 23 service_latency.go:363] Got endpoints: latency-svc-cm7pr [751.796143ms]
  I1203 20:50:00.238829 23 service_latency.go:356] Created: latency-svc-tt85t
  I1203 20:50:00.273656 23 service_latency.go:363] Got endpoints: latency-svc-spvtl [752.4108ms]
  I1203 20:50:00.289849 23 service_latency.go:356] Created: latency-svc-8dhcq
  I1203 20:50:00.321450 23 service_latency.go:363] Got endpoints: latency-svc-plvf7 [742.628563ms]
  I1203 20:50:00.338048 23 service_latency.go:356] Created: latency-svc-w4h2b
  I1203 20:50:00.371773 23 service_latency.go:363] Got endpoints: latency-svc-2xcbw [751.600665ms]
  I1203 20:50:00.390347 23 service_latency.go:356] Created: latency-svc-s9m4r
  I1203 20:50:00.422184 23 service_latency.go:363] Got endpoints: latency-svc-8lv9n [752.14812ms]
  I1203 20:50:00.438466 23 service_latency.go:356] Created: latency-svc-bjbfr
  I1203 20:50:00.477898 23 service_latency.go:363] Got endpoints: latency-svc-6wzkw [757.635048ms]
  I1203 20:50:00.509189 23 service_latency.go:356] Created: latency-svc-lsg7s
  I1203 20:50:00.520168 23 service_latency.go:363] Got endpoints: latency-svc-9vvdg [749.563395ms]
  I1203 20:50:00.538120 23 service_latency.go:356] Created: latency-svc-bt5zz
  I1203 20:50:00.571373 23 service_latency.go:363] Got endpoints: latency-svc-dtksn [749.243132ms]
  I1203 20:50:00.608635 23 service_latency.go:356] Created: latency-svc-wzcwj
  I1203 20:50:00.620885 23 service_latency.go:363] Got endpoints: latency-svc-gdv7z [746.376535ms]
  I1203 20:50:00.651490 23 service_latency.go:356] Created: latency-svc-ts6kc
  I1203 20:50:00.672280 23 service_latency.go:363] Got endpoints: latency-svc-vttxc [751.139991ms]
  I1203 20:50:00.686643 23 service_latency.go:356] Created: latency-svc-dx7b9
  I1203 20:50:00.721270 23 service_latency.go:363] Got endpoints: latency-svc-kvcvh [749.62644ms]
  I1203 20:50:00.737398 23 service_latency.go:356] Created: latency-svc-frpml
  I1203 20:50:00.772259 23 service_latency.go:363] Got endpoints: latency-svc-dl85k [728.283441ms]
  I1203 20:50:00.795833 23 service_latency.go:356] Created: latency-svc-n42x5
  I1203 20:50:00.821269 23 service_latency.go:363] Got endpoints: latency-svc-gdf2j [750.398688ms]
  I1203 20:50:00.839199 23 service_latency.go:356] Created: latency-svc-d29b4
  I1203 20:50:00.870695 23 service_latency.go:363] Got endpoints: latency-svc-hd85p [748.756976ms]
  I1203 20:50:00.885946 23 service_latency.go:356] Created: latency-svc-7vktq
  I1203 20:50:00.927921 23 service_latency.go:363] Got endpoints: latency-svc-fcps6 [756.719463ms]
  I1203 20:50:00.943616 23 service_latency.go:356] Created: latency-svc-2pkzk
  I1203 20:50:00.970485 23 service_latency.go:363] Got endpoints: latency-svc-tt85t [747.688855ms]
  I1203 20:50:00.986610 23 service_latency.go:356] Created: latency-svc-97hrn
  I1203 20:50:01.022270 23 service_latency.go:363] Got endpoints: latency-svc-8dhcq [748.560293ms]
  I1203 20:50:01.059471 23 service_latency.go:356] Created: latency-svc-pgkcx
  I1203 20:50:01.070894 23 service_latency.go:363] Got endpoints: latency-svc-w4h2b [749.376001ms]
  I1203 20:50:01.086880 23 service_latency.go:356] Created: latency-svc-v58k7
  I1203 20:50:01.121828 23 service_latency.go:363] Got endpoints: latency-svc-s9m4r [749.989649ms]
  I1203 20:50:01.137001 23 service_latency.go:356] Created: latency-svc-j2vtx
  I1203 20:50:01.183861 23 service_latency.go:363] Got endpoints: latency-svc-bjbfr [761.590054ms]
  I1203 20:50:01.203996 23 service_latency.go:356] Created: latency-svc-ztbkg
  I1203 20:50:01.220807 23 service_latency.go:363] Got endpoints: latency-svc-lsg7s [742.845275ms]
  I1203 20:50:01.238837 23 service_latency.go:356] Created: latency-svc-tgqs7
  I1203 20:50:01.272526 23 service_latency.go:363] Got endpoints: latency-svc-bt5zz [752.278926ms]
  I1203 20:50:01.306644 23 service_latency.go:356] Created: latency-svc-rxdml
  I1203 20:50:01.320836 23 service_latency.go:363] Got endpoints: latency-svc-wzcwj [749.38584ms]
  I1203 20:50:01.336674 23 service_latency.go:356] Created: latency-svc-7ppp9
  I1203 20:50:01.371118 23 service_latency.go:363] Got endpoints: latency-svc-ts6kc [750.150973ms]
  I1203 20:50:01.385735 23 service_latency.go:356] Created: latency-svc-lnr69
  I1203 20:50:01.421111 23 service_latency.go:363] Got endpoints: latency-svc-dx7b9 [748.765837ms]
  I1203 20:50:01.436539 23 service_latency.go:356] Created: latency-svc-hztlb
  I1203 20:50:01.473244 23 service_latency.go:363] Got endpoints: latency-svc-frpml [751.904059ms]
  I1203 20:50:01.488826 23 service_latency.go:356] Created: latency-svc-bmb82
  I1203 20:50:01.521829 23 service_latency.go:363] Got endpoints: latency-svc-n42x5 [749.495718ms]
  I1203 20:50:01.546778 23 service_latency.go:356] Created: latency-svc-qxfzp
  I1203 20:50:01.571003 23 service_latency.go:363] Got endpoints: latency-svc-d29b4 [749.681639ms]
  I1203 20:50:01.584665 23 service_latency.go:356] Created: latency-svc-hmpms
  I1203 20:50:01.628277 23 service_latency.go:363] Got endpoints: latency-svc-7vktq [757.515881ms]
  I1203 20:50:01.641194 23 service_latency.go:356] Created: latency-svc-vmbbj
  I1203 20:50:01.674332 23 service_latency.go:363] Got endpoints: latency-svc-2pkzk [746.30431ms]
  I1203 20:50:01.690894 23 service_latency.go:356] Created: latency-svc-5nwg5
  I1203 20:50:01.723995 23 service_latency.go:363] Got endpoints: latency-svc-97hrn [753.418358ms]
  I1203 20:50:01.765258 23 service_latency.go:356] Created: latency-svc-brnm7
  I1203 20:50:01.769843 23 service_latency.go:363] Got endpoints: latency-svc-pgkcx [747.504727ms]
  I1203 20:50:01.798550 23 service_latency.go:356] Created: latency-svc-ffqhf
  I1203 20:50:01.821636 23 service_latency.go:363] Got endpoints: latency-svc-v58k7 [750.68255ms]
  I1203 20:50:01.841463 23 service_latency.go:356] Created: latency-svc-j48p8
  I1203 20:50:01.871710 23 service_latency.go:363] Got endpoints: latency-svc-j2vtx [749.80872ms]
  I1203 20:50:01.908448 23 service_latency.go:356] Created: latency-svc-q7l48
  I1203 20:50:01.922413 23 service_latency.go:363] Got endpoints: latency-svc-ztbkg [738.484223ms]
  I1203 20:50:01.940845 23 service_latency.go:356] Created: latency-svc-klwcm
  I1203 20:50:01.970938 23 service_latency.go:363] Got endpoints: latency-svc-tgqs7 [750.065631ms]
  I1203 20:50:01.997107 23 service_latency.go:356] Created: latency-svc-2qftv
  I1203 20:50:02.021660 23 service_latency.go:363] Got endpoints: latency-svc-rxdml [749.044987ms]
  I1203 20:50:02.054808 23 service_latency.go:356] Created: latency-svc-49c6v
  I1203 20:50:02.071454 23 service_latency.go:363] Got endpoints: latency-svc-7ppp9 [750.538098ms]
  I1203 20:50:02.103567 23 service_latency.go:356] Created: latency-svc-z5xqx
  I1203 20:50:02.122050 23 service_latency.go:363] Got endpoints: latency-svc-lnr69 [750.853634ms]
  I1203 20:50:02.137231 23 service_latency.go:356] Created: latency-svc-qpqk2
  I1203 20:50:02.170320 23 service_latency.go:363] Got endpoints: latency-svc-hztlb [749.14372ms]
  I1203 20:50:02.185928 23 service_latency.go:356] Created: latency-svc-c9q67
  I1203 20:50:02.220787 23 service_latency.go:363] Got endpoints: latency-svc-bmb82 [747.478651ms]
  I1203 20:50:02.250372 23 service_latency.go:356] Created: latency-svc-hzc5l
  I1203 20:50:02.271874 23 service_latency.go:363] Got endpoints: latency-svc-qxfzp [749.972754ms]
  I1203 20:50:02.297620 23 service_latency.go:356] Created: latency-svc-q6lxn
  I1203 20:50:02.330004 23 service_latency.go:363] Got endpoints: latency-svc-hmpms [758.937614ms]
  I1203 20:50:02.345749 23 service_latency.go:356] Created: latency-svc-4b6h7
  I1203 20:50:02.372621 23 service_latency.go:363] Got endpoints: latency-svc-vmbbj [744.286871ms]
  I1203 20:50:02.396818 23 service_latency.go:356] Created: latency-svc-zzbhz
  I1203 20:50:02.421053 23 service_latency.go:363] Got endpoints: latency-svc-5nwg5 [746.666348ms]
  I1203 20:50:02.468624 23 service_latency.go:356] Created: latency-svc-44bk4
  I1203 20:50:02.472139 23 service_latency.go:363] Got endpoints: latency-svc-brnm7 [748.07407ms]
  I1203 20:50:02.518405 23 service_latency.go:356] Created: latency-svc-tjrqx
  I1203 20:50:02.584843 23 service_latency.go:363] Got endpoints: latency-svc-ffqhf [814.930977ms]
  I1203 20:50:02.584840 23 service_latency.go:363] Got endpoints: latency-svc-j48p8 [763.13864ms]
  I1203 20:50:02.611243 23 service_latency.go:356] Created: latency-svc-9csfk
  I1203 20:50:02.618780 23 service_latency.go:356] Created: latency-svc-tjhk7
  I1203 20:50:02.622439 23 service_latency.go:363] Got endpoints: latency-svc-q7l48 [750.666121ms]
  I1203 20:50:02.644975 23 service_latency.go:356] Created: latency-svc-xtsww
  I1203 20:50:02.671896 23 service_latency.go:363] Got endpoints: latency-svc-klwcm [749.416685ms]
  I1203 20:50:02.708323 23 service_latency.go:356] Created: latency-svc-lt4s6
  I1203 20:50:02.722819 23 service_latency.go:363] Got endpoints: latency-svc-2qftv [751.804412ms]
  I1203 20:50:02.737665 23 service_latency.go:356] Created: latency-svc-9cwd5
  I1203 20:50:02.770796 23 service_latency.go:363] Got endpoints: latency-svc-49c6v [749.069911ms]
  I1203 20:50:02.794241 23 service_latency.go:356] Created: latency-svc-wbf9k
  I1203 20:50:02.832550 23 service_latency.go:363] Got endpoints: latency-svc-z5xqx [761.025017ms]
  I1203 20:50:02.847345 23 service_latency.go:356] Created: latency-svc-mmf7n
  I1203 20:50:02.871997 23 service_latency.go:363] Got endpoints: latency-svc-qpqk2 [749.861498ms]
  I1203 20:50:02.888828 23 service_latency.go:356] Created: latency-svc-kg4db
  I1203 20:50:02.940150 23 service_latency.go:363] Got endpoints: latency-svc-c9q67 [769.767232ms]
  I1203 20:50:02.963779 23 service_latency.go:356] Created: latency-svc-ssmlf
  I1203 20:50:02.974247 23 service_latency.go:363] Got endpoints: latency-svc-hzc5l [753.368015ms]
  I1203 20:50:02.990246 23 service_latency.go:356] Created: latency-svc-97ggs
  I1203 20:50:03.023625 23 service_latency.go:363] Got endpoints: latency-svc-q6lxn [751.689214ms]
  I1203 20:50:03.058221 23 service_latency.go:356] Created: latency-svc-7z4m4
  I1203 20:50:03.070440 23 service_latency.go:363] Got endpoints: latency-svc-4b6h7 [740.376148ms]
  I1203 20:50:03.087567 23 service_latency.go:356] Created: latency-svc-2fprj
  I1203 20:50:03.122108 23 service_latency.go:363] Got endpoints: latency-svc-zzbhz [749.420011ms]
  I1203 20:50:03.141054 23 service_latency.go:356] Created: latency-svc-69np7
  I1203 20:50:03.177759 23 service_latency.go:363] Got endpoints: latency-svc-44bk4 [756.633962ms]
  I1203 20:50:03.192752 23 service_latency.go:356] Created: latency-svc-6tsrc
  I1203 20:50:03.222446 23 service_latency.go:363] Got endpoints: latency-svc-tjrqx [750.248576ms]
  I1203 20:50:03.247936 23 service_latency.go:356] Created: latency-svc-cj8sm
  I1203 20:50:03.286852 23 service_latency.go:363] Got endpoints: latency-svc-9csfk [701.936325ms]
  I1203 20:50:03.315308 23 service_latency.go:356] Created: latency-svc-7b88l
  I1203 20:50:03.327643 23 service_latency.go:363] Got endpoints: latency-svc-tjhk7 [742.693408ms]
  I1203 20:50:03.355140 23 service_latency.go:356] Created: latency-svc-jrxvd
  I1203 20:50:03.380685 23 service_latency.go:363] Got endpoints: latency-svc-xtsww [758.174638ms]
  I1203 20:50:03.421722 23 service_latency.go:363] Got endpoints: latency-svc-lt4s6 [749.767595ms]
  I1203 20:50:03.425144 23 service_latency.go:356] Created: latency-svc-qvhw9
  I1203 20:50:03.436963 23 service_latency.go:356] Created: latency-svc-fd262
  I1203 20:50:03.471953 23 service_latency.go:363] Got endpoints: latency-svc-9cwd5 [749.055706ms]
  I1203 20:50:03.527403 23 service_latency.go:363] Got endpoints: latency-svc-wbf9k [756.551816ms]
  I1203 20:50:03.573851 23 service_latency.go:363] Got endpoints: latency-svc-mmf7n [741.225479ms]
  I1203 20:50:03.621345 23 service_latency.go:363] Got endpoints: latency-svc-kg4db [749.272135ms]
  I1203 20:50:03.670404 23 service_latency.go:363] Got endpoints: latency-svc-ssmlf [730.18378ms]
  I1203 20:50:03.720017 23 service_latency.go:363] Got endpoints: latency-svc-97ggs [745.689284ms]
  I1203 20:50:03.771408 23 service_latency.go:363] Got endpoints: latency-svc-7z4m4 [747.730627ms]
  I1203 20:50:03.822681 23 service_latency.go:363] Got endpoints: latency-svc-2fprj [752.175635ms]
  I1203 20:50:03.871363 23 service_latency.go:363] Got endpoints: latency-svc-69np7 [749.179102ms]
  I1203 20:50:03.922641 23 service_latency.go:363] Got endpoints: latency-svc-6tsrc [744.78969ms]
  I1203 20:50:03.971152 23 service_latency.go:363] Got endpoints: latency-svc-cj8sm [748.641208ms]
  I1203 20:50:04.024212 23 service_latency.go:363] Got endpoints: latency-svc-7b88l [737.245387ms]
  I1203 20:50:04.070801 23 service_latency.go:363] Got endpoints: latency-svc-jrxvd [743.048798ms]
  I1203 20:50:04.123459 23 service_latency.go:363] Got endpoints: latency-svc-qvhw9 [742.707442ms]
  I1203 20:50:04.170670 23 service_latency.go:363] Got endpoints: latency-svc-fd262 [748.867003ms]
  I1203 20:50:04.170898 23 service_latency.go:114] Latencies: [20.335267ms 40.412085ms 58.61317ms 68.435608ms 95.02138ms 98.835397ms 118.045115ms 125.809389ms 166.947655ms 179.834854ms 187.546688ms 214.408786ms 220.273089ms 238.192262ms 249.543013ms 261.427249ms 271.364999ms 272.950424ms 273.188456ms 273.295012ms 275.253234ms 276.760289ms 277.321323ms 277.632948ms 278.268666ms 280.824223ms 281.452306ms 282.096398ms 285.668248ms 287.130176ms 293.1327ms 293.167111ms 294.77477ms 295.526724ms 295.528664ms 299.108985ms 305.199083ms 310.053269ms 311.340209ms 315.154779ms 315.551555ms 316.719844ms 316.907334ms 317.650913ms 317.880244ms 320.74416ms 325.280498ms 327.52714ms 329.156404ms 383.82312ms 403.420447ms 437.281564ms 466.175534ms 509.69381ms 546.777425ms 561.520384ms 587.052088ms 623.944701ms 664.672539ms 701.787187ms 701.936325ms 728.283441ms 729.2294ms 730.18378ms 730.730333ms 731.873837ms 734.784064ms 734.986294ms 737.245387ms 738.484223ms 740.376148ms 741.225479ms 742.628563ms 742.693408ms 742.707442ms 742.845275ms 743.048798ms 743.786147ms 744.286871ms 744.78969ms 745.238399ms 745.689284ms 746.30431ms 746.376535ms 746.3772ms 746.666348ms 747.478651ms 747.504727ms 747.669427ms 747.688855ms 747.704286ms 747.729715ms 747.730627ms 747.806455ms 747.914727ms 748.044887ms 748.07407ms 748.09344ms 748.238833ms 748.245924ms 748.279543ms 748.343684ms 748.375741ms 748.389171ms 748.477064ms 748.560293ms 748.597399ms 748.641208ms 748.756976ms 748.765837ms 748.867003ms 748.961325ms 749.044987ms 749.055706ms 749.069911ms 749.14372ms 749.179102ms 749.210842ms 749.236046ms 749.243132ms 749.26619ms 749.272135ms 749.323525ms 749.376001ms 749.38584ms 749.416685ms 749.420011ms 749.495718ms 749.563395ms 749.62644ms 749.678641ms 749.681639ms 749.732472ms 749.767595ms 749.80872ms 749.841588ms 749.861498ms 749.940153ms 749.962649ms 749.972754ms 749.989649ms 750.046293ms 750.060102ms 750.065631ms 750.149154ms 750.150973ms 750.159889ms 750.213766ms 750.234065ms 750.248576ms 750.344077ms 750.398688ms 750.427553ms 750.427593ms 750.538098ms 750.631798ms 750.64085ms 750.666121ms 750.68255ms 750.853634ms 750.856429ms 750.968486ms 751.056838ms 751.137946ms 751.139991ms 751.228471ms 751.594986ms 751.600665ms 751.689214ms 751.796143ms 751.804412ms 751.889779ms 751.904059ms 752.080754ms 752.14812ms 752.175635ms 752.203419ms 752.278926ms 752.4108ms 753.171145ms 753.368015ms 753.418358ms 754.663275ms 756.229895ms 756.551816ms 756.633962ms 756.719463ms 757.261157ms 757.515881ms 757.635048ms 758.174638ms 758.937614ms 761.025017ms 761.590054ms 763.13864ms 765.660554ms 769.767232ms 769.912621ms 773.159721ms 814.930977ms]
  I1203 20:50:04.170940 23 service_latency.go:118] 50 %ile: 748.279543ms
  I1203 20:50:04.170961 23 service_latency.go:119] 90 %ile: 753.368015ms
  I1203 20:50:04.170979 23 service_latency.go:120] 99 %ile: 773.159721ms
  I1203 20:50:04.170997 23 service_latency.go:121] Total sample count: 200
  I1203 20:50:04.171142 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-4512" for this suite. @ 12/03/24 20:50:04.178
• [9.773 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 12/03/24 20:50:04.187
  I1203 20:50:04.187831 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename containers @ 12/03/24 20:50:04.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:50:04.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:50:04.204
  I1203 20:50:06.232094 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1086" for this suite. @ 12/03/24 20:50:06.237
• [2.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:109
  STEP: Creating a kubernetes client @ 12/03/24 20:50:06.247
  I1203 20:50:06.247076 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename kubelet-test @ 12/03/24 20:50:06.248
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:50:06.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:50:06.266
  I1203 20:50:10.447773 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-7417" for this suite. @ 12/03/24 20:50:10.454
• [4.219 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 12/03/24 20:50:10.466
  I1203 20:50:10.466533 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename replicaset @ 12/03/24 20:50:10.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:50:10.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:50:10.489
  STEP: Create a ReplicaSet @ 12/03/24 20:50:10.494
  STEP: Verify that the required pods have come up @ 12/03/24 20:50:10.499
  I1203 20:50:10.502160 23 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  I1203 20:50:15.506973 23 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 12/03/24 20:50:15.507
  I1203 20:50:15.510227 23 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 12/03/24 20:50:15.51
  STEP: DeleteCollection of the ReplicaSets @ 12/03/24 20:50:15.514
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 12/03/24 20:50:15.53
  I1203 20:50:15.533188 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8431" for this suite. @ 12/03/24 20:50:15.537
• [5.078 seconds]
------------------------------
S
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:469
  STEP: Creating a kubernetes client @ 12/03/24 20:50:15.544
  I1203 20:50:15.544647 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename sched-pred @ 12/03/24 20:50:15.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:50:15.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:50:15.559
  I1203 20:50:15.562474 23 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1203 20:50:15.568433 23 util.go:400] Waiting for terminating namespaces to be deleted...
  I1203 20:50:15.570899 23 predicates.go:121] 
  Logging pods the apiserver thinks is on node nodea17 before test
  I1203 20:50:15.576394 23 predicates.go:887] kube-flannel-ds-d4gxd from kube-flannel started at 2024-12-03 18:59:59 +0000 UTC (1 container statuses recorded)
  I1203 20:50:15.576441 23 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I1203 20:50:15.576461 23 predicates.go:887] kube-proxy-5qrm9 from kube-system started at 2024-12-03 18:59:59 +0000 UTC (1 container statuses recorded)
  I1203 20:50:15.576473 23 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I1203 20:50:15.576487 23 predicates.go:887] sonobuoy from sonobuoy started at 2024-12-03 19:02:18 +0000 UTC (1 container statuses recorded)
  I1203 20:50:15.576498 23 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I1203 20:50:15.576510 23 predicates.go:887] sonobuoy-e2e-job-b4c9b24bd0eb40b5 from sonobuoy started at 2024-12-03 19:02:24 +0000 UTC (2 container statuses recorded)
  I1203 20:50:15.576521 23 predicates.go:889] 	Container e2e ready: true, restart count 0
  I1203 20:50:15.576532 23 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I1203 20:50:15.576544 23 predicates.go:887] sonobuoy-systemd-logs-daemon-set-2a7ed7b0c9d74150-7w6fj from sonobuoy started at 2024-12-03 19:02:24 +0000 UTC (2 container statuses recorded)
  I1203 20:50:15.576554 23 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I1203 20:50:15.576565 23 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I1203 20:50:15.576578 23 predicates.go:121] 
  Logging pods the apiserver thinks is on node nodeb14 before test
  I1203 20:50:15.581408 23 predicates.go:887] kube-flannel-ds-67rcm from kube-flannel started at 2024-12-03 19:00:11 +0000 UTC (1 container statuses recorded)
  I1203 20:50:15.581450 23 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I1203 20:50:15.581468 23 predicates.go:887] kube-proxy-vp99b from kube-system started at 2024-12-03 19:00:11 +0000 UTC (1 container statuses recorded)
  I1203 20:50:15.581481 23 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I1203 20:50:15.581498 23 predicates.go:887] bin-false6acf4467-4574-409e-899e-db66b24e40df from kubelet-test-7417 started at 2024-12-03 20:50:06 +0000 UTC (1 container statuses recorded)
  I1203 20:50:15.581511 23 predicates.go:889] 	Container bin-false6acf4467-4574-409e-899e-db66b24e40df ready: false, restart count 0
  I1203 20:50:15.581526 23 predicates.go:887] sonobuoy-systemd-logs-daemon-set-2a7ed7b0c9d74150-wqtb5 from sonobuoy started at 2024-12-03 19:02:24 +0000 UTC (2 container statuses recorded)
  I1203 20:50:15.581541 23 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I1203 20:50:15.581554 23 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 12/03/24 20:50:15.581
  STEP: Explicitly delete pod here to free the resource it takes. @ 12/03/24 20:50:17.599
  STEP: Trying to apply a random label on the found node. @ 12/03/24 20:50:17.611
  STEP: verifying the node has the label kubernetes.io/e2e-86676ebd-db87-4672-b72a-a93bfd7dcd07 42 @ 12/03/24 20:50:17.622
  STEP: Trying to relaunch the pod, now with labels. @ 12/03/24 20:50:17.625
  STEP: removing the label kubernetes.io/e2e-86676ebd-db87-4672-b72a-a93bfd7dcd07 off the node nodea17 @ 12/03/24 20:50:19.643
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-86676ebd-db87-4672-b72a-a93bfd7dcd07 @ 12/03/24 20:50:19.656
  I1203 20:50:19.659400 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1398" for this suite. @ 12/03/24 20:50:19.663
• [4.124 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 12/03/24 20:50:19.669
  I1203 20:50:19.669024 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename var-expansion @ 12/03/24 20:50:19.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:50:19.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:50:19.685
  STEP: creating the pod @ 12/03/24 20:50:19.688
  STEP: waiting for pod running @ 12/03/24 20:50:19.697
  STEP: creating a file in subpath @ 12/03/24 20:50:21.706
  I1203 20:50:21.710575 23 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-451 PodName:var-expansion-28397ca0-6363-4720-83bb-384ef19724f6 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1203 20:50:21.710652 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  I1203 20:50:21.711716 23 exec_util.go:62] ExecWithOptions: Clientset creation
  I1203 20:50:21.711834 23 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-451/pods/var-expansion-28397ca0-6363-4720-83bb-384ef19724f6/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 12/03/24 20:50:21.791
  I1203 20:50:21.795256 23 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-451 PodName:var-expansion-28397ca0-6363-4720-83bb-384ef19724f6 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1203 20:50:21.795304 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  I1203 20:50:21.796054 23 exec_util.go:62] ExecWithOptions: Clientset creation
  I1203 20:50:21.796143 23 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-451/pods/var-expansion-28397ca0-6363-4720-83bb-384ef19724f6/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 12/03/24 20:50:21.87
  I1203 20:50:22.384629 23 pod_client.go:141] Successfully updated pod "var-expansion-28397ca0-6363-4720-83bb-384ef19724f6"
  STEP: waiting for annotated pod running @ 12/03/24 20:50:22.384
  STEP: deleting the pod gracefully @ 12/03/24 20:50:22.388
  I1203 20:50:22.388591 23 delete.go:62] Deleting pod "var-expansion-28397ca0-6363-4720-83bb-384ef19724f6" in namespace "var-expansion-451"
  I1203 20:50:22.395432 23 delete.go:70] Wait up to 5m0s for pod "var-expansion-28397ca0-6363-4720-83bb-384ef19724f6" to be fully deleted
  I1203 20:50:54.492758 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-451" for this suite. @ 12/03/24 20:50:54.498
• [34.835 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 12/03/24 20:50:54.504
  I1203 20:50:54.504665 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename field-validation @ 12/03/24 20:50:54.505
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:50:54.518
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:50:54.522
  I1203 20:50:54.526465 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  I1203 20:50:57.635553 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1527" for this suite. @ 12/03/24 20:50:57.64
• [3.142 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 12/03/24 20:50:57.646
  I1203 20:50:57.646917 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename emptydir @ 12/03/24 20:50:57.648
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:50:57.66
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:50:57.663
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 12/03/24 20:50:57.672
  STEP: Saw pod success @ 12/03/24 20:50:59.691
  I1203 20:50:59.695391 23 output.go:196] Trying to get logs from node nodea17 pod pod-5adeb3ab-7dde-4ffa-9aa4-d5c6ddfba866 container test-container: <nil>
  STEP: delete the pod @ 12/03/24 20:50:59.701
  I1203 20:50:59.712905 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9083" for this suite. @ 12/03/24 20:50:59.717
• [2.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:889
  STEP: Creating a kubernetes client @ 12/03/24 20:50:59.722
  I1203 20:50:59.722878 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename resourcequota @ 12/03/24 20:50:59.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:50:59.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:50:59.739
  STEP: Creating a ResourceQuota @ 12/03/24 20:50:59.743
  STEP: Getting a ResourceQuota @ 12/03/24 20:50:59.748
  STEP: Updating a ResourceQuota @ 12/03/24 20:50:59.82
  STEP: Verifying a ResourceQuota was modified @ 12/03/24 20:50:59.827
  STEP: Deleting a ResourceQuota @ 12/03/24 20:50:59.831
  STEP: Verifying the deleted ResourceQuota @ 12/03/24 20:50:59.836
  I1203 20:50:59.839451 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-200" for this suite. @ 12/03/24 20:50:59.844
• [0.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3656
  STEP: Creating a kubernetes client @ 12/03/24 20:50:59.849
  I1203 20:50:59.849748 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename services @ 12/03/24 20:50:59.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:50:59.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:50:59.871
  STEP: creating service multiprotocol-test in namespace services-1367 @ 12/03/24 20:50:59.875
  STEP: creating pod pod1 in namespace services-1367 @ 12/03/24 20:50:59.888
  STEP: Creating pod pod1 in namespace services-1367 @ 12/03/24 20:50:59.889
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-1367 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 12/03/24 20:51:01.911
  I1203 20:51:01.925725 23 service.go:4351] successfully validated that service multiprotocol-test in namespace services-1367 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 12/03/24 20:51:01.925
  I1203 20:51:01.925822 23 resource.go:361] Creating new exec pod
  I1203 20:51:03.942661 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-1367 exec execpodc6nqt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.101.204.128 80'
  I1203 20:51:04.116019 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.101.204.128 80\nConnection to 10.101.204.128 80 port [tcp/http] succeeded!\n"
  I1203 20:51:04.116097 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1203 20:51:04.116207 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-1367 exec execpodc6nqt -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.101.204.128 80'
  I1203 20:51:08.284294 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.101.204.128 80\nConnection to 10.101.204.128 80 port [udp/*] succeeded!\n"
  I1203 20:51:08.284387 23 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 12/03/24 20:51:08.284
  I1203 20:51:08.295399 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-1367 exec execpodc6nqt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.101.204.128 80'
  I1203 20:51:08.455423 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.101.204.128 80\nConnection to 10.101.204.128 80 port [tcp/http] succeeded!\n"
  I1203 20:51:08.455509 23 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1203 20:51:08.455649 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-1367 exec execpodc6nqt -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.101.204.128 80'
  I1203 20:51:12.616225 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.101.204.128 80\nConnection to 10.101.204.128 80 port [udp/*] succeeded!\n"
  I1203 20:51:12.616366 23 builder.go:147] stdout: ""
  I1203 20:51:12.616468 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-1367 exec execpodc6nqt -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.101.204.128 80'
  I1203 20:51:16.777733 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.101.204.128 80\nConnection to 10.101.204.128 80 port [udp/*] succeeded!\n"
  I1203 20:51:16.777860 23 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 12/03/24 20:51:16.777
  I1203 20:51:16.789470 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-1367 exec execpodc6nqt -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.101.204.128 80'
  I1203 20:51:20.949219 23 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.101.204.128 80\nConnection to 10.101.204.128 80 port [udp/*] succeeded!\n"
  I1203 20:51:20.949294 23 builder.go:147] stdout: "pod1"
  I1203 20:51:20.949448 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-1367 exec execpodc6nqt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.101.204.128 80'
  I1203 20:51:23.109191 23 builder.go:135] rc: 1
  I1203 20:51:23.109307 23 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-1367 exec execpodc6nqt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.101.204.128 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.101.204.128 80
  nc: connect to 10.101.204.128 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1203 20:51:23.109505 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-1367 exec execpodc6nqt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.101.204.128 80'
  I1203 20:51:25.282246 23 builder.go:135] rc: 1
  I1203 20:51:25.282398 23 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-1367 exec execpodc6nqt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.101.204.128 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.101.204.128 80
  nc: connect to 10.101.204.128 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1203 20:51:25.282667 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-1367 exec execpodc6nqt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.101.204.128 80'
  I1203 20:51:27.443125 23 builder.go:135] rc: 1
  I1203 20:51:27.443266 23 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=services-1367 exec execpodc6nqt -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.101.204.128 80:
  Command stdout:

  stderr:
  + + nc -v -techo -w 2 hostName 10.101.204.128 80

  nc: connect to 10.101.204.128 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1203 20:51:27.443518 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1367" for this suite. @ 12/03/24 20:51:27.45
• [27.607 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 12/03/24 20:51:27.456
  I1203 20:51:27.456582 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename subpath @ 12/03/24 20:51:27.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:51:27.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:51:27.473
  STEP: Setting up data @ 12/03/24 20:51:27.478
  STEP: Creating pod pod-subpath-test-secret-zkv7 @ 12/03/24 20:51:27.486
  STEP: Creating a pod to test atomic-volume-subpath @ 12/03/24 20:51:27.486
  STEP: Saw pod success @ 12/03/24 20:51:51.57
  I1203 20:51:51.574693 23 output.go:196] Trying to get logs from node nodeb14 pod pod-subpath-test-secret-zkv7 container test-container-subpath-secret-zkv7: <nil>
  STEP: delete the pod @ 12/03/24 20:51:51.6
  STEP: Deleting pod pod-subpath-test-secret-zkv7 @ 12/03/24 20:51:51.618
  I1203 20:51:51.618308 23 delete.go:62] Deleting pod "pod-subpath-test-secret-zkv7" in namespace "subpath-3442"
  I1203 20:51:51.622184 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3442" for this suite. @ 12/03/24 20:51:51.627
• [24.177 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3345
  STEP: Creating a kubernetes client @ 12/03/24 20:51:51.633
  I1203 20:51:51.633604 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename services @ 12/03/24 20:51:51.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:51:51.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:51:51.651
  STEP: creating a Service @ 12/03/24 20:51:51.659
  STEP: watching for the Service to be added @ 12/03/24 20:51:51.674
  I1203 20:51:51.676915 23 service.go:3397] Found Service test-service-w6dxv in namespace services-6909 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 30433}]
  I1203 20:51:51.676966 23 service.go:3404] Service test-service-w6dxv created
  STEP: Getting /status @ 12/03/24 20:51:51.676
  I1203 20:51:51.680424 23 service.go:3415] Service test-service-w6dxv has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 12/03/24 20:51:51.68
  STEP: watching for the Service to be patched @ 12/03/24 20:51:51.687
  I1203 20:51:51.689640 23 service.go:3438] observed Service test-service-w6dxv in namespace services-6909 with annotations: map[] & LoadBalancer: {[]}
  I1203 20:51:51.689730 23 service.go:3441] Found Service test-service-w6dxv in namespace services-6909 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc000dc0e30 []}]}
  I1203 20:51:51.689756 23 service.go:3448] Service test-service-w6dxv has service status patched
  STEP: updating the ServiceStatus @ 12/03/24 20:51:51.689
  I1203 20:51:51.697840 23 service.go:3468] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 12/03/24 20:51:51.697
  I1203 20:51:51.700089 23 service.go:3479] Observed Service test-service-w6dxv in namespace services-6909 with annotations: map[] & Conditions: {[]}
  I1203 20:51:51.700333 23 service.go:3494] Observed event: &Service{ObjectMeta:{test-service-w6dxv  services-6909  c332674d-1d5b-4a97-aaaf-875c4250cc86 36904 0 2024-12-03 20:51:51 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-12-03 20:51:51 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:allocateLoadBalancerNodePorts":{},"f:externalTrafficPolicy":{},"f:internalTrafficPolicy":{},"f:loadBalancerClass":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-12-03 20:51:51 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:30433,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.107.52.207,Type:LoadBalancer,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:Cluster,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.107.52.207],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:*true,LoadBalancerClass:*example.com/internal-vip,InternalTrafficPolicy:*Cluster,TrafficDistribution:nil,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,IPMode:*VIP,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  I1203 20:51:51.700404 23 service.go:3486] Found Service test-service-w6dxv in namespace services-6909 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1203 20:51:51.700482 23 service.go:3498] Service test-service-w6dxv has service status updated
  STEP: patching the service @ 12/03/24 20:51:51.7
  STEP: watching for the Service to be patched @ 12/03/24 20:51:51.722
  I1203 20:51:51.724613 23 service.go:3521] observed Service test-service-w6dxv in namespace services-6909 with labels: map[test-service-static:true]
  I1203 20:51:51.724678 23 service.go:3521] observed Service test-service-w6dxv in namespace services-6909 with labels: map[test-service-static:true]
  I1203 20:51:51.724707 23 service.go:3521] observed Service test-service-w6dxv in namespace services-6909 with labels: map[test-service-static:true]
  I1203 20:51:51.724914 23 service.go:3524] Found Service test-service-w6dxv in namespace services-6909 with labels: map[test-service:patched test-service-static:true]
  I1203 20:51:51.724964 23 service.go:3531] Service test-service-w6dxv patched
  STEP: deleting the service @ 12/03/24 20:51:51.725
  STEP: watching for the Service to be deleted @ 12/03/24 20:51:51.743
  I1203 20:51:51.745548 23 service.go:3555] Observed event: ADDED
  I1203 20:51:51.745649 23 service.go:3555] Observed event: MODIFIED
  I1203 20:51:51.745863 23 service.go:3555] Observed event: MODIFIED
  I1203 20:51:51.745936 23 service.go:3555] Observed event: MODIFIED
  I1203 20:51:51.746214 23 service.go:3551] Found Service test-service-w6dxv in namespace services-6909 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I1203 20:51:51.746272 23 service.go:3560] Service test-service-w6dxv deleted
  I1203 20:51:51.746584 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6909" for this suite. @ 12/03/24 20:51:51.751
• [0.129 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 12/03/24 20:51:51.762
  I1203 20:51:51.762751 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename aggregateddiscovery @ 12/03/24 20:51:51.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:51:51.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:51:51.78
  I1203 20:51:51.784415 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  I1203 20:51:54.858836 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-3803" for this suite. @ 12/03/24 20:51:54.865
• [3.110 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 12/03/24 20:51:54.873
  I1203 20:51:54.873634 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename pods @ 12/03/24 20:51:54.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:51:54.888
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:51:54.892
  STEP: Create a pod @ 12/03/24 20:51:54.897
  STEP: patching /status @ 12/03/24 20:51:56.913
  I1203 20:51:56.921099 23 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I1203 20:51:56.921349 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6639" for this suite. @ 12/03/24 20:51:56.925
• [2.057 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:51
  STEP: Creating a kubernetes client @ 12/03/24 20:51:56.93
  I1203 20:51:56.930778 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename kubelet-test @ 12/03/24 20:51:56.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:51:56.941
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:51:56.946
  I1203 20:51:58.979718 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5138" for this suite. @ 12/03/24 20:51:58.984
• [2.060 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 12/03/24 20:51:58.991
  I1203 20:51:58.991309 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename replication-controller @ 12/03/24 20:51:58.992
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:51:59.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:51:59.01
  STEP: creating a ReplicationController @ 12/03/24 20:51:59.018
  STEP: waiting for RC to be added @ 12/03/24 20:51:59.022
  STEP: waiting for available Replicas @ 12/03/24 20:51:59.022
  STEP: patching ReplicationController @ 12/03/24 20:51:59.662
  STEP: waiting for RC to be modified @ 12/03/24 20:51:59.676
  STEP: patching ReplicationController status @ 12/03/24 20:51:59.676
  STEP: waiting for RC to be modified @ 12/03/24 20:51:59.683
  STEP: waiting for available Replicas @ 12/03/24 20:51:59.684
  STEP: fetching ReplicationController status @ 12/03/24 20:51:59.689
  STEP: patching ReplicationController scale @ 12/03/24 20:51:59.693
  STEP: waiting for RC to be modified @ 12/03/24 20:51:59.7
  STEP: waiting for ReplicationController's scale to be the max amount @ 12/03/24 20:51:59.7
  STEP: fetching ReplicationController; ensuring that it's patched @ 12/03/24 20:52:00.619
  STEP: updating ReplicationController status @ 12/03/24 20:52:00.623
  STEP: waiting for RC to be modified @ 12/03/24 20:52:00.631
  STEP: listing all ReplicationControllers @ 12/03/24 20:52:00.632
  STEP: checking that ReplicationController has expected values @ 12/03/24 20:52:00.636
  STEP: deleting ReplicationControllers by collection @ 12/03/24 20:52:00.636
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 12/03/24 20:52:00.644
  I1203 20:52:00.691540 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  E1203 20:52:00.691844      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-4677" for this suite. @ 12/03/24 20:52:00.696
• [1.711 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 12/03/24 20:52:00.703
  I1203 20:52:00.703083 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename runtimeclass @ 12/03/24 20:52:00.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:52:00.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:52:00.723
  E1203 20:52:01.692460      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:02.692924      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1203 20:52:02.757138 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-201" for this suite. @ 12/03/24 20:52:02.761
• [2.064 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 12/03/24 20:52:02.767
  I1203 20:52:02.767606 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename watch @ 12/03/24 20:52:02.769
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:52:02.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:52:02.784
  STEP: creating a new configmap @ 12/03/24 20:52:02.788
  STEP: modifying the configmap once @ 12/03/24 20:52:02.792
  STEP: modifying the configmap a second time @ 12/03/24 20:52:02.799
  STEP: deleting the configmap @ 12/03/24 20:52:02.806
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 12/03/24 20:52:02.811
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 12/03/24 20:52:02.813
  I1203 20:52:02.813849 23 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-6798  f006dfac-5ca2-4b19-b11c-215cb1d895e2 37054 0 2024-12-03 20:52:02 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-12-03 20:52:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1203 20:52:02.814113 23 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-6798  f006dfac-5ca2-4b19-b11c-215cb1d895e2 37055 0 2024-12-03 20:52:02 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-12-03 20:52:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1203 20:52:02.814216 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6798" for this suite. @ 12/03/24 20:52:02.818
• [0.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 12/03/24 20:52:02.825
  I1203 20:52:02.825794 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename events @ 12/03/24 20:52:02.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:52:02.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:52:02.843
  STEP: Create set of events @ 12/03/24 20:52:02.847
  STEP: get a list of Events with a label in the current namespace @ 12/03/24 20:52:02.863
  STEP: delete a list of events @ 12/03/24 20:52:02.866
  I1203 20:52:02.866894 23 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 12/03/24 20:52:02.882
  I1203 20:52:02.885903 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1070" for this suite. @ 12/03/24 20:52:02.889
• [0.070 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 12/03/24 20:52:02.896
  I1203 20:52:02.896912 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename svcaccounts @ 12/03/24 20:52:02.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:52:02.909
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:52:02.913
  I1203 20:52:02.932126 23 service_accounts.go:618] created pod
  E1203 20:52:03.694151      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:04.694170      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/03/24 20:52:04.941
  E1203 20:52:05.694600      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:06.694955      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:07.695447      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:08.695422      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:09.695873      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:10.696880      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:11.697338      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:12.697741      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:13.698224      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:14.699148      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:15.699304      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:16.699657      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:17.700054      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:18.700436      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:19.701139      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:20.702040      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:21.702424      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:22.702604      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:23.702955      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:24.703788      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:25.704871      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:26.705954      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:27.706550      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:28.706917      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:29.707530      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:30.708480      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:31.708915      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:32.709353      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:33.709816      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:34.710648      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1203 20:52:34.941509 23 service_accounts.go:624] polling logs
  I1203 20:52:34.950298 23 service_accounts.go:634] Pod logs: 
  I1203 20:52:03.521271       1 log.go:245] OK: Got token
  I1203 20:52:03.521348       1 log.go:245] validating with in-cluster discovery
  I1203 20:52:03.521791       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I1203 20:52:03.521837       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-7376:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00052b5b0), NotBefore:(*jwt.NumericDate)(0xc00052b6a0), IssuedAt:(*jwt.NumericDate)(0xc00052b5c0), ID:"1441ba9c-5c99-498a-9462-ba01c80553a0"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-7376", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"945ba5be-7989-4b17-82e8-6e79dfebfa4d"}}}
  I1203 20:52:03.539607       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I1203 20:52:03.551171       1 log.go:245] OK: Validated signature on JWT
  I1203 20:52:03.551362       1 log.go:245] OK: Got valid claims from token!
  I1203 20:52:03.551402       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-7376:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0001a8ca8), NotBefore:(*jwt.NumericDate)(0xc0001a8cd0), IssuedAt:(*jwt.NumericDate)(0xc0001a8cb0), ID:"1441ba9c-5c99-498a-9462-ba01c80553a0"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-7376", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"945ba5be-7989-4b17-82e8-6e79dfebfa4d"}}}

  I1203 20:52:34.950427 23 service_accounts.go:638] completed pod
  I1203 20:52:34.957241 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7376" for this suite. @ 12/03/24 20:52:34.962
• [32.072 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:965
  STEP: Creating a kubernetes client @ 12/03/24 20:52:34.969
  I1203 20:52:34.969704 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename statefulset @ 12/03/24 20:52:34.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:52:34.984
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:52:34.988
  STEP: Creating service test in namespace statefulset-7268 @ 12/03/24 20:52:34.991
  I1203 20:52:35.009017 23 wait.go:40] Found 0 stateful pods, waiting for 1
  E1203 20:52:35.711578      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:36.712431      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:37.712777      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:38.713229      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:39.713650      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:40.714520      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:41.714776      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:42.714954      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:43.715245      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:44.715460      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1203 20:52:45.011799 23 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 12/03/24 20:52:45.019
  W1203 20:52:45.028139      23 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  I1203 20:52:45.034747 23 wait.go:40] Found 1 stateful pods, waiting for 2
  E1203 20:52:45.715945      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:46.716573      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:47.717066      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:48.717805      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:49.718383      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:50.718572      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:51.719087      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:52.719609      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:53.720017      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:54.721095      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1203 20:52:55.037786 23 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1203 20:52:55.037841 23 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 12/03/24 20:52:55.046
  STEP: Delete all of the StatefulSets @ 12/03/24 20:52:55.05
  STEP: Verify that StatefulSets have been deleted @ 12/03/24 20:52:55.057
  I1203 20:52:55.060853 23 statefulset.go:138] Deleting all statefulset in ns statefulset-7268
  I1203 20:52:55.074374 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7268" for this suite. @ 12/03/24 20:52:55.078
• [20.118 seconds]
------------------------------
SSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1759
  STEP: Creating a kubernetes client @ 12/03/24 20:52:55.088
  I1203 20:52:55.088232 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename kubectl @ 12/03/24 20:52:55.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:52:55.102
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:52:55.105
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/03/24 20:52:55.11
  I1203 20:52:55.110501 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-7011 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I1203 20:52:55.208842 23 builder.go:146] stderr: ""
  I1203 20:52:55.208917 23 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 12/03/24 20:52:55.208
  I1203 20:52:55.212445 23 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2971254640 --namespace=kubectl-7011 delete pods e2e-test-httpd-pod'
  E1203 20:52:55.721858      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:56.722330      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1203 20:52:56.856078 23 builder.go:146] stderr: ""
  I1203 20:52:56.856156 23 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1203 20:52:56.856310 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7011" for this suite. @ 12/03/24 20:52:56.861
• [1.779 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 12/03/24 20:52:56.867
  I1203 20:52:56.867498 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename secrets @ 12/03/24 20:52:56.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:52:56.885
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:52:56.888
  STEP: Creating secret with name s-test-opt-del-ba0ca859-ec3d-40aa-9bb7-8e9b4137508c @ 12/03/24 20:52:56.897
  STEP: Creating secret with name s-test-opt-upd-ff7c9a58-c7d3-41b3-90e8-a8fb95947f34 @ 12/03/24 20:52:56.902
  STEP: Creating the pod @ 12/03/24 20:52:56.907
  E1203 20:52:57.723429      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:52:58.724168      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-ba0ca859-ec3d-40aa-9bb7-8e9b4137508c @ 12/03/24 20:52:58.95
  STEP: Updating secret s-test-opt-upd-ff7c9a58-c7d3-41b3-90e8-a8fb95947f34 @ 12/03/24 20:52:58.956
  STEP: Creating secret with name s-test-opt-create-63dc45f1-e2ff-4dd9-bace-272eb7694cad @ 12/03/24 20:52:58.961
  STEP: waiting to observe update in volume @ 12/03/24 20:52:58.966
  E1203 20:52:59.724976      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:00.726039      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:01.726840      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:02.727305      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:03.727456      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:04.728228      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:05.728666      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:06.729133      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:07.729615      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:08.730053      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:09.730199      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:10.731112      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:11.731234      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:12.731625      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:13.732387      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:14.733142      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:15.734019      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:16.734413      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:17.734747      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:18.734969      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:19.735464      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:20.736312      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:21.736392      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:22.736879      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:23.737287      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:24.738157      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:25.738696      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:26.739275      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:27.739876      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:28.740338      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:29.740439      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:30.740991      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:31.741099      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:32.741645      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:33.741838      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:34.742769      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:35.743168      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:36.743689      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:37.744231      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:38.744706      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:39.745015      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:40.746088      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:41.747337      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:42.747837      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:43.748854      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:44.749789      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:45.750213      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:46.751315      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:47.751463      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:48.752152      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:49.752364      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:50.753272      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:51.754309      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:52.754756      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:53.755054      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:54.755917      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:55.756238      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:56.756751      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:57.757131      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:58.757610      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:53:59.758431      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:54:00.759300      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:54:01.759933      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:54:02.760355      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:54:03.760507      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1203 20:54:04.761628      23 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1203 20:54:05.332273 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-924" for this suite. @ 12/03/24 20:54:05.337
• [68.487 seconds]
------------------------------
S
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 12/03/24 20:54:05.354
  I1203 20:54:05.354931 23 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2971254640
  STEP: Building a namespace api object, basename podtemplate @ 12/03/24 20:54:05.356
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/03/24 20:54:05.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/03/24 20:54:05.372
  I1203 20:54:05.405147 23 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-8665" for this suite. @ 12/03/24 20:54:05.409
• [0.060 seconds]
------------------------------
SSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I1203 20:54:05.415889 23 suites.go:34] Running AfterSuite actions on node 1
  I1203 20:54:05.415926 23 util.go:614] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:161
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:612
[ReportAfterSuite] PASSED [0.073 seconds]
------------------------------

Ran 402 of 7199 Specs in 6669.806 seconds
SUCCESS! -- 402 Passed | 0 Failed | 0 Pending | 6797 Skipped
PASS

Ginkgo ran 1 suite in 1h51m11.106094887s
Test Suite Passed
