  I1015 09:12:27.958539      22 e2e.go:109] Starting e2e run "a8786c21-5c35-4e4c-95a4-da91475f5e43" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1728983546 - will randomize all specs

Will run 402 of 7199 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I1015 09:12:28.517592 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  I1015 09:12:28.519913 22 helper.go:48] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I1015 09:12:28.713613 22 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I1015 09:12:28.766307 22 e2e.go:153] 6 / 6 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  I1015 09:12:28.766466 22 e2e.go:153] 6 / 6 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  I1015 09:12:28.766499 22 e2e.go:153] 6 / 6 pods ready in namespace 'kube-system' in daemonset 'nodelocaldns' (0 seconds elapsed)
  I1015 09:12:28.766525 22 e2e.go:153] 3 / 3 pods ready in namespace 'kube-system' in daemonset 'vsphere-cloud-controller-manager' (0 seconds elapsed)
  I1015 09:12:28.766550 22 e2e.go:153] 6 / 6 pods ready in namespace 'kube-system' in daemonset 'vsphere-csi-node' (0 seconds elapsed)
  I1015 09:12:28.766592 22 e2e.go:245] e2e test version: v1.30.4
  I1015 09:12:28.768808 22 e2e.go:254] kube-apiserver version: v1.30.4
  I1015 09:12:28.769003 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  I1015 09:12:28.780166 22 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.263 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 10/15/24 09:12:29.184
  I1015 09:12:29.184567 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename taint-multiple-pods @ 10/15/24 09:12:29.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:12:29.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:12:29.243
  I1015 09:12:29.250196 22 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1015 09:13:29.250920 22 util.go:400] Waiting for terminating namespaces to be deleted...
  I1015 09:13:29.261354 22 taints.go:150] Starting informer...
  STEP: Starting pods... @ 10/15/24 09:13:29.261
  I1015 09:13:29.532462 22 taints.go:469] Pod1 is running on env1-test-worker-0. Tainting Node
  I1015 09:13:31.787712 22 taints.go:477] Pod2 is running on env1-test-worker-0. Tainting Node
  STEP: Trying to apply a taint on the Node @ 10/15/24 09:13:31.787
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 10/15/24 09:13:31.825
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 10/15/24 09:13:31.835
  I1015 09:13:38.451385 22 taints.go:498] Noticed Pod "taint-eviction-b1" gets evicted.
  I1015 09:13:58.524525 22 taints.go:498] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 10/15/24 09:13:58.569
  I1015 09:13:58.588543 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-8385" for this suite. @ 10/15/24 09:13:58.612
• [89.467 seconds]
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 10/15/24 09:13:58.651
  I1015 09:13:58.651778 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename pod-network-test @ 10/15/24 09:13:58.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:13:58.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:13:58.786
  STEP: Performing setup for networking test in namespace pod-network-test-283 @ 10/15/24 09:13:58.805
  STEP: creating a selector @ 10/15/24 09:13:58.805
  STEP: Creating the service pods in kubernetes @ 10/15/24 09:13:58.805
  I1015 09:13:58.805869 22 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 10/15/24 09:14:21.141
  I1015 09:14:23.180135 22 utils.go:779] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1015 09:14:23.180629 22 networking.go:42] Breadth first check of 10.233.118.59 on host 10.61.1.200...
  I1015 09:14:23.187294 22 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.118.48:9080/dial?request=hostname&protocol=udp&host=10.233.118.59&port=8081&tries=1'] Namespace:pod-network-test-283 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1015 09:14:23.187379 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  I1015 09:14:23.188704 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I1015 09:14:23.188859 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-283/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.118.48%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.118.59%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1015 09:14:23.385424 22 utils.go:331] Waiting for responses: map[]
  I1015 09:14:23.385503 22 utils.go:335] reached 10.233.118.59 after 0/1 tries
  I1015 09:14:23.385530 22 networking.go:42] Breadth first check of 10.233.87.84 on host 10.61.1.201...
  I1015 09:14:23.396321 22 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.118.48:9080/dial?request=hostname&protocol=udp&host=10.233.87.84&port=8081&tries=1'] Namespace:pod-network-test-283 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1015 09:14:23.396377 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  I1015 09:14:23.397302 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I1015 09:14:23.397459 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-283/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.118.48%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.87.84%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1015 09:14:23.546481 22 utils.go:331] Waiting for responses: map[]
  I1015 09:14:23.546549 22 utils.go:335] reached 10.233.87.84 after 0/1 tries
  I1015 09:14:23.546575 22 networking.go:42] Breadth first check of 10.233.76.133 on host 10.61.1.202...
  I1015 09:14:23.554001 22 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.118.48:9080/dial?request=hostname&protocol=udp&host=10.233.76.133&port=8081&tries=1'] Namespace:pod-network-test-283 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1015 09:14:23.554059 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  I1015 09:14:23.555197 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I1015 09:14:23.555328 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-283/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.118.48%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.233.76.133%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1015 09:14:23.713294 22 utils.go:331] Waiting for responses: map[]
  I1015 09:14:23.713361 22 utils.go:335] reached 10.233.76.133 after 0/1 tries
  I1015 09:14:23.713386 22 networking.go:53] Going to retry 0 out of 3 pods....
  I1015 09:14:23.713547 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-283" for this suite. @ 10/15/24 09:14:23.735
• [25.112 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 10/15/24 09:14:23.764
  I1015 09:14:23.765032 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename resourcequota @ 10/15/24 09:14:23.766
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:14:23.829
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:14:23.839
  STEP: Creating a ResourceQuota @ 10/15/24 09:14:23.849
  STEP: Getting a ResourceQuota @ 10/15/24 09:14:23.862
  STEP: Listing all ResourceQuotas with LabelSelector @ 10/15/24 09:14:23.872
  STEP: Patching the ResourceQuota @ 10/15/24 09:14:23.885
  STEP: Deleting a Collection of ResourceQuotas @ 10/15/24 09:14:23.916
  STEP: Verifying the deleted ResourceQuota @ 10/15/24 09:14:23.935
  I1015 09:14:23.941453 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2952" for this suite. @ 10/15/24 09:14:23.953
• [0.209 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 10/15/24 09:14:23.975
  I1015 09:14:23.975538 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename podtemplate @ 10/15/24 09:14:23.977
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:14:24.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:14:24.039
  STEP: Create a pod template @ 10/15/24 09:14:24.05
  STEP: Replace a pod template @ 10/15/24 09:14:24.064
  I1015 09:14:24.084629 22 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I1015 09:14:24.084815 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3964" for this suite. @ 10/15/24 09:14:24.095
• [0.136 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 10/15/24 09:14:24.111
  I1015 09:14:24.111802 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename downward-api @ 10/15/24 09:14:24.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:14:24.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:14:24.156
  STEP: Creating a pod to test downward API volume plugin @ 10/15/24 09:14:24.162
  STEP: Saw pod success @ 10/15/24 09:14:30.254
  I1015 09:14:30.262548 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod downwardapi-volume-2f1bae78-7404-487a-9090-346af9819ff1 container client-container: <nil>
  STEP: delete the pod @ 10/15/24 09:14:30.308
  I1015 09:14:30.352266 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-233" for this suite. @ 10/15/24 09:14:30.372
• [6.281 seconds]
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 10/15/24 09:14:30.393
  I1015 09:14:30.393564 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename downward-api @ 10/15/24 09:14:30.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:14:30.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:14:30.476
  STEP: Creating a pod to test downward api env vars @ 10/15/24 09:14:30.481
  STEP: Saw pod success @ 10/15/24 09:14:34.548
  I1015 09:14:34.565005 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod downward-api-a8f4d379-5283-470c-a8c2-ea001280f0fd container dapi-container: <nil>
  STEP: delete the pod @ 10/15/24 09:14:34.595
  I1015 09:14:34.686179 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7832" for this suite. @ 10/15/24 09:14:34.728
• [4.361 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:397
  STEP: Creating a kubernetes client @ 10/15/24 09:14:34.754
  I1015 09:14:34.754434 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename kubectl @ 10/15/24 09:14:34.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:14:34.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:14:34.799
  STEP: creating all guestbook components @ 10/15/24 09:14:34.805
  I1015 09:14:34.806028 22 kubectl.go:403] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I1015 09:14:34.813199 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-4079 create -f -'
  I1015 09:14:35.259000 22 builder.go:146] stderr: ""
  I1015 09:14:35.259085 22 builder.go:147] stdout: "service/agnhost-replica created\n"
  I1015 09:14:35.259160 22 kubectl.go:403] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I1015 09:14:35.260195 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-4079 create -f -'
  I1015 09:14:35.685063 22 builder.go:146] stderr: ""
  I1015 09:14:35.685198 22 builder.go:147] stdout: "service/agnhost-primary created\n"
  I1015 09:14:35.686144 22 kubectl.go:403] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I1015 09:14:35.686402 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-4079 create -f -'
  I1015 09:14:36.165489 22 builder.go:146] stderr: ""
  I1015 09:14:36.165553 22 builder.go:147] stdout: "service/frontend created\n"
  I1015 09:14:36.165678 22 kubectl.go:403] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I1015 09:14:36.165938 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-4079 create -f -'
  I1015 09:14:36.462619 22 builder.go:146] stderr: ""
  I1015 09:14:36.462686 22 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I1015 09:14:36.462777 22 kubectl.go:403] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I1015 09:14:36.463014 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-4079 create -f -'
  I1015 09:14:36.693857 22 builder.go:146] stderr: ""
  I1015 09:14:36.693926 22 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I1015 09:14:36.694100 22 kubectl.go:403] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I1015 09:14:36.694317 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-4079 create -f -'
  I1015 09:14:36.904642 22 builder.go:146] stderr: ""
  I1015 09:14:36.904875 22 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 10/15/24 09:14:36.904
  I1015 09:14:36.904939 22 kubectl.go:2271] Waiting for all frontend pods to be Running.
  I1015 09:14:41.956029 22 kubectl.go:2275] Waiting for frontend to serve content.
  I1015 09:14:41.979939 22 kubectl.go:2280] Trying to add a new entry to the guestbook.
  I1015 09:14:42.021320 22 kubectl.go:2285] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 10/15/24 09:14:42.045
  I1015 09:14:42.045433 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-4079 delete --grace-period=0 --force -f -'
  I1015 09:14:42.287616 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1015 09:14:42.288028 22 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 10/15/24 09:14:42.288
  I1015 09:14:42.288599 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-4079 delete --grace-period=0 --force -f -'
  I1015 09:14:42.536670 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1015 09:14:42.536775 22 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 10/15/24 09:14:42.536
  I1015 09:14:42.537095 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-4079 delete --grace-period=0 --force -f -'
  I1015 09:14:42.811040 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1015 09:14:42.811142 22 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 10/15/24 09:14:42.811
  I1015 09:14:42.811388 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-4079 delete --grace-period=0 --force -f -'
  I1015 09:14:43.029613 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1015 09:14:43.029687 22 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 10/15/24 09:14:43.03
  I1015 09:14:43.030337 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-4079 delete --grace-period=0 --force -f -'
  I1015 09:14:43.282831 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1015 09:14:43.282906 22 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 10/15/24 09:14:43.283
  I1015 09:14:43.283136 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-4079 delete --grace-period=0 --force -f -'
  I1015 09:14:43.580823 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1015 09:14:43.580942 22 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I1015 09:14:43.581183 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4079" for this suite. @ 10/15/24 09:14:43.604
• [8.868 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 10/15/24 09:14:43.629
  I1015 09:14:43.629430 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename emptydir @ 10/15/24 09:14:43.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:14:43.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:14:43.73
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 10/15/24 09:14:43.744
  STEP: Saw pod success @ 10/15/24 09:14:47.839
  I1015 09:14:47.847035 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-25700c66-1aae-47c5-aadc-6392d0764545 container test-container: <nil>
  STEP: delete the pod @ 10/15/24 09:14:47.862
  I1015 09:14:47.922846 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3697" for this suite. @ 10/15/24 09:14:47.94
• [4.330 seconds]
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 10/15/24 09:14:47.959
  I1015 09:14:47.960066 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename deployment @ 10/15/24 09:14:47.962
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:14:48.007
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:14:48.016
  I1015 09:14:48.050577 22 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  I1015 09:14:53.059264 22 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/15/24 09:14:53.059
  I1015 09:14:53.059545 22 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 10/15/24 09:14:53.091
  I1015 09:14:53.125427 22 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7907",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "75b038bf-0445-4cd0-87b7-0ca1aec5478e",
      ResourceVersion: (string) (len=8) "53442715",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864580493,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864580493,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1015 09:14:53.134515 22 deployment.go:41] New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  I1015 09:14:53.134973 22 deployment.go:44] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I1015 09:14:53.135874 22 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7907",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "43166dd5-030a-483d-b57b-ac84cc8c5cb5",
      ResourceVersion: (string) (len=8) "53442716",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864580488,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "75b038bf-0445-4cd0-87b7-0ca1aec5478e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864580488,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864580489,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864580493,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 37 35 62 30 33 38 62  |"uid\":\"75b038b|
              00000040  66 2d 30 34 34 35 2d 34  63 64 30 2d 38 37 62 37  |f-0445-4cd0-87b7|
              00000050  2d 30 63 61 31 61 65 63  35 34 37 38 65 5c 22 7d  |-0ca1aec5478e\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1015 09:14:53.177802 22 deployment.go:67] Pod "test-cleanup-controller-74495" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-74495",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-7907",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b77f3cd3-db03-4123-8d36-0944e7236314",
      ResourceVersion: (string) (len=8) "53442702",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864580488,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "52c84d5e6e74688bc73dd34b12b802b34eb9a70da39f9fc620b0fba2ad2f4c6f",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.233.118.50/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.233.118.50/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "43166dd5-030a-483d-b57b-ac84cc8c5cb5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864580488,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864580488,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  34 33 31 36 36 64 64 35  |uid\":\"43166dd5|
              00000080  2d 30 33 30 61 2d 34 38  33 64 2d 62 35 37 62 2d  |-030a-483d-b57b-|
              00000090  61 63 38 34 63 63 38 63  35 63 62 35 5c 22 7d 22  |ac84cc8c5cb5\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864580489,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 31 31 38  2e 35 30 5c 22 7d 22 3a  |.233.118.50\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ntgxb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ntgxb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864580489,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864580488,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864580489,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864580489,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864580488,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.200",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.200"
        }
      },
      PodIP: (string) (len=13) "10.233.118.50",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.118.50"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864580488,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864580489,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f7f698cc30404c6de6f791ef89c63cce2946b175f983cc11ad5317342103162b",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1015 09:14:53.187821 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7907" for this suite. @ 10/15/24 09:14:53.203
• [5.271 seconds]
------------------------------
S
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 10/15/24 09:14:53.231
  I1015 09:14:53.231709 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename container-runtime @ 10/15/24 09:14:53.234
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:14:53.283
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:14:53.291
  STEP: create the container @ 10/15/24 09:14:53.298
  W1015 09:14:53.332932      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 10/15/24 09:14:53.333
  STEP: get the container status @ 10/15/24 09:14:58.385
  STEP: the container should be terminated @ 10/15/24 09:14:58.399
  STEP: the termination message should be set @ 10/15/24 09:14:58.399
  I1015 09:14:58.399620 22 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 10/15/24 09:14:58.399
  I1015 09:14:58.467044 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2328" for this suite. @ 10/15/24 09:14:58.483
• [5.276 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 10/15/24 09:14:58.51
  I1015 09:14:58.510716 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename projected @ 10/15/24 09:14:58.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:14:58.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:14:58.595
  STEP: Creating the pod @ 10/15/24 09:14:58.606
  I1015 09:15:03.216928 22 pod_client.go:141] Successfully updated pod "labelsupdatef2366eb0-6b17-4855-8a43-c3a063ed1a3e"
  I1015 09:15:05.260512 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-299" for this suite. @ 10/15/24 09:15:05.279
• [6.802 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 10/15/24 09:15:05.315
  I1015 09:15:05.315613 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename projected @ 10/15/24 09:15:05.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:15:05.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:15:05.373
  STEP: Creating projection with secret that has name projected-secret-test-map-c85636f4-75c2-4640-a2af-eac17531828e @ 10/15/24 09:15:05.378
  STEP: Creating a pod to test consume secrets @ 10/15/24 09:15:05.388
  STEP: Saw pod success @ 10/15/24 09:15:09.444
  I1015 09:15:09.456857 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-projected-secrets-25660cc7-80e2-4777-b7b0-86321244acdb container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/15/24 09:15:09.473
  I1015 09:15:09.527256 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3183" for this suite. @ 10/15/24 09:15:09.542
• [4.260 seconds]
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 10/15/24 09:15:09.576
  I1015 09:15:09.576223 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename emptydir-wrapper @ 10/15/24 09:15:09.58
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:15:09.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:15:09.63
  STEP: Cleaning up the secret @ 10/15/24 09:15:11.743
  STEP: Cleaning up the configmap @ 10/15/24 09:15:11.755
  STEP: Cleaning up the pod @ 10/15/24 09:15:11.765
  I1015 09:15:11.799282 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-3952" for this suite. @ 10/15/24 09:15:11.818
• [2.258 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 10/15/24 09:15:11.842
  I1015 09:15:11.845489 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename gc @ 10/15/24 09:15:11.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:15:11.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:15:11.935
  STEP: create the rc1 @ 10/15/24 09:15:11.974
  STEP: create the rc2 @ 10/15/24 09:15:11.988
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 10/15/24 09:15:18.045
  STEP: delete the rc simpletest-rc-to-be-deleted @ 10/15/24 09:15:19.565
  STEP: wait for the rc to be deleted @ 10/15/24 09:15:19.631
  I1015 09:15:24.677857 22 garbage_collector.go:762] 68 pods remaining
  I1015 09:15:24.677920 22 garbage_collector.go:769] 68 pods has nil DeletionTimestamp
  I1015 09:15:24.677936 22 garbage_collector.go:770] 
  STEP: Gathering metrics @ 10/15/24 09:15:29.67
  I1015 09:15:29.887642 22 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1015 09:15:29.887818 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2d9hp" in namespace "gc-695"
  I1015 09:15:29.924126 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2h24d" in namespace "gc-695"
  I1015 09:15:29.971217 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2jpl8" in namespace "gc-695"
  I1015 09:15:29.993261 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2jqtf" in namespace "gc-695"
  I1015 09:15:30.024097 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2qmcr" in namespace "gc-695"
  I1015 09:15:30.074952 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2rxt7" in namespace "gc-695"
  I1015 09:15:30.122770 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2sftp" in namespace "gc-695"
  I1015 09:15:30.179451 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-45f4n" in namespace "gc-695"
  I1015 09:15:30.228775 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-542t4" in namespace "gc-695"
  I1015 09:15:30.273520 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-59q4m" in namespace "gc-695"
  I1015 09:15:30.346227 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5vvxl" in namespace "gc-695"
  I1015 09:15:30.411171 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6lpnr" in namespace "gc-695"
  I1015 09:15:30.464920 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6vkqn" in namespace "gc-695"
  I1015 09:15:30.525679 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6x4vd" in namespace "gc-695"
  I1015 09:15:30.556662 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-72f88" in namespace "gc-695"
  I1015 09:15:30.583939 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-78rn4" in namespace "gc-695"
  I1015 09:15:30.612756 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7fbwb" in namespace "gc-695"
  I1015 09:15:30.655203 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7k5rs" in namespace "gc-695"
  I1015 09:15:30.677215 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7v5dn" in namespace "gc-695"
  I1015 09:15:30.708059 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7xg2l" in namespace "gc-695"
  I1015 09:15:30.728496 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8dldn" in namespace "gc-695"
  I1015 09:15:30.760193 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8nbqq" in namespace "gc-695"
  I1015 09:15:30.782786 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8px5s" in namespace "gc-695"
  I1015 09:15:30.819022 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-94ltb" in namespace "gc-695"
  I1015 09:15:30.866720 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9bqrb" in namespace "gc-695"
  I1015 09:15:30.902804 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9c9vf" in namespace "gc-695"
  I1015 09:15:30.927305 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9hvmx" in namespace "gc-695"
  I1015 09:15:30.963748 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9k7j7" in namespace "gc-695"
  I1015 09:15:30.998517 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bg5tv" in namespace "gc-695"
  I1015 09:15:31.018294 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c7hxx" in namespace "gc-695"
  I1015 09:15:31.053962 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ccspl" in namespace "gc-695"
  I1015 09:15:31.073071 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d4b74" in namespace "gc-695"
  I1015 09:15:31.110312 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dmk56" in namespace "gc-695"
  I1015 09:15:31.142318 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dmrk9" in namespace "gc-695"
  I1015 09:15:31.160477 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f25nn" in namespace "gc-695"
  I1015 09:15:31.190823 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f7rxr" in namespace "gc-695"
  I1015 09:15:31.219170 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fgxzq" in namespace "gc-695"
  I1015 09:15:31.272036 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fznzd" in namespace "gc-695"
  I1015 09:15:31.292407 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-h5kfh" in namespace "gc-695"
  I1015 09:15:31.323724 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-h75nl" in namespace "gc-695"
  I1015 09:15:31.350981 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hjvhz" in namespace "gc-695"
  I1015 09:15:31.373790 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hxwxl" in namespace "gc-695"
  I1015 09:15:31.404169 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jqp8m" in namespace "gc-695"
  I1015 09:15:31.428661 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-khr5q" in namespace "gc-695"
  I1015 09:15:31.451951 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-kvwgw" in namespace "gc-695"
  I1015 09:15:31.468631 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-l26xm" in namespace "gc-695"
  I1015 09:15:31.488779 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-l7cz5" in namespace "gc-695"
  I1015 09:15:31.520508 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-lv56v" in namespace "gc-695"
  I1015 09:15:31.555590 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-m4kf9" in namespace "gc-695"
  I1015 09:15:31.585692 22 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-mh5wf" in namespace "gc-695"
  I1015 09:15:31.615517 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-695" for this suite. @ 10/15/24 09:15:31.638
• [19.815 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 10/15/24 09:15:31.657
  I1015 09:15:31.657554 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename webhook @ 10/15/24 09:15:31.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:15:31.75
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:15:31.756
  STEP: Setting up server cert @ 10/15/24 09:15:31.841
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/15/24 09:15:32.508
  STEP: Deploying the webhook pod @ 10/15/24 09:15:32.519
  STEP: Wait for the deployment to be ready @ 10/15/24 09:15:32.543
  I1015 09:15:32.579818 22 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  I1015 09:15:34.695258 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 15, 9, 15, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 9, 15, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 15, 9, 15, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 9, 15, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1015 09:15:36.708318 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 15, 9, 15, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 9, 15, 32, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 15, 9, 15, 32, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 9, 15, 32, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 10/15/24 09:15:38.703
  STEP: Verifying the service has paired with the endpoint @ 10/15/24 09:15:38.727
  I1015 09:15:39.727721 22 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 10/15/24 09:15:39.742
  STEP: Registering slow webhook via the AdmissionRegistration API @ 10/15/24 09:15:39.742
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 10/15/24 09:15:39.783
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 10/15/24 09:15:40.804
  STEP: Registering slow webhook via the AdmissionRegistration API @ 10/15/24 09:15:40.804
  STEP: Having no error when timeout is longer than webhook latency @ 10/15/24 09:15:41.855
  STEP: Registering slow webhook via the AdmissionRegistration API @ 10/15/24 09:15:41.856
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 10/15/24 09:15:46.94
  STEP: Registering slow webhook via the AdmissionRegistration API @ 10/15/24 09:15:46.941
  I1015 09:15:52.168222 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3670" for this suite. @ 10/15/24 09:15:52.185
  STEP: Destroying namespace "webhook-markers-4670" for this suite. @ 10/15/24 09:15:52.204
• [20.564 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 10/15/24 09:15:52.222
  I1015 09:15:52.222849 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename replicaset @ 10/15/24 09:15:52.224
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:15:52.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:15:52.274
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 10/15/24 09:15:52.288
  STEP: When a replicaset with a matching selector is created @ 10/15/24 09:15:54.342
  STEP: Then the orphan pod is adopted @ 10/15/24 09:15:54.353
  STEP: When the matched label of one of its pods change @ 10/15/24 09:15:55.375
  I1015 09:15:55.382932 22 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 10/15/24 09:15:55.417
  I1015 09:15:56.437124 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-566" for this suite. @ 10/15/24 09:15:56.462
• [4.251 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:673
  STEP: Creating a kubernetes client @ 10/15/24 09:15:56.474
  I1015 09:15:56.474451 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename validating-admission-policy @ 10/15/24 09:15:56.477
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:15:56.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:15:56.53
  STEP: getting /apis @ 10/15/24 09:15:56.546
  STEP: getting /apis/admissionregistration.k8s.io @ 10/15/24 09:15:56.562
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 10/15/24 09:15:56.565
  STEP: creating @ 10/15/24 09:15:56.567
  STEP: getting @ 10/15/24 09:15:56.597
  STEP: listing @ 10/15/24 09:15:56.614
  STEP: watching @ 10/15/24 09:15:56.622
  I1015 09:15:56.622343 22 validatingadmissionpolicy.go:768] starting watch
  STEP: patching @ 10/15/24 09:15:56.626
  STEP: updating @ 10/15/24 09:15:56.64
  I1015 09:15:56.655983 22 validatingadmissionpolicy.go:796] waiting for watch events with expected annotations
  STEP: deleting @ 10/15/24 09:15:56.656
  STEP: deleting a collection @ 10/15/24 09:15:56.685
  I1015 09:15:56.732956 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-3803" for this suite. @ 10/15/24 09:15:56.743
• [0.280 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 10/15/24 09:15:56.755
  I1015 09:15:56.756032 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename svcaccounts @ 10/15/24 09:15:56.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:15:56.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:15:56.797
  STEP: Creating a pod to test service account token:  @ 10/15/24 09:15:56.802
  STEP: Saw pod success @ 10/15/24 09:16:00.854
  I1015 09:16:00.862178 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod test-pod-21563ca5-0d93-41bf-9eed-75cff6f3bc9c container agnhost-container: <nil>
  STEP: delete the pod @ 10/15/24 09:16:00.881
  I1015 09:16:00.915704 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1257" for this suite. @ 10/15/24 09:16:00.928
• [4.194 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 10/15/24 09:16:00.951
  I1015 09:16:00.951285 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename projected @ 10/15/24 09:16:00.953
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:16:00.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:16:01.005
  STEP: Creating configMap with name projected-configmap-test-volume-map-2414ca29-542a-4cb9-942b-94165e915a32 @ 10/15/24 09:16:01.015
  STEP: Creating a pod to test consume configMaps @ 10/15/24 09:16:01.029
  STEP: Saw pod success @ 10/15/24 09:16:05.077
  I1015 09:16:05.089267 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-projected-configmaps-171cfc1e-7e63-4122-aebe-59396a469c1f container agnhost-container: <nil>
  STEP: delete the pod @ 10/15/24 09:16:05.122
  I1015 09:16:05.206503 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-634" for this suite. @ 10/15/24 09:16:05.222
• [4.304 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 10/15/24 09:16:05.26
  I1015 09:16:05.260966 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename field-validation @ 10/15/24 09:16:05.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:16:05.322
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:16:05.331
  I1015 09:16:05.338821 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  W1015 09:16:12.958767      22 warnings.go:70] unknown field "alpha"
  W1015 09:16:12.958830      22 warnings.go:70] unknown field "beta"
  W1015 09:16:12.958843      22 warnings.go:70] unknown field "delta"
  W1015 09:16:12.958855      22 warnings.go:70] unknown field "epsilon"
  W1015 09:16:12.958866      22 warnings.go:70] unknown field "gamma"
  I1015 09:16:13.573017 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-65" for this suite. @ 10/15/24 09:16:13.582
• [8.333 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 10/15/24 09:16:13.595
  I1015 09:16:13.595331 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/15/24 09:16:13.597
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:16:13.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:16:13.642
  I1015 09:16:13.650999 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  I1015 09:16:19.240130 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9619" for this suite. @ 10/15/24 09:16:19.271
• [5.711 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 10/15/24 09:16:19.31
  I1015 09:16:19.310430 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename projected @ 10/15/24 09:16:19.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:16:19.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:16:19.372
  STEP: Creating a pod to test downward API volume plugin @ 10/15/24 09:16:19.378
  STEP: Saw pod success @ 10/15/24 09:16:23.427
  I1015 09:16:23.436699 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod downwardapi-volume-c5ae6e7e-e5ee-4ff3-a999-63632f0cfe1a container client-container: <nil>
  STEP: delete the pod @ 10/15/24 09:16:23.45
  I1015 09:16:23.491159 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4252" for this suite. @ 10/15/24 09:16:23.506
• [4.216 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 10/15/24 09:16:23.529
  I1015 09:16:23.529392 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/15/24 09:16:23.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:16:23.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:16:23.575
  STEP: set up a multi version CRD @ 10/15/24 09:16:23.582
  I1015 09:16:23.584835 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: mark a version not serverd @ 10/15/24 09:16:37.268
  STEP: check the unserved version gets removed @ 10/15/24 09:16:37.312
  STEP: check the other version is not changed @ 10/15/24 09:16:41.044
  I1015 09:16:50.469289 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-693" for this suite. @ 10/15/24 09:16:50.494
• [26.984 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 10/15/24 09:16:50.514
  I1015 09:16:50.514273 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename configmap @ 10/15/24 09:16:50.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:16:50.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:16:50.563
  STEP: Creating configMap with name configmap-test-upd-0134eb88-443f-4c4b-bd3e-3cbefbacc0ee @ 10/15/24 09:16:50.584
  STEP: Creating the pod @ 10/15/24 09:16:50.593
  STEP: Updating configmap configmap-test-upd-0134eb88-443f-4c4b-bd3e-3cbefbacc0ee @ 10/15/24 09:16:52.696
  STEP: waiting to observe update in volume @ 10/15/24 09:16:52.71
  I1015 09:16:54.754003 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2979" for this suite. @ 10/15/24 09:16:54.769
• [4.276 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 10/15/24 09:16:54.792
  I1015 09:16:54.792832 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename emptydir @ 10/15/24 09:16:54.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:16:54.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:16:54.865
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 10/15/24 09:16:54.877
  STEP: Saw pod success @ 10/15/24 09:17:00.957
  I1015 09:17:00.969990 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-118fe49b-32af-4f7c-9f03-7e6bd27629cb container test-container: <nil>
  STEP: delete the pod @ 10/15/24 09:17:00.986
  I1015 09:17:01.021968 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9231" for this suite. @ 10/15/24 09:17:01.035
• [6.259 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 10/15/24 09:17:01.051
  I1015 09:17:01.051675 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename sysctl @ 10/15/24 09:17:01.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:17:01.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:17:01.106
  STEP: Creating a pod with one valid and two invalid sysctls @ 10/15/24 09:17:01.112
  I1015 09:17:01.121792 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-4408" for this suite. @ 10/15/24 09:17:01.138
• [0.100 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 10/15/24 09:17:01.152
  I1015 09:17:01.152951 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename projected @ 10/15/24 09:17:01.155
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:17:01.187
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:17:01.195
  STEP: Creating projection with secret that has name projected-secret-test-8527b4dc-fced-465f-a072-6021250cb8b0 @ 10/15/24 09:17:01.206
  STEP: Creating a pod to test consume secrets @ 10/15/24 09:17:01.216
  STEP: Saw pod success @ 10/15/24 09:17:05.294
  I1015 09:17:05.311630 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-projected-secrets-5fbaa3cd-8cdd-4667-8820-e4c4a05ccc29 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/15/24 09:17:05.332
  I1015 09:17:05.392703 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4239" for this suite. @ 10/15/24 09:17:05.409
• [4.279 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 10/15/24 09:17:05.433
  I1015 09:17:05.433185 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename dns @ 10/15/24 09:17:05.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:17:05.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:17:05.504
  STEP: Creating a test headless service @ 10/15/24 09:17:05.514
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-510.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-510.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-510.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-510.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-510.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-510.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-510.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-510.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-510.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-510.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-510.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-510.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 220.47.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.47.220_udp@PTR;check="$$(dig +tcp +noall +answer +search 220.47.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.47.220_tcp@PTR;sleep 1; done
   @ 10/15/24 09:17:05.584
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-510.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-510.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-510.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-510.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-510.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-510.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-510.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-510.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-510.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-510.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-510.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-510.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 220.47.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.47.220_udp@PTR;check="$$(dig +tcp +noall +answer +search 220.47.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.47.220_tcp@PTR;sleep 1; done
   @ 10/15/24 09:17:05.584
  STEP: creating a pod to probe DNS @ 10/15/24 09:17:05.584
  STEP: submitting the pod to kubernetes @ 10/15/24 09:17:05.585
  STEP: retrieving the pod @ 10/15/24 09:17:07.644
  STEP: looking for the results for each expected name from probers @ 10/15/24 09:17:07.654
  I1015 09:17:07.670417 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-510.svc.cluster.local from pod dns-510/dns-test-154220c3-3704-4d37-ae75-9eb0a6f3b812: the server could not find the requested resource (get pods dns-test-154220c3-3704-4d37-ae75-9eb0a6f3b812)
  I1015 09:17:07.688568 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-510.svc.cluster.local from pod dns-510/dns-test-154220c3-3704-4d37-ae75-9eb0a6f3b812: the server could not find the requested resource (get pods dns-test-154220c3-3704-4d37-ae75-9eb0a6f3b812)
  I1015 09:17:07.734376 22 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-510.svc.cluster.local from pod dns-510/dns-test-154220c3-3704-4d37-ae75-9eb0a6f3b812: the server could not find the requested resource (get pods dns-test-154220c3-3704-4d37-ae75-9eb0a6f3b812)
  I1015 09:17:07.743926 22 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-510.svc.cluster.local from pod dns-510/dns-test-154220c3-3704-4d37-ae75-9eb0a6f3b812: the server could not find the requested resource (get pods dns-test-154220c3-3704-4d37-ae75-9eb0a6f3b812)
  I1015 09:17:07.810698 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-510.svc.cluster.local from pod dns-510/dns-test-154220c3-3704-4d37-ae75-9eb0a6f3b812: the server could not find the requested resource (get pods dns-test-154220c3-3704-4d37-ae75-9eb0a6f3b812)
  I1015 09:17:07.820202 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-510.svc.cluster.local from pod dns-510/dns-test-154220c3-3704-4d37-ae75-9eb0a6f3b812: the server could not find the requested resource (get pods dns-test-154220c3-3704-4d37-ae75-9eb0a6f3b812)
  I1015 09:17:07.827146 22 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-510.svc.cluster.local from pod dns-510/dns-test-154220c3-3704-4d37-ae75-9eb0a6f3b812: the server could not find the requested resource (get pods dns-test-154220c3-3704-4d37-ae75-9eb0a6f3b812)
  I1015 09:17:07.840092 22 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-510.svc.cluster.local from pod dns-510/dns-test-154220c3-3704-4d37-ae75-9eb0a6f3b812: the server could not find the requested resource (get pods dns-test-154220c3-3704-4d37-ae75-9eb0a6f3b812)
  I1015 09:17:07.879218 22 dns_common.go:489] Lookups using dns-510/dns-test-154220c3-3704-4d37-ae75-9eb0a6f3b812 failed for: [wheezy_udp@dns-test-service.dns-510.svc.cluster.local wheezy_tcp@dns-test-service.dns-510.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-510.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-510.svc.cluster.local jessie_udp@dns-test-service.dns-510.svc.cluster.local jessie_tcp@dns-test-service.dns-510.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-510.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-510.svc.cluster.local]

  I1015 09:17:07.893029 22 dns_common.go:495] Pod client logs for webserver: 
  I1015 09:17:07.909117 22 dns_common.go:495] Pod client logs for querier: 
  I1015 09:17:07.918434 22 dns_common.go:495] Pod client logs for jessie-querier: 
  I1015 09:17:12.747638 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-510.svc.cluster.local from pod dns-510/dns-test-154220c3-3704-4d37-ae75-9eb0a6f3b812: the server could not find the requested resource (get pods dns-test-154220c3-3704-4d37-ae75-9eb0a6f3b812)
  I1015 09:17:12.757790 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-510.svc.cluster.local from pod dns-510/dns-test-154220c3-3704-4d37-ae75-9eb0a6f3b812: the server could not find the requested resource (get pods dns-test-154220c3-3704-4d37-ae75-9eb0a6f3b812)
  I1015 09:17:12.768356 22 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-510.svc.cluster.local from pod dns-510/dns-test-154220c3-3704-4d37-ae75-9eb0a6f3b812: the server could not find the requested resource (get pods dns-test-154220c3-3704-4d37-ae75-9eb0a6f3b812)
  I1015 09:17:12.778907 22 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-510.svc.cluster.local from pod dns-510/dns-test-154220c3-3704-4d37-ae75-9eb0a6f3b812: the server could not find the requested resource (get pods dns-test-154220c3-3704-4d37-ae75-9eb0a6f3b812)
  I1015 09:17:12.821576 22 dns_common.go:489] Lookups using dns-510/dns-test-154220c3-3704-4d37-ae75-9eb0a6f3b812 failed for: [jessie_udp@dns-test-service.dns-510.svc.cluster.local jessie_tcp@dns-test-service.dns-510.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-510.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-510.svc.cluster.local]

  I1015 09:17:12.839962 22 dns_common.go:495] Pod client logs for webserver: 
  I1015 09:17:12.860467 22 dns_common.go:495] Pod client logs for querier: 
  I1015 09:17:12.879553 22 dns_common.go:495] Pod client logs for jessie-querier: 
  I1015 09:17:17.880018 22 dns_common.go:527] DNS probes using dns-510/dns-test-154220c3-3704-4d37-ae75-9eb0a6f3b812 succeeded

  STEP: deleting the pod @ 10/15/24 09:17:17.88
  STEP: deleting the test service @ 10/15/24 09:17:17.958
  STEP: deleting the test headless service @ 10/15/24 09:17:18.065
  I1015 09:17:18.124044 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-510" for this suite. @ 10/15/24 09:17:18.155
• [12.741 seconds]
------------------------------
S
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 10/15/24 09:17:18.173
  I1015 09:17:18.173989 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename containers @ 10/15/24 09:17:18.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:17:18.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:17:18.251
  STEP: Creating a pod to test override command @ 10/15/24 09:17:18.258
  STEP: Saw pod success @ 10/15/24 09:17:22.318
  I1015 09:17:22.335761 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod client-containers-fb4315a4-11f4-4585-9f74-aceecc685e52 container agnhost-container: <nil>
  STEP: delete the pod @ 10/15/24 09:17:22.351
  I1015 09:17:22.388962 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-2718" for this suite. @ 10/15/24 09:17:22.401
• [4.251 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 10/15/24 09:17:22.439
  I1015 09:17:22.440057 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename secrets @ 10/15/24 09:17:22.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:17:22.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:17:22.547
  STEP: Creating secret with name secret-test-78c08824-6e2d-4e24-8b86-bb56a78d7174 @ 10/15/24 09:17:22.603
  STEP: Creating a pod to test consume secrets @ 10/15/24 09:17:22.619
  STEP: Saw pod success @ 10/15/24 09:17:26.683
  I1015 09:17:26.691298 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-secrets-e7c97b25-4387-4bbc-87ef-b8cc83cdf9cf container secret-volume-test: <nil>
  STEP: delete the pod @ 10/15/24 09:17:26.708
  I1015 09:17:26.762860 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6990" for this suite. @ 10/15/24 09:17:26.781
  STEP: Destroying namespace "secret-namespace-2015" for this suite. @ 10/15/24 09:17:26.8
• [4.396 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 10/15/24 09:17:26.836
  I1015 09:17:26.836316 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename projected @ 10/15/24 09:17:26.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:17:26.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:17:26.917
  STEP: Creating a pod to test downward API volume plugin @ 10/15/24 09:17:26.923
  STEP: Saw pod success @ 10/15/24 09:17:30.991
  I1015 09:17:31.002278 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod downwardapi-volume-a1543633-ccfe-47cd-95a7-2348cca5bc8c container client-container: <nil>
  STEP: delete the pod @ 10/15/24 09:17:31.019
  I1015 09:17:31.058818 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6277" for this suite. @ 10/15/24 09:17:31.08
• [4.263 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 10/15/24 09:17:31.1
  I1015 09:17:31.100195 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename downward-api @ 10/15/24 09:17:31.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:17:31.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:17:31.15
  STEP: Creating a pod to test downward api env vars @ 10/15/24 09:17:31.161
  STEP: Saw pod success @ 10/15/24 09:17:35.232
  I1015 09:17:35.243029 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod downward-api-5bc81d3b-b1dd-4390-b6c4-e59c0383c16b container dapi-container: <nil>
  STEP: delete the pod @ 10/15/24 09:17:35.278
  I1015 09:17:35.342014 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2870" for this suite. @ 10/15/24 09:17:35.357
• [4.291 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 10/15/24 09:17:35.392
  I1015 09:17:35.392705 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename namespaces @ 10/15/24 09:17:35.396
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:17:35.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:17:35.516
  STEP: Creating namespace "e2e-ns-nzp7k" @ 10/15/24 09:17:35.529
  I1015 09:17:35.584887 22 namespace.go:411] Namespace "e2e-ns-nzp7k-6145" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-nzp7k-6145" @ 10/15/24 09:17:35.584
  I1015 09:17:35.608807 22 namespace.go:434] Namespace "e2e-ns-nzp7k-6145" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-nzp7k-6145" @ 10/15/24 09:17:35.608
  I1015 09:17:35.632341 22 namespace.go:463] Namespace "e2e-ns-nzp7k-6145" has []v1.FinalizerName{"kubernetes"}
  I1015 09:17:35.632717 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5323" for this suite. @ 10/15/24 09:17:35.65
  STEP: Destroying namespace "e2e-ns-nzp7k-6145" for this suite. @ 10/15/24 09:17:35.67
• [0.299 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 10/15/24 09:17:35.695
  I1015 09:17:35.696055 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename dns @ 10/15/24 09:17:35.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:17:35.735
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:17:35.743
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-8511.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-8511.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 10/15/24 09:17:35.753
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-8511.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-8511.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 10/15/24 09:17:35.753
  STEP: creating a pod to probe /etc/hosts @ 10/15/24 09:17:35.754
  STEP: submitting the pod to kubernetes @ 10/15/24 09:17:35.754
  STEP: retrieving the pod @ 10/15/24 09:17:39.816
  STEP: looking for the results for each expected name from probers @ 10/15/24 09:17:39.828
  I1015 09:17:39.882444 22 dns_common.go:527] DNS probes using dns-8511/dns-test-f2348749-7851-4468-898d-16f2ef7d90eb succeeded

  STEP: deleting the pod @ 10/15/24 09:17:39.882
  I1015 09:17:39.948739 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8511" for this suite. @ 10/15/24 09:17:39.973
• [4.304 seconds]
------------------------------
SS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 10/15/24 09:17:39.999
  I1015 09:17:39.999280 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 10/15/24 09:17:40.001
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:17:40.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:17:40.062
  STEP: Setting up the test @ 10/15/24 09:17:40.07
  STEP: Creating hostNetwork=false pod @ 10/15/24 09:17:40.071
  STEP: Creating hostNetwork=true pod @ 10/15/24 09:17:42.124
  STEP: Running the test @ 10/15/24 09:17:44.172
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 10/15/24 09:17:44.172
  I1015 09:17:44.172814 22 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8681 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1015 09:17:44.172853 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  I1015 09:17:44.174221 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I1015 09:17:44.174334 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8681/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1015 09:17:44.300841 22 exec_util.go:106] Exec stderr: ""
  I1015 09:17:44.300991 22 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8681 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1015 09:17:44.301017 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  I1015 09:17:44.302410 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I1015 09:17:44.302580 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8681/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1015 09:17:44.449309 22 exec_util.go:106] Exec stderr: ""
  I1015 09:17:44.449723 22 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8681 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1015 09:17:44.449999 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  I1015 09:17:44.451546 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I1015 09:17:44.451841 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8681/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1015 09:17:44.575847 22 exec_util.go:106] Exec stderr: ""
  I1015 09:17:44.575925 22 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8681 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1015 09:17:44.575945 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  I1015 09:17:44.576778 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I1015 09:17:44.576880 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8681/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1015 09:17:44.703186 22 exec_util.go:106] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 10/15/24 09:17:44.703
  I1015 09:17:44.703769 22 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8681 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1015 09:17:44.703922 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  I1015 09:17:44.704748 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I1015 09:17:44.704983 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8681/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I1015 09:17:44.841524 22 exec_util.go:106] Exec stderr: ""
  I1015 09:17:44.841646 22 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8681 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1015 09:17:44.841664 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  I1015 09:17:44.842539 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I1015 09:17:44.842638 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8681/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I1015 09:17:44.967290 22 exec_util.go:106] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 10/15/24 09:17:44.967
  I1015 09:17:44.967490 22 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8681 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1015 09:17:44.967517 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  I1015 09:17:44.968699 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I1015 09:17:44.968792 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8681/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1015 09:17:45.110637 22 exec_util.go:106] Exec stderr: ""
  I1015 09:17:45.110736 22 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8681 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1015 09:17:45.110762 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  I1015 09:17:45.112110 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I1015 09:17:45.112240 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8681/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1015 09:17:45.268770 22 exec_util.go:106] Exec stderr: ""
  I1015 09:17:45.269275 22 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8681 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1015 09:17:45.270143 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  I1015 09:17:45.271573 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I1015 09:17:45.272095 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8681/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1015 09:17:45.453307 22 exec_util.go:106] Exec stderr: ""
  I1015 09:17:45.453959 22 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8681 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1015 09:17:45.454256 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  I1015 09:17:45.455318 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I1015 09:17:45.455682 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8681/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1015 09:17:45.618818 22 exec_util.go:106] Exec stderr: ""
  I1015 09:17:45.619678 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-8681" for this suite. @ 10/15/24 09:17:45.635
• [5.669 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 10/15/24 09:17:45.669
  I1015 09:17:45.669238 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename projected @ 10/15/24 09:17:45.67
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:17:45.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:17:45.746
  STEP: Creating configMap with name projected-configmap-test-volume-d99bf464-7ae7-4f34-a2bc-f2497248db6b @ 10/15/24 09:17:45.753
  STEP: Creating a pod to test consume configMaps @ 10/15/24 09:17:45.768
  STEP: Saw pod success @ 10/15/24 09:17:49.861
  I1015 09:17:49.871520 22 output.go:196] Trying to get logs from node env1-test-worker-2 pod pod-projected-configmaps-b6e37de3-3b57-4224-b0cb-87c753c6a292 container agnhost-container: <nil>
  STEP: delete the pod @ 10/15/24 09:17:49.911
  I1015 09:17:49.942881 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9027" for this suite. @ 10/15/24 09:17:49.953
• [4.295 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 10/15/24 09:17:49.966
  I1015 09:17:49.966546 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename disruption @ 10/15/24 09:17:49.968
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:17:50.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:17:50.017
  STEP: creating the pdb @ 10/15/24 09:17:50.028
  STEP: Waiting for the pdb to be processed @ 10/15/24 09:17:50.038
  STEP: updating the pdb @ 10/15/24 09:17:52.057
  STEP: Waiting for the pdb to be processed @ 10/15/24 09:17:52.084
  STEP: patching the pdb @ 10/15/24 09:17:54.094
  STEP: Waiting for the pdb to be processed @ 10/15/24 09:17:54.116
  STEP: Waiting for the pdb to be deleted @ 10/15/24 09:17:56.151
  I1015 09:17:56.157730 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8864" for this suite. @ 10/15/24 09:17:56.17
• [6.219 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 10/15/24 09:17:56.197
  I1015 09:17:56.198026 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename server-version @ 10/15/24 09:17:56.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:17:56.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:17:56.263
  STEP: Request ServerVersion @ 10/15/24 09:17:56.274
  STEP: Confirm major version @ 10/15/24 09:17:56.277
  I1015 09:17:56.277309 22 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 10/15/24 09:17:56.277
  I1015 09:17:56.278103 22 server_version.go:58] cleanMinorVersion: 30
  I1015 09:17:56.278257 22 server_version.go:62] Minor version: 30
  I1015 09:17:56.279348 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-5387" for this suite. @ 10/15/24 09:17:56.292
• [0.119 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 10/15/24 09:17:56.317
  I1015 09:17:56.317233 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename downward-api @ 10/15/24 09:17:56.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:17:56.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:17:56.404
  STEP: Creating the pod @ 10/15/24 09:17:56.415
  I1015 09:17:59.026719 22 pod_client.go:141] Successfully updated pod "annotationupdate1246b7a9-50d1-4458-9116-d8609a6429ef"
  I1015 09:18:01.067527 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6542" for this suite. @ 10/15/24 09:18:01.082
• [4.779 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 10/15/24 09:18:01.098
  I1015 09:18:01.098808 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename events @ 10/15/24 09:18:01.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:18:01.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:18:01.151
  STEP: Create set of events @ 10/15/24 09:18:01.158
  STEP: get a list of Events with a label in the current namespace @ 10/15/24 09:18:01.201
  STEP: delete a list of events @ 10/15/24 09:18:01.21
  I1015 09:18:01.210533 22 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 10/15/24 09:18:01.254
  I1015 09:18:01.261031 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6919" for this suite. @ 10/15/24 09:18:01.272
• [0.187 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:134
  STEP: Creating a kubernetes client @ 10/15/24 09:18:01.286
  I1015 09:18:01.286230 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename kubelet-test @ 10/15/24 09:18:01.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:18:01.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:18:01.35
  I1015 09:18:01.629034 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1935" for this suite. @ 10/15/24 09:18:01.785
• [0.567 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 10/15/24 09:18:01.854
  I1015 09:18:01.854120 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename var-expansion @ 10/15/24 09:18:01.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:18:01.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:18:01.918
  STEP: Creating a pod to test substitution in container's command @ 10/15/24 09:18:01.928
  STEP: Saw pod success @ 10/15/24 09:18:05.997
  I1015 09:18:06.010925 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod var-expansion-949c012c-8bfa-4c50-870e-d8a089706667 container dapi-container: <nil>
  STEP: delete the pod @ 10/15/24 09:18:06.028
  I1015 09:18:06.081860 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5706" for this suite. @ 10/15/24 09:18:06.096
• [4.263 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 10/15/24 09:18:06.117
  I1015 09:18:06.117763 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename daemonsets @ 10/15/24 09:18:06.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:18:06.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:18:06.176
  STEP: Creating a simple DaemonSet "daemon-set" @ 10/15/24 09:18:06.241
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/15/24 09:18:06.261
  I1015 09:18:06.284158 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:18:06.284291 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:18:06.284424 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:18:06.295210 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1015 09:18:06.295468 22 fixtures.go:130] Node env1-test-worker-0 is running 0 daemon pod, expected 1
  I1015 09:18:07.280630 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:18:07.280783 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:18:07.280917 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:18:07.302404 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1015 09:18:07.302464 22 fixtures.go:130] Node env1-test-worker-0 is running 0 daemon pod, expected 1
  I1015 09:18:08.278399 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:18:08.278501 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:18:08.278550 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:18:08.288493 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1015 09:18:08.288580 22 fixtures.go:130] Node env1-test-worker-2 is running 0 daemon pod, expected 1
  I1015 09:18:09.281684 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:18:09.281802 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:18:09.281861 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:18:09.291818 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1015 09:18:09.292489 22 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 10/15/24 09:18:09.3
  I1015 09:18:09.350402 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:18:09.350722 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:18:09.351086 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:18:09.370013 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1015 09:18:09.370095 22 fixtures.go:130] Node env1-test-worker-0 is running 0 daemon pod, expected 1
  I1015 09:18:10.354398 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:18:10.355892 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:18:10.356320 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:18:10.370668 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1015 09:18:10.371719 22 fixtures.go:130] Node env1-test-worker-0 is running 0 daemon pod, expected 1
  I1015 09:18:11.349637 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:18:11.349751 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:18:11.349818 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:18:11.362378 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1015 09:18:11.362469 22 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 10/15/24 09:18:11.362
  STEP: Deleting DaemonSet "daemon-set" @ 10/15/24 09:18:11.379
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8361, will wait for the garbage collector to delete the pods @ 10/15/24 09:18:11.379
  I1015 09:18:11.455912 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 16.613089ms
  I1015 09:18:11.658112 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 202.199072ms
  I1015 09:18:14.272760 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1015 09:18:14.272878 22 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1015 09:18:14.283512 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"53446971"},"items":null}

  I1015 09:18:14.290546 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"53446971"},"items":null}

  I1015 09:18:14.341623 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8361" for this suite. @ 10/15/24 09:18:14.354
• [8.260 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 10/15/24 09:18:14.378
  I1015 09:18:14.378388 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename secrets @ 10/15/24 09:18:14.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:18:14.446
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:18:14.453
  STEP: Creating secret with name secret-test-0c944d4a-e3c3-4a47-887d-15328d929b11 @ 10/15/24 09:18:14.46
  STEP: Creating a pod to test consume secrets @ 10/15/24 09:18:14.479
  STEP: Saw pod success @ 10/15/24 09:18:18.531
  I1015 09:18:18.547327 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-secrets-b62f6342-7e66-43e4-92b4-b1d1cfe4c465 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/15/24 09:18:18.569
  I1015 09:18:18.631026 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6550" for this suite. @ 10/15/24 09:18:18.652
• [4.295 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 10/15/24 09:18:18.676
  I1015 09:18:18.676715 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename container-probe @ 10/15/24 09:18:18.678
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:18:18.732
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:18:18.738
  I1015 09:18:40.874928 22 container_probe.go:92] Container started at 2024-10-15 09:18:20 +0000 UTC, pod became ready at 2024-10-15 09:18:39 +0000 UTC
  I1015 09:18:40.875166 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3923" for this suite. @ 10/15/24 09:18:40.889
• [22.232 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 10/15/24 09:18:40.908
  I1015 09:18:40.908304 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/15/24 09:18:40.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:18:40.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:18:40.968
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 10/15/24 09:18:40.973
  I1015 09:18:40.974837 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 10/15/24 09:19:00.9
  I1015 09:19:00.901217 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  I1015 09:19:10.573324 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  I1015 09:19:31.718126 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5200" for this suite. @ 10/15/24 09:19:31.741
• [50.848 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 10/15/24 09:19:31.76
  I1015 09:19:31.761279 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename webhook @ 10/15/24 09:19:31.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:19:31.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:19:31.8
  STEP: Setting up server cert @ 10/15/24 09:19:31.851
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/15/24 09:19:33.522
  STEP: Deploying the webhook pod @ 10/15/24 09:19:33.541
  STEP: Wait for the deployment to be ready @ 10/15/24 09:19:33.568
  I1015 09:19:33.588529 22 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  I1015 09:19:35.615190 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 15, 9, 19, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 9, 19, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 15, 9, 19, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 9, 19, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 10/15/24 09:19:37.626
  STEP: Verifying the service has paired with the endpoint @ 10/15/24 09:19:37.66
  I1015 09:19:38.661240 22 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 10/15/24 09:19:38.675
  STEP: create a pod that should be denied by the webhook @ 10/15/24 09:19:38.717
  STEP: create a pod that causes the webhook to hang @ 10/15/24 09:19:38.753
  STEP: create a configmap that should be denied by the webhook @ 10/15/24 09:19:48.769
  STEP: create a configmap that should be admitted by the webhook @ 10/15/24 09:19:48.79
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 10/15/24 09:19:48.816
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 10/15/24 09:19:48.839
  STEP: create a namespace that bypass the webhook @ 10/15/24 09:19:48.852
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 10/15/24 09:19:48.899
  I1015 09:19:49.118366 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4443" for this suite. @ 10/15/24 09:19:49.144
  STEP: Destroying namespace "webhook-markers-7776" for this suite. @ 10/15/24 09:19:49.161
  STEP: Destroying namespace "exempted-namespace-2332" for this suite. @ 10/15/24 09:19:49.182
• [17.448 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:866
  STEP: Creating a kubernetes client @ 10/15/24 09:19:49.206
  I1015 09:19:49.206097 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename webhook @ 10/15/24 09:19:49.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:19:49.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:19:49.28
  STEP: Setting up server cert @ 10/15/24 09:19:49.353
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/15/24 09:19:51.049
  STEP: Deploying the webhook pod @ 10/15/24 09:19:51.064
  STEP: Wait for the deployment to be ready @ 10/15/24 09:19:51.097
  I1015 09:19:51.116812 22 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  I1015 09:19:53.146857 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 15, 9, 19, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 9, 19, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 15, 9, 19, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 9, 19, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 10/15/24 09:19:55.153
  STEP: Verifying the service has paired with the endpoint @ 10/15/24 09:19:55.168
  I1015 09:19:56.170002 22 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 10/15/24 09:19:56.181
  STEP: create the configmap with a random name @ 10/15/24 09:19:56.22
  STEP: verify the configmap is mutated @ 10/15/24 09:19:56.256
  STEP: create the configmap with 'skip-me' name @ 10/15/24 09:19:56.257
  I1015 09:19:56.504954 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1854" for this suite. @ 10/15/24 09:19:56.533
  STEP: Destroying namespace "webhook-markers-7820" for this suite. @ 10/15/24 09:19:56.565
• [7.378 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:644
  STEP: Creating a kubernetes client @ 10/15/24 09:19:56.585
  I1015 09:19:56.585880 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename statefulset @ 10/15/24 09:19:56.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:19:56.639
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:19:56.654
  STEP: Creating service test in namespace statefulset-3432 @ 10/15/24 09:19:56.662
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 10/15/24 09:19:56.679
  STEP: Creating stateful set ss in namespace statefulset-3432 @ 10/15/24 09:19:56.689
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-3432 @ 10/15/24 09:19:56.708
  I1015 09:19:56.717998 22 wait.go:40] Found 0 stateful pods, waiting for 1
  I1015 09:20:06.723998 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 10/15/24 09:20:06.724
  I1015 09:20:06.733555 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=statefulset-3432 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1015 09:20:07.030989 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1015 09:20:07.031054 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1015 09:20:07.031075 22 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1015 09:20:07.038103 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I1015 09:20:17.044530 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1015 09:20:17.044619 22 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1015 09:20:17.074517 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 9.999999351s
  I1015 09:20:18.081398 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 8.992069026s
  I1015 09:20:19.091685 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 7.984503316s
  I1015 09:20:20.104391 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 6.975173309s
  I1015 09:20:21.113180 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 5.962515154s
  I1015 09:20:22.120121 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 4.953723671s
  I1015 09:20:23.135652 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 3.945977424s
  I1015 09:20:24.143110 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 2.930972965s
  I1015 09:20:25.149152 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 1.923614138s
  I1015 09:20:26.158685 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 917.441226ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-3432 @ 10/15/24 09:20:27.159
  I1015 09:20:27.189338 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=statefulset-3432 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1015 09:20:27.460540 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1015 09:20:27.460660 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1015 09:20:27.460710 22 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1015 09:20:27.468914 22 wait.go:40] Found 1 stateful pods, waiting for 3
  I1015 09:20:37.474178 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1015 09:20:37.474259 22 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I1015 09:20:37.474290 22 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 10/15/24 09:20:37.474
  STEP: Scale down will halt with unhealthy stateful pod @ 10/15/24 09:20:37.474
  I1015 09:20:37.499534 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=statefulset-3432 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1015 09:20:37.850860 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1015 09:20:37.851030 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1015 09:20:37.851078 22 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1015 09:20:37.851201 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=statefulset-3432 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1015 09:20:38.124006 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1015 09:20:38.124100 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1015 09:20:38.124151 22 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1015 09:20:38.124286 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=statefulset-3432 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1015 09:20:38.398493 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1015 09:20:38.398552 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1015 09:20:38.398586 22 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1015 09:20:38.398606 22 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1015 09:20:38.404824 22 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 2
  I1015 09:20:48.417284 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1015 09:20:48.417369 22 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I1015 09:20:48.417395 22 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I1015 09:20:48.475149 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 9.999999274s
  I1015 09:20:49.486030 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.988787145s
  I1015 09:20:50.501740 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.977390553s
  I1015 09:20:51.512767 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.9621574s
  I1015 09:20:52.522067 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.951347569s
  I1015 09:20:53.535499 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.941157068s
  I1015 09:20:54.544124 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.928606455s
  I1015 09:20:55.555380 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.919642552s
  I1015 09:20:56.565481 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.908599078s
  I1015 09:20:57.575513 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 897.554497ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-3432 @ 10/15/24 09:20:58.575
  I1015 09:20:58.588299 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=statefulset-3432 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1015 09:20:58.910906 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1015 09:20:58.910998 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1015 09:20:58.911044 22 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1015 09:20:58.911143 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=statefulset-3432 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1015 09:20:59.242651 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1015 09:20:59.242731 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1015 09:20:59.242760 22 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1015 09:20:59.242851 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=statefulset-3432 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1015 09:20:59.632093 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1015 09:20:59.632234 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1015 09:20:59.632282 22 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1015 09:20:59.632333 22 rest.go:150] Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 10/15/24 09:21:09.66
  I1015 09:21:09.661097 22 statefulset.go:138] Deleting all statefulset in ns statefulset-3432
  I1015 09:21:09.671063 22 rest.go:150] Scaling statefulset ss to 0
  I1015 09:21:09.694726 22 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1015 09:21:09.701395 22 rest.go:88] Deleting statefulset ss
  I1015 09:21:09.737290 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3432" for this suite. @ 10/15/24 09:21:09.753
• [73.182 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:601
  STEP: Creating a kubernetes client @ 10/15/24 09:21:09.768
  I1015 09:21:09.768417 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename job @ 10/15/24 09:21:09.771
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:21:09.832
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:21:09.844
  STEP: Creating a job @ 10/15/24 09:21:09.853
  STEP: Ensuring job reaches completions @ 10/15/24 09:21:09.872
  I1015 09:21:21.885847 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7336" for this suite. @ 10/15/24 09:21:21.905
• [12.152 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 10/15/24 09:21:21.928
  I1015 09:21:21.928261 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename webhook @ 10/15/24 09:21:21.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:21:21.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:21:21.982
  STEP: Setting up server cert @ 10/15/24 09:21:22.054
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/15/24 09:21:22.948
  STEP: Deploying the webhook pod @ 10/15/24 09:21:22.969
  STEP: Wait for the deployment to be ready @ 10/15/24 09:21:23.001
  I1015 09:21:23.029441 22 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  I1015 09:21:25.059964 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 15, 9, 21, 23, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 9, 21, 23, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 15, 9, 21, 23, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 9, 21, 23, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 10/15/24 09:21:27.07
  STEP: Verifying the service has paired with the endpoint @ 10/15/24 09:21:27.101
  I1015 09:21:28.102219 22 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 10/15/24 09:21:28.134
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 10/15/24 09:21:28.179
  STEP: Creating a configMap that should not be mutated @ 10/15/24 09:21:28.192
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 10/15/24 09:21:28.215
  STEP: Creating a configMap that should be mutated @ 10/15/24 09:21:28.226
  I1015 09:21:28.410575 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4098" for this suite. @ 10/15/24 09:21:28.425
  STEP: Destroying namespace "webhook-markers-5861" for this suite. @ 10/15/24 09:21:28.446
• [6.545 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 10/15/24 09:21:28.473
  I1015 09:21:28.473972 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/15/24 09:21:28.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:21:28.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:21:28.576
  I1015 09:21:28.587226 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  I1015 09:21:34.718790 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7567" for this suite. @ 10/15/24 09:21:34.733
• [6.276 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 10/15/24 09:21:34.754
  I1015 09:21:34.754136 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename downward-api @ 10/15/24 09:21:34.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:21:34.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:21:34.8
  STEP: Creating a pod to test downward API volume plugin @ 10/15/24 09:21:34.807
  STEP: Saw pod success @ 10/15/24 09:21:38.852
  I1015 09:21:38.859407 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod downwardapi-volume-239aebfc-0103-4f12-acd9-3cf2f01a4c52 container client-container: <nil>
  STEP: delete the pod @ 10/15/24 09:21:38.897
  I1015 09:21:38.930392 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8943" for this suite. @ 10/15/24 09:21:38.942
• [4.207 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 10/15/24 09:21:38.961
  I1015 09:21:38.961178 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename emptydir @ 10/15/24 09:21:38.962
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:21:39.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:21:39.015
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 10/15/24 09:21:39.023
  STEP: Saw pod success @ 10/15/24 09:21:43.065
  I1015 09:21:43.075348 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-6f35273b-dc0a-410c-9b0d-34e915ef9c0b container test-container: <nil>
  STEP: delete the pod @ 10/15/24 09:21:43.088
  I1015 09:21:43.132297 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1561" for this suite. @ 10/15/24 09:21:43.153
• [4.213 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 10/15/24 09:21:43.175
  I1015 09:21:43.175349 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename crd-watch @ 10/15/24 09:21:43.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:21:43.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:21:43.246
  I1015 09:21:43.252853 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Creating first CR  @ 10/15/24 09:21:50.856
  I1015 09:21:50.870211 22 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-10-15T09:21:50Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-10-15T09:21:50Z]] name:name1 resourceVersion:53448570 uid:ebeec1a2-e5f8-4653-a7df-b43499bd7bfa] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 10/15/24 09:22:00.87
  I1015 09:22:00.884019 22 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-10-15T09:22:00Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-10-15T09:22:00Z]] name:name2 resourceVersion:53448607 uid:c630fab1-efc8-4192-bb2e-1aa5f1d0d81a] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 10/15/24 09:22:10.886
  I1015 09:22:10.904062 22 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-10-15T09:21:50Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-10-15T09:22:10Z]] name:name1 resourceVersion:53448645 uid:ebeec1a2-e5f8-4653-a7df-b43499bd7bfa] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 10/15/24 09:22:20.904
  I1015 09:22:20.920881 22 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-10-15T09:22:00Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-10-15T09:22:20Z]] name:name2 resourceVersion:53448679 uid:c630fab1-efc8-4192-bb2e-1aa5f1d0d81a] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 10/15/24 09:22:30.922
  I1015 09:22:30.938228 22 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-10-15T09:21:50Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-10-15T09:22:10Z]] name:name1 resourceVersion:53448715 uid:ebeec1a2-e5f8-4653-a7df-b43499bd7bfa] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 10/15/24 09:22:40.938
  I1015 09:22:40.979342 22 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-10-15T09:22:00Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-10-15T09:22:20Z]] name:name2 resourceVersion:53448753 uid:c630fab1-efc8-4192-bb2e-1aa5f1d0d81a] num:map[num1:9223372036854775807 num2:1000000]]}
  I1015 09:22:51.527096 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-3804" for this suite. @ 10/15/24 09:22:51.54
• [68.385 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 10/15/24 09:22:51.562
  I1015 09:22:51.562834 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename deployment @ 10/15/24 09:22:51.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:22:51.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:22:51.613
  I1015 09:22:51.625445 22 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I1015 09:22:51.650871 22 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I1015 09:22:56.660230 22 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/15/24 09:22:56.66
  I1015 09:22:56.660499 22 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I1015 09:22:56.674439 22 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I1015 09:22:56.705077 22 deployment.go:222] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I1015 09:22:58.731453 22 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I1015 09:22:58.746157 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:2, UnavailableReplicas:0, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.October, 15, 9, 22, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 9, 22, 56, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 15, 9, 22, 58, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 9, 22, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rolling-update-deployment-6f4b778cd6\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1015 09:23:00.755176 22 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I1015 09:23:00.796235 22 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4666",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a9618ed7-197b-4ad4-b83c-9bf55c02eed3",
      ResourceVersion: (string) (len=8) "53448874",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864580976,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864580976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864580978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864580976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864580976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864580978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864580976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6f4b778cd6\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1015 09:23:00.848677 22 deployment.go:39] New ReplicaSet "test-rolling-update-deployment-6f4b778cd6" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6f4b778cd6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4666",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "39bc0c02-bdb5-4cd5-a8df-3a65c7ae777a",
      ResourceVersion: (string) (len=8) "53448864",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864580976,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6",
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "a9618ed7-197b-4ad4-b83c-9bf55c02eed3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864580976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 61 39 36 31 38 65  64 37 2d 31 39 37 62 2d  |\"a9618ed7-197b-|
              00000120  34 61 64 34 2d 62 38 33  63 2d 39 62 66 35 35 63  |4ad4-b83c-9bf55c|
              00000130  30 32 65 65 64 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |02eed3\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864580978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1015 09:23:00.874617 22 deployment.go:44] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I1015 09:23:00.875225 22 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4666",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bda27c2c-5877-4832-97e0-87b4429f9572",
      ResourceVersion: (string) (len=8) "53448873",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864580971,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "a9618ed7-197b-4ad4-b83c-9bf55c02eed3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864580971,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864580978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 61 39 36 31 38 65 64  |"uid\":\"a9618ed|
              000000b0  37 2d 31 39 37 62 2d 34  61 64 34 2d 62 38 33 63  |7-197b-4ad4-b83c|
              000000c0  2d 39 62 66 35 35 63 30  32 65 65 64 33 5c 22 7d  |-9bf55c02eed3\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864580978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1015 09:23:00.892824 22 deployment.go:67] Pod "test-rolling-update-deployment-6f4b778cd6-sqlpj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6f4b778cd6-sqlpj",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6f4b778cd6-",
      Namespace: (string) (len=15) "deployment-4666",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b5f04725-ca16-470f-96b9-0421a692906f",
      ResourceVersion: (string) (len=8) "53448863",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864580976,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.233.118.35/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.233.118.35/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "e4df7ed4fa0dc3f4e409626d283839f220977d03e97d283a2d6e882ada19c065"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6f4b778cd6",
          UID: (types.UID) (len=36) "39bc0c02-bdb5-4cd5-a8df-3a65c7ae777a",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864580976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 33 39  62 63 30 63 30 32 2d 62  |d\":\"39bc0c02-b|
              00000090  64 62 35 2d 34 63 64 35  2d 61 38 64 66 2d 33 61  |db5-4cd5-a8df-3a|
              000000a0  36 35 63 37 61 65 37 37  37 61 5c 22 7d 22 3a 7b  |65c7ae777a\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864580977,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864580978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 31 31 38  2e 33 35 5c 22 7d 22 3a  |.233.118.35\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jw8cd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jw8cd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864580978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864580976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864580978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864580978,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864580976,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.200",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.200"
        }
      },
      PodIP: (string) (len=13) "10.233.118.35",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.118.35"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864580976,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864580978,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://d5db756f30b41d7f93593aedbca2ed9bf8e946692ece752adbe9d3f7dc72116f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1015 09:23:00.902345 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4666" for this suite. @ 10/15/24 09:23:00.915
• [9.376 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:882
  STEP: Creating a kubernetes client @ 10/15/24 09:23:00.94
  I1015 09:23:00.940424 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename kubectl @ 10/15/24 09:23:00.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:23:01.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:23:01.027
  STEP: validating api versions @ 10/15/24 09:23:01.037
  I1015 09:23:01.037676 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-8294 api-versions'
  I1015 09:23:01.232521 22 builder.go:146] stderr: ""
  I1015 09:23:01.232616 22 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncns.vmware.com/v1alpha1\ncoordination.k8s.io/v1\ncrd.projectcalico.org/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nmetrics.k8s.io/v1beta1\nmonitoring.coreos.com/v1\nmonitoring.coreos.com/v1alpha1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\ntraefik.containo.us/v1alpha1\ntraefik.io/v1alpha1\nv1\nvelero.io/v1\nvelero.io/v2alpha1\n"
  I1015 09:23:01.232792 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8294" for this suite. @ 10/15/24 09:23:01.247
• [0.329 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 10/15/24 09:23:01.27
  I1015 09:23:01.270594 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename replication-controller @ 10/15/24 09:23:01.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:23:01.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:23:01.315
  STEP: creating a ReplicationController @ 10/15/24 09:23:01.333
  STEP: waiting for RC to be added @ 10/15/24 09:23:01.346
  STEP: waiting for available Replicas @ 10/15/24 09:23:01.346
  STEP: patching ReplicationController @ 10/15/24 09:23:03.721
  STEP: waiting for RC to be modified @ 10/15/24 09:23:03.747
  STEP: patching ReplicationController status @ 10/15/24 09:23:03.748
  STEP: waiting for RC to be modified @ 10/15/24 09:23:03.764
  STEP: waiting for available Replicas @ 10/15/24 09:23:03.766
  STEP: fetching ReplicationController status @ 10/15/24 09:23:03.812
  STEP: patching ReplicationController scale @ 10/15/24 09:23:03.836
  STEP: waiting for RC to be modified @ 10/15/24 09:23:03.857
  STEP: waiting for ReplicationController's scale to be the max amount @ 10/15/24 09:23:03.859
  STEP: fetching ReplicationController; ensuring that it's patched @ 10/15/24 09:23:06.01
  STEP: updating ReplicationController status @ 10/15/24 09:23:06.018
  STEP: waiting for RC to be modified @ 10/15/24 09:23:06.048
  STEP: listing all ReplicationControllers @ 10/15/24 09:23:06.049
  STEP: checking that ReplicationController has expected values @ 10/15/24 09:23:06.066
  STEP: deleting ReplicationControllers by collection @ 10/15/24 09:23:06.066
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 10/15/24 09:23:06.1
  I1015 09:23:06.193907 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  E1015 09:23:06.194535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-1462" for this suite. @ 10/15/24 09:23:06.209
• [4.958 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 10/15/24 09:23:06.23
  I1015 09:23:06.230863 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename configmap @ 10/15/24 09:23:06.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:23:06.282
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:23:06.291
  STEP: Creating configMap with name configmap-test-volume-dd691a23-8400-4a64-83c9-ab4b2a2387fc @ 10/15/24 09:23:06.298
  STEP: Creating a pod to test consume configMaps @ 10/15/24 09:23:06.318
  E1015 09:23:07.194914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:23:08.196156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:23:09.196808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:23:10.197156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 09:23:10.404
  I1015 09:23:10.423651 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-configmaps-9a41e70d-6ed9-4825-90b3-cfd9cf529793 container configmap-volume-test: <nil>
  STEP: delete the pod @ 10/15/24 09:23:10.444
  I1015 09:23:10.509668 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3630" for this suite. @ 10/15/24 09:23:10.527
• [4.340 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 10/15/24 09:23:10.57
  I1015 09:23:10.570769 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/15/24 09:23:10.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:23:10.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:23:10.639
  I1015 09:23:10.646408 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  E1015 09:23:11.197625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:23:12.198484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:23:13.199856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:23:14.200003      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:23:15.200382      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:23:16.201044      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:23:17.201054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:23:18.202176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:23:19.203129      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 10/15/24 09:23:20.002
  I1015 09:23:20.002339 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=crd-publish-openapi-4006 --namespace=crd-publish-openapi-4006 create -f -'
  E1015 09:23:20.203937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:23:20.243980 22 builder.go:146] stderr: ""
  I1015 09:23:20.244097 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4293-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I1015 09:23:20.244200 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=crd-publish-openapi-4006 --namespace=crd-publish-openapi-4006 delete e2e-test-crd-publish-openapi-4293-crds test-cr'
  I1015 09:23:20.472169 22 builder.go:146] stderr: ""
  I1015 09:23:20.472287 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4293-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I1015 09:23:20.472798 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=crd-publish-openapi-4006 --namespace=crd-publish-openapi-4006 apply -f -'
  I1015 09:23:20.675158 22 builder.go:146] stderr: ""
  I1015 09:23:20.675294 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4293-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I1015 09:23:20.675477 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=crd-publish-openapi-4006 --namespace=crd-publish-openapi-4006 delete e2e-test-crd-publish-openapi-4293-crds test-cr'
  I1015 09:23:20.827162 22 builder.go:146] stderr: ""
  I1015 09:23:20.827287 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4293-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 10/15/24 09:23:20.827
  I1015 09:23:20.827620 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=crd-publish-openapi-4006 explain e2e-test-crd-publish-openapi-4293-crds'
  I1015 09:23:21.017230 22 builder.go:146] stderr: ""
  I1015 09:23:21.017387 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-4293-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E1015 09:23:21.204860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:23:22.205479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:23:23.206066      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:23:24.207078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:23:25.207694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:23:25.738253 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4006" for this suite. @ 10/15/24 09:23:25.764
• [15.217 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 10/15/24 09:23:25.793
  I1015 09:23:25.793821 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename emptydir @ 10/15/24 09:23:25.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:23:25.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:23:25.855
  STEP: Creating Pod @ 10/15/24 09:23:25.863
  E1015 09:23:26.207713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:23:27.208080      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 10/15/24 09:23:27.928
  I1015 09:23:27.928934 22 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-4542 PodName:pod-sharedvolume-da2171d2-7485-48b2-9035-27a1bae2cfa0 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1015 09:23:27.928982 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  I1015 09:23:27.930342 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I1015 09:23:27.930469 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/emptydir-4542/pods/pod-sharedvolume-da2171d2-7485-48b2-9035-27a1bae2cfa0/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  I1015 09:23:28.065613 22 exec_util.go:106] Exec stderr: ""
  I1015 09:23:28.066129 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4542" for this suite. @ 10/15/24 09:23:28.08
• [2.303 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 10/15/24 09:23:28.096
  I1015 09:23:28.097036 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename gc @ 10/15/24 09:23:28.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:23:28.151
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:23:28.157
  STEP: create the deployment @ 10/15/24 09:23:28.165
  W1015 09:23:28.177546      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 10/15/24 09:23:28.178
  E1015 09:23:28.208583      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 10/15/24 09:23:28.692
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 10/15/24 09:23:28.731
  E1015 09:23:29.215806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 10/15/24 09:23:29.281
  I1015 09:23:29.527968 22 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1015 09:23:29.528365 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-3658" for this suite. @ 10/15/24 09:23:29.545
• [1.467 seconds]
------------------------------
SS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 10/15/24 09:23:29.564
  I1015 09:23:29.564677 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename dns @ 10/15/24 09:23:29.566
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:23:29.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:23:29.628
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 10/15/24 09:23:29.64
  I1015 09:23:29.665098 22 dns.go:419] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-3482  0f14cc50-ab01-4f74-9efe-1e3472690009 53449206 0 2024-10-15 09:23:29 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-10-15 09:23:29 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-gwkqr,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.47,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-gwkqr,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E1015 09:23:30.216181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:23:31.216240      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:23:32.217006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:23:33.217783      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 10/15/24 09:23:33.703
  I1015 09:23:33.703937 22 exec_util.go:55] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-3482 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1015 09:23:33.703982 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  I1015 09:23:33.705427 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I1015 09:23:33.705549 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/dns-3482/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 10/15/24 09:23:33.889
  I1015 09:23:33.890032 22 exec_util.go:55] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-3482 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1015 09:23:33.890503 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  I1015 09:23:33.892284 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I1015 09:23:33.892784 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/dns-3482/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1015 09:23:34.071592 22 dns.go:421] Deleting pod test-dns-nameservers...
  I1015 09:23:34.160690 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3482" for this suite. @ 10/15/24 09:23:34.182
• [4.639 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:430
  STEP: Creating a kubernetes client @ 10/15/24 09:23:34.21
  I1015 09:23:34.210904 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename pv @ 10/15/24 09:23:34.212
  E1015 09:23:34.218081      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:23:34.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:23:34.335
  STEP: Creating initial PV and PVC @ 10/15/24 09:23:34.346
  I1015 09:23:34.347052 22 pv.go:390] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-8724" @ 10/15/24 09:23:34.424
  STEP: Listing PVCs in namespace "pv-8724" @ 10/15/24 09:23:34.445
  STEP: Patching the PV "pv-8724-qnsnv" @ 10/15/24 09:23:34.453
  STEP: Patching the PVC "pvc-t8qt6" @ 10/15/24 09:23:34.515
  STEP: Getting PV "pv-8724-qnsnv" @ 10/15/24 09:23:34.556
  STEP: Getting PVC "pvc-t8qt6" @ 10/15/24 09:23:34.564
  STEP: Deleting PVC "pvc-t8qt6" @ 10/15/24 09:23:34.575
  STEP: Confirm deletion of PVC "pvc-t8qt6" @ 10/15/24 09:23:34.605
  E1015 09:23:35.218751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:23:36.219093      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-8724-qnsnv" @ 10/15/24 09:23:36.622
  STEP: Confirm deletion of PV "pv-8724-qnsnv" @ 10/15/24 09:23:36.638
  STEP: Recreating another PV & PVC @ 10/15/24 09:23:36.658
  I1015 09:23:36.658699 22 pv.go:390] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-8724-vpdjn" @ 10/15/24 09:23:36.69
  STEP: Updating the PVC "pvc-djhhb" @ 10/15/24 09:23:36.758
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-djhhb=updated" @ 10/15/24 09:23:36.783
  STEP: Deleting PVC "pvc-djhhb" via DeleteCollection @ 10/15/24 09:23:36.79
  STEP: Confirm deletion of PVC "pvc-djhhb" @ 10/15/24 09:23:36.807
  E1015 09:23:37.220182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:23:38.220005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting PV "pv-8724-vpdjn" via DeleteCollection @ 10/15/24 09:23:38.826
  STEP: Confirm deletion of PV "pv-8724-vpdjn" @ 10/15/24 09:23:38.847
  E1015 09:23:39.220109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:23:40.221182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:23:40.866382 22 persistent_volumes.go:407] AfterEach: deleting 1 PVCs and 1 PVs...
  I1015 09:23:40.866785 22 pv.go:201] Deleting PersistentVolumeClaim "pvc-djhhb"
  I1015 09:23:40.872549 22 pv.go:189] Deleting PersistentVolume "pv-8724-vpdjn"
  I1015 09:23:40.900126 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-8724" for this suite. @ 10/15/24 09:23:40.921
• [6.731 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 10/15/24 09:23:40.944
  I1015 09:23:40.944258 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/15/24 09:23:40.947
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:23:40.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:23:41.006
  I1015 09:23:41.012828 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  E1015 09:23:41.221859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:23:42.222719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:23:43.223975      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:23:44.224097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:23:45.224674      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:23:46.225189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:23:47.225524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:23:48.226298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:23:49.227544      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:23:50.227730      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 10/15/24 09:23:50.547
  I1015 09:23:50.547951 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=crd-publish-openapi-3692 --namespace=crd-publish-openapi-3692 create -f -'
  I1015 09:23:50.772337 22 builder.go:146] stderr: ""
  I1015 09:23:50.772414 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9560-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I1015 09:23:50.772546 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=crd-publish-openapi-3692 --namespace=crd-publish-openapi-3692 delete e2e-test-crd-publish-openapi-9560-crds test-foo'
  I1015 09:23:50.985435 22 builder.go:146] stderr: ""
  I1015 09:23:50.985520 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9560-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I1015 09:23:50.985616 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=crd-publish-openapi-3692 --namespace=crd-publish-openapi-3692 apply -f -'
  E1015 09:23:51.227853      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:23:51.248758 22 builder.go:146] stderr: ""
  I1015 09:23:51.248841 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9560-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I1015 09:23:51.248938 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=crd-publish-openapi-3692 --namespace=crd-publish-openapi-3692 delete e2e-test-crd-publish-openapi-9560-crds test-foo'
  I1015 09:23:51.463617 22 builder.go:146] stderr: ""
  I1015 09:23:51.463708 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9560-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 10/15/24 09:23:51.463
  I1015 09:23:51.463923 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=crd-publish-openapi-3692 --namespace=crd-publish-openapi-3692 create -f -'
  I1015 09:23:51.637972 22 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 10/15/24 09:23:51.638
  I1015 09:23:51.639063 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=crd-publish-openapi-3692 --namespace=crd-publish-openapi-3692 create -f -'
  I1015 09:23:51.812462 22 builder.go:135] rc: 1
  I1015 09:23:51.812712 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=crd-publish-openapi-3692 --namespace=crd-publish-openapi-3692 apply -f -'
  I1015 09:23:52.016432 22 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 10/15/24 09:23:52.017
  I1015 09:23:52.017527 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=crd-publish-openapi-3692 --namespace=crd-publish-openapi-3692 create -f -'
  I1015 09:23:52.184829 22 builder.go:135] rc: 1
  I1015 09:23:52.185258 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=crd-publish-openapi-3692 --namespace=crd-publish-openapi-3692 apply -f -'
  E1015 09:23:52.227828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:23:52.381920 22 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 10/15/24 09:23:52.382
  I1015 09:23:52.382230 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=crd-publish-openapi-3692 explain e2e-test-crd-publish-openapi-9560-crds'
  I1015 09:23:52.560245 22 builder.go:146] stderr: ""
  I1015 09:23:52.561088 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9560-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 10/15/24 09:23:52.562
  I1015 09:23:52.562562 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=crd-publish-openapi-3692 explain e2e-test-crd-publish-openapi-9560-crds.metadata'
  I1015 09:23:52.730873 22 builder.go:146] stderr: ""
  I1015 09:23:52.732010 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9560-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I1015 09:23:52.732696 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=crd-publish-openapi-3692 explain e2e-test-crd-publish-openapi-9560-crds.spec'
  I1015 09:23:52.912806 22 builder.go:146] stderr: ""
  I1015 09:23:52.912934 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9560-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I1015 09:23:52.913267 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=crd-publish-openapi-3692 explain e2e-test-crd-publish-openapi-9560-crds.spec.bars'
  I1015 09:23:53.080644 22 builder.go:146] stderr: ""
  I1015 09:23:53.081240 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-9560-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 10/15/24 09:23:53.081
  I1015 09:23:53.082160 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=crd-publish-openapi-3692 explain e2e-test-crd-publish-openapi-9560-crds.spec.bars2'
  E1015 09:23:53.228464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:23:53.255292 22 builder.go:135] rc: 1
  E1015 09:23:54.228952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:23:55.230171      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:23:56.231405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:23:57.231698      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:23:57.308451 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3692" for this suite. @ 10/15/24 09:23:57.333
• [16.405 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 10/15/24 09:23:57.349
  I1015 09:23:57.349796 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename daemonsets @ 10/15/24 09:23:57.351
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:23:57.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:23:57.455
  STEP: Creating simple DaemonSet "daemon-set" @ 10/15/24 09:23:57.527
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/15/24 09:23:57.536
  I1015 09:23:57.553854 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:23:57.554360 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:23:57.554779 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:23:57.563886 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1015 09:23:57.563959 22 fixtures.go:130] Node env1-test-worker-0 is running 0 daemon pod, expected 1
  E1015 09:23:58.235458      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:23:58.559502 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:23:58.559610 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:23:58.559665 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:23:58.570274 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1015 09:23:58.570368 22 fixtures.go:130] Node env1-test-worker-0 is running 0 daemon pod, expected 1
  E1015 09:23:59.236520      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:23:59.555903 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:23:59.556128 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:23:59.556227 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:23:59.563199 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1015 09:23:59.563253 22 fixtures.go:130] Node env1-test-worker-1 is running 0 daemon pod, expected 1
  E1015 09:24:00.237418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:24:00.549169 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:24:00.549277 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:24:00.549324 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:24:00.557338 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1015 09:24:00.557403 22 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 10/15/24 09:24:00.564
  I1015 09:24:00.605418 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:24:00.605520 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:24:00.606073 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:24:00.617113 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1015 09:24:00.617182 22 fixtures.go:130] Node env1-test-worker-0 is running 0 daemon pod, expected 1
  E1015 09:24:01.237854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:24:01.605902 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:24:01.606054 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:24:01.606156 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:24:01.613922 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1015 09:24:01.614030 22 fixtures.go:130] Node env1-test-worker-0 is running 0 daemon pod, expected 1
  E1015 09:24:02.238855      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:24:02.605601 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:24:02.605698 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:24:02.605730 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:24:02.618471 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1015 09:24:02.618574 22 fixtures.go:130] Node env1-test-worker-0 is running 0 daemon pod, expected 1
  E1015 09:24:03.239380      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:24:03.608862 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:24:03.609052 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:24:03.609178 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:24:03.630579 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1015 09:24:03.630738 22 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 10/15/24 09:24:03.645
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8339, will wait for the garbage collector to delete the pods @ 10/15/24 09:24:03.645
  I1015 09:24:03.739650 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 27.636816ms
  I1015 09:24:03.941168 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 201.515834ms
  E1015 09:24:04.240498      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:24:05.241015      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:24:06.148799 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1015 09:24:06.148898 22 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1015 09:24:06.154241 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"53449566"},"items":null}

  I1015 09:24:06.161380 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"53449566"},"items":null}

  I1015 09:24:06.195634 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8339" for this suite. @ 10/15/24 09:24:06.207
• [8.874 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 10/15/24 09:24:06.223
  I1015 09:24:06.223729 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename svc-latency @ 10/15/24 09:24:06.225
  E1015 09:24:06.241083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:24:06.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:24:06.263
  I1015 09:24:06.270314 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-9498 @ 10/15/24 09:24:06.272
  I1015 09:24:06.290760      22 runners.go:198] Created replication controller with name: svc-latency-rc, namespace: svc-latency-9498, replica count: 1
  E1015 09:24:07.241423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:24:07.343163      22 runners.go:198] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E1015 09:24:08.241914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:24:08.344419      22 runners.go:198] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1015 09:24:08.491377 22 service_latency.go:356] Created: latency-svc-nvsjm
  I1015 09:24:08.537209 22 service_latency.go:363] Got endpoints: latency-svc-nvsjm [90.767932ms]
  I1015 09:24:08.576783 22 service_latency.go:356] Created: latency-svc-jbkrq
  I1015 09:24:08.612055 22 service_latency.go:363] Got endpoints: latency-svc-jbkrq [73.141535ms]
  I1015 09:24:08.613269 22 service_latency.go:356] Created: latency-svc-p2xbh
  I1015 09:24:08.618435 22 service_latency.go:363] Got endpoints: latency-svc-p2xbh [77.923093ms]
  I1015 09:24:08.782432 22 service_latency.go:356] Created: latency-svc-wz7j9
  I1015 09:24:08.784190 22 service_latency.go:356] Created: latency-svc-5sknc
  I1015 09:24:08.784315 22 service_latency.go:356] Created: latency-svc-fwsct
  I1015 09:24:08.784399 22 service_latency.go:356] Created: latency-svc-t49f9
  I1015 09:24:08.785176 22 service_latency.go:356] Created: latency-svc-gjsvt
  I1015 09:24:08.797636 22 service_latency.go:356] Created: latency-svc-drvkt
  I1015 09:24:08.797891 22 service_latency.go:356] Created: latency-svc-fnm48
  I1015 09:24:08.798488 22 service_latency.go:356] Created: latency-svc-7trmd
  I1015 09:24:08.798705 22 service_latency.go:356] Created: latency-svc-7fx6m
  I1015 09:24:08.798834 22 service_latency.go:356] Created: latency-svc-xj8b2
  I1015 09:24:08.798907 22 service_latency.go:356] Created: latency-svc-qbtcp
  I1015 09:24:08.804818 22 service_latency.go:356] Created: latency-svc-46m9m
  I1015 09:24:08.805579 22 service_latency.go:363] Got endpoints: latency-svc-gjsvt [263.335279ms]
  I1015 09:24:08.814893 22 service_latency.go:356] Created: latency-svc-s5vpw
  I1015 09:24:08.815696 22 service_latency.go:356] Created: latency-svc-m6tlj
  I1015 09:24:08.816264 22 service_latency.go:356] Created: latency-svc-4jmpc
  I1015 09:24:08.848475 22 service_latency.go:363] Got endpoints: latency-svc-xj8b2 [305.52409ms]
  I1015 09:24:08.849939 22 service_latency.go:363] Got endpoints: latency-svc-5sknc [231.100255ms]
  I1015 09:24:08.850868 22 service_latency.go:363] Got endpoints: latency-svc-t49f9 [307.112761ms]
  I1015 09:24:08.852118 22 service_latency.go:363] Got endpoints: latency-svc-fwsct [239.013922ms]
  I1015 09:24:08.861617 22 service_latency.go:363] Got endpoints: latency-svc-wz7j9 [319.051959ms]
  I1015 09:24:08.866329 22 service_latency.go:356] Created: latency-svc-pndxq
  I1015 09:24:08.876869 22 service_latency.go:363] Got endpoints: latency-svc-drvkt [333.270539ms]
  I1015 09:24:08.884964 22 service_latency.go:363] Got endpoints: latency-svc-m6tlj [342.148742ms]
  I1015 09:24:08.885139 22 service_latency.go:363] Got endpoints: latency-svc-7fx6m [343.634001ms]
  I1015 09:24:08.885237 22 service_latency.go:363] Got endpoints: latency-svc-qbtcp [342.014491ms]
  I1015 09:24:08.908668 22 service_latency.go:363] Got endpoints: latency-svc-7trmd [366.267829ms]
  I1015 09:24:08.909174 22 service_latency.go:363] Got endpoints: latency-svc-4jmpc [365.876388ms]
  I1015 09:24:08.911126 22 service_latency.go:356] Created: latency-svc-hxh8w
  I1015 09:24:08.940272 22 service_latency.go:356] Created: latency-svc-m24h2
  I1015 09:24:08.944173 22 service_latency.go:363] Got endpoints: latency-svc-s5vpw [401.425102ms]
  I1015 09:24:08.944523 22 service_latency.go:363] Got endpoints: latency-svc-46m9m [403.5098ms]
  I1015 09:24:08.972356 22 service_latency.go:363] Got endpoints: latency-svc-fnm48 [428.580488ms]
  I1015 09:24:08.973143 22 service_latency.go:363] Got endpoints: latency-svc-pndxq [167.266224ms]
  I1015 09:24:08.993029 22 service_latency.go:363] Got endpoints: latency-svc-hxh8w [143.655684ms]
  I1015 09:24:09.006500 22 service_latency.go:363] Got endpoints: latency-svc-m24h2 [155.0308ms]
  I1015 09:24:09.109252 22 service_latency.go:356] Created: latency-svc-bftls
  I1015 09:24:09.121226 22 service_latency.go:356] Created: latency-svc-5g7pz
  I1015 09:24:09.121226 22 service_latency.go:356] Created: latency-svc-ngbsf
  I1015 09:24:09.121788 22 service_latency.go:356] Created: latency-svc-b6frb
  I1015 09:24:09.122176 22 service_latency.go:356] Created: latency-svc-txjt6
  I1015 09:24:09.122184 22 service_latency.go:356] Created: latency-svc-kjk9n
  I1015 09:24:09.123732 22 service_latency.go:356] Created: latency-svc-vs4dc
  I1015 09:24:09.124547 22 service_latency.go:356] Created: latency-svc-kq4md
  I1015 09:24:09.124774 22 service_latency.go:356] Created: latency-svc-kxcsn
  I1015 09:24:09.125053 22 service_latency.go:356] Created: latency-svc-gprbm
  I1015 09:24:09.125112 22 service_latency.go:356] Created: latency-svc-krbx7
  I1015 09:24:09.145032 22 service_latency.go:363] Got endpoints: latency-svc-5g7pz [267.958327ms]
  I1015 09:24:09.145923 22 service_latency.go:363] Got endpoints: latency-svc-bftls [259.65933ms]
  I1015 09:24:09.160260 22 service_latency.go:356] Created: latency-svc-8c5sv
  I1015 09:24:09.160553 22 service_latency.go:356] Created: latency-svc-mt78w
  I1015 09:24:09.161036 22 service_latency.go:356] Created: latency-svc-x8zpb
  I1015 09:24:09.161316 22 service_latency.go:356] Created: latency-svc-lckv7
  I1015 09:24:09.161845 22 service_latency.go:363] Got endpoints: latency-svc-txjt6 [274.269898ms]
  I1015 09:24:09.184960 22 service_latency.go:363] Got endpoints: latency-svc-b6frb [332.397301ms]
  I1015 09:24:09.192228 22 service_latency.go:363] Got endpoints: latency-svc-kjk9n [185.627234ms]
  I1015 09:24:09.203478 22 service_latency.go:363] Got endpoints: latency-svc-vs4dc [294.662476ms]
  I1015 09:24:09.204891 22 service_latency.go:363] Got endpoints: latency-svc-gprbm [342.899108ms]
  I1015 09:24:09.205581 22 service_latency.go:363] Got endpoints: latency-svc-kq4md [316.318402ms]
  I1015 09:24:09.206940 22 service_latency.go:356] Created: latency-svc-mv29n
  I1015 09:24:09.216348 22 service_latency.go:363] Got endpoints: latency-svc-kxcsn [271.201195ms]
  I1015 09:24:09.237231 22 service_latency.go:363] Got endpoints: latency-svc-x8zpb [243.009171ms]
  I1015 09:24:09.237837 22 service_latency.go:363] Got endpoints: latency-svc-ngbsf [264.239856ms]
  I1015 09:24:09.238395 22 service_latency.go:363] Got endpoints: latency-svc-krbx7 [387.863337ms]
  E1015 09:24:09.243682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:24:09.245115 22 service_latency.go:363] Got endpoints: latency-svc-8c5sv [300.032402ms]
  I1015 09:24:09.246177 22 service_latency.go:363] Got endpoints: latency-svc-mt78w [336.750203ms]
  I1015 09:24:09.253573 22 service_latency.go:356] Created: latency-svc-k77gn
  I1015 09:24:09.262208 22 service_latency.go:363] Got endpoints: latency-svc-lckv7 [287.811441ms]
  I1015 09:24:09.271566 22 service_latency.go:363] Got endpoints: latency-svc-k77gn [125.550014ms]
  I1015 09:24:09.271604 22 service_latency.go:363] Got endpoints: latency-svc-mv29n [126.375328ms]
  I1015 09:24:09.274312 22 service_latency.go:356] Created: latency-svc-6jlxw
  I1015 09:24:09.279772 22 service_latency.go:363] Got endpoints: latency-svc-6jlxw [117.832744ms]
  I1015 09:24:09.288868 22 service_latency.go:356] Created: latency-svc-jxqlf
  I1015 09:24:09.292295 22 service_latency.go:363] Got endpoints: latency-svc-jxqlf [107.234647ms]
  I1015 09:24:09.301936 22 service_latency.go:356] Created: latency-svc-2wnmp
  I1015 09:24:09.323301 22 service_latency.go:356] Created: latency-svc-l5vnq
  I1015 09:24:09.324004 22 service_latency.go:363] Got endpoints: latency-svc-2wnmp [131.619771ms]
  I1015 09:24:09.334166 22 service_latency.go:363] Got endpoints: latency-svc-l5vnq [130.596787ms]
  I1015 09:24:09.336797 22 service_latency.go:356] Created: latency-svc-p4wsd
  I1015 09:24:09.355135 22 service_latency.go:356] Created: latency-svc-cq5h7
  I1015 09:24:09.359136 22 service_latency.go:363] Got endpoints: latency-svc-p4wsd [154.161444ms]
  I1015 09:24:09.368924 22 service_latency.go:363] Got endpoints: latency-svc-cq5h7 [163.291194ms]
  I1015 09:24:09.376448 22 service_latency.go:356] Created: latency-svc-bfjwd
  I1015 09:24:09.386937 22 service_latency.go:356] Created: latency-svc-sj5ds
  I1015 09:24:09.392367 22 service_latency.go:363] Got endpoints: latency-svc-bfjwd [175.323793ms]
  I1015 09:24:09.413482 22 service_latency.go:356] Created: latency-svc-m9pcc
  I1015 09:24:09.449622 22 service_latency.go:363] Got endpoints: latency-svc-sj5ds [212.282665ms]
  I1015 09:24:09.463355 22 service_latency.go:356] Created: latency-svc-sbpcx
  I1015 09:24:09.471005 22 service_latency.go:356] Created: latency-svc-jsjss
  I1015 09:24:09.485758 22 service_latency.go:363] Got endpoints: latency-svc-m9pcc [246.850673ms]
  I1015 09:24:09.500430 22 service_latency.go:356] Created: latency-svc-pwxzv
  I1015 09:24:09.516531 22 service_latency.go:356] Created: latency-svc-vkjkv
  I1015 09:24:09.529486 22 service_latency.go:356] Created: latency-svc-p2lvk
  I1015 09:24:09.565066 22 service_latency.go:356] Created: latency-svc-jhnt7
  I1015 09:24:09.567744 22 service_latency.go:363] Got endpoints: latency-svc-sbpcx [329.303855ms]
  I1015 09:24:09.583571 22 service_latency.go:356] Created: latency-svc-8tzhv
  I1015 09:24:09.620304 22 service_latency.go:363] Got endpoints: latency-svc-jsjss [374.662161ms]
  I1015 09:24:09.636105 22 service_latency.go:356] Created: latency-svc-k5php
  I1015 09:24:09.661405 22 service_latency.go:356] Created: latency-svc-j874p
  I1015 09:24:09.669610 22 service_latency.go:363] Got endpoints: latency-svc-pwxzv [422.909263ms]
  I1015 09:24:09.683885 22 service_latency.go:356] Created: latency-svc-v24fr
  I1015 09:24:09.701172 22 service_latency.go:363] Got endpoints: latency-svc-vkjkv [436.886003ms]
  I1015 09:24:09.710285 22 service_latency.go:356] Created: latency-svc-26kzq
  I1015 09:24:09.732071 22 service_latency.go:356] Created: latency-svc-m2qvg
  I1015 09:24:09.746548 22 service_latency.go:356] Created: latency-svc-xv4pn
  I1015 09:24:09.753933 22 service_latency.go:363] Got endpoints: latency-svc-p2lvk [481.668555ms]
  I1015 09:24:09.757034 22 service_latency.go:356] Created: latency-svc-wq4ck
  I1015 09:24:09.778829 22 service_latency.go:356] Created: latency-svc-7xfq5
  I1015 09:24:09.786686 22 service_latency.go:363] Got endpoints: latency-svc-jhnt7 [515.001999ms]
  I1015 09:24:09.790767 22 service_latency.go:356] Created: latency-svc-xqjwn
  I1015 09:24:09.804497 22 service_latency.go:356] Created: latency-svc-58mmp
  I1015 09:24:09.820947 22 service_latency.go:356] Created: latency-svc-9c8q4
  I1015 09:24:09.841559 22 service_latency.go:356] Created: latency-svc-nlnb9
  I1015 09:24:09.846923 22 service_latency.go:363] Got endpoints: latency-svc-8tzhv [566.330727ms]
  I1015 09:24:09.860865 22 service_latency.go:356] Created: latency-svc-pdfd8
  I1015 09:24:09.874157 22 service_latency.go:356] Created: latency-svc-4s65p
  I1015 09:24:09.891524 22 service_latency.go:363] Got endpoints: latency-svc-k5php [599.105343ms]
  I1015 09:24:09.903084 22 service_latency.go:356] Created: latency-svc-nhpd8
  I1015 09:24:09.917462 22 service_latency.go:356] Created: latency-svc-pktms
  I1015 09:24:09.938254 22 service_latency.go:363] Got endpoints: latency-svc-j874p [613.730634ms]
  I1015 09:24:09.960413 22 service_latency.go:356] Created: latency-svc-hvq9w
  I1015 09:24:09.983154 22 service_latency.go:363] Got endpoints: latency-svc-v24fr [648.916821ms]
  I1015 09:24:10.018474 22 service_latency.go:356] Created: latency-svc-xmb7q
  I1015 09:24:10.045249 22 service_latency.go:363] Got endpoints: latency-svc-26kzq [686.005504ms]
  I1015 09:24:10.070282 22 service_latency.go:356] Created: latency-svc-n9g2s
  I1015 09:24:10.083325 22 service_latency.go:363] Got endpoints: latency-svc-m2qvg [714.227493ms]
  I1015 09:24:10.132453 22 service_latency.go:356] Created: latency-svc-crplx
  I1015 09:24:10.136193 22 service_latency.go:363] Got endpoints: latency-svc-xv4pn [743.326215ms]
  I1015 09:24:10.157517 22 service_latency.go:356] Created: latency-svc-nsrbh
  I1015 09:24:10.184598 22 service_latency.go:363] Got endpoints: latency-svc-wq4ck [734.87341ms]
  I1015 09:24:10.219191 22 service_latency.go:356] Created: latency-svc-qrxxv
  I1015 09:24:10.238111 22 service_latency.go:363] Got endpoints: latency-svc-7xfq5 [752.219699ms]
  E1015 09:24:10.244097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:24:10.268976 22 service_latency.go:356] Created: latency-svc-9v4cv
  I1015 09:24:10.280570 22 service_latency.go:363] Got endpoints: latency-svc-xqjwn [712.493041ms]
  I1015 09:24:10.301851 22 service_latency.go:356] Created: latency-svc-bsjfn
  I1015 09:24:10.330131 22 service_latency.go:363] Got endpoints: latency-svc-58mmp [709.698934ms]
  I1015 09:24:10.367187 22 service_latency.go:356] Created: latency-svc-lhvpf
  I1015 09:24:10.382971 22 service_latency.go:363] Got endpoints: latency-svc-9c8q4 [713.265525ms]
  I1015 09:24:10.408186 22 service_latency.go:356] Created: latency-svc-sxmtm
  I1015 09:24:10.431858 22 service_latency.go:363] Got endpoints: latency-svc-nlnb9 [730.096244ms]
  I1015 09:24:10.461151 22 service_latency.go:356] Created: latency-svc-4bwz2
  I1015 09:24:10.482099 22 service_latency.go:363] Got endpoints: latency-svc-pdfd8 [727.971868ms]
  I1015 09:24:10.497971 22 service_latency.go:356] Created: latency-svc-mkjhb
  I1015 09:24:10.545734 22 service_latency.go:363] Got endpoints: latency-svc-4s65p [757.904525ms]
  I1015 09:24:10.565976 22 service_latency.go:356] Created: latency-svc-snzcg
  I1015 09:24:10.585129 22 service_latency.go:363] Got endpoints: latency-svc-nhpd8 [737.811309ms]
  I1015 09:24:10.613351 22 service_latency.go:356] Created: latency-svc-vhm87
  I1015 09:24:10.638425 22 service_latency.go:363] Got endpoints: latency-svc-pktms [745.987334ms]
  I1015 09:24:10.659246 22 service_latency.go:356] Created: latency-svc-wkxpp
  I1015 09:24:10.684522 22 service_latency.go:363] Got endpoints: latency-svc-hvq9w [746.140201ms]
  I1015 09:24:10.708476 22 service_latency.go:356] Created: latency-svc-7v55b
  I1015 09:24:10.737157 22 service_latency.go:363] Got endpoints: latency-svc-xmb7q [753.918776ms]
  I1015 09:24:10.760155 22 service_latency.go:356] Created: latency-svc-7rfvz
  I1015 09:24:10.782780 22 service_latency.go:363] Got endpoints: latency-svc-n9g2s [737.421888ms]
  I1015 09:24:10.802308 22 service_latency.go:356] Created: latency-svc-qk5pn
  I1015 09:24:10.829447 22 service_latency.go:363] Got endpoints: latency-svc-crplx [744.87557ms]
  I1015 09:24:10.848944 22 service_latency.go:356] Created: latency-svc-75s78
  I1015 09:24:10.879336 22 service_latency.go:363] Got endpoints: latency-svc-nsrbh [743.046255ms]
  I1015 09:24:10.899615 22 service_latency.go:356] Created: latency-svc-9jw2b
  I1015 09:24:10.930612 22 service_latency.go:363] Got endpoints: latency-svc-qrxxv [745.132497ms]
  I1015 09:24:10.950103 22 service_latency.go:356] Created: latency-svc-jlrrt
  I1015 09:24:10.990041 22 service_latency.go:363] Got endpoints: latency-svc-9v4cv [751.199281ms]
  I1015 09:24:11.007897 22 service_latency.go:356] Created: latency-svc-xscpp
  I1015 09:24:11.031142 22 service_latency.go:363] Got endpoints: latency-svc-bsjfn [748.894187ms]
  I1015 09:24:11.047380 22 service_latency.go:356] Created: latency-svc-kd9v4
  I1015 09:24:11.081487 22 service_latency.go:363] Got endpoints: latency-svc-lhvpf [750.302568ms]
  I1015 09:24:11.122815 22 service_latency.go:356] Created: latency-svc-s865z
  I1015 09:24:11.131114 22 service_latency.go:363] Got endpoints: latency-svc-sxmtm [747.17914ms]
  I1015 09:24:11.146796 22 service_latency.go:356] Created: latency-svc-cklrq
  I1015 09:24:11.183306 22 service_latency.go:363] Got endpoints: latency-svc-4bwz2 [751.356446ms]
  I1015 09:24:11.207293 22 service_latency.go:356] Created: latency-svc-mdbtm
  I1015 09:24:11.240638 22 service_latency.go:363] Got endpoints: latency-svc-mkjhb [757.546961ms]
  E1015 09:24:11.244505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:24:11.264620 22 service_latency.go:356] Created: latency-svc-blrgq
  I1015 09:24:11.282215 22 service_latency.go:363] Got endpoints: latency-svc-snzcg [736.419121ms]
  I1015 09:24:11.306859 22 service_latency.go:356] Created: latency-svc-vkgpb
  I1015 09:24:11.340064 22 service_latency.go:363] Got endpoints: latency-svc-vhm87 [753.802298ms]
  I1015 09:24:11.378264 22 service_latency.go:356] Created: latency-svc-kjjxp
  I1015 09:24:11.394846 22 service_latency.go:363] Got endpoints: latency-svc-wkxpp [754.25976ms]
  I1015 09:24:11.420999 22 service_latency.go:356] Created: latency-svc-r46bl
  I1015 09:24:11.437452 22 service_latency.go:363] Got endpoints: latency-svc-7v55b [752.66885ms]
  I1015 09:24:11.468896 22 service_latency.go:356] Created: latency-svc-ztpx4
  I1015 09:24:11.483264 22 service_latency.go:363] Got endpoints: latency-svc-7rfvz [744.714951ms]
  I1015 09:24:11.508236 22 service_latency.go:356] Created: latency-svc-vtlq9
  I1015 09:24:11.543710 22 service_latency.go:363] Got endpoints: latency-svc-qk5pn [760.847403ms]
  I1015 09:24:11.573683 22 service_latency.go:356] Created: latency-svc-ss7mg
  I1015 09:24:11.588124 22 service_latency.go:363] Got endpoints: latency-svc-75s78 [758.379361ms]
  I1015 09:24:11.625256 22 service_latency.go:356] Created: latency-svc-42xk9
  I1015 09:24:11.643327 22 service_latency.go:363] Got endpoints: latency-svc-9jw2b [762.942688ms]
  I1015 09:24:11.688106 22 service_latency.go:363] Got endpoints: latency-svc-jlrrt [756.546848ms]
  I1015 09:24:11.689263 22 service_latency.go:356] Created: latency-svc-2t6f5
  I1015 09:24:11.721314 22 service_latency.go:356] Created: latency-svc-ns2z6
  I1015 09:24:11.740322 22 service_latency.go:363] Got endpoints: latency-svc-xscpp [750.166303ms]
  I1015 09:24:11.766642 22 service_latency.go:356] Created: latency-svc-wwxkp
  I1015 09:24:11.783036 22 service_latency.go:363] Got endpoints: latency-svc-kd9v4 [751.797465ms]
  I1015 09:24:11.799809 22 service_latency.go:356] Created: latency-svc-mjptg
  I1015 09:24:11.831854 22 service_latency.go:363] Got endpoints: latency-svc-s865z [748.592028ms]
  I1015 09:24:11.850523 22 service_latency.go:356] Created: latency-svc-vt7kt
  I1015 09:24:11.887719 22 service_latency.go:363] Got endpoints: latency-svc-cklrq [756.528443ms]
  I1015 09:24:11.907478 22 service_latency.go:356] Created: latency-svc-v8ts6
  I1015 09:24:11.929174 22 service_latency.go:363] Got endpoints: latency-svc-mdbtm [745.225138ms]
  I1015 09:24:11.953698 22 service_latency.go:356] Created: latency-svc-qlllh
  I1015 09:24:11.983025 22 service_latency.go:363] Got endpoints: latency-svc-blrgq [742.299759ms]
  I1015 09:24:12.010962 22 service_latency.go:356] Created: latency-svc-8dx88
  I1015 09:24:12.034864 22 service_latency.go:363] Got endpoints: latency-svc-vkgpb [752.571125ms]
  I1015 09:24:12.063386 22 service_latency.go:356] Created: latency-svc-zblkx
  I1015 09:24:12.078871 22 service_latency.go:363] Got endpoints: latency-svc-kjjxp [738.719488ms]
  I1015 09:24:12.103879 22 service_latency.go:356] Created: latency-svc-5pnjm
  I1015 09:24:12.149798 22 service_latency.go:363] Got endpoints: latency-svc-r46bl [754.560142ms]
  I1015 09:24:12.178323 22 service_latency.go:356] Created: latency-svc-hr4jt
  I1015 09:24:12.185290 22 service_latency.go:363] Got endpoints: latency-svc-ztpx4 [747.712623ms]
  I1015 09:24:12.202468 22 service_latency.go:356] Created: latency-svc-26z2h
  I1015 09:24:12.241943 22 service_latency.go:363] Got endpoints: latency-svc-vtlq9 [758.562475ms]
  E1015 09:24:12.248133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:24:12.264537 22 service_latency.go:356] Created: latency-svc-w27km
  I1015 09:24:12.290989 22 service_latency.go:363] Got endpoints: latency-svc-ss7mg [747.130405ms]
  I1015 09:24:12.326894 22 service_latency.go:356] Created: latency-svc-7h8zb
  I1015 09:24:12.348332 22 service_latency.go:363] Got endpoints: latency-svc-42xk9 [759.93615ms]
  I1015 09:24:12.387906 22 service_latency.go:356] Created: latency-svc-kqlzc
  I1015 09:24:12.393766 22 service_latency.go:363] Got endpoints: latency-svc-2t6f5 [750.356375ms]
  I1015 09:24:12.416978 22 service_latency.go:356] Created: latency-svc-ft95h
  I1015 09:24:12.430707 22 service_latency.go:363] Got endpoints: latency-svc-ns2z6 [742.29608ms]
  I1015 09:24:12.471330 22 service_latency.go:356] Created: latency-svc-hbbz6
  I1015 09:24:12.481007 22 service_latency.go:363] Got endpoints: latency-svc-wwxkp [740.558585ms]
  I1015 09:24:12.516658 22 service_latency.go:356] Created: latency-svc-z9hsh
  I1015 09:24:12.534271 22 service_latency.go:363] Got endpoints: latency-svc-mjptg [751.136252ms]
  I1015 09:24:12.582396 22 service_latency.go:356] Created: latency-svc-9829d
  I1015 09:24:12.587376 22 service_latency.go:363] Got endpoints: latency-svc-vt7kt [755.404166ms]
  I1015 09:24:12.638573 22 service_latency.go:356] Created: latency-svc-8zdrk
  I1015 09:24:12.660304 22 service_latency.go:363] Got endpoints: latency-svc-v8ts6 [772.470386ms]
  I1015 09:24:12.695350 22 service_latency.go:363] Got endpoints: latency-svc-qlllh [766.094873ms]
  I1015 09:24:12.698816 22 service_latency.go:356] Created: latency-svc-rglfc
  I1015 09:24:12.719997 22 service_latency.go:356] Created: latency-svc-c4wsj
  I1015 09:24:12.747692 22 service_latency.go:363] Got endpoints: latency-svc-8dx88 [763.76857ms]
  I1015 09:24:12.783824 22 service_latency.go:356] Created: latency-svc-wqhkl
  I1015 09:24:12.784096 22 service_latency.go:363] Got endpoints: latency-svc-zblkx [749.133015ms]
  I1015 09:24:12.817355 22 service_latency.go:356] Created: latency-svc-5vpwq
  I1015 09:24:12.832605 22 service_latency.go:363] Got endpoints: latency-svc-5pnjm [752.431592ms]
  I1015 09:24:12.862254 22 service_latency.go:356] Created: latency-svc-7sjc2
  I1015 09:24:12.884595 22 service_latency.go:363] Got endpoints: latency-svc-hr4jt [732.216047ms]
  I1015 09:24:12.912972 22 service_latency.go:356] Created: latency-svc-r4mw8
  I1015 09:24:12.940970 22 service_latency.go:363] Got endpoints: latency-svc-26z2h [755.572884ms]
  I1015 09:24:12.985423 22 service_latency.go:356] Created: latency-svc-nxglq
  I1015 09:24:12.994301 22 service_latency.go:363] Got endpoints: latency-svc-w27km [751.431928ms]
  I1015 09:24:13.017044 22 service_latency.go:356] Created: latency-svc-bdmxg
  I1015 09:24:13.034406 22 service_latency.go:363] Got endpoints: latency-svc-7h8zb [742.0917ms]
  I1015 09:24:13.078074 22 service_latency.go:356] Created: latency-svc-kxbgv
  I1015 09:24:13.102337 22 service_latency.go:363] Got endpoints: latency-svc-kqlzc [753.850362ms]
  I1015 09:24:13.129135 22 service_latency.go:356] Created: latency-svc-t55ht
  I1015 09:24:13.135652 22 service_latency.go:363] Got endpoints: latency-svc-ft95h [741.51837ms]
  I1015 09:24:13.163285 22 service_latency.go:356] Created: latency-svc-8fwg7
  I1015 09:24:13.183396 22 service_latency.go:363] Got endpoints: latency-svc-hbbz6 [752.107714ms]
  I1015 09:24:13.218251 22 service_latency.go:356] Created: latency-svc-q6ct7
  E1015 09:24:13.247284      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:24:13.254422 22 service_latency.go:363] Got endpoints: latency-svc-z9hsh [773.027641ms]
  I1015 09:24:13.286722 22 service_latency.go:363] Got endpoints: latency-svc-9829d [752.360529ms]
  I1015 09:24:13.313557 22 service_latency.go:356] Created: latency-svc-stsr6
  I1015 09:24:13.326205 22 service_latency.go:356] Created: latency-svc-jz6xn
  I1015 09:24:13.332067 22 service_latency.go:363] Got endpoints: latency-svc-8zdrk [744.557089ms]
  I1015 09:24:13.368435 22 service_latency.go:356] Created: latency-svc-d826b
  I1015 09:24:13.395821 22 service_latency.go:363] Got endpoints: latency-svc-rglfc [735.400185ms]
  I1015 09:24:13.429960 22 service_latency.go:356] Created: latency-svc-h4plk
  I1015 09:24:13.461779 22 service_latency.go:363] Got endpoints: latency-svc-c4wsj [765.873208ms]
  I1015 09:24:13.492323 22 service_latency.go:363] Got endpoints: latency-svc-wqhkl [744.160715ms]
  I1015 09:24:13.506247 22 service_latency.go:356] Created: latency-svc-2zc2c
  I1015 09:24:13.548603 22 service_latency.go:363] Got endpoints: latency-svc-5vpwq [763.556373ms]
  I1015 09:24:13.551610 22 service_latency.go:356] Created: latency-svc-v6lbl
  I1015 09:24:13.597456 22 service_latency.go:356] Created: latency-svc-bnrzc
  I1015 09:24:13.605301 22 service_latency.go:363] Got endpoints: latency-svc-7sjc2 [772.120304ms]
  I1015 09:24:13.672323 22 service_latency.go:363] Got endpoints: latency-svc-r4mw8 [787.394349ms]
  I1015 09:24:13.672829 22 service_latency.go:356] Created: latency-svc-68qdb
  I1015 09:24:13.737714 22 service_latency.go:363] Got endpoints: latency-svc-nxglq [796.665949ms]
  I1015 09:24:13.794736 22 service_latency.go:363] Got endpoints: latency-svc-bdmxg [800.107191ms]
  I1015 09:24:13.812426 22 service_latency.go:356] Created: latency-svc-p9k76
  I1015 09:24:13.819044 22 service_latency.go:363] Got endpoints: latency-svc-kxbgv [784.54476ms]
  I1015 09:24:13.840489 22 service_latency.go:356] Created: latency-svc-9xqqf
  I1015 09:24:13.864461 22 service_latency.go:363] Got endpoints: latency-svc-t55ht [761.994095ms]
  I1015 09:24:13.889417 22 service_latency.go:356] Created: latency-svc-7vqml
  I1015 09:24:13.908773 22 service_latency.go:356] Created: latency-svc-jsd8v
  I1015 09:24:13.915070 22 service_latency.go:363] Got endpoints: latency-svc-8fwg7 [779.034053ms]
  I1015 09:24:13.948808 22 service_latency.go:363] Got endpoints: latency-svc-q6ct7 [765.327062ms]
  I1015 09:24:13.956366 22 service_latency.go:356] Created: latency-svc-9j8lj
  I1015 09:24:13.993134 22 service_latency.go:356] Created: latency-svc-8pqm5
  I1015 09:24:14.011872 22 service_latency.go:363] Got endpoints: latency-svc-stsr6 [757.332033ms]
  I1015 09:24:14.038640 22 service_latency.go:356] Created: latency-svc-msrmw
  I1015 09:24:14.039260 22 service_latency.go:363] Got endpoints: latency-svc-jz6xn [752.341083ms]
  I1015 09:24:14.063298 22 service_latency.go:356] Created: latency-svc-mxgxj
  I1015 09:24:14.073845 22 service_latency.go:356] Created: latency-svc-rgjj8
  I1015 09:24:14.089097 22 service_latency.go:363] Got endpoints: latency-svc-d826b [756.769747ms]
  I1015 09:24:14.137892 22 service_latency.go:356] Created: latency-svc-tcn5k
  I1015 09:24:14.138792 22 service_latency.go:363] Got endpoints: latency-svc-h4plk [742.839184ms]
  I1015 09:24:14.170112 22 service_latency.go:356] Created: latency-svc-z4qt5
  I1015 09:24:14.180489 22 service_latency.go:363] Got endpoints: latency-svc-2zc2c [718.607763ms]
  I1015 09:24:14.205136 22 service_latency.go:356] Created: latency-svc-nkbzl
  E1015 09:24:14.247816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:24:14.250839 22 service_latency.go:363] Got endpoints: latency-svc-v6lbl [757.922313ms]
  I1015 09:24:14.294873 22 service_latency.go:363] Got endpoints: latency-svc-bnrzc [746.024691ms]
  I1015 09:24:14.305213 22 service_latency.go:356] Created: latency-svc-22m56
  I1015 09:24:14.326907 22 service_latency.go:356] Created: latency-svc-n4g7x
  I1015 09:24:14.350559 22 service_latency.go:363] Got endpoints: latency-svc-68qdb [745.137994ms]
  I1015 09:24:14.383534 22 service_latency.go:356] Created: latency-svc-vg8pd
  I1015 09:24:14.392683 22 service_latency.go:363] Got endpoints: latency-svc-p9k76 [720.152718ms]
  I1015 09:24:14.416214 22 service_latency.go:356] Created: latency-svc-px4s9
  I1015 09:24:14.433671 22 service_latency.go:363] Got endpoints: latency-svc-9xqqf [695.839358ms]
  I1015 09:24:14.461360 22 service_latency.go:356] Created: latency-svc-jsp6f
  I1015 09:24:14.491091 22 service_latency.go:363] Got endpoints: latency-svc-7vqml [696.238682ms]
  I1015 09:24:14.513145 22 service_latency.go:356] Created: latency-svc-xbtch
  I1015 09:24:14.537405 22 service_latency.go:363] Got endpoints: latency-svc-jsd8v [718.116038ms]
  I1015 09:24:14.579743 22 service_latency.go:356] Created: latency-svc-mmvgd
  I1015 09:24:14.586982 22 service_latency.go:363] Got endpoints: latency-svc-9j8lj [722.044642ms]
  I1015 09:24:14.617816 22 service_latency.go:356] Created: latency-svc-skj9s
  I1015 09:24:14.637921 22 service_latency.go:363] Got endpoints: latency-svc-8pqm5 [722.758214ms]
  I1015 09:24:14.660394 22 service_latency.go:356] Created: latency-svc-4wcqv
  I1015 09:24:14.685002 22 service_latency.go:363] Got endpoints: latency-svc-msrmw [736.068666ms]
  I1015 09:24:14.710753 22 service_latency.go:356] Created: latency-svc-fnwzr
  I1015 09:24:14.732480 22 service_latency.go:363] Got endpoints: latency-svc-mxgxj [720.48697ms]
  I1015 09:24:14.747382 22 service_latency.go:356] Created: latency-svc-kc9qj
  I1015 09:24:14.783352 22 service_latency.go:363] Got endpoints: latency-svc-rgjj8 [744.014549ms]
  I1015 09:24:14.805440 22 service_latency.go:356] Created: latency-svc-997ws
  I1015 09:24:14.830023 22 service_latency.go:363] Got endpoints: latency-svc-tcn5k [740.821106ms]
  I1015 09:24:14.846177 22 service_latency.go:356] Created: latency-svc-m8s6g
  I1015 09:24:14.887153 22 service_latency.go:363] Got endpoints: latency-svc-z4qt5 [748.29085ms]
  I1015 09:24:14.920035 22 service_latency.go:356] Created: latency-svc-7f8v4
  I1015 09:24:14.932134 22 service_latency.go:363] Got endpoints: latency-svc-nkbzl [751.540957ms]
  I1015 09:24:14.952880 22 service_latency.go:356] Created: latency-svc-glt4p
  I1015 09:24:14.980505 22 service_latency.go:363] Got endpoints: latency-svc-22m56 [728.810374ms]
  I1015 09:24:15.041827 22 service_latency.go:363] Got endpoints: latency-svc-n4g7x [746.550869ms]
  I1015 09:24:15.042698 22 service_latency.go:356] Created: latency-svc-rvksl
  I1015 09:24:15.058185 22 service_latency.go:356] Created: latency-svc-xdd8l
  I1015 09:24:15.090076 22 service_latency.go:363] Got endpoints: latency-svc-vg8pd [739.172779ms]
  I1015 09:24:15.113342 22 service_latency.go:356] Created: latency-svc-nc6wm
  I1015 09:24:15.132480 22 service_latency.go:363] Got endpoints: latency-svc-px4s9 [739.662028ms]
  I1015 09:24:15.152196 22 service_latency.go:356] Created: latency-svc-6dt4h
  I1015 09:24:15.181205 22 service_latency.go:363] Got endpoints: latency-svc-jsp6f [747.406105ms]
  I1015 09:24:15.204335 22 service_latency.go:356] Created: latency-svc-dz9cj
  I1015 09:24:15.229881 22 service_latency.go:363] Got endpoints: latency-svc-xbtch [738.673768ms]
  I1015 09:24:15.253126 22 service_latency.go:356] Created: latency-svc-gw4nn
  E1015 09:24:15.256099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:24:15.292930 22 service_latency.go:363] Got endpoints: latency-svc-mmvgd [755.161241ms]
  I1015 09:24:15.320594 22 service_latency.go:356] Created: latency-svc-66fjm
  I1015 09:24:15.329914 22 service_latency.go:363] Got endpoints: latency-svc-skj9s [742.856822ms]
  I1015 09:24:15.368411 22 service_latency.go:356] Created: latency-svc-qnht4
  I1015 09:24:15.383153 22 service_latency.go:363] Got endpoints: latency-svc-4wcqv [744.949434ms]
  I1015 09:24:15.407021 22 service_latency.go:356] Created: latency-svc-89l6f
  I1015 09:24:15.429498 22 service_latency.go:363] Got endpoints: latency-svc-fnwzr [743.707744ms]
  I1015 09:24:15.450830 22 service_latency.go:356] Created: latency-svc-gbcfz
  I1015 09:24:15.485089 22 service_latency.go:363] Got endpoints: latency-svc-kc9qj [752.531234ms]
  I1015 09:24:15.515076 22 service_latency.go:356] Created: latency-svc-jflvh
  I1015 09:24:15.533865 22 service_latency.go:363] Got endpoints: latency-svc-997ws [750.220747ms]
  I1015 09:24:15.561075 22 service_latency.go:356] Created: latency-svc-f4frx
  I1015 09:24:15.602929 22 service_latency.go:363] Got endpoints: latency-svc-m8s6g [772.798762ms]
  I1015 09:24:15.621927 22 service_latency.go:356] Created: latency-svc-xcjzv
  I1015 09:24:15.629779 22 service_latency.go:363] Got endpoints: latency-svc-7f8v4 [742.549386ms]
  I1015 09:24:15.649513 22 service_latency.go:356] Created: latency-svc-rskc6
  I1015 09:24:15.681657 22 service_latency.go:363] Got endpoints: latency-svc-glt4p [749.425002ms]
  I1015 09:24:15.701344 22 service_latency.go:356] Created: latency-svc-ddlft
  I1015 09:24:15.732874 22 service_latency.go:363] Got endpoints: latency-svc-rvksl [752.272327ms]
  I1015 09:24:15.750770 22 service_latency.go:356] Created: latency-svc-txjjv
  I1015 09:24:15.784355 22 service_latency.go:363] Got endpoints: latency-svc-xdd8l [741.574745ms]
  I1015 09:24:15.803030 22 service_latency.go:356] Created: latency-svc-ht7fr
  I1015 09:24:15.829631 22 service_latency.go:363] Got endpoints: latency-svc-nc6wm [739.125459ms]
  I1015 09:24:15.846269 22 service_latency.go:356] Created: latency-svc-szzl4
  I1015 09:24:15.882487 22 service_latency.go:363] Got endpoints: latency-svc-6dt4h [749.886306ms]
  I1015 09:24:15.912223 22 service_latency.go:356] Created: latency-svc-vzzqf
  I1015 09:24:15.933767 22 service_latency.go:363] Got endpoints: latency-svc-dz9cj [752.444298ms]
  I1015 09:24:15.951151 22 service_latency.go:356] Created: latency-svc-w2rvn
  I1015 09:24:15.980809 22 service_latency.go:363] Got endpoints: latency-svc-gw4nn [750.787913ms]
  I1015 09:24:16.005762 22 service_latency.go:356] Created: latency-svc-kpdhs
  I1015 09:24:16.042030 22 service_latency.go:363] Got endpoints: latency-svc-66fjm [748.994579ms]
  I1015 09:24:16.065448 22 service_latency.go:356] Created: latency-svc-7zwxv
  I1015 09:24:16.082359 22 service_latency.go:363] Got endpoints: latency-svc-qnht4 [752.374117ms]
  I1015 09:24:16.099183 22 service_latency.go:356] Created: latency-svc-6tj92
  I1015 09:24:16.131954 22 service_latency.go:363] Got endpoints: latency-svc-89l6f [748.242364ms]
  I1015 09:24:16.152771 22 service_latency.go:356] Created: latency-svc-dwbj4
  I1015 09:24:16.181193 22 service_latency.go:363] Got endpoints: latency-svc-gbcfz [751.583074ms]
  I1015 09:24:16.206301 22 service_latency.go:356] Created: latency-svc-vwvc9
  I1015 09:24:16.232404 22 service_latency.go:363] Got endpoints: latency-svc-jflvh [746.184971ms]
  I1015 09:24:16.248270 22 service_latency.go:356] Created: latency-svc-t9l9p
  E1015 09:24:16.256146      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:24:16.282639 22 service_latency.go:363] Got endpoints: latency-svc-f4frx [747.56821ms]
  I1015 09:24:16.294748 22 service_latency.go:356] Created: latency-svc-fbzqd
  I1015 09:24:16.331225 22 service_latency.go:363] Got endpoints: latency-svc-xcjzv [728.210895ms]
  I1015 09:24:16.357248 22 service_latency.go:356] Created: latency-svc-6l6jm
  I1015 09:24:16.381154 22 service_latency.go:363] Got endpoints: latency-svc-rskc6 [751.015068ms]
  I1015 09:24:16.420955 22 service_latency.go:356] Created: latency-svc-qdtf8
  I1015 09:24:16.442201 22 service_latency.go:363] Got endpoints: latency-svc-ddlft [760.452025ms]
  I1015 09:24:16.499306 22 service_latency.go:356] Created: latency-svc-6lfl8
  I1015 09:24:16.500607 22 service_latency.go:363] Got endpoints: latency-svc-txjjv [767.661138ms]
  I1015 09:24:16.541738 22 service_latency.go:363] Got endpoints: latency-svc-ht7fr [756.860346ms]
  I1015 09:24:16.579681 22 service_latency.go:363] Got endpoints: latency-svc-szzl4 [749.56412ms]
  I1015 09:24:16.640677 22 service_latency.go:363] Got endpoints: latency-svc-vzzqf [757.881098ms]
  I1015 09:24:16.685273 22 service_latency.go:363] Got endpoints: latency-svc-w2rvn [750.658975ms]
  I1015 09:24:16.735343 22 service_latency.go:363] Got endpoints: latency-svc-kpdhs [754.39822ms]
  I1015 09:24:16.784740 22 service_latency.go:363] Got endpoints: latency-svc-7zwxv [742.634954ms]
  I1015 09:24:16.839090 22 service_latency.go:363] Got endpoints: latency-svc-6tj92 [756.650219ms]
  I1015 09:24:16.887769 22 service_latency.go:363] Got endpoints: latency-svc-dwbj4 [755.172211ms]
  I1015 09:24:16.932475 22 service_latency.go:363] Got endpoints: latency-svc-vwvc9 [751.184036ms]
  I1015 09:24:16.980841 22 service_latency.go:363] Got endpoints: latency-svc-t9l9p [748.277131ms]
  I1015 09:24:17.031059 22 service_latency.go:363] Got endpoints: latency-svc-fbzqd [748.346132ms]
  I1015 09:24:17.082186 22 service_latency.go:363] Got endpoints: latency-svc-6l6jm [750.859009ms]
  I1015 09:24:17.134472 22 service_latency.go:363] Got endpoints: latency-svc-qdtf8 [752.657582ms]
  I1015 09:24:17.182082 22 service_latency.go:363] Got endpoints: latency-svc-6lfl8 [739.786217ms]
  I1015 09:24:17.182399 22 service_latency.go:114] Latencies: [73.141535ms 77.923093ms 107.234647ms 117.832744ms 125.550014ms 126.375328ms 130.596787ms 131.619771ms 143.655684ms 154.161444ms 155.0308ms 163.291194ms 167.266224ms 175.323793ms 185.627234ms 212.282665ms 231.100255ms 239.013922ms 243.009171ms 246.850673ms 259.65933ms 263.335279ms 264.239856ms 267.958327ms 271.201195ms 274.269898ms 287.811441ms 294.662476ms 300.032402ms 305.52409ms 307.112761ms 316.318402ms 319.051959ms 329.303855ms 332.397301ms 333.270539ms 336.750203ms 342.014491ms 342.148742ms 342.899108ms 343.634001ms 365.876388ms 366.267829ms 374.662161ms 387.863337ms 401.425102ms 403.5098ms 422.909263ms 428.580488ms 436.886003ms 481.668555ms 515.001999ms 566.330727ms 599.105343ms 613.730634ms 648.916821ms 686.005504ms 695.839358ms 696.238682ms 709.698934ms 712.493041ms 713.265525ms 714.227493ms 718.116038ms 718.607763ms 720.152718ms 720.48697ms 722.044642ms 722.758214ms 727.971868ms 728.210895ms 728.810374ms 730.096244ms 732.216047ms 734.87341ms 735.400185ms 736.068666ms 736.419121ms 737.421888ms 737.811309ms 738.673768ms 738.719488ms 739.125459ms 739.172779ms 739.662028ms 739.786217ms 740.558585ms 740.821106ms 741.51837ms 741.574745ms 742.0917ms 742.29608ms 742.299759ms 742.549386ms 742.634954ms 742.839184ms 742.856822ms 743.046255ms 743.326215ms 743.707744ms 744.014549ms 744.160715ms 744.557089ms 744.714951ms 744.87557ms 744.949434ms 745.132497ms 745.137994ms 745.225138ms 745.987334ms 746.024691ms 746.140201ms 746.184971ms 746.550869ms 747.130405ms 747.17914ms 747.406105ms 747.56821ms 747.712623ms 748.242364ms 748.277131ms 748.29085ms 748.346132ms 748.592028ms 748.894187ms 748.994579ms 749.133015ms 749.425002ms 749.56412ms 749.886306ms 750.166303ms 750.220747ms 750.302568ms 750.356375ms 750.658975ms 750.787913ms 750.859009ms 751.015068ms 751.136252ms 751.184036ms 751.199281ms 751.356446ms 751.431928ms 751.540957ms 751.583074ms 751.797465ms 752.107714ms 752.219699ms 752.272327ms 752.341083ms 752.360529ms 752.374117ms 752.431592ms 752.444298ms 752.531234ms 752.571125ms 752.657582ms 752.66885ms 753.802298ms 753.850362ms 753.918776ms 754.25976ms 754.39822ms 754.560142ms 755.161241ms 755.172211ms 755.404166ms 755.572884ms 756.528443ms 756.546848ms 756.650219ms 756.769747ms 756.860346ms 757.332033ms 757.546961ms 757.881098ms 757.904525ms 757.922313ms 758.379361ms 758.562475ms 759.93615ms 760.452025ms 760.847403ms 761.994095ms 762.942688ms 763.556373ms 763.76857ms 765.327062ms 765.873208ms 766.094873ms 767.661138ms 772.120304ms 772.470386ms 772.798762ms 773.027641ms 779.034053ms 784.54476ms 787.394349ms 796.665949ms 800.107191ms]
  I1015 09:24:17.182470 22 service_latency.go:118] 50 %ile: 744.014549ms
  I1015 09:24:17.182495 22 service_latency.go:119] 90 %ile: 759.93615ms
  I1015 09:24:17.182510 22 service_latency.go:120] 99 %ile: 796.665949ms
  I1015 09:24:17.182524 22 service_latency.go:121] Total sample count: 200
  I1015 09:24:17.182624 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-9498" for this suite. @ 10/15/24 09:24:17.202
• [10.993 seconds]
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 10/15/24 09:24:17.216
  I1015 09:24:17.216314 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename container-probe @ 10/15/24 09:24:17.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:24:17.249
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:24:17.254
  E1015 09:24:17.256578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating pod test-grpc-2e8af443-61bb-40e3-b897-22ef51a8787a in namespace container-probe-2744 @ 10/15/24 09:24:17.262
  E1015 09:24:18.257623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:24:19.257711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/15/24 09:24:19.3
  I1015 09:24:19.309010 22 container_probe.go:1749] Initial restart count of pod test-grpc-2e8af443-61bb-40e3-b897-22ef51a8787a is 0
  I1015 09:24:19.322642 22 container_probe.go:1759] Get pod test-grpc-2e8af443-61bb-40e3-b897-22ef51a8787a in namespace container-probe-2744
  E1015 09:24:20.259025      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:24:21.259584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:24:21.337645 22 container_probe.go:1759] Get pod test-grpc-2e8af443-61bb-40e3-b897-22ef51a8787a in namespace container-probe-2744
  E1015 09:24:22.259920      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:24:23.260893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:24:23.363777 22 container_probe.go:1759] Get pod test-grpc-2e8af443-61bb-40e3-b897-22ef51a8787a in namespace container-probe-2744
  E1015 09:24:24.261040      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:24:25.262280      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:24:25.377291 22 container_probe.go:1759] Get pod test-grpc-2e8af443-61bb-40e3-b897-22ef51a8787a in namespace container-probe-2744
  E1015 09:24:26.263117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:24:27.264049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:24:27.405370 22 container_probe.go:1759] Get pod test-grpc-2e8af443-61bb-40e3-b897-22ef51a8787a in namespace container-probe-2744
  E1015 09:24:28.264698      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:24:29.264715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:24:29.414912 22 container_probe.go:1759] Get pod test-grpc-2e8af443-61bb-40e3-b897-22ef51a8787a in namespace container-probe-2744
  E1015 09:24:30.264911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:24:31.265655      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:24:31.427626 22 container_probe.go:1759] Get pod test-grpc-2e8af443-61bb-40e3-b897-22ef51a8787a in namespace container-probe-2744
  E1015 09:24:32.266350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:24:33.266371      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:24:33.455106 22 container_probe.go:1759] Get pod test-grpc-2e8af443-61bb-40e3-b897-22ef51a8787a in namespace container-probe-2744
  E1015 09:24:34.267462      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:24:35.268545      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:24:35.489141 22 container_probe.go:1759] Get pod test-grpc-2e8af443-61bb-40e3-b897-22ef51a8787a in namespace container-probe-2744
  E1015 09:24:36.269579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:24:37.269918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:24:37.496311 22 container_probe.go:1759] Get pod test-grpc-2e8af443-61bb-40e3-b897-22ef51a8787a in namespace container-probe-2744
  E1015 09:24:38.270925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:24:39.270976      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:24:39.506278 22 container_probe.go:1759] Get pod test-grpc-2e8af443-61bb-40e3-b897-22ef51a8787a in namespace container-probe-2744
  E1015 09:24:40.271372      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:24:41.271301      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:24:41.516673 22 container_probe.go:1759] Get pod test-grpc-2e8af443-61bb-40e3-b897-22ef51a8787a in namespace container-probe-2744
  E1015 09:24:42.271506      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:24:43.271912      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:24:43.526771 22 container_probe.go:1759] Get pod test-grpc-2e8af443-61bb-40e3-b897-22ef51a8787a in namespace container-probe-2744
  E1015 09:24:44.271886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:24:45.272934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:24:45.536592 22 container_probe.go:1759] Get pod test-grpc-2e8af443-61bb-40e3-b897-22ef51a8787a in namespace container-probe-2744
  E1015 09:24:46.273282      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:24:47.273988      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:24:47.548465 22 container_probe.go:1759] Get pod test-grpc-2e8af443-61bb-40e3-b897-22ef51a8787a in namespace container-probe-2744
  E1015 09:24:48.274356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:24:49.275239      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:24:49.564241 22 container_probe.go:1759] Get pod test-grpc-2e8af443-61bb-40e3-b897-22ef51a8787a in namespace container-probe-2744
  E1015 09:24:50.275810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:24:51.276874      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:24:51.574001 22 container_probe.go:1759] Get pod test-grpc-2e8af443-61bb-40e3-b897-22ef51a8787a in namespace container-probe-2744
  E1015 09:24:52.278046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:24:53.278504      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:24:53.583696 22 container_probe.go:1759] Get pod test-grpc-2e8af443-61bb-40e3-b897-22ef51a8787a in namespace container-probe-2744
  E1015 09:24:54.278831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:24:55.279121      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:24:55.593442 22 container_probe.go:1759] Get pod test-grpc-2e8af443-61bb-40e3-b897-22ef51a8787a in namespace container-probe-2744
  E1015 09:24:56.280130      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:24:57.280509      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:24:57.603494 22 container_probe.go:1759] Get pod test-grpc-2e8af443-61bb-40e3-b897-22ef51a8787a in namespace container-probe-2744
  E1015 09:24:58.281507      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:24:59.281658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:24:59.612540 22 container_probe.go:1759] Get pod test-grpc-2e8af443-61bb-40e3-b897-22ef51a8787a in namespace container-probe-2744
  E1015 09:25:00.282477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:25:01.283268      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:25:01.625179 22 container_probe.go:1759] Get pod test-grpc-2e8af443-61bb-40e3-b897-22ef51a8787a in namespace container-probe-2744
  E1015 09:25:02.283566      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:25:03.284016      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:25:03.635117 22 container_probe.go:1759] Get pod test-grpc-2e8af443-61bb-40e3-b897-22ef51a8787a in namespace container-probe-2744
  E1015 09:25:04.284246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:25:05.284485      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:25:05.645502 22 container_probe.go:1759] Get pod test-grpc-2e8af443-61bb-40e3-b897-22ef51a8787a in namespace container-probe-2744
  E1015 09:25:06.285159      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:25:07.285190      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:25:07.680749 22 container_probe.go:1759] Get pod test-grpc-2e8af443-61bb-40e3-b897-22ef51a8787a in namespace container-probe-2744
  E1015 09:25:08.286255      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:25:09.286596      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:25:09.691487 22 container_probe.go:1759] Get pod test-grpc-2e8af443-61bb-40e3-b897-22ef51a8787a in namespace container-probe-2744
  E1015 09:25:10.286810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:25:11.287251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:25:11.702371 22 container_probe.go:1759] Get pod test-grpc-2e8af443-61bb-40e3-b897-22ef51a8787a in namespace container-probe-2744
  E1015 09:25:12.287249      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:25:13.287401      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:25:13.711967 22 container_probe.go:1759] Get pod test-grpc-2e8af443-61bb-40e3-b897-22ef51a8787a in namespace container-probe-2744
  E1015 09:25:14.287724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:25:15.288228      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:25:15.721566 22 container_probe.go:1759] Get pod test-grpc-2e8af443-61bb-40e3-b897-22ef51a8787a in namespace container-probe-2744
  E1015 09:25:16.288519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:25:17.288845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:25:17.749341 22 container_probe.go:1759] Get pod test-grpc-2e8af443-61bb-40e3-b897-22ef51a8787a in namespace container-probe-2744
  E1015 09:25:18.289101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:25:19.289394      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:25:19.755999 22 container_probe.go:1759] Get pod test-grpc-2e8af443-61bb-40e3-b897-22ef51a8787a in namespace container-probe-2744
  E1015 09:25:20.289697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:25:21.290038      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:25:21.769388 22 container_probe.go:1759] Get pod test-grpc-2e8af443-61bb-40e3-b897-22ef51a8787a in namespace container-probe-2744
  E1015 09:25:22.290476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:25:23.291635      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:25:23.782158 22 container_probe.go:1759] Get pod test-grpc-2e8af443-61bb-40e3-b897-22ef51a8787a in namespace container-probe-2744
  E1015 09:25:24.291844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:25:25.292008      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:25:25.793468 22 container_probe.go:1759] Get pod test-grpc-2e8af443-61bb-40e3-b897-22ef51a8787a in namespace container-probe-2744
  E1015 09:25:26.292666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:25:27.292931      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:25:27.802199 22 container_probe.go:1759] Get pod test-grpc-2e8af443-61bb-40e3-b897-22ef51a8787a in namespace container-probe-2744
  E1015 09:25:28.293358      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:25:29.294244      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:25:29.812874 22 container_probe.go:1759] Get pod test-grpc-2e8af443-61bb-40e3-b897-22ef51a8787a in namespace container-probe-2744
  E1015 09:25:30.294549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:25:31.294803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:25:31.826605 22 container_probe.go:1759] Get pod test-grpc-2e8af443-61bb-40e3-b897-22ef51a8787a in namespace container-probe-2744
  E1015 09:25:32.295858      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:25:33.296880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:25:33.841682 22 container_probe.go:1759] Get pod test-grpc-2e8af443-61bb-40e3-b897-22ef51a8787a in namespace container-probe-2744
  I1015 09:25:33.841895 22 container_probe.go:1763] Restart count of pod container-probe-2744/test-grpc-2e8af443-61bb-40e3-b897-22ef51a8787a is now 1 (1m14.532347742s elapsed)
  STEP: deleting the pod @ 10/15/24 09:25:33.842
  I1015 09:25:33.876123 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2744" for this suite. @ 10/15/24 09:25:33.901
• [76.711 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 10/15/24 09:25:33.928
  I1015 09:25:33.928277 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename emptydir @ 10/15/24 09:25:33.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:25:33.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:25:33.984
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 10/15/24 09:25:33.993
  E1015 09:25:34.297188      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:25:35.297327      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:25:36.297494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:25:37.298109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:25:38.299216      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:25:39.299628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 09:25:40.106
  I1015 09:25:40.119707 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-caf6c87c-5ef7-408f-9cf1-60b9f7b78641 container test-container: <nil>
  STEP: delete the pod @ 10/15/24 09:25:40.172
  I1015 09:25:40.222149 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5442" for this suite. @ 10/15/24 09:25:40.236
• [6.343 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1759
  STEP: Creating a kubernetes client @ 10/15/24 09:25:40.278
  I1015 09:25:40.279593 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename kubectl @ 10/15/24 09:25:40.283
  E1015 09:25:40.300807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:25:40.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:25:40.375
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 10/15/24 09:25:40.393
  I1015 09:25:40.393957 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-7030 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I1015 09:25:40.588435 22 builder.go:146] stderr: ""
  I1015 09:25:40.588897 22 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 10/15/24 09:25:40.588
  I1015 09:25:40.597061 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-7030 delete pods e2e-test-httpd-pod'
  E1015 09:25:41.300964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:25:42.301380      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:25:43.301922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:25:43.571700 22 builder.go:146] stderr: ""
  I1015 09:25:43.571776 22 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1015 09:25:43.571950 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7030" for this suite. @ 10/15/24 09:25:43.583
• [3.323 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 10/15/24 09:25:43.603
  I1015 09:25:43.603910 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename endpointslice @ 10/15/24 09:25:43.606
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:25:43.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:25:43.646
  I1015 09:25:43.671726 22 endpointslice.go:1045] Endpoints addresses: [10.61.1.197 10.61.1.198 10.61.1.199] , ports: [6443]
  I1015 09:25:43.672811 22 endpointslice.go:1075] EndpointSlices addresses: [10.61.1.197 10.61.1.198 10.61.1.199] , ports: [6443]
  I1015 09:25:43.673963 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-2794" for this suite. @ 10/15/24 09:25:43.693
• [0.131 seconds]
------------------------------
SS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 10/15/24 09:25:43.739
  I1015 09:25:43.739946 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename hostport @ 10/15/24 09:25:43.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:25:43.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:25:43.817
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 10/15/24 09:25:43.837
  E1015 09:25:44.303027      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:25:45.303152      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:25:46.303697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:25:47.303889      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 10.61.1.201 on the node which pod1 resides and expect scheduled @ 10/15/24 09:25:47.893
  E1015 09:25:48.304977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:25:49.305997      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:25:50.307031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:25:51.307572      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 10.61.1.201 but use UDP protocol on the node which pod2 resides @ 10/15/24 09:25:51.946
  E1015 09:25:52.307854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:25:53.308703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:25:54.309658      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:25:55.310006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:25:56.310765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:25:57.311096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 10/15/24 09:25:58.037
  I1015 09:25:58.037456 22 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 10.61.1.201 http://127.0.0.1:54323/hostname] Namespace:hostport-4569 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1015 09:25:58.037604 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  I1015 09:25:58.039632 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I1015 09:25:58.039851 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-4569/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+10.61.1.201+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.61.1.201, port: 54323 @ 10/15/24 09:25:58.261
  I1015 09:25:58.261639 22 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://10.61.1.201:54323/hostname] Namespace:hostport-4569 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1015 09:25:58.261688 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  I1015 09:25:58.263480 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I1015 09:25:58.263696 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-4569/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F10.61.1.201%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E1015 09:25:58.312266      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 10.61.1.201, port: 54323 UDP @ 10/15/24 09:25:58.512
  I1015 09:25:58.512177 22 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 10.61.1.201 54323] Namespace:hostport-4569 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1015 09:25:58.512223 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  I1015 09:25:58.513743 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I1015 09:25:58.513874 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-4569/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+10.61.1.201+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  E1015 09:25:59.312750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:00.312712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:01.313213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:02.313378      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:03.319725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:26:03.678303 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-4569" for this suite. @ 10/15/24 09:26:03.695
• [19.978 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 10/15/24 09:26:03.717
  I1015 09:26:03.717775 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename pods @ 10/15/24 09:26:03.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:26:03.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:26:03.767
  STEP: Create a pod @ 10/15/24 09:26:03.774
  E1015 09:26:04.320324      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:05.320752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 10/15/24 09:26:05.84
  I1015 09:26:05.864563 22 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I1015 09:26:05.864813 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-979" for this suite. @ 10/15/24 09:26:05.884
• [2.182 seconds]
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 10/15/24 09:26:05.899
  I1015 09:26:05.900016 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename field-validation @ 10/15/24 09:26:05.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:26:05.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:26:05.948
  I1015 09:26:05.953693 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  W1015 09:26:05.955751      22 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc00501d7f0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E1015 09:26:06.320793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:07.321162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:08.321210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:09.321350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:10.322349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:11.322473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:12.322854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:13.323558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  W1015 09:26:13.710528      22 warnings.go:70] unknown field "alpha"
  W1015 09:26:13.710606      22 warnings.go:70] unknown field "beta"
  W1015 09:26:13.710620      22 warnings.go:70] unknown field "delta"
  W1015 09:26:13.710631      22 warnings.go:70] unknown field "epsilon"
  W1015 09:26:13.710718      22 warnings.go:70] unknown field "gamma"
  E1015 09:26:14.324196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:26:14.345300 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6998" for this suite. @ 10/15/24 09:26:14.362
• [8.485 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1368
  STEP: Creating a kubernetes client @ 10/15/24 09:26:14.388
  I1015 09:26:14.388515 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename kubectl @ 10/15/24 09:26:14.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:26:14.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:26:14.456
  STEP: validating cluster-info @ 10/15/24 09:26:14.463
  I1015 09:26:14.463603 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-9690 cluster-info'
  I1015 09:26:14.644650 22 builder.go:146] stderr: ""
  I1015 09:26:14.644784 22 builder.go:147] stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.233.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I1015 09:26:14.645017 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9690" for this suite. @ 10/15/24 09:26:14.653
• [0.284 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 10/15/24 09:26:14.672
  I1015 09:26:14.672217 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename gc @ 10/15/24 09:26:14.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:26:14.719
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:26:14.729
  STEP: create the rc @ 10/15/24 09:26:14.755
  W1015 09:26:14.778363      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1015 09:26:15.325174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:16.326032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:17.326555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:18.327745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:19.328145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:20.329732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 10/15/24 09:26:20.81
  STEP: wait for the rc to be deleted @ 10/15/24 09:26:20.889
  E1015 09:26:21.330902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:22.331210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:23.331329      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:24.331670      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:25.332109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 10/15/24 09:26:25.895
  E1015 09:26:26.336540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:27.337304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:28.339576      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:29.341942      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:30.342496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:31.343280      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:32.343506      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:33.344355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:34.344677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:35.344941      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:36.345627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:37.346153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:38.346867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:39.347486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:40.347763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:41.348159      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:42.348439      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:43.349374      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:44.349565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:45.349902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:46.349944      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:47.350558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:48.351490      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:49.351622      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:50.351677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:51.352775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:52.352922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:53.353093      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:54.353886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:26:55.354365      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 10/15/24 09:26:55.923
  I1015 09:26:56.093215 22 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1015 09:26:56.097028 22 delete.go:95] Deleting pod "simpletest.rc-26ptc" in namespace "gc-6794"
  I1015 09:26:56.120322 22 delete.go:95] Deleting pod "simpletest.rc-2qtqz" in namespace "gc-6794"
  I1015 09:26:56.151783 22 delete.go:95] Deleting pod "simpletest.rc-45bv5" in namespace "gc-6794"
  I1015 09:26:56.193104 22 delete.go:95] Deleting pod "simpletest.rc-468f5" in namespace "gc-6794"
  I1015 09:26:56.242603 22 delete.go:95] Deleting pod "simpletest.rc-48l4h" in namespace "gc-6794"
  I1015 09:26:56.269906 22 delete.go:95] Deleting pod "simpletest.rc-4kdld" in namespace "gc-6794"
  I1015 09:26:56.300595 22 delete.go:95] Deleting pod "simpletest.rc-4kgjp" in namespace "gc-6794"
  E1015 09:26:56.355211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:26:56.356905 22 delete.go:95] Deleting pod "simpletest.rc-56lr9" in namespace "gc-6794"
  I1015 09:26:56.396442 22 delete.go:95] Deleting pod "simpletest.rc-5dhzq" in namespace "gc-6794"
  I1015 09:26:56.427263 22 delete.go:95] Deleting pod "simpletest.rc-5l62h" in namespace "gc-6794"
  I1015 09:26:56.458208 22 delete.go:95] Deleting pod "simpletest.rc-5pntp" in namespace "gc-6794"
  I1015 09:26:56.489578 22 delete.go:95] Deleting pod "simpletest.rc-5rgxf" in namespace "gc-6794"
  I1015 09:26:56.518690 22 delete.go:95] Deleting pod "simpletest.rc-67t8d" in namespace "gc-6794"
  I1015 09:26:56.546365 22 delete.go:95] Deleting pod "simpletest.rc-6d4qt" in namespace "gc-6794"
  I1015 09:26:56.598521 22 delete.go:95] Deleting pod "simpletest.rc-6ffjv" in namespace "gc-6794"
  I1015 09:26:56.638964 22 delete.go:95] Deleting pod "simpletest.rc-6jtcp" in namespace "gc-6794"
  I1015 09:26:56.675979 22 delete.go:95] Deleting pod "simpletest.rc-6rm2q" in namespace "gc-6794"
  I1015 09:26:56.718403 22 delete.go:95] Deleting pod "simpletest.rc-6tn8f" in namespace "gc-6794"
  I1015 09:26:56.748090 22 delete.go:95] Deleting pod "simpletest.rc-6zfvs" in namespace "gc-6794"
  I1015 09:26:56.785480 22 delete.go:95] Deleting pod "simpletest.rc-7fhzm" in namespace "gc-6794"
  I1015 09:26:56.816022 22 delete.go:95] Deleting pod "simpletest.rc-7hlvv" in namespace "gc-6794"
  I1015 09:26:56.837726 22 delete.go:95] Deleting pod "simpletest.rc-8xhfc" in namespace "gc-6794"
  I1015 09:26:56.888194 22 delete.go:95] Deleting pod "simpletest.rc-99flj" in namespace "gc-6794"
  I1015 09:26:56.953423 22 delete.go:95] Deleting pod "simpletest.rc-9bnxk" in namespace "gc-6794"
  I1015 09:26:57.001793 22 delete.go:95] Deleting pod "simpletest.rc-9mpn7" in namespace "gc-6794"
  I1015 09:26:57.043286 22 delete.go:95] Deleting pod "simpletest.rc-9n522" in namespace "gc-6794"
  I1015 09:26:57.072842 22 delete.go:95] Deleting pod "simpletest.rc-b7hkp" in namespace "gc-6794"
  I1015 09:26:57.112869 22 delete.go:95] Deleting pod "simpletest.rc-b8nt8" in namespace "gc-6794"
  I1015 09:26:57.145696 22 delete.go:95] Deleting pod "simpletest.rc-b9knh" in namespace "gc-6794"
  I1015 09:26:57.183777 22 delete.go:95] Deleting pod "simpletest.rc-bjg4h" in namespace "gc-6794"
  I1015 09:26:57.224537 22 delete.go:95] Deleting pod "simpletest.rc-bjqcn" in namespace "gc-6794"
  I1015 09:26:57.253600 22 delete.go:95] Deleting pod "simpletest.rc-bqzrn" in namespace "gc-6794"
  I1015 09:26:57.281089 22 delete.go:95] Deleting pod "simpletest.rc-bsvln" in namespace "gc-6794"
  I1015 09:26:57.331867 22 delete.go:95] Deleting pod "simpletest.rc-bzd8d" in namespace "gc-6794"
  E1015 09:26:57.358997      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:26:57.359051 22 delete.go:95] Deleting pod "simpletest.rc-ct224" in namespace "gc-6794"
  I1015 09:26:57.392763 22 delete.go:95] Deleting pod "simpletest.rc-d4bzt" in namespace "gc-6794"
  I1015 09:26:57.437342 22 delete.go:95] Deleting pod "simpletest.rc-dd4hb" in namespace "gc-6794"
  I1015 09:26:57.469587 22 delete.go:95] Deleting pod "simpletest.rc-dr28m" in namespace "gc-6794"
  I1015 09:26:57.515311 22 delete.go:95] Deleting pod "simpletest.rc-dr9ps" in namespace "gc-6794"
  I1015 09:26:57.545445 22 delete.go:95] Deleting pod "simpletest.rc-dzdks" in namespace "gc-6794"
  I1015 09:26:57.573611 22 delete.go:95] Deleting pod "simpletest.rc-f2p6n" in namespace "gc-6794"
  I1015 09:26:57.608904 22 delete.go:95] Deleting pod "simpletest.rc-fkq78" in namespace "gc-6794"
  I1015 09:26:57.680167 22 delete.go:95] Deleting pod "simpletest.rc-g5j9f" in namespace "gc-6794"
  I1015 09:26:57.767930 22 delete.go:95] Deleting pod "simpletest.rc-g7sfk" in namespace "gc-6794"
  I1015 09:26:57.815680 22 delete.go:95] Deleting pod "simpletest.rc-g95c5" in namespace "gc-6794"
  I1015 09:26:57.885368 22 delete.go:95] Deleting pod "simpletest.rc-gphmr" in namespace "gc-6794"
  I1015 09:26:58.017036 22 delete.go:95] Deleting pod "simpletest.rc-gqqtj" in namespace "gc-6794"
  I1015 09:26:58.053923 22 delete.go:95] Deleting pod "simpletest.rc-gwpc8" in namespace "gc-6794"
  I1015 09:26:58.103059 22 delete.go:95] Deleting pod "simpletest.rc-hh67w" in namespace "gc-6794"
  I1015 09:26:58.123849 22 delete.go:95] Deleting pod "simpletest.rc-jbn96" in namespace "gc-6794"
  I1015 09:26:58.179353 22 delete.go:95] Deleting pod "simpletest.rc-jk8zd" in namespace "gc-6794"
  I1015 09:26:58.226940 22 delete.go:95] Deleting pod "simpletest.rc-jlzvb" in namespace "gc-6794"
  I1015 09:26:58.257793 22 delete.go:95] Deleting pod "simpletest.rc-k4dzp" in namespace "gc-6794"
  I1015 09:26:58.296000 22 delete.go:95] Deleting pod "simpletest.rc-k4kw7" in namespace "gc-6794"
  E1015 09:26:58.359589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:26:58.361228 22 delete.go:95] Deleting pod "simpletest.rc-kkdz6" in namespace "gc-6794"
  I1015 09:26:58.414055 22 delete.go:95] Deleting pod "simpletest.rc-kktmd" in namespace "gc-6794"
  I1015 09:26:58.469792 22 delete.go:95] Deleting pod "simpletest.rc-kq69q" in namespace "gc-6794"
  I1015 09:26:58.519766 22 delete.go:95] Deleting pod "simpletest.rc-ktrzd" in namespace "gc-6794"
  I1015 09:26:58.581914 22 delete.go:95] Deleting pod "simpletest.rc-l48jq" in namespace "gc-6794"
  I1015 09:26:58.668405 22 delete.go:95] Deleting pod "simpletest.rc-ll2lb" in namespace "gc-6794"
  I1015 09:26:58.729159 22 delete.go:95] Deleting pod "simpletest.rc-lpwfx" in namespace "gc-6794"
  I1015 09:26:58.770210 22 delete.go:95] Deleting pod "simpletest.rc-lrt57" in namespace "gc-6794"
  I1015 09:26:58.795768 22 delete.go:95] Deleting pod "simpletest.rc-lzn2g" in namespace "gc-6794"
  I1015 09:26:58.847047 22 delete.go:95] Deleting pod "simpletest.rc-m4qmn" in namespace "gc-6794"
  I1015 09:26:58.887260 22 delete.go:95] Deleting pod "simpletest.rc-m9njf" in namespace "gc-6794"
  I1015 09:26:58.919987 22 delete.go:95] Deleting pod "simpletest.rc-mb7jb" in namespace "gc-6794"
  I1015 09:26:58.966715 22 delete.go:95] Deleting pod "simpletest.rc-mfkk9" in namespace "gc-6794"
  I1015 09:26:59.014868 22 delete.go:95] Deleting pod "simpletest.rc-mfzmg" in namespace "gc-6794"
  I1015 09:26:59.067698 22 delete.go:95] Deleting pod "simpletest.rc-mmg4g" in namespace "gc-6794"
  I1015 09:26:59.124858 22 delete.go:95] Deleting pod "simpletest.rc-nhxvb" in namespace "gc-6794"
  I1015 09:26:59.158252 22 delete.go:95] Deleting pod "simpletest.rc-nkr99" in namespace "gc-6794"
  I1015 09:26:59.205174 22 delete.go:95] Deleting pod "simpletest.rc-phxrz" in namespace "gc-6794"
  I1015 09:26:59.294029 22 delete.go:95] Deleting pod "simpletest.rc-qdnjh" in namespace "gc-6794"
  I1015 09:26:59.356263 22 delete.go:95] Deleting pod "simpletest.rc-qkkrx" in namespace "gc-6794"
  E1015 09:26:59.360564      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:26:59.392875 22 delete.go:95] Deleting pod "simpletest.rc-qp9rj" in namespace "gc-6794"
  I1015 09:26:59.437512 22 delete.go:95] Deleting pod "simpletest.rc-r45pn" in namespace "gc-6794"
  I1015 09:26:59.497236 22 delete.go:95] Deleting pod "simpletest.rc-sdpvk" in namespace "gc-6794"
  I1015 09:26:59.621730 22 delete.go:95] Deleting pod "simpletest.rc-sq69d" in namespace "gc-6794"
  I1015 09:26:59.674052 22 delete.go:95] Deleting pod "simpletest.rc-sqkqp" in namespace "gc-6794"
  I1015 09:26:59.728184 22 delete.go:95] Deleting pod "simpletest.rc-t4nvw" in namespace "gc-6794"
  I1015 09:26:59.762062 22 delete.go:95] Deleting pod "simpletest.rc-t6drv" in namespace "gc-6794"
  I1015 09:26:59.784427 22 delete.go:95] Deleting pod "simpletest.rc-t8r4l" in namespace "gc-6794"
  I1015 09:26:59.825198 22 delete.go:95] Deleting pod "simpletest.rc-t95sk" in namespace "gc-6794"
  I1015 09:26:59.865241 22 delete.go:95] Deleting pod "simpletest.rc-thxzd" in namespace "gc-6794"
  I1015 09:26:59.900750 22 delete.go:95] Deleting pod "simpletest.rc-tj4hk" in namespace "gc-6794"
  I1015 09:26:59.951829 22 delete.go:95] Deleting pod "simpletest.rc-v428x" in namespace "gc-6794"
  I1015 09:26:59.979206 22 delete.go:95] Deleting pod "simpletest.rc-v6fhd" in namespace "gc-6794"
  I1015 09:27:00.048713 22 delete.go:95] Deleting pod "simpletest.rc-vcdqp" in namespace "gc-6794"
  I1015 09:27:00.114007 22 delete.go:95] Deleting pod "simpletest.rc-w7lpv" in namespace "gc-6794"
  I1015 09:27:00.149779 22 delete.go:95] Deleting pod "simpletest.rc-w8k2z" in namespace "gc-6794"
  I1015 09:27:00.193601 22 delete.go:95] Deleting pod "simpletest.rc-x94mq" in namespace "gc-6794"
  I1015 09:27:00.221953 22 delete.go:95] Deleting pod "simpletest.rc-xjrlk" in namespace "gc-6794"
  I1015 09:27:00.288909 22 delete.go:95] Deleting pod "simpletest.rc-xk4dd" in namespace "gc-6794"
  I1015 09:27:00.338673 22 delete.go:95] Deleting pod "simpletest.rc-xkfsp" in namespace "gc-6794"
  E1015 09:27:00.361259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:27:00.455112 22 delete.go:95] Deleting pod "simpletest.rc-xlh92" in namespace "gc-6794"
  I1015 09:27:00.535032 22 delete.go:95] Deleting pod "simpletest.rc-z2c7m" in namespace "gc-6794"
  I1015 09:27:00.592692 22 delete.go:95] Deleting pod "simpletest.rc-zcp2b" in namespace "gc-6794"
  I1015 09:27:00.668006 22 delete.go:95] Deleting pod "simpletest.rc-zhpwm" in namespace "gc-6794"
  I1015 09:27:00.770814 22 delete.go:95] Deleting pod "simpletest.rc-ztfsg" in namespace "gc-6794"
  I1015 09:27:00.846788 22 delete.go:95] Deleting pod "simpletest.rc-zzvzb" in namespace "gc-6794"
  I1015 09:27:00.890516 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6794" for this suite. @ 10/15/24 09:27:00.917
• [46.265 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 10/15/24 09:27:00.951
  I1015 09:27:00.951874 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename namespaces @ 10/15/24 09:27:00.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:27:01.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:27:01.064
  STEP: creating a Namespace @ 10/15/24 09:27:01.09
  STEP: patching the Namespace @ 10/15/24 09:27:01.146
  STEP: get the Namespace and ensuring it has the label @ 10/15/24 09:27:01.173
  I1015 09:27:01.193480 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7840" for this suite. @ 10/15/24 09:27:01.242
  STEP: Destroying namespace "nspatchtest-d1b860ef-59b6-4ac7-8369-723347faf109-8610" for this suite. @ 10/15/24 09:27:01.263
• [0.333 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 10/15/24 09:27:01.285
  I1015 09:27:01.285462 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename pods @ 10/15/24 09:27:01.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:27:01.358
  E1015 09:27:01.362481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:27:01.366
  STEP: creating the pod @ 10/15/24 09:27:01.406
  STEP: setting up watch @ 10/15/24 09:27:01.406
  STEP: submitting the pod to kubernetes @ 10/15/24 09:27:01.52
  STEP: verifying the pod is in kubernetes @ 10/15/24 09:27:01.576
  STEP: verifying pod creation was observed @ 10/15/24 09:27:01.591
  E1015 09:27:02.362826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:27:03.363512      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:27:04.363847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:27:05.363925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:27:06.364311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:27:07.364376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:27:08.364543      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:27:09.364943      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 10/15/24 09:27:09.705
  STEP: verifying pod deletion was observed @ 10/15/24 09:27:09.721
  E1015 09:27:10.366172      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:27:10.817947 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-816" for this suite. @ 10/15/24 09:27:10.829
• [9.560 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 10/15/24 09:27:10.846
  I1015 09:27:10.846094 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/15/24 09:27:10.848
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:27:10.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:27:10.883
  I1015 09:27:10.889533 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  E1015 09:27:11.367134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:27:12.367501      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:27:13.368057      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:27:14.369056      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:27:15.369792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:27:16.370913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:27:17.370992      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:27:18.371919      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:27:19.373029      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 10/15/24 09:27:20.265
  I1015 09:27:20.265945 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=crd-publish-openapi-7176 --namespace=crd-publish-openapi-7176 create -f -'
  E1015 09:27:20.373605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:27:20.515886 22 builder.go:146] stderr: ""
  I1015 09:27:20.515993 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9813-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I1015 09:27:20.516127 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=crd-publish-openapi-7176 --namespace=crd-publish-openapi-7176 delete e2e-test-crd-publish-openapi-9813-crds test-cr'
  I1015 09:27:20.685751 22 builder.go:146] stderr: ""
  I1015 09:27:20.685865 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9813-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I1015 09:27:20.685997 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=crd-publish-openapi-7176 --namespace=crd-publish-openapi-7176 apply -f -'
  I1015 09:27:20.918995 22 builder.go:146] stderr: ""
  I1015 09:27:20.919106 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9813-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I1015 09:27:20.919449 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=crd-publish-openapi-7176 --namespace=crd-publish-openapi-7176 delete e2e-test-crd-publish-openapi-9813-crds test-cr'
  I1015 09:27:21.111192 22 builder.go:146] stderr: ""
  I1015 09:27:21.111276 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9813-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 10/15/24 09:27:21.111
  I1015 09:27:21.112109 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=crd-publish-openapi-7176 explain e2e-test-crd-publish-openapi-9813-crds'
  I1015 09:27:21.271585 22 builder.go:146] stderr: ""
  I1015 09:27:21.271702 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-9813-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E1015 09:27:21.373607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:27:22.374336      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:27:23.374522      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:27:24.375362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:27:25.067120 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7176" for this suite. @ 10/15/24 09:27:25.093
• [14.266 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 10/15/24 09:27:25.112
  I1015 09:27:25.112441 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename webhook @ 10/15/24 09:27:25.114
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:27:25.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:27:25.161
  STEP: Setting up server cert @ 10/15/24 09:27:25.222
  E1015 09:27:25.375735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:27:26.376223      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/15/24 09:27:26.791
  STEP: Deploying the webhook pod @ 10/15/24 09:27:26.808
  STEP: Wait for the deployment to be ready @ 10/15/24 09:27:26.835
  I1015 09:27:26.851628 22 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1015 09:27:27.376340      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:27:28.377177      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:27:28.874243 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 15, 9, 27, 26, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 9, 27, 26, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 15, 9, 27, 27, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 9, 27, 26, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1015 09:27:29.377864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:27:30.378284      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/15/24 09:27:30.893
  STEP: Verifying the service has paired with the endpoint @ 10/15/24 09:27:30.925
  E1015 09:27:31.379024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:27:31.926291 22 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 10/15/24 09:27:31.945
  STEP: create a pod that should be updated by the webhook @ 10/15/24 09:27:31.974
  I1015 09:27:32.118739 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9590" for this suite. @ 10/15/24 09:27:32.131
  STEP: Destroying namespace "webhook-markers-1789" for this suite. @ 10/15/24 09:27:32.146
• [7.049 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 10/15/24 09:27:32.164
  I1015 09:27:32.164494 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename init-container @ 10/15/24 09:27:32.168
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:27:32.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:27:32.229
  STEP: creating the pod @ 10/15/24 09:27:32.252
  I1015 09:27:32.252725 22 init_container.go:213] PodSpec: initContainers in spec.initContainers
  E1015 09:27:32.390988      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:27:33.392368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:27:34.392840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:27:35.393394      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:27:36.393759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:27:37.394863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:27:37.830245 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9429" for this suite. @ 10/15/24 09:27:37.853
• [5.720 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 10/15/24 09:27:37.884
  I1015 09:27:37.885178 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename limitrange @ 10/15/24 09:27:37.886
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:27:37.996
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:27:38.006
  STEP: Creating LimitRange "e2e-limitrange-9qnm7" in namespace "limitrange-8922" @ 10/15/24 09:27:38.012
  STEP: Creating another limitRange in another namespace @ 10/15/24 09:27:38.037
  I1015 09:27:38.094186 22 limit_range.go:299] Namespace "e2e-limitrange-9qnm7-1643" created
  I1015 09:27:38.094284 22 limit_range.go:300] Creating LimitRange "e2e-limitrange-9qnm7" in namespace "e2e-limitrange-9qnm7-1643"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-9qnm7" @ 10/15/24 09:27:38.106
  I1015 09:27:38.112896 22 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-9qnm7" in "limitrange-8922" namespace @ 10/15/24 09:27:38.113
  I1015 09:27:38.124117 22 limit_range.go:335] LimitRange "e2e-limitrange-9qnm7" has been patched
  STEP: Delete LimitRange "e2e-limitrange-9qnm7" by Collection with labelSelector: "e2e-limitrange-9qnm7=patched" @ 10/15/24 09:27:38.124
  STEP: Confirm that the limitRange "e2e-limitrange-9qnm7" has been deleted @ 10/15/24 09:27:38.148
  I1015 09:27:38.148882 22 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I1015 09:27:38.157802 22 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-9qnm7=patched"
  I1015 09:27:38.157876 22 limit_range.go:344] LimitRange "e2e-limitrange-9qnm7" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-9qnm7" @ 10/15/24 09:27:38.157
  I1015 09:27:38.165494 22 limit_range.go:350] Found 1 limitRange
  I1015 09:27:38.165682 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-8922" for this suite. @ 10/15/24 09:27:38.177
  STEP: Destroying namespace "e2e-limitrange-9qnm7-1643" for this suite. @ 10/15/24 09:27:38.189
• [0.318 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:905
  STEP: Creating a kubernetes client @ 10/15/24 09:27:38.203
  I1015 09:27:38.203064 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename statefulset @ 10/15/24 09:27:38.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:27:38.254
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:27:38.263
  STEP: Creating service test in namespace statefulset-6675 @ 10/15/24 09:27:38.273
  STEP: Creating statefulset ss in namespace statefulset-6675 @ 10/15/24 09:27:38.291
  I1015 09:27:38.316796 22 wait.go:40] Found 0 stateful pods, waiting for 1
  E1015 09:27:38.395437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:27:39.395921      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:27:40.396244      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:27:41.399677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:27:42.399865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:27:43.400220      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:27:44.400448      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:27:45.401520      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:27:46.402534      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:27:47.402961      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:27:48.312991 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 10/15/24 09:27:48.326
  STEP: updating a scale subresource @ 10/15/24 09:27:48.331
  STEP: verifying the statefulset Spec.Replicas was modified @ 10/15/24 09:27:48.341
  STEP: Patch a scale subresource @ 10/15/24 09:27:48.347
  STEP: verifying the statefulset Spec.Replicas was modified @ 10/15/24 09:27:48.363
  I1015 09:27:48.373925 22 statefulset.go:138] Deleting all statefulset in ns statefulset-6675
  I1015 09:27:48.386656 22 rest.go:150] Scaling statefulset ss to 0
  E1015 09:27:48.402924      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:27:49.403816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:27:50.404122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:27:51.405185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:27:52.404965      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:27:53.406201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:27:54.406352      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:27:55.407359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:27:56.408148      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:27:57.408542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:27:58.409821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:27:58.425364 22 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1015 09:27:58.432220 22 rest.go:88] Deleting statefulset ss
  I1015 09:27:58.463886 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6675" for this suite. @ 10/15/24 09:27:58.478
• [20.293 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1627
  STEP: Creating a kubernetes client @ 10/15/24 09:27:58.516
  I1015 09:27:58.517073 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename kubectl @ 10/15/24 09:27:58.519
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:27:58.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:27:58.572
  STEP: creating the pod @ 10/15/24 09:27:58.577
  I1015 09:27:58.578121 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-4746 create -f -'
  I1015 09:27:58.847328 22 builder.go:146] stderr: ""
  I1015 09:27:58.847404 22 builder.go:147] stdout: "pod/pause created\n"
  E1015 09:27:59.410440      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:00.410439      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 10/15/24 09:28:00.864
  I1015 09:28:00.864160 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-4746 label pods pause testing-label=testing-label-value'
  I1015 09:28:01.010159 22 builder.go:146] stderr: ""
  I1015 09:28:01.010316 22 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 10/15/24 09:28:01.01
  I1015 09:28:01.010539 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-4746 get pod pause -L testing-label'
  I1015 09:28:01.184530 22 builder.go:146] stderr: ""
  I1015 09:28:01.184596 22 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 10/15/24 09:28:01.184
  I1015 09:28:01.185043 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-4746 label pods pause testing-label-'
  I1015 09:28:01.396102 22 builder.go:146] stderr: ""
  I1015 09:28:01.396186 22 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 10/15/24 09:28:01.396
  I1015 09:28:01.396676 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-4746 get pod pause -L testing-label'
  E1015 09:28:01.411265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:28:01.545574 22 builder.go:146] stderr: ""
  I1015 09:28:01.545627 22 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
  STEP: using delete to clean up resources @ 10/15/24 09:28:01.545
  I1015 09:28:01.546110 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-4746 delete --grace-period=0 --force -f -'
  I1015 09:28:01.708266 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1015 09:28:01.708335 22 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I1015 09:28:01.708395 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-4746 get rc,svc -l name=pause --no-headers'
  I1015 09:28:01.882323 22 builder.go:146] stderr: "No resources found in kubectl-4746 namespace.\n"
  I1015 09:28:01.882426 22 builder.go:147] stdout: ""
  I1015 09:28:01.882518 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-4746 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1015 09:28:02.061848 22 builder.go:146] stderr: ""
  I1015 09:28:02.061945 22 builder.go:147] stdout: ""
  I1015 09:28:02.062284 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4746" for this suite. @ 10/15/24 09:28:02.077
• [3.575 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 10/15/24 09:28:02.094
  I1015 09:28:02.094397 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename cronjob @ 10/15/24 09:28:02.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:28:02.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:28:02.143
  STEP: Creating a ReplaceConcurrent cronjob @ 10/15/24 09:28:02.153
  STEP: Ensuring a job is scheduled @ 10/15/24 09:28:02.167
  E1015 09:28:02.411949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:03.412601      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:04.413249      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:05.413940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:06.414252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:07.414856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:08.415096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:09.415617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:10.416569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:11.416974      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:12.417926      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:13.418705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:14.419957      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:15.420006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:16.421114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:17.421329      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:18.421239      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:19.421655      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:20.422255      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:21.423036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:22.423622      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:23.424559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:24.425219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:25.425671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:26.425757      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:27.426128      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:28.426714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:29.427306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:30.427672      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:31.428127      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:32.428597      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:33.429669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:34.430583      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:35.430732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:36.431598      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:37.431639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:38.432623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:39.432877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:40.432986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:41.433120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:42.433292      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:43.433696      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:44.435308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:45.434926      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:46.435639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:47.435840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:48.436563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:49.436719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:50.437830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:51.438766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:52.439632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:53.440644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:54.441581      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:55.441526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:56.443022      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:57.443104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:58.443661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:28:59.444171      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 10/15/24 09:29:00.177
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 10/15/24 09:29:00.188
  STEP: Ensuring the job is replaced with a new one @ 10/15/24 09:29:00.197
  E1015 09:29:00.445144      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:01.445915      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:02.445926      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:03.446977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:04.447979      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:05.448765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:06.448775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:07.449129      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:08.449425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:09.449631      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:10.450996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:11.451559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:12.452668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:13.453780      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:14.454809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:15.455352      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:16.455571      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:17.455893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:18.456893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:19.457027      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:20.457931      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:21.458400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:22.458838      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:23.458961      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:24.459230      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:25.459600      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:26.460166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:27.460883      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:28.461775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:29.462579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:30.463150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:31.463566      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:32.464624      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:33.465344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:34.466456      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:35.467305      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:36.468020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:37.468376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:38.469338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:39.469491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:40.470478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:41.471899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:42.472404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:43.472485      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:44.473481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:45.473806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:46.474433      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:47.475132      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:48.475291      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:49.476270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:50.478278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:51.477823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:52.477945      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:53.478996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:54.478901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:55.479195      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:56.479953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:57.480483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:58.481183      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:29:59.481366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 10/15/24 09:30:00.219
  I1015 09:30:00.243735 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-263" for this suite. @ 10/15/24 09:30:00.259
• [118.189 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 10/15/24 09:30:00.287
  I1015 09:30:00.287282 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename projected @ 10/15/24 09:30:00.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:30:00.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:30:00.388
  STEP: Creating projection with secret that has name projected-secret-test-bd9fc46a-4163-46e5-9877-ac06cdce1191 @ 10/15/24 09:30:00.405
  STEP: Creating a pod to test consume secrets @ 10/15/24 09:30:00.438
  E1015 09:30:00.481356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:30:01.481463      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:30:02.482283      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:30:03.483280      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:30:04.483453      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 09:30:04.521
  I1015 09:30:04.526782 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-projected-secrets-0cdd2ad6-cbd5-462b-af9e-6efa06bb1c1b container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/15/24 09:30:04.576
  I1015 09:30:04.630927 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7323" for this suite. @ 10/15/24 09:30:04.642
• [4.380 seconds]
------------------------------
SSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 10/15/24 09:30:04.667
  I1015 09:30:04.667938 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename runtimeclass @ 10/15/24 09:30:04.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:30:04.726
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:30:04.738
  STEP: getting /apis @ 10/15/24 09:30:04.777
  STEP: getting /apis/node.k8s.io @ 10/15/24 09:30:04.8
  STEP: getting /apis/node.k8s.io/v1 @ 10/15/24 09:30:04.809
  STEP: creating @ 10/15/24 09:30:04.813
  STEP: watching @ 10/15/24 09:30:04.862
  I1015 09:30:04.863048 22 runtimeclass.go:275] starting watch
  STEP: getting @ 10/15/24 09:30:04.872
  STEP: listing @ 10/15/24 09:30:04.879
  STEP: patching @ 10/15/24 09:30:04.9
  STEP: updating @ 10/15/24 09:30:04.914
  I1015 09:30:04.925557 22 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 10/15/24 09:30:04.926
  STEP: deleting a collection @ 10/15/24 09:30:04.97
  I1015 09:30:05.033542 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8612" for this suite. @ 10/15/24 09:30:05.049
• [0.398 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:406
  STEP: Creating a kubernetes client @ 10/15/24 09:30:05.067
  I1015 09:30:05.067825 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename validating-admission-policy @ 10/15/24 09:30:05.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:30:05.124
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:30:05.141
  STEP: getting /apis @ 10/15/24 09:30:05.174
  STEP: getting /apis/admissionregistration.k8s.io @ 10/15/24 09:30:05.185
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 10/15/24 09:30:05.187
  STEP: creating @ 10/15/24 09:30:05.196
  STEP: getting @ 10/15/24 09:30:05.264
  STEP: listing @ 10/15/24 09:30:05.276
  STEP: watching @ 10/15/24 09:30:05.289
  I1015 09:30:05.290509 22 validatingadmissionpolicy.go:523] starting watch
  STEP: patching @ 10/15/24 09:30:05.293
  STEP: updating @ 10/15/24 09:30:05.308
  I1015 09:30:05.337783 22 validatingadmissionpolicy.go:552] waiting for watch events with expected annotations
  STEP: getting /status @ 10/15/24 09:30:05.338
  STEP: patching /status @ 10/15/24 09:30:05.351
  STEP: updating /status @ 10/15/24 09:30:05.371
  STEP: deleting @ 10/15/24 09:30:05.392
  STEP: deleting a collection @ 10/15/24 09:30:05.438
  E1015 09:30:05.484490      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:30:05.500311 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-8275" for this suite. @ 10/15/24 09:30:05.511
• [0.467 seconds]
------------------------------
SSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 10/15/24 09:30:05.537
  I1015 09:30:05.537928 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename emptydir @ 10/15/24 09:30:05.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:30:05.58
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:30:05.587
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 10/15/24 09:30:05.595
  E1015 09:30:06.484565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:30:07.485218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:30:08.486226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:30:09.486854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 09:30:09.632
  I1015 09:30:09.643284 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-29bf68b8-414a-4132-8159-f973e517bb87 container test-container: <nil>
  STEP: delete the pod @ 10/15/24 09:30:09.657
  I1015 09:30:09.701812 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9767" for this suite. @ 10/15/24 09:30:09.717
• [4.200 seconds]
------------------------------
SSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 10/15/24 09:30:09.737
  I1015 09:30:09.737737 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename container-runtime @ 10/15/24 09:30:09.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:30:09.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:30:09.806
  STEP: create the container @ 10/15/24 09:30:09.812
  W1015 09:30:09.846788      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 10/15/24 09:30:09.847
  E1015 09:30:10.488076      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:30:11.488356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:30:12.488698      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:30:13.489125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 10/15/24 09:30:13.908
  STEP: the container should be terminated @ 10/15/24 09:30:13.919
  STEP: the termination message should be set @ 10/15/24 09:30:13.919
  I1015 09:30:13.919496 22 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 10/15/24 09:30:13.919
  I1015 09:30:13.989882 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2978" for this suite. @ 10/15/24 09:30:14.017
• [4.307 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:183
  STEP: Creating a kubernetes client @ 10/15/24 09:30:14.045
  I1015 09:30:14.045266 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename kubelet-test @ 10/15/24 09:30:14.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:30:14.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:30:14.101
  E1015 09:30:14.489356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:30:15.490074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:30:16.179102 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8572" for this suite. @ 10/15/24 09:30:16.193
• [2.162 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 10/15/24 09:30:16.207
  I1015 09:30:16.207626 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename webhook @ 10/15/24 09:30:16.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:30:16.255
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:30:16.262
  STEP: Setting up server cert @ 10/15/24 09:30:16.368
  E1015 09:30:16.490175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:30:17.490695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/15/24 09:30:18.079
  STEP: Deploying the webhook pod @ 10/15/24 09:30:18.097
  STEP: Wait for the deployment to be ready @ 10/15/24 09:30:18.129
  I1015 09:30:18.146168 22 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1015 09:30:18.491660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:30:19.492290      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/15/24 09:30:20.175
  STEP: Verifying the service has paired with the endpoint @ 10/15/24 09:30:20.196
  E1015 09:30:20.493100      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:30:21.197405 22 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1015 09:30:21.209311 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  E1015 09:30:21.493845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:30:22.496678      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:30:23.497616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:30:24.498684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:30:25.499995      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:30:26.500348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 10/15/24 09:30:26.735
  STEP: Creating a custom resource that should be denied by the webhook @ 10/15/24 09:30:26.777
  E1015 09:30:27.500466      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:30:28.500807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 10/15/24 09:30:28.873
  STEP: Updating the custom resource with disallowed data should be denied @ 10/15/24 09:30:28.886
  STEP: Deleting the custom resource should be denied @ 10/15/24 09:30:28.903
  STEP: Remove the offending key and value from the custom resource data @ 10/15/24 09:30:28.921
  STEP: Deleting the updated custom resource should be successful @ 10/15/24 09:30:28.947
  E1015 09:30:29.503030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:30:29.685799 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9421" for this suite. @ 10/15/24 09:30:29.696
  STEP: Destroying namespace "webhook-markers-6267" for this suite. @ 10/15/24 09:30:29.715
• [13.528 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 10/15/24 09:30:29.744
  I1015 09:30:29.746270 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename webhook @ 10/15/24 09:30:29.748
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:30:29.778
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:30:29.784
  STEP: Setting up server cert @ 10/15/24 09:30:29.829
  E1015 09:30:30.502990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/15/24 09:30:30.725
  STEP: Deploying the webhook pod @ 10/15/24 09:30:30.744
  STEP: Wait for the deployment to be ready @ 10/15/24 09:30:30.771
  I1015 09:30:30.789186 22 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1015 09:30:31.504083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:30:32.503786      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:30:32.830587 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 15, 9, 30, 30, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 9, 30, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 15, 9, 30, 30, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 9, 30, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1015 09:30:33.504212      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:30:34.504305      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/15/24 09:30:34.841
  STEP: Verifying the service has paired with the endpoint @ 10/15/24 09:30:34.866
  E1015 09:30:35.504604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:30:35.867365 22 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 10/15/24 09:30:35.88
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 10/15/24 09:30:35.926
  STEP: Creating a dummy validating-webhook-configuration object @ 10/15/24 09:30:35.952
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 10/15/24 09:30:35.968
  STEP: Creating a dummy mutating-webhook-configuration object @ 10/15/24 09:30:35.983
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 10/15/24 09:30:36
  I1015 09:30:36.145368 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5503" for this suite. @ 10/15/24 09:30:36.172
  STEP: Destroying namespace "webhook-markers-512" for this suite. @ 10/15/24 09:30:36.192
• [6.468 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 10/15/24 09:30:36.212
  I1015 09:30:36.212349 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename configmap @ 10/15/24 09:30:36.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:30:36.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:30:36.273
  STEP: Creating configMap with name configmap-test-volume-26c848ba-b4fd-4c75-a899-315cb7020c31 @ 10/15/24 09:30:36.294
  STEP: Creating a pod to test consume configMaps @ 10/15/24 09:30:36.309
  E1015 09:30:36.505705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:30:37.505483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:30:38.506703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:30:39.507637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 09:30:40.369
  I1015 09:30:40.395518 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-configmaps-0a4ef6a1-66a8-404d-900b-30e7f8d2423b container agnhost-container: <nil>
  STEP: delete the pod @ 10/15/24 09:30:40.458
  E1015 09:30:40.508847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:30:40.577855 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7116" for this suite. @ 10/15/24 09:30:40.613
• [4.425 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:695
  STEP: Creating a kubernetes client @ 10/15/24 09:30:40.638
  I1015 09:30:40.638599 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename resourcequota @ 10/15/24 09:30:40.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:30:40.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:30:40.703
  STEP: Creating a ResourceQuota with terminating scope @ 10/15/24 09:30:40.711
  STEP: Ensuring ResourceQuota status is calculated @ 10/15/24 09:30:40.721
  E1015 09:30:41.509233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:30:42.509603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not terminating scope @ 10/15/24 09:30:42.73
  STEP: Ensuring ResourceQuota status is calculated @ 10/15/24 09:30:42.74
  E1015 09:30:43.510769      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:30:44.511010      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a long running pod @ 10/15/24 09:30:44.748
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 10/15/24 09:30:44.786
  E1015 09:30:45.511495      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:30:46.512456      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 10/15/24 09:30:46.813
  E1015 09:30:47.512664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:30:48.513920      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 10/15/24 09:30:48.821
  STEP: Ensuring resource quota status released the pod usage @ 10/15/24 09:30:48.85
  E1015 09:30:49.514079      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:30:50.514347      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a terminating pod @ 10/15/24 09:30:50.859
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 10/15/24 09:30:50.889
  E1015 09:30:51.514436      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:30:52.514946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 10/15/24 09:30:52.901
  E1015 09:30:53.515754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:30:54.516350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 10/15/24 09:30:54.918
  STEP: Ensuring resource quota status released the pod usage @ 10/15/24 09:30:54.954
  E1015 09:30:55.517491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:30:56.517787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:30:56.963714 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-460" for this suite. @ 10/15/24 09:30:56.979
• [16.367 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 10/15/24 09:30:57.006
  I1015 09:30:57.006045 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename projected @ 10/15/24 09:30:57.008
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:30:57.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:30:57.068
  STEP: Creating configMap with name cm-test-opt-del-c300c5c8-a420-4c9f-aa73-fec6fc5a3f9a @ 10/15/24 09:30:57.088
  STEP: Creating configMap with name cm-test-opt-upd-d5787996-43d2-4d03-93bb-8178a388e086 @ 10/15/24 09:30:57.096
  STEP: Creating the pod @ 10/15/24 09:30:57.105
  E1015 09:30:57.517972      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:30:58.518719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-c300c5c8-a420-4c9f-aa73-fec6fc5a3f9a @ 10/15/24 09:30:59.221
  STEP: Updating configmap cm-test-opt-upd-d5787996-43d2-4d03-93bb-8178a388e086 @ 10/15/24 09:30:59.237
  STEP: Creating configMap with name cm-test-opt-create-6db2ddbd-7e1c-4eb7-8636-3567d0478d99 @ 10/15/24 09:30:59.248
  STEP: waiting to observe update in volume @ 10/15/24 09:30:59.266
  E1015 09:30:59.519020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:31:00.519061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:31:01.353451 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2765" for this suite. @ 10/15/24 09:31:01.375
• [4.390 seconds]
------------------------------
SSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 10/15/24 09:31:01.395
  I1015 09:31:01.396049 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename events @ 10/15/24 09:31:01.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:31:01.468
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:31:01.476
  STEP: Create set of events @ 10/15/24 09:31:01.511
  E1015 09:31:01.519490      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:31:01.529693 22 core_events.go:198] created test-event-1
  I1015 09:31:01.544353 22 core_events.go:198] created test-event-2
  I1015 09:31:01.555158 22 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 10/15/24 09:31:01.555
  STEP: delete collection of events @ 10/15/24 09:31:01.576
  I1015 09:31:01.576863 22 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 10/15/24 09:31:01.654
  I1015 09:31:01.654593 22 core_events.go:230] requesting list of events to confirm quantity
  I1015 09:31:01.664863 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6840" for this suite. @ 10/15/24 09:31:01.679
• [0.312 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 10/15/24 09:31:01.716
  I1015 09:31:01.716162 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename webhook @ 10/15/24 09:31:01.718
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:31:01.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:31:01.771
  STEP: Setting up server cert @ 10/15/24 09:31:01.856
  E1015 09:31:02.519690      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/15/24 09:31:02.803
  STEP: Deploying the webhook pod @ 10/15/24 09:31:02.819
  STEP: Wait for the deployment to be ready @ 10/15/24 09:31:02.839
  I1015 09:31:02.882952 22 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1015 09:31:03.519919      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:31:04.520743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:31:04.913092 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 15, 9, 31, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 9, 31, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 15, 9, 31, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 9, 31, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1015 09:31:05.520758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:31:06.521007      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/15/24 09:31:06.923
  STEP: Verifying the service has paired with the endpoint @ 10/15/24 09:31:06.955
  E1015 09:31:07.521168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:31:07.955743 22 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 10/15/24 09:31:08.122
  STEP: Creating a configMap that should be mutated @ 10/15/24 09:31:08.17
  STEP: Deleting the collection of validation webhooks @ 10/15/24 09:31:08.232
  STEP: Creating a configMap that should not be mutated @ 10/15/24 09:31:08.373
  E1015 09:31:08.522012      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:31:08.549313 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3232" for this suite. @ 10/15/24 09:31:08.564
  STEP: Destroying namespace "webhook-markers-2448" for this suite. @ 10/15/24 09:31:08.596
• [6.901 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 10/15/24 09:31:08.617
  I1015 09:31:08.618025 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename deployment @ 10/15/24 09:31:08.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:31:08.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:31:08.693
  I1015 09:31:08.723568 22 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  E1015 09:31:09.522039      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:31:10.522625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:31:11.523012      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:31:12.523467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:31:13.524237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:31:13.736168 22 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/15/24 09:31:13.736
  I1015 09:31:13.736387 22 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E1015 09:31:14.524548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:31:15.526336      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:31:15.745549 22 deployment.go:921] Creating deployment "test-rollover-deployment"
  I1015 09:31:15.782938 22 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  E1015 09:31:16.525787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:31:17.525953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:31:17.806395 22 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I1015 09:31:17.823202 22 deployment.go:943] Ensure that both replica sets have 1 created replica
  I1015 09:31:17.842245 22 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I1015 09:31:17.876362 22 deployment.go:313] Updating deployment test-rollover-deployment
  I1015 09:31:17.876430 22 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E1015 09:31:18.526819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:31:19.527663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:31:19.906350 22 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I1015 09:31:19.920174 22 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I1015 09:31:19.932881 22 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1015 09:31:19.932966 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.October, 15, 9, 31, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 9, 31, 15, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 15, 9, 31, 18, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 9, 31, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1015 09:31:20.528962      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:31:21.529323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:31:21.956237 22 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1015 09:31:21.956467 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.October, 15, 9, 31, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 9, 31, 15, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 15, 9, 31, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 9, 31, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1015 09:31:22.529469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:31:23.529569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:31:23.955527 22 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1015 09:31:23.955791 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.October, 15, 9, 31, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 9, 31, 15, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 15, 9, 31, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 9, 31, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1015 09:31:24.529828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:31:25.530065      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:31:25.950701 22 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1015 09:31:25.950867 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.October, 15, 9, 31, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 9, 31, 15, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 15, 9, 31, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 9, 31, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1015 09:31:26.530330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:31:27.530867      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:31:27.954349 22 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1015 09:31:27.954455 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.October, 15, 9, 31, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 9, 31, 15, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 15, 9, 31, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 9, 31, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1015 09:31:28.531024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:31:29.531621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:31:29.950152 22 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1015 09:31:29.950506 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.October, 15, 9, 31, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 9, 31, 15, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 15, 9, 31, 20, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 9, 31, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1015 09:31:30.531691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:31:31.531732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:31:31.965268 22 deployment.go:94] 
  I1015 09:31:31.965488 22 deployment.go:974] Ensure that both old replica sets have no replicas
  I1015 09:31:31.997069 22 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3126",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7602e460-b216-48b4-9999-54385c9fdccf",
      ResourceVersion: (string) (len=8) "53456619",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864581475,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864581477,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864581490,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864581475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864581475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864581490,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864581475,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-679c966bdf\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1015 09:31:32.018284 22 deployment.go:39] New ReplicaSet "test-rollover-deployment-679c966bdf" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-679c966bdf",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3126",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8f9d2071-1004-419c-8026-6ccf32c2980e",
      ResourceVersion: (string) (len=8) "53456609",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864581477,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "7602e460-b216-48b4-9999-54385c9fdccf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864581478,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 36 30 32 65 34  36 30 2d 62 32 31 36 2d  |\"7602e460-b216-|
              00000120  34 38 62 34 2d 39 39 39  39 2d 35 34 33 38 35 63  |48b4-9999-54385c|
              00000130  39 66 64 63 63 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |9fdccf\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864581490,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1015 09:31:32.020793 22 deployment.go:44] All old ReplicaSets of Deployment "test-rollover-deployment":
  I1015 09:31:32.021312 22 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3126",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "264e9e7f-b5f5-491b-a8b7-ae7de0a600e6",
      ResourceVersion: (string) (len=8) "53456618",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864581468,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "7602e460-b216-48b4-9999-54385c9fdccf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864581468,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864581490,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  37 36 30 32 65 34 36 30  2d 62 32 31 36 2d 34 38  |7602e460-b216-48|
              000000c0  62 34 2d 39 39 39 39 2d  35 34 33 38 35 63 39 66  |b4-9999-54385c9f|
              000000d0  64 63 63 66 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |dccf\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864581490,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1015 09:31:32.024452 22 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-65bd487b4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-3126",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "edbd4525-2195-414b-99e5-5f3b5855688f",
      ResourceVersion: (string) (len=8) "53456543",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864581475,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "65bd487b4b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "7602e460-b216-48b4-9999-54385c9fdccf",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864581477,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 36 30 32 65 34  36 30 2d 62 32 31 36 2d  |\"7602e460-b216-|
              00000120  34 38 62 34 2d 39 39 39  39 2d 35 34 33 38 35 63  |48b4-9999-54385c|
              00000130  39 66 64 63 63 66 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |9fdccf\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864581478,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "65bd487b4b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "65bd487b4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1015 09:31:32.040318 22 deployment.go:67] Pod "test-rollover-deployment-679c966bdf-9f644" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-679c966bdf-9f644",
      GenerateName: (string) (len=36) "test-rollover-deployment-679c966bdf-",
      Namespace: (string) (len=15) "deployment-3126",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bc78ea14-b9f2-4190-bb1a-2698a168f002",
      ResourceVersion: (string) (len=8) "53456571",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864581478,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "6f5937e8e9254e2e321a4d414617570a6b72451eab6c4779a01d87286fa6af74",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.233.118.45/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.233.118.45/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-679c966bdf",
          UID: (types.UID) (len=36) "8f9d2071-1004-419c-8026-6ccf32c2980e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864581478,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864581478,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 38 66  39 64 32 30 37 31 2d 31  |d\":\"8f9d2071-1|
              00000090  30 30 34 2d 34 31 39 63  2d 38 30 32 36 2d 36 63  |004-419c-8026-6c|
              000000a0  63 66 33 32 63 32 39 38  30 65 5c 22 7d 22 3a 7b  |cf32c2980e\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864581480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 31 31 38  2e 34 35 5c 22 7d 22 3a  |.233.118.45\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sx2dv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sx2dv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864581480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864581478,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864581480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864581480,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864581478,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.200",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.200"
        }
      },
      PodIP: (string) (len=13) "10.233.118.45",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.118.45"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864581478,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864581479,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://fcb8367a8a7db6571028c5a9fafea381a42368d4e910ef987c969bcd901bacc5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1015 09:31:32.045203 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-3126" for this suite. @ 10/15/24 09:31:32.065
• [23.469 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:669
  STEP: Creating a kubernetes client @ 10/15/24 09:31:32.088
  I1015 09:31:32.088298 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename pv @ 10/15/24 09:31:32.091
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:31:32.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:31:32.15
  STEP: Creating initial PV and PVC @ 10/15/24 09:31:32.163
  I1015 09:31:32.163921 22 pv.go:390] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-5282" @ 10/15/24 09:31:32.214
  STEP: Listing PVCs in namespace "pv-5282" @ 10/15/24 09:31:32.226
  STEP: Reading "pvc-7vwcr" Status @ 10/15/24 09:31:32.239
  STEP: Reading "pv-5282-xbvqq" Status @ 10/15/24 09:31:32.256
  STEP: Patching "pvc-7vwcr" Status @ 10/15/24 09:31:32.273
  STEP: Patching "pv-5282-xbvqq" Status @ 10/15/24 09:31:32.287
  STEP: Updating "pvc-7vwcr" Status @ 10/15/24 09:31:32.305
  STEP: Updating "pv-5282-xbvqq" Status @ 10/15/24 09:31:32.336
  I1015 09:31:32.370876 22 persistent_volumes.go:407] AfterEach: deleting 1 PVCs and 1 PVs...
  I1015 09:31:32.370952 22 pv.go:201] Deleting PersistentVolumeClaim "pvc-7vwcr"
  I1015 09:31:32.404931 22 pv.go:189] Deleting PersistentVolume "pv-5282-xbvqq"
  I1015 09:31:32.425055 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-5282" for this suite. @ 10/15/24 09:31:32.442
• [0.371 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:965
  STEP: Creating a kubernetes client @ 10/15/24 09:31:32.461
  I1015 09:31:32.461281 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename statefulset @ 10/15/24 09:31:32.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:31:32.53
  E1015 09:31:32.531842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:31:32.537
  STEP: Creating service test in namespace statefulset-5049 @ 10/15/24 09:31:32.543
  I1015 09:31:32.569959 22 wait.go:40] Found 0 stateful pods, waiting for 1
  E1015 09:31:33.533307      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:31:34.533934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:31:35.534381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:31:36.535339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:31:37.536023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:31:38.536387      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:31:39.537332      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:31:40.537621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:31:41.538249      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:31:42.539006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:31:42.575381 22 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 10/15/24 09:31:42.596
  W1015 09:31:42.619170      22 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  I1015 09:31:42.640883 22 wait.go:40] Found 1 stateful pods, waiting for 2
  E1015 09:31:43.539122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:31:44.539206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:31:45.539922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:31:46.540484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:31:47.541245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:31:48.541682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:31:49.542117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:31:50.542462      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:31:51.544307      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:31:52.544629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:31:52.637914 22 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1015 09:31:52.638524 22 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 10/15/24 09:31:52.662
  STEP: Delete all of the StatefulSets @ 10/15/24 09:31:52.674
  STEP: Verify that StatefulSets have been deleted @ 10/15/24 09:31:52.707
  I1015 09:31:52.725714 22 statefulset.go:138] Deleting all statefulset in ns statefulset-5049
  I1015 09:31:52.769271 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5049" for this suite. @ 10/15/24 09:31:52.799
• [20.373 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 10/15/24 09:31:52.834
  I1015 09:31:52.835030 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename webhook @ 10/15/24 09:31:52.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:31:52.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:31:52.88
  STEP: Setting up server cert @ 10/15/24 09:31:52.996
  E1015 09:31:53.545351      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/15/24 09:31:54.211
  STEP: Deploying the webhook pod @ 10/15/24 09:31:54.233
  STEP: Wait for the deployment to be ready @ 10/15/24 09:31:54.283
  I1015 09:31:54.322724 22 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1015 09:31:54.546609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:31:55.546908      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:31:56.343661 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 15, 9, 31, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 9, 31, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 15, 9, 31, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 9, 31, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1015 09:31:56.547152      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:31:57.547581      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/15/24 09:31:58.354
  STEP: Verifying the service has paired with the endpoint @ 10/15/24 09:31:58.384
  E1015 09:31:58.548536      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:31:59.384600 22 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 10/15/24 09:31:59.406
  STEP: create a namespace for the webhook @ 10/15/24 09:31:59.443
  STEP: create a configmap should be unconditionally rejected by the webhook @ 10/15/24 09:31:59.48
  E1015 09:31:59.549822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:31:59.585849 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-366" for this suite. @ 10/15/24 09:31:59.602
  STEP: Destroying namespace "webhook-markers-4552" for this suite. @ 10/15/24 09:31:59.623
  STEP: Destroying namespace "fail-closed-namespace-1966" for this suite. @ 10/15/24 09:31:59.649
• [6.839 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3572
  STEP: Creating a kubernetes client @ 10/15/24 09:31:59.675
  I1015 09:31:59.675749 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename services @ 10/15/24 09:31:59.677
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:31:59.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:31:59.717
  STEP: creating a collection of services @ 10/15/24 09:31:59.728
  I1015 09:31:59.729018 22 service.go:3608] Creating e2e-svc-a-59g8k
  I1015 09:31:59.751339 22 service.go:3608] Creating e2e-svc-b-254fb
  I1015 09:31:59.769349 22 service.go:3608] Creating e2e-svc-c-hbsdb
  STEP: deleting service collection @ 10/15/24 09:31:59.799
  I1015 09:31:59.867327 22 service.go:3643] Collection of services has been deleted
  I1015 09:31:59.868168 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1229" for this suite. @ 10/15/24 09:31:59.88
• [0.219 seconds]
------------------------------
S
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 10/15/24 09:31:59.896
  I1015 09:31:59.896370 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename pod-network-test @ 10/15/24 09:31:59.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:31:59.938
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:31:59.947
  STEP: Performing setup for networking test in namespace pod-network-test-6788 @ 10/15/24 09:31:59.956
  STEP: creating a selector @ 10/15/24 09:31:59.957
  STEP: Creating the service pods in kubernetes @ 10/15/24 09:31:59.961
  I1015 09:31:59.962515 22 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1015 09:32:00.550028      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:32:01.550193      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:32:02.550815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:32:03.551762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:32:04.551747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:32:05.552269      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:32:06.553230      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:32:07.553875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:32:08.553891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:32:09.554578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:32:10.555503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:32:11.556129      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:32:12.557077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:32:13.557233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:32:14.557716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:32:15.558067      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:32:16.558772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:32:17.559236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:32:18.559865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:32:19.560776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:32:20.561323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:32:21.561363      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 10/15/24 09:32:22.203
  E1015 09:32:22.562145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:32:23.562704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:32:24.562924      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:32:25.563579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:32:26.298764 22 utils.go:779] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1015 09:32:26.298842 22 utils.go:472] Going to poll 10.233.118.49 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I1015 09:32:26.303921 22 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.118.49:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6788 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1015 09:32:26.303985 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  I1015 09:32:26.305329 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I1015 09:32:26.305524 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6788/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.118.49%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1015 09:32:26.493562 22 utils.go:489] Found all 1 expected endpoints: [netserver-0]
  I1015 09:32:26.493647 22 utils.go:472] Going to poll 10.233.87.120 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I1015 09:32:26.499892 22 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.87.120:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6788 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1015 09:32:26.499975 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  I1015 09:32:26.501092 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I1015 09:32:26.502018 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6788/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.87.120%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E1015 09:32:26.563726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:32:26.668846 22 utils.go:489] Found all 1 expected endpoints: [netserver-1]
  I1015 09:32:26.669241 22 utils.go:472] Going to poll 10.233.76.176 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I1015 09:32:26.675732 22 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.233.76.176:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6788 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1015 09:32:26.675970 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  I1015 09:32:26.678167 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I1015 09:32:26.678688 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6788/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.233.76.176%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1015 09:32:26.818453 22 utils.go:489] Found all 1 expected endpoints: [netserver-2]
  I1015 09:32:26.818772 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6788" for this suite. @ 10/15/24 09:32:26.843
• [26.974 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 10/15/24 09:32:26.871
  I1015 09:32:26.871231 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename daemonsets @ 10/15/24 09:32:26.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:32:26.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:32:26.935
  I1015 09:32:27.003687 22 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 10/15/24 09:32:27.019
  I1015 09:32:27.029069 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1015 09:32:27.029147 22 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 10/15/24 09:32:27.029
  I1015 09:32:27.098777 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1015 09:32:27.099904 22 fixtures.go:130] Node env1-test-worker-2 is running 0 daemon pod, expected 1
  E1015 09:32:27.564812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:32:28.087637 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1015 09:32:28.087717 22 fixtures.go:130] Node env1-test-worker-2 is running 0 daemon pod, expected 1
  E1015 09:32:28.565652      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:32:29.085939 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1015 09:32:29.086370 22 fixtures.go:130] Node env1-test-worker-2 is running 0 daemon pod, expected 1
  E1015 09:32:29.566647      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:32:30.090120 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1015 09:32:30.090250 22 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 10/15/24 09:32:30.1
  I1015 09:32:30.176347 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1015 09:32:30.176462 22 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 10/15/24 09:32:30.176
  I1015 09:32:30.222199 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1015 09:32:30.222274 22 fixtures.go:130] Node env1-test-worker-2 is running 0 daemon pod, expected 1
  E1015 09:32:30.567365      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:32:31.222211 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1015 09:32:31.222315 22 fixtures.go:130] Node env1-test-worker-2 is running 0 daemon pod, expected 1
  E1015 09:32:31.567641      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:32:32.238625 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1015 09:32:32.238702 22 fixtures.go:130] Node env1-test-worker-2 is running 0 daemon pod, expected 1
  E1015 09:32:32.568652      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:32:33.224148 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1015 09:32:33.224232 22 fixtures.go:130] Node env1-test-worker-2 is running 0 daemon pod, expected 1
  E1015 09:32:33.568837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:32:34.220342 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1015 09:32:34.220447 22 fixtures.go:130] Node env1-test-worker-2 is running 0 daemon pod, expected 1
  E1015 09:32:34.569855      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:32:35.222439 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1015 09:32:35.222564 22 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 10/15/24 09:32:35.242
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-8281, will wait for the garbage collector to delete the pods @ 10/15/24 09:32:35.242
  I1015 09:32:35.315257 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 13.684669ms
  I1015 09:32:35.416196 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.939732ms
  E1015 09:32:35.570442      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:32:36.570663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:32:37.570627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:32:37.932267 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1015 09:32:37.932669 22 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1015 09:32:37.939279 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"53457337"},"items":null}

  I1015 09:32:37.946895 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"53457337"},"items":null}

  I1015 09:32:38.022139 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-8281" for this suite. @ 10/15/24 09:32:38.037
• [11.185 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 10/15/24 09:32:38.064
  I1015 09:32:38.064450 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename projected @ 10/15/24 09:32:38.066
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:32:38.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:32:38.112
  STEP: Creating projection with secret that has name projected-secret-test-d26e7ed3-2f19-417b-a2b5-f1e55c7249cb @ 10/15/24 09:32:38.118
  STEP: Creating a pod to test consume secrets @ 10/15/24 09:32:38.126
  E1015 09:32:38.570926      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:32:39.571071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:32:40.571531      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:32:41.571763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 09:32:42.176
  I1015 09:32:42.187268 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-projected-secrets-5bcba1a5-2235-44e7-8743-d963c3e95014 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/15/24 09:32:42.223
  I1015 09:32:42.272762 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1121" for this suite. @ 10/15/24 09:32:42.289
• [4.260 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1793
  STEP: Creating a kubernetes client @ 10/15/24 09:32:42.324
  I1015 09:32:42.324404 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename kubectl @ 10/15/24 09:32:42.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:32:42.385
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:32:42.393
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 10/15/24 09:32:42.401
  I1015 09:32:42.401554 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-8022 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  E1015 09:32:42.572455      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:32:42.605252 22 builder.go:146] stderr: ""
  I1015 09:32:42.605340 22 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 10/15/24 09:32:42.605
  E1015 09:32:43.579685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:32:44.580638      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:32:45.580851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:32:46.580987      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:32:47.581672      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 10/15/24 09:32:47.657
  I1015 09:32:47.657558 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-8022 get pod e2e-test-httpd-pod -o json'
  I1015 09:32:47.842486 22 builder.go:146] stderr: ""
  I1015 09:32:47.842895 22 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"cni.projectcalico.org/containerID\": \"3bd47d0845696205639fae30c810f73fa76da63c0bbbdf6b1aeb786577db130e\",\n            \"cni.projectcalico.org/podIP\": \"10.233.118.26/32\",\n            \"cni.projectcalico.org/podIPs\": \"10.233.118.26/32\"\n        },\n        \"creationTimestamp\": \"2024-10-15T09:32:42Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-8022\",\n        \"resourceVersion\": \"53457418\",\n        \"uid\": \"db61943e-b807-4d6a-8290-79b72ee4447e\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-qhn4k\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"env1-test-worker-0\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-qhn4k\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-10-15T09:32:44Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-10-15T09:32:42Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-10-15T09:32:44Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-10-15T09:32:44Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-10-15T09:32:42Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://3cf3dcfb2799960a112f0ccd60775f5f4a95a52b55e7922f22f44add386435b7\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-10-15T09:32:43Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"10.61.1.200\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"10.61.1.200\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.233.118.26\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.233.118.26\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-10-15T09:32:42Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 10/15/24 09:32:47.842
  I1015 09:32:47.843087 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-8022 replace -f -'
  I1015 09:32:48.205251 22 builder.go:146] stderr: ""
  I1015 09:32:48.205334 22 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 10/15/24 09:32:48.205
  I1015 09:32:48.215941 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-8022 delete pods e2e-test-httpd-pod'
  E1015 09:32:48.581798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:32:49.582257      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:32:49.808581 22 builder.go:146] stderr: ""
  I1015 09:32:49.808716 22 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1015 09:32:49.809219 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8022" for this suite. @ 10/15/24 09:32:49.823
• [7.520 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 10/15/24 09:32:49.845
  I1015 09:32:49.845955 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename pods @ 10/15/24 09:32:49.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:32:49.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:32:49.905
  STEP: creating the pod @ 10/15/24 09:32:49.924
  STEP: submitting the pod to kubernetes @ 10/15/24 09:32:49.925
  W1015 09:32:49.951972      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E1015 09:32:50.582618      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:32:51.583049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 10/15/24 09:32:51.987
  STEP: updating the pod @ 10/15/24 09:32:51.995
  I1015 09:32:52.527768 22 pod_client.go:141] Successfully updated pod "pod-update-activedeadlineseconds-82ff2ad5-d720-4fd3-8615-b15aa0427b33"
  E1015 09:32:52.584108      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:32:53.584680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:32:54.585459      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:32:55.586270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:32:56.587102      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:32:57.587897      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:32:58.579218 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  E1015 09:32:58.587902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "pods-5409" for this suite. @ 10/15/24 09:32:58.592
• [8.764 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 10/15/24 09:32:58.61
  I1015 09:32:58.610310 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename daemonsets @ 10/15/24 09:32:58.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:32:58.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:32:58.658
  I1015 09:32:58.730778 22 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/15/24 09:32:58.74
  I1015 09:32:58.760620 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:32:58.760769 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:32:58.760885 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:32:58.769502 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1015 09:32:58.769660 22 fixtures.go:130] Node env1-test-worker-0 is running 0 daemon pod, expected 1
  E1015 09:32:59.590980      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:32:59.755396 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:32:59.756050 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:32:59.759779 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:32:59.768172 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1015 09:32:59.768669 22 fixtures.go:130] Node env1-test-worker-0 is running 0 daemon pod, expected 1
  E1015 09:33:00.591569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:33:00.751687 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:33:00.751843 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:33:00.751998 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:33:00.772719 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1015 09:33:00.772810 22 fixtures.go:130] Node env1-test-worker-0 is running 0 daemon pod, expected 1
  E1015 09:33:01.592236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:33:01.756374 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:33:01.756631 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:33:01.756805 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:33:01.764570 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1015 09:33:01.764638 22 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 10/15/24 09:33:01.795
  STEP: Check that daemon pods images are updated. @ 10/15/24 09:33:01.823
  I1015 09:33:01.834822 22 daemon_set.go:1178] Wrong image for pod: daemon-set-2gkgn. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1015 09:33:01.835609 22 daemon_set.go:1178] Wrong image for pod: daemon-set-74wh4. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1015 09:33:01.836257 22 daemon_set.go:1178] Wrong image for pod: daemon-set-j4vcq. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1015 09:33:01.849850 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:33:01.849939 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:33:01.849987 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1015 09:33:02.592535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:33:02.830554 22 daemon_set.go:1178] Wrong image for pod: daemon-set-2gkgn. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1015 09:33:02.830621 22 daemon_set.go:1178] Wrong image for pod: daemon-set-j4vcq. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1015 09:33:02.839134 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:33:02.839243 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:33:02.839283 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1015 09:33:03.592729      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:33:03.834729 22 daemon_set.go:1178] Wrong image for pod: daemon-set-2gkgn. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1015 09:33:03.834805 22 daemon_set.go:1178] Wrong image for pod: daemon-set-j4vcq. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1015 09:33:03.834832 22 daemon_set.go:1183] Pod daemon-set-x47x8 is not available
  I1015 09:33:03.874805 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:33:03.874943 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:33:03.875244 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1015 09:33:04.593540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:33:04.834378 22 daemon_set.go:1178] Wrong image for pod: daemon-set-2gkgn. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1015 09:33:04.834468 22 daemon_set.go:1178] Wrong image for pod: daemon-set-j4vcq. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1015 09:33:04.834515 22 daemon_set.go:1183] Pod daemon-set-x47x8 is not available
  I1015 09:33:04.850074 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:33:04.850342 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:33:04.850439 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1015 09:33:05.593914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:33:05.834389 22 daemon_set.go:1178] Wrong image for pod: daemon-set-2gkgn. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1015 09:33:05.834574 22 daemon_set.go:1178] Wrong image for pod: daemon-set-j4vcq. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1015 09:33:05.834674 22 daemon_set.go:1183] Pod daemon-set-x47x8 is not available
  I1015 09:33:05.854314 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:33:05.854415 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:33:05.854798 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1015 09:33:06.593992      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:33:06.836298 22 daemon_set.go:1178] Wrong image for pod: daemon-set-j4vcq. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1015 09:33:06.868101 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:33:06.868313 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:33:06.868767 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1015 09:33:07.595193      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:33:07.835190 22 daemon_set.go:1178] Wrong image for pod: daemon-set-j4vcq. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1015 09:33:07.835282 22 daemon_set.go:1183] Pod daemon-set-skjnw is not available
  I1015 09:33:07.847890 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:33:07.847998 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:33:07.848049 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1015 09:33:08.595591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:33:08.859956 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:33:08.860079 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:33:08.860246 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1015 09:33:09.595899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:33:09.836952 22 daemon_set.go:1183] Pod daemon-set-bxhvc is not available
  I1015 09:33:09.847677 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:33:09.847778 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:33:09.847822 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 10/15/24 09:33:09.847
  I1015 09:33:09.862428 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:33:09.862571 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:33:09.862649 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:33:09.872753 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1015 09:33:09.872818 22 fixtures.go:130] Node env1-test-worker-2 is running 0 daemon pod, expected 1
  E1015 09:33:10.596494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:33:10.860394 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:33:10.860494 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:33:10.860583 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:33:10.867928 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1015 09:33:10.868000 22 fixtures.go:130] Node env1-test-worker-2 is running 0 daemon pod, expected 1
  E1015 09:33:11.596891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:33:11.866177 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:33:11.866283 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:33:11.866328 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 09:33:11.874484 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1015 09:33:11.874549 22 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 10/15/24 09:33:11.923
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5173, will wait for the garbage collector to delete the pods @ 10/15/24 09:33:11.923
  I1015 09:33:12.014108 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 21.437686ms
  I1015 09:33:12.114997 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.869041ms
  E1015 09:33:12.597700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:33:13.598964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:33:14.600059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:33:14.824228 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1015 09:33:14.824292 22 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1015 09:33:14.830353 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"53457754"},"items":null}

  I1015 09:33:14.835393 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"53457754"},"items":null}

  I1015 09:33:14.874878 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5173" for this suite. @ 10/15/24 09:33:14.897
• [16.306 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1079
  STEP: Creating a kubernetes client @ 10/15/24 09:33:14.917
  I1015 09:33:14.917698 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename kubectl @ 10/15/24 09:33:14.92
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:33:14.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:33:14.976
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 10/15/24 09:33:14.986
  I1015 09:33:14.986990 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-9779 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I1015 09:33:15.159724 22 builder.go:146] stderr: ""
  I1015 09:33:15.159952 22 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 10/15/24 09:33:15.16
  I1015 09:33:15.161103 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-9779 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I1015 09:33:15.360716 22 builder.go:146] stderr: ""
  I1015 09:33:15.360786 22 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 10/15/24 09:33:15.36
  I1015 09:33:15.376847 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-9779 delete pods e2e-test-httpd-pod'
  E1015 09:33:15.600951      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:33:16.600695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:33:17.601055      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:33:17.989523 22 builder.go:146] stderr: ""
  I1015 09:33:17.990446 22 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1015 09:33:17.991073 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9779" for this suite. @ 10/15/24 09:33:18.01
• [3.107 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 10/15/24 09:33:18.024
  I1015 09:33:18.024442 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename replication-controller @ 10/15/24 09:33:18.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:33:18.073
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:33:18.079
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 10/15/24 09:33:18.088
  E1015 09:33:18.602204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:33:19.603616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When a replication controller with a matching selector is created @ 10/15/24 09:33:20.137
  STEP: Then the orphan pod is adopted @ 10/15/24 09:33:20.149
  E1015 09:33:20.603616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:33:21.166200 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5544" for this suite. @ 10/15/24 09:33:21.178
• [3.170 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 10/15/24 09:33:21.196
  I1015 09:33:21.196120 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename container-runtime @ 10/15/24 09:33:21.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:33:21.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:33:21.239
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 10/15/24 09:33:21.276
  E1015 09:33:21.603914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:33:22.604667      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:33:23.605914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:33:24.607137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:33:25.607294      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:33:26.607575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:33:27.608484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:33:28.608808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:33:29.608920      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:33:30.609953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:33:31.610147      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:33:32.610434      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:33:33.611166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:33:34.611325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:33:35.611614      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:33:36.612641      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:33:37.613403      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:33:38.614377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:33:39.614962      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 10/15/24 09:33:40.484
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 10/15/24 09:33:40.494
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 10/15/24 09:33:40.522
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 10/15/24 09:33:40.522
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 10/15/24 09:33:40.594
  E1015 09:33:40.616256      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:33:41.616611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:33:42.617051      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:33:43.617758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 10/15/24 09:33:43.658
  E1015 09:33:44.618119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:33:45.618353      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 10/15/24 09:33:45.688
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 10/15/24 09:33:45.71
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 10/15/24 09:33:45.71
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 10/15/24 09:33:45.763
  E1015 09:33:46.623714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 10/15/24 09:33:46.788
  E1015 09:33:47.624741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:33:48.625413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:33:49.626009      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 10/15/24 09:33:49.824
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 10/15/24 09:33:49.841
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 10/15/24 09:33:49.841
  I1015 09:33:49.900356 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-220" for this suite. @ 10/15/24 09:33:49.917
• [28.745 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 10/15/24 09:33:49.941
  I1015 09:33:49.942398 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename projected @ 10/15/24 09:33:49.944
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:33:49.98
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:33:49.986
  STEP: Creating a pod to test downward API volume plugin @ 10/15/24 09:33:49.991
  E1015 09:33:50.626834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:33:51.627574      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:33:52.627891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:33:53.627968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 09:33:54.047
  I1015 09:33:54.058945 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod downwardapi-volume-696c3175-d6f8-40e7-a956-616425f7a993 container client-container: <nil>
  STEP: delete the pod @ 10/15/24 09:33:54.074
  I1015 09:33:54.111353 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8893" for this suite. @ 10/15/24 09:33:54.126
• [4.217 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 10/15/24 09:33:54.158
  I1015 09:33:54.158638 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename container-probe @ 10/15/24 09:33:54.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:33:54.207
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:33:54.224
  STEP: Creating pod busybox-9181aca3-18c9-4ee6-b7bc-4412e09230ac in namespace container-probe-4256 @ 10/15/24 09:33:54.236
  E1015 09:33:54.628177      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:33:55.628438      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/15/24 09:33:56.299
  I1015 09:33:56.316931 22 container_probe.go:1749] Initial restart count of pod busybox-9181aca3-18c9-4ee6-b7bc-4412e09230ac is 0
  I1015 09:33:56.323591 22 container_probe.go:1759] Get pod busybox-9181aca3-18c9-4ee6-b7bc-4412e09230ac in namespace container-probe-4256
  E1015 09:33:56.628804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:33:57.629362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:33:58.333371 22 container_probe.go:1759] Get pod busybox-9181aca3-18c9-4ee6-b7bc-4412e09230ac in namespace container-probe-4256
  E1015 09:33:58.629812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:33:59.630308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:34:00.354144 22 container_probe.go:1759] Get pod busybox-9181aca3-18c9-4ee6-b7bc-4412e09230ac in namespace container-probe-4256
  E1015 09:34:00.631543      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:34:01.631552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:34:02.364966 22 container_probe.go:1759] Get pod busybox-9181aca3-18c9-4ee6-b7bc-4412e09230ac in namespace container-probe-4256
  E1015 09:34:02.633000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:34:03.632710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:34:04.377890 22 container_probe.go:1759] Get pod busybox-9181aca3-18c9-4ee6-b7bc-4412e09230ac in namespace container-probe-4256
  E1015 09:34:04.633480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:34:05.633852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:34:06.386688 22 container_probe.go:1759] Get pod busybox-9181aca3-18c9-4ee6-b7bc-4412e09230ac in namespace container-probe-4256
  E1015 09:34:06.634041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:34:07.634909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:34:08.398753 22 container_probe.go:1759] Get pod busybox-9181aca3-18c9-4ee6-b7bc-4412e09230ac in namespace container-probe-4256
  E1015 09:34:08.635151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:34:09.636106      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:34:10.416337 22 container_probe.go:1759] Get pod busybox-9181aca3-18c9-4ee6-b7bc-4412e09230ac in namespace container-probe-4256
  E1015 09:34:10.636759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:34:11.637100      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:34:12.425303 22 container_probe.go:1759] Get pod busybox-9181aca3-18c9-4ee6-b7bc-4412e09230ac in namespace container-probe-4256
  E1015 09:34:12.637620      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:34:13.638767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:34:14.435205 22 container_probe.go:1759] Get pod busybox-9181aca3-18c9-4ee6-b7bc-4412e09230ac in namespace container-probe-4256
  E1015 09:34:14.639677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:34:15.640398      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:34:16.445620 22 container_probe.go:1759] Get pod busybox-9181aca3-18c9-4ee6-b7bc-4412e09230ac in namespace container-probe-4256
  E1015 09:34:16.640959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:34:17.641863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:34:18.459217 22 container_probe.go:1759] Get pod busybox-9181aca3-18c9-4ee6-b7bc-4412e09230ac in namespace container-probe-4256
  E1015 09:34:18.642603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:34:19.643383      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:34:20.471869 22 container_probe.go:1759] Get pod busybox-9181aca3-18c9-4ee6-b7bc-4412e09230ac in namespace container-probe-4256
  E1015 09:34:20.643923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:34:21.644864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:34:22.501573 22 container_probe.go:1759] Get pod busybox-9181aca3-18c9-4ee6-b7bc-4412e09230ac in namespace container-probe-4256
  E1015 09:34:22.646201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:34:23.646537      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:34:24.513434 22 container_probe.go:1759] Get pod busybox-9181aca3-18c9-4ee6-b7bc-4412e09230ac in namespace container-probe-4256
  E1015 09:34:24.647768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:34:25.648494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:34:26.521755 22 container_probe.go:1759] Get pod busybox-9181aca3-18c9-4ee6-b7bc-4412e09230ac in namespace container-probe-4256
  E1015 09:34:26.649123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:34:27.649763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:34:28.535996 22 container_probe.go:1759] Get pod busybox-9181aca3-18c9-4ee6-b7bc-4412e09230ac in namespace container-probe-4256
  E1015 09:34:28.650584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:34:29.651486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:34:30.546950 22 container_probe.go:1759] Get pod busybox-9181aca3-18c9-4ee6-b7bc-4412e09230ac in namespace container-probe-4256
  E1015 09:34:30.651857      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:34:31.652115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:34:32.565310 22 container_probe.go:1759] Get pod busybox-9181aca3-18c9-4ee6-b7bc-4412e09230ac in namespace container-probe-4256
  E1015 09:34:32.652464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:34:33.652806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:34:34.575172 22 container_probe.go:1759] Get pod busybox-9181aca3-18c9-4ee6-b7bc-4412e09230ac in namespace container-probe-4256
  E1015 09:34:34.653780      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:34:35.654519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:34:36.584839 22 container_probe.go:1759] Get pod busybox-9181aca3-18c9-4ee6-b7bc-4412e09230ac in namespace container-probe-4256
  E1015 09:34:36.655048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:34:37.655830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:34:38.592980 22 container_probe.go:1759] Get pod busybox-9181aca3-18c9-4ee6-b7bc-4412e09230ac in namespace container-probe-4256
  E1015 09:34:38.656196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:34:39.656893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:34:40.599620 22 container_probe.go:1759] Get pod busybox-9181aca3-18c9-4ee6-b7bc-4412e09230ac in namespace container-probe-4256
  E1015 09:34:40.657603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:34:41.658197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:34:42.611348 22 container_probe.go:1759] Get pod busybox-9181aca3-18c9-4ee6-b7bc-4412e09230ac in namespace container-probe-4256
  E1015 09:34:42.658722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:34:43.659724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:34:44.628427 22 container_probe.go:1759] Get pod busybox-9181aca3-18c9-4ee6-b7bc-4412e09230ac in namespace container-probe-4256
  E1015 09:34:44.660500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:34:45.661182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:34:46.650541 22 container_probe.go:1759] Get pod busybox-9181aca3-18c9-4ee6-b7bc-4412e09230ac in namespace container-probe-4256
  I1015 09:34:46.650631 22 container_probe.go:1763] Restart count of pod container-probe-4256/busybox-9181aca3-18c9-4ee6-b7bc-4412e09230ac is now 1 (50.333601703s elapsed)
  STEP: deleting the pod @ 10/15/24 09:34:46.65
  E1015 09:34:46.661775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:34:46.724578 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4256" for this suite. @ 10/15/24 09:34:46.745
• [52.621 seconds]
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 10/15/24 09:34:46.779
  I1015 09:34:46.779857 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename chunking @ 10/15/24 09:34:46.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:34:46.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:34:46.857
  STEP: creating a large number of resources @ 10/15/24 09:34:46.867
  E1015 09:34:47.662065      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:34:48.663012      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:34:49.663569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:34:50.663647      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:34:51.664476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:34:52.664528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:34:53.664600      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:34:54.665051      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:34:55.665162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:34:56.665714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:34:57.665723      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:34:58.667290      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:34:59.667771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:00.668622      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:01.669189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:02.669494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:03.669925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 10/15/24 09:35:04.495
  I1015 09:35:04.543456 22 chunking.go:163] Retrieved 40/40 results with rv 53458812 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0NTg4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 10/15/24 09:35:04.544
  E1015 09:35:04.670500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:05.671489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:06.671659      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:07.671859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:08.672706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:09.672973      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:10.673275      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:11.673402      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:12.673665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:13.674586      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:14.674889      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:15.675009      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:16.676057      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:17.676144      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:18.676376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:19.677483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:20.677740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:21.678539      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:22.678985      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:23.679941      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:35:24.559638 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0NTg4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1015 09:35:24.680246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:25.680761      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:26.680933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:27.681520      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:28.682502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:29.682898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:30.683305      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:31.685819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:32.686147      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:33.687051      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:34.688100      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:35.688556      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:36.689718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:37.692418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:38.690751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:39.691299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:40.692183      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:41.692782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:42.694273      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:43.694922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:35:44.560598 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0NTg4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1015 09:35:44.696160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:45.696935      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:46.698136      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:47.698771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:48.699360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:49.700093      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:50.700503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:51.700923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:52.701408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:53.702413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:54.702911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:55.703277      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:56.704140      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:57.704796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:58.705559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:35:59.705952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:00.706382      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:01.706832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:02.707307      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:03.708095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:36:04.555987 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0NTg4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1015 09:36:04.708576      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:05.708999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:06.709590      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:07.710629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:08.710994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:09.711266      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:10.711472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:11.711828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:12.711856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:13.712807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:14.713004      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:15.713454      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:16.714324      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:17.714622      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:18.715700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:19.715878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:20.716266      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:21.716592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:22.716824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:23.717876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:36:24.561010 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0NTg4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1015 09:36:24.718523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:25.719040      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:26.720406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:27.720335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:28.720519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:29.720778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:30.720922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:31.721677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:32.722331      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:33.722969      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:34.723485      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:35.723904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:36.724856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:37.726355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:38.727086      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:39.727359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:40.728485      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:41.728918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:42.729087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:43.730484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:36:44.570688 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0NTg4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1015 09:36:44.730631      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:45.731476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:46.732441      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:47.732986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:48.733707      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:49.735754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:50.735958      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:51.736161      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:52.737196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:53.737496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:54.737773      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:55.738768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:56.740227      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:57.740046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:58.740960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:36:59.741470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:00.742417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:01.742845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:02.743174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:03.743697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:37:04.566516 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0NTg4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1015 09:37:04.743789      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:05.743910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:06.744783      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:07.745401      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:08.746288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:09.746655      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:10.747039      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:11.747331      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:12.747804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:13.748845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:14.749198      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:15.749634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:16.750219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:17.750633      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:18.751879      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:19.752305      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:20.752731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:21.753070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:22.754071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:23.757177      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:37:24.565430 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0NTg4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1015 09:37:24.757419      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:25.757779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:26.757942      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:27.758818      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:28.759532      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:29.760374      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:30.760685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:31.760741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:32.761181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:33.762010      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:34.762556      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:35.763605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:36.763915      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:37.763966      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:38.765092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:39.765393      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:40.765397      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:41.765723      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:42.765870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:43.766136      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:37:44.562282 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0NTg4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1015 09:37:44.766494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:45.766660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:46.767637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:47.767727      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:48.768543      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:49.768983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:50.769734      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:51.770465      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:52.771164      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:53.771661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:54.772295      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:55.773251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:56.773992      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:57.774389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:58.774942      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:37:59.775327      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:00.775797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:01.777011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:02.777342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:03.777909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:38:04.569087 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0NTg4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1015 09:38:04.778130      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:05.778637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:06.779579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:07.779833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:08.780810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:09.781446      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:10.781886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:11.782280      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:12.782724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:13.783523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:14.783924      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:15.784307      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:16.785069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:17.785501      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:18.786571      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:19.786988      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:20.787374      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:21.788129      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:22.788449      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:23.789182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:38:24.561166 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0NTg4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1015 09:38:24.789817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:25.790237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:26.791270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:27.791606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:28.791679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:29.791936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:30.792434      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:31.792851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:32.793312      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:33.794087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:34.794434      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:35.794953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:36.795709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:37.795714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:38.796391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:39.796795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:40.797717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:41.798105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:42.798640      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:43.799218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:38:44.565748 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0NTg4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1015 09:38:44.799258      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:45.799500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:46.799891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:47.800445      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:48.800556      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:49.801432      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:50.801692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:51.802129      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:52.802561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:53.803237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:54.803800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:55.804183      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:56.804764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:57.805095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:58.805920      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:38:59.806306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:00.806560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:01.806945      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:02.807399      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:03.807675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:39:04.563826 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0NTg4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1015 09:39:04.808639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:05.809177      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:06.810064      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:07.810330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:08.810892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:09.811832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:10.812305      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:11.812922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:12.813310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:13.813736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:14.814158      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:15.814599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:16.814927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:17.815368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:18.816171      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:19.816415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:20.816884      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:21.817187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:22.817400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:23.817579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:39:24.557111 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0NTg4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1015 09:39:24.817996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:25.818358      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:26.818562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:27.819341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:28.820000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:29.820206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:30.820946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:31.821242      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:32.821679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:33.822547      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:34.822902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:35.823517      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:36.824370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:37.824803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:38.825607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:39.826028      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:40.826535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:41.827031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:42.827358      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:43.827938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:39:44.563319 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0NTg4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1015 09:39:44.828197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:45.829150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:46.829134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:47.829281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:48.829520      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:49.829742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:50.830036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:51.830235      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:52.830503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:53.830815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:54.830957      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:55.831243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:56.831912      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:57.832124      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:58.832233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:39:59.832552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:00.833780      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:01.834163      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:02.834350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:03.834445      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:40:04.554525 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0NTg4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1015 09:40:04.835318      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:05.835635      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:06.836311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:07.836757      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:08.837005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:09.837401      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:10.837593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:11.837792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:12.838157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:13.838430      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:14.838543      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:15.838618      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:16.838813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:17.839219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:18.839592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:19.839781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:20.840220      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:21.840459      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:22.840611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:23.841310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:40:24.553843 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0NTg4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1015 09:40:24.842005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:25.842580      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:26.843580      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:27.844130      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:28.844956      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:29.845319      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:30.845599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:31.846183      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:32.846685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:33.847520      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:34.849770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:35.849895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:36.849979      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:37.850384      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:38.850564      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:39.850931      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:40.851312      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:41.851804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:42.852155      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:43.854025      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:40:44.557775 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0NTg4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1015 09:40:44.853443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:45.853789      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:46.854303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:47.855084      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:48.856121      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:49.856366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:50.857466      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:51.858040      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:52.858304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:53.858599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:54.859320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:55.859922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:56.860666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:57.861088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:58.861324      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:40:59.861775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:00.862744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:01.863089      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:02.863544      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:03.864410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:41:04.562772 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0NTg4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1015 09:41:04.865207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:05.865470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:06.865660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:07.865807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:08.865985      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:09.866241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:10.866552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:11.866871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:12.867389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:13.868315      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:14.868790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:15.869260      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:16.870528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:17.870667      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:18.870771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:19.871192      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:20.871944      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:21.872228      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:22.872827      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:23.873775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:41:24.561094 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0NTg4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1015 09:41:24.874846      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:25.875375      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:26.875536      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:27.875794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:28.876060      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:29.876831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:30.877047      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:31.877221      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:32.877440      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:33.877885      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:34.877944      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:35.878217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:36.878404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:37.878916      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:38.878945      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:39.879122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:40.879703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:41.880140      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:42.880567      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:43.881524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:41:44.559772 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0NTg4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1015 09:41:44.881883      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:45.882493      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:46.883496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:47.883989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:48.883880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:49.884284      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:50.884692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:51.885144      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:52.885692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:53.886089      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:54.886180      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:55.886519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:56.886713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:57.886840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:58.887034      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:41:59.887663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:00.887585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:01.887946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:02.888159      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:03.888386      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:42:04.570070 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0NTg4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1015 09:42:04.889537      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:05.889447      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:06.890407      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:07.890939      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:08.891142      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:09.891397      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:10.892064      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:11.892691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:12.892958      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:13.893740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:14.894123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:15.895018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:16.895671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:17.896079      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:18.896964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:19.897355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:20.897731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:21.898131      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:22.898447      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:23.899056      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:42:24.558331 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0NTg4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1015 09:42:24.899637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:25.899921      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:26.900610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:27.901489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:28.901408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:29.901955      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:30.902089      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:31.902309      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:32.902762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:33.903179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:34.903213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:35.903370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:36.903741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:37.904148      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:38.904080      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:39.904496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:40.904539      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:41.904806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:42.905064      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:43.905376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:42:44.569814 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0NTg4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1015 09:42:44.905796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:45.906997      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:46.906991      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:47.907750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:48.908498      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:49.909246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:50.909659      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:51.910043      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:52.910474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:53.910593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:54.910762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:55.911579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:56.912634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:57.913313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:58.913468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:42:59.914010      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:00.914605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:01.914971      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:02.915514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:03.916608      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:43:04.575649 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0NTg4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1015 09:43:04.917515      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:05.917711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:06.917919      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:07.918211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:08.918423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:09.918787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:10.918722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:11.919056      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:12.919244      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:13.919389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:14.919611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:15.919888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:16.920354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:17.920430      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:18.920661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:19.921081      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:20.921408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:21.921870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:22.922389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:23.922622      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:43:24.562437 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0NTg4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1015 09:43:24.922778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:25.923363      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:26.923649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:27.924475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:28.924823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:29.925532      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:30.926078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:31.926335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:32.926864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:33.927785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:34.928356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:35.928786      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:36.929511      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:37.930497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:38.931306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:39.931847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:40.931933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:41.933217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:42.933298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:43.933977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:43:44.560056 22 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0NTg4MTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E1015 09:43:44.935173      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:45.935610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:46.936246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:47.936894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:48.937050      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:49.937832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:50.938214      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:51.939406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:52.940623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:53.940910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:54.941655      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:55.941863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:56.942160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:57.942861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:58.943754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:43:59.944782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:44:00.944998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:44:01.945395      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:44:02.945565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:44:03.945644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:44:04.563692 22 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I1015 09:44:04.564607 22 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 10/15/24 09:44:04.565
  STEP: retrieving all remaining pages @ 10/15/24 09:44:04.587
  I1015 09:44:04.600982 22 chunking.go:221] Retrieved 40/40 results with rv 53460714 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0NjA3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I1015 09:44:04.614506 22 chunking.go:221] Retrieved 40/40 results with rv 53460714 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0NjA3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I1015 09:44:04.634096 22 chunking.go:221] Retrieved 40/40 results with rv 53460714 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0NjA3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I1015 09:44:04.645841 22 chunking.go:221] Retrieved 40/40 results with rv 53460714 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0NjA3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I1015 09:44:04.658794 22 chunking.go:221] Retrieved 40/40 results with rv 53460714 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0NjA3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I1015 09:44:04.669510 22 chunking.go:221] Retrieved 40/40 results with rv 53460714 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0NjA3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I1015 09:44:04.676861 22 chunking.go:221] Retrieved 40/40 results with rv 53460714 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0NjA3MTQsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I1015 09:44:04.688447 22 chunking.go:221] Retrieved 40/40 results with rv 53460714 and continue 
  I1015 09:44:04.690637 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-8455" for this suite. @ 10/15/24 09:44:04.707
• [557.944 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 10/15/24 09:44:04.725
  I1015 09:44:04.725984 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename webhook @ 10/15/24 09:44:04.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:44:04.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:44:04.797
  STEP: Setting up server cert @ 10/15/24 09:44:04.858
  E1015 09:44:04.946701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/15/24 09:44:05.845
  STEP: Deploying the webhook pod @ 10/15/24 09:44:05.862
  STEP: Wait for the deployment to be ready @ 10/15/24 09:44:05.888
  I1015 09:44:05.918957 22 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1015 09:44:05.947028      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:44:06.947667      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/15/24 09:44:07.938
  E1015 09:44:07.948508      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying the service has paired with the endpoint @ 10/15/24 09:44:07.964
  E1015 09:44:08.949170      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:44:08.965034 22 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1015 09:44:08.977225 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  E1015 09:44:09.949891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:44:10.950692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:44:11.951521      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:44:12.952257      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:44:13.952870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-6352-crds.webhook.example.com via the AdmissionRegistration API @ 10/15/24 09:44:14.527
  I1015 09:44:14.601581 22 webhook.go:2672] Waiting for webhook configuration to be ready...
  STEP: Creating a custom resource while v1 is storage version @ 10/15/24 09:44:14.728
  E1015 09:44:14.953608      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:44:15.954597      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 10/15/24 09:44:16.813
  STEP: Patching the custom resource while v2 is storage version @ 10/15/24 09:44:16.843
  E1015 09:44:16.954777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:44:17.640626 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7176" for this suite. @ 10/15/24 09:44:17.658
  STEP: Destroying namespace "webhook-markers-4348" for this suite. @ 10/15/24 09:44:17.686
• [12.985 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:889
  STEP: Creating a kubernetes client @ 10/15/24 09:44:17.709
  I1015 09:44:17.709715 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename resourcequota @ 10/15/24 09:44:17.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:44:17.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:44:17.766
  STEP: Creating a ResourceQuota @ 10/15/24 09:44:17.772
  STEP: Getting a ResourceQuota @ 10/15/24 09:44:17.785
  STEP: Updating a ResourceQuota @ 10/15/24 09:44:17.794
  STEP: Verifying a ResourceQuota was modified @ 10/15/24 09:44:17.841
  STEP: Deleting a ResourceQuota @ 10/15/24 09:44:17.859
  STEP: Verifying the deleted ResourceQuota @ 10/15/24 09:44:17.88
  I1015 09:44:17.902767 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1121" for this suite. @ 10/15/24 09:44:17.913
• [0.229 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:78
  STEP: Creating a kubernetes client @ 10/15/24 09:44:17.948
  I1015 09:44:17.948579 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename resourcequota @ 10/15/24 09:44:17.952
  E1015 09:44:17.955357      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:44:18.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:44:18.011
  STEP: Counting existing ResourceQuota @ 10/15/24 09:44:18.022
  E1015 09:44:18.955753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:44:19.956184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:44:20.956679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:44:21.956416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:44:22.957105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 10/15/24 09:44:23.031
  STEP: Ensuring resource quota status is calculated @ 10/15/24 09:44:23.045
  E1015 09:44:23.959118      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:44:24.959298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:44:25.054682 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4133" for this suite. @ 10/15/24 09:44:25.066
• [7.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3136
  STEP: Creating a kubernetes client @ 10/15/24 09:44:25.081
  I1015 09:44:25.081751 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename services @ 10/15/24 09:44:25.084
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:44:25.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:44:25.134
  STEP: fetching services @ 10/15/24 09:44:25.139
  I1015 09:44:25.150940 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2988" for this suite. @ 10/15/24 09:44:25.164
• [0.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 10/15/24 09:44:25.18
  I1015 09:44:25.181050 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename tables @ 10/15/24 09:44:25.186
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:44:25.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:44:25.248
  I1015 09:44:25.259877 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-866" for this suite. @ 10/15/24 09:44:25.27
• [0.104 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3345
  STEP: Creating a kubernetes client @ 10/15/24 09:44:25.284
  I1015 09:44:25.284980 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename services @ 10/15/24 09:44:25.288
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:44:25.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:44:25.341
  STEP: creating a Service @ 10/15/24 09:44:25.355
  STEP: watching for the Service to be added @ 10/15/24 09:44:25.416
  I1015 09:44:25.420600 22 service.go:3397] Found Service test-service-7g74q in namespace services-3487 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 32282}]
  I1015 09:44:25.420677 22 service.go:3404] Service test-service-7g74q created
  STEP: Getting /status @ 10/15/24 09:44:25.42
  I1015 09:44:25.437032 22 service.go:3415] Service test-service-7g74q has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 10/15/24 09:44:25.437
  STEP: watching for the Service to be patched @ 10/15/24 09:44:25.459
  I1015 09:44:25.469494 22 service.go:3438] observed Service test-service-7g74q in namespace services-3487 with annotations: map[] & LoadBalancer: {[]}
  I1015 09:44:25.470573 22 service.go:3441] Found Service test-service-7g74q in namespace services-3487 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc0042fc1a0 []}]}
  I1015 09:44:25.470644 22 service.go:3448] Service test-service-7g74q has service status patched
  STEP: updating the ServiceStatus @ 10/15/24 09:44:25.47
  I1015 09:44:25.492967 22 service.go:3468] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 10/15/24 09:44:25.493
  I1015 09:44:25.498120 22 service.go:3479] Observed Service test-service-7g74q in namespace services-3487 with annotations: map[] & Conditions: {[]}
  I1015 09:44:25.498602 22 service.go:3494] Observed event: &Service{ObjectMeta:{test-service-7g74q  services-3487  492f99e0-be14-42dd-a17b-fb908f5b6490 53461313 0 2024-10-15 09:44:25 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-10-15 09:44:25 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:allocateLoadBalancerNodePorts":{},"f:externalTrafficPolicy":{},"f:internalTrafficPolicy":{},"f:loadBalancerClass":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-10-15 09:44:25 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:32282,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.233.43.237,Type:LoadBalancer,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:Cluster,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.233.43.237],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:*true,LoadBalancerClass:*example.com/internal-vip,InternalTrafficPolicy:*Cluster,TrafficDistribution:nil,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,IPMode:*VIP,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  I1015 09:44:25.498819 22 service.go:3486] Found Service test-service-7g74q in namespace services-3487 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1015 09:44:25.498893 22 service.go:3498] Service test-service-7g74q has service status updated
  STEP: patching the service @ 10/15/24 09:44:25.499
  STEP: watching for the Service to be patched @ 10/15/24 09:44:25.56
  I1015 09:44:25.566466 22 service.go:3521] observed Service test-service-7g74q in namespace services-3487 with labels: map[test-service-static:true]
  I1015 09:44:25.566553 22 service.go:3521] observed Service test-service-7g74q in namespace services-3487 with labels: map[test-service-static:true]
  I1015 09:44:25.566617 22 service.go:3521] observed Service test-service-7g74q in namespace services-3487 with labels: map[test-service-static:true]
  I1015 09:44:25.566845 22 service.go:3524] Found Service test-service-7g74q in namespace services-3487 with labels: map[test-service:patched test-service-static:true]
  I1015 09:44:25.566892 22 service.go:3531] Service test-service-7g74q patched
  STEP: deleting the service @ 10/15/24 09:44:25.566
  STEP: watching for the Service to be deleted @ 10/15/24 09:44:25.603
  I1015 09:44:25.608089 22 service.go:3555] Observed event: ADDED
  I1015 09:44:25.608505 22 service.go:3555] Observed event: MODIFIED
  I1015 09:44:25.609174 22 service.go:3555] Observed event: MODIFIED
  I1015 09:44:25.609530 22 service.go:3555] Observed event: MODIFIED
  I1015 09:44:25.610237 22 service.go:3551] Found Service test-service-7g74q in namespace services-3487 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I1015 09:44:25.610783 22 service.go:3560] Service test-service-7g74q deleted
  I1015 09:44:25.611465 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3487" for this suite. @ 10/15/24 09:44:25.623
• [0.350 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 10/15/24 09:44:25.638
  I1015 09:44:25.639499 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename projected @ 10/15/24 09:44:25.642
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:44:25.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:44:25.681
  STEP: Creating a pod to test downward API volume plugin @ 10/15/24 09:44:25.692
  E1015 09:44:25.960157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:44:26.960795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:44:27.961160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:44:28.961522      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 09:44:29.74
  I1015 09:44:29.747949 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod downwardapi-volume-4e26beb2-38b9-4871-af20-b451c7ff4c35 container client-container: <nil>
  STEP: delete the pod @ 10/15/24 09:44:29.788
  I1015 09:44:29.830982 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1270" for this suite. @ 10/15/24 09:44:29.843
• [4.228 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 10/15/24 09:44:29.872
  I1015 09:44:29.872475 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 10/15/24 09:44:29.878
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:44:29.937
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:44:29.943
  STEP: create the container to handle the HTTPGet hook request. @ 10/15/24 09:44:29.961
  E1015 09:44:29.961678      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:44:30.961859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:44:31.962313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 10/15/24 09:44:32.003
  E1015 09:44:32.962549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:44:33.962845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 10/15/24 09:44:34.046
  STEP: delete the pod with lifecycle hook @ 10/15/24 09:44:34.091
  E1015 09:44:34.963306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:44:35.964196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:44:36.964689      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:44:37.965853      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:44:38.156952 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-3208" for this suite. @ 10/15/24 09:44:38.172
• [8.321 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 10/15/24 09:44:38.193
  I1015 09:44:38.193825 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename aggregateddiscovery @ 10/15/24 09:44:38.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:44:38.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:44:38.25
  I1015 09:44:38.274612 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-2862" for this suite. @ 10/15/24 09:44:38.297
• [0.156 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 10/15/24 09:44:38.35
  I1015 09:44:38.351045 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename subpath @ 10/15/24 09:44:38.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:44:38.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:44:38.414
  STEP: Setting up data @ 10/15/24 09:44:38.42
  STEP: Creating pod pod-subpath-test-configmap-q5fm @ 10/15/24 09:44:38.44
  STEP: Creating a pod to test atomic-volume-subpath @ 10/15/24 09:44:38.441
  E1015 09:44:38.966673      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:44:39.966830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:44:40.967045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:44:41.967646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:44:42.967918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:44:43.968857      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:44:44.969855      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:44:45.969295      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:44:46.970105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:44:47.970803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:44:48.971920      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:44:49.972420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:44:50.972702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:44:51.973207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:44:52.974078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:44:53.974522      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:44:54.975355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:44:55.976034      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:44:56.976238      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:44:57.977261      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:44:58.977920      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:44:59.978154      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:45:00.978335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:45:01.978788      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 09:45:02.636
  I1015 09:45:02.643949 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-subpath-test-configmap-q5fm container test-container-subpath-configmap-q5fm: <nil>
  STEP: delete the pod @ 10/15/24 09:45:02.659
  STEP: Deleting pod pod-subpath-test-configmap-q5fm @ 10/15/24 09:45:02.703
  I1015 09:45:02.704173 22 delete.go:62] Deleting pod "pod-subpath-test-configmap-q5fm" in namespace "subpath-5378"
  I1015 09:45:02.711642 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5378" for this suite. @ 10/15/24 09:45:02.719
• [24.393 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 10/15/24 09:45:02.743
  I1015 09:45:02.743817 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename csiinlinevolumes @ 10/15/24 09:45:02.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:45:02.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:45:02.782
  STEP: creating @ 10/15/24 09:45:02.787
  STEP: getting @ 10/15/24 09:45:02.821
  STEP: listing in namespace @ 10/15/24 09:45:02.829
  STEP: patching @ 10/15/24 09:45:02.834
  STEP: deleting @ 10/15/24 09:45:02.867
  I1015 09:45:02.889724 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-1440" for this suite. @ 10/15/24 09:45:02.902
• [0.172 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 10/15/24 09:45:02.916
  I1015 09:45:02.916157 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename gc @ 10/15/24 09:45:02.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:45:02.958
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:45:02.964
  E1015 09:45:02.979236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:45:03.066073 22 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"8ab7a4b6-2590-480b-92ee-857bdaacc8e2", Controller:(*bool)(0xc003f7392a), BlockOwnerDeletion:(*bool)(0xc003f7392b)}}
  I1015 09:45:03.091384 22 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"a6b013b4-8459-4e0c-97b8-b1dc49342069", Controller:(*bool)(0xc00795ae5a), BlockOwnerDeletion:(*bool)(0xc00795ae5b)}}
  I1015 09:45:03.113317 22 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"b1fa3615-9e07-47b6-898b-29fd3400b28b", Controller:(*bool)(0xc00795b072), BlockOwnerDeletion:(*bool)(0xc00795b073)}}
  E1015 09:45:03.979345      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:45:04.979892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:45:05.980487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:45:06.981473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:45:07.982343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:45:08.146068 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8706" for this suite. @ 10/15/24 09:45:08.162
• [5.258 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 10/15/24 09:45:08.176
  I1015 09:45:08.176385 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename endpointslice @ 10/15/24 09:45:08.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:45:08.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:45:08.226
  E1015 09:45:08.982976      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:45:09.982998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:45:10.396767 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-5074" for this suite. @ 10/15/24 09:45:10.408
• [2.256 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:51
  STEP: Creating a kubernetes client @ 10/15/24 09:45:10.432
  I1015 09:45:10.432399 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename kubelet-test @ 10/15/24 09:45:10.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:45:10.499
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:45:10.51
  E1015 09:45:10.983342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:45:11.983722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:45:12.587785 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8778" for this suite. @ 10/15/24 09:45:12.598
• [2.189 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 10/15/24 09:45:12.624
  I1015 09:45:12.624763 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 10/15/24 09:45:12.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:45:12.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:45:12.679
  STEP: create the container to handle the HTTPGet hook request. @ 10/15/24 09:45:12.698
  E1015 09:45:12.984594      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:45:13.985276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:45:14.985284      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:45:15.985577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 10/15/24 09:45:16.761
  E1015 09:45:16.986434      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:45:17.986609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:45:18.987271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:45:19.987885      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 10/15/24 09:45:20.812
  E1015 09:45:20.988853      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:45:21.989644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 10/15/24 09:45:22.844
  I1015 09:45:22.860265 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-9863" for this suite. @ 10/15/24 09:45:22.871
• [10.291 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1284
  STEP: Creating a kubernetes client @ 10/15/24 09:45:22.916
  I1015 09:45:22.916191 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename services @ 10/15/24 09:45:22.919
  E1015 09:45:22.990359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:45:23.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:45:23.02
  STEP: creating service nodeport-test with type=NodePort in namespace services-4200 @ 10/15/24 09:45:23.033
  STEP: creating replication controller nodeport-test in namespace services-4200 @ 10/15/24 09:45:23.071
  I1015 09:45:23.108354      22 runners.go:198] Created replication controller with name: nodeport-test, namespace: services-4200, replica count: 2
  E1015 09:45:23.991559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:45:24.993227      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:45:25.993321      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:45:26.159297      22 runners.go:198] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1015 09:45:26.159388 22 resource.go:361] Creating new exec pod
  E1015 09:45:26.993467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:45:27.994441      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:45:28.994616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:45:29.209576 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-4200 exec execpodfw9x9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I1015 09:45:29.597383 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I1015 09:45:29.597494 22 builder.go:147] stdout: "nodeport-test-m2hvh"
  I1015 09:45:29.597618 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-4200 exec execpodfw9x9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.61.169 80'
  I1015 09:45:29.907326 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.61.169 80\nConnection to 10.233.61.169 80 port [tcp/http] succeeded!\n"
  I1015 09:45:29.907395 22 builder.go:147] stdout: ""
  E1015 09:45:29.994691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:45:30.598446 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-4200 exec execpodfw9x9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.61.169 80'
  I1015 09:45:30.896340 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.61.169 80\nConnection to 10.233.61.169 80 port [tcp/http] succeeded!\n"
  I1015 09:45:30.896483 22 builder.go:147] stdout: "nodeport-test-m2hvh"
  I1015 09:45:30.896945 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-4200 exec execpodfw9x9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.61.1.201 31979'
  E1015 09:45:30.994755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:45:31.223045 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.61.1.201 31979\nConnection to 10.61.1.201 31979 port [tcp/*] succeeded!\n"
  I1015 09:45:31.223381 22 builder.go:147] stdout: "nodeport-test-m2hvh"
  I1015 09:45:31.223651 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-4200 exec execpodfw9x9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.61.1.202 31979'
  I1015 09:45:31.562645 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.61.1.202 31979\nConnection to 10.61.1.202 31979 port [tcp/*] succeeded!\n"
  I1015 09:45:31.562929 22 builder.go:147] stdout: ""
  E1015 09:45:31.995331      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:45:32.224470 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-4200 exec execpodfw9x9 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.61.1.202 31979'
  I1015 09:45:32.595763 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.61.1.202 31979\nConnection to 10.61.1.202 31979 port [tcp/*] succeeded!\n"
  I1015 09:45:32.595914 22 builder.go:147] stdout: "nodeport-test-ghws2"
  I1015 09:45:32.596207 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4200" for this suite. @ 10/15/24 09:45:32.613
• [9.712 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 10/15/24 09:45:32.628
  I1015 09:45:32.629002 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename webhook @ 10/15/24 09:45:32.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:45:32.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:45:32.688
  STEP: Setting up server cert @ 10/15/24 09:45:32.765
  E1015 09:45:32.996690      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:45:33.997005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/15/24 09:45:34.168
  STEP: Deploying the webhook pod @ 10/15/24 09:45:34.203
  STEP: Wait for the deployment to be ready @ 10/15/24 09:45:34.274
  I1015 09:45:34.302775 22 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1015 09:45:34.997164      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:45:35.997275      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:45:36.328577 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 15, 9, 45, 34, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 9, 45, 34, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 15, 9, 45, 34, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 9, 45, 34, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1015 09:45:36.998207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:45:37.999768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/15/24 09:45:38.336
  STEP: Verifying the service has paired with the endpoint @ 10/15/24 09:45:38.356
  E1015 09:45:39.000715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:45:39.356604 22 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 10/15/24 09:45:39.372
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/15/24 09:45:39.411
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 10/15/24 09:45:39.428
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/15/24 09:45:39.457
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 10/15/24 09:45:39.482
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/15/24 09:45:39.499
  I1015 09:45:39.634710 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1250" for this suite. @ 10/15/24 09:45:39.649
  STEP: Destroying namespace "webhook-markers-5119" for this suite. @ 10/15/24 09:45:39.67
• [7.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 10/15/24 09:45:39.696
  I1015 09:45:39.696222 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename var-expansion @ 10/15/24 09:45:39.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:45:39.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:45:39.77
  E1015 09:45:40.001265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:45:41.001314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:45:41.880145 22 delete.go:62] Deleting pod "var-expansion-cb04fbf9-a39d-4ad9-a0cc-761670622765" in namespace "var-expansion-9283"
  I1015 09:45:41.902698 22 delete.go:70] Wait up to 5m0s for pod "var-expansion-cb04fbf9-a39d-4ad9-a0cc-761670622765" to be fully deleted
  E1015 09:45:42.002241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:45:43.003190      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:45:44.004207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:45:45.004273      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:45:45.948870 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9283" for this suite. @ 10/15/24 09:45:45.962
• [6.285 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 10/15/24 09:45:45.982
  I1015 09:45:45.982644 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename podtemplate @ 10/15/24 09:45:45.985
  E1015 09:45:46.005436      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:45:46.045
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:45:46.055
  I1015 09:45:46.126511 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3112" for this suite. @ 10/15/24 09:45:46.137
• [0.168 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 10/15/24 09:45:46.159
  I1015 09:45:46.159546 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename var-expansion @ 10/15/24 09:45:46.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:45:46.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:45:46.215
  STEP: creating the pod @ 10/15/24 09:45:46.221
  STEP: waiting for pod running @ 10/15/24 09:45:46.258
  E1015 09:45:47.006188      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:45:48.006235      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:45:49.006930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:45:50.007541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 10/15/24 09:45:50.281
  I1015 09:45:50.290097 22 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-8022 PodName:var-expansion-3b51ced1-46ac-4372-8faa-2446a573a59f ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1015 09:45:50.290183 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  I1015 09:45:50.292208 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I1015 09:45:50.292537 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/var-expansion-8022/pods/var-expansion-3b51ced1-46ac-4372-8faa-2446a573a59f/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 10/15/24 09:45:50.43
  I1015 09:45:50.439571 22 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-8022 PodName:var-expansion-3b51ced1-46ac-4372-8faa-2446a573a59f ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1015 09:45:50.439833 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  I1015 09:45:50.440995 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I1015 09:45:50.441270 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/var-expansion-8022/pods/var-expansion-3b51ced1-46ac-4372-8faa-2446a573a59f/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 10/15/24 09:45:50.595
  E1015 09:45:51.008095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:45:51.137028 22 pod_client.go:141] Successfully updated pod "var-expansion-3b51ced1-46ac-4372-8faa-2446a573a59f"
  STEP: waiting for annotated pod running @ 10/15/24 09:45:51.137
  STEP: deleting the pod gracefully @ 10/15/24 09:45:51.145
  I1015 09:45:51.145507 22 delete.go:62] Deleting pod "var-expansion-3b51ced1-46ac-4372-8faa-2446a573a59f" in namespace "var-expansion-8022"
  I1015 09:45:51.162280 22 delete.go:70] Wait up to 5m0s for pod "var-expansion-3b51ced1-46ac-4372-8faa-2446a573a59f" to be fully deleted
  E1015 09:45:52.008430      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:45:53.009494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:45:54.009476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:45:55.009668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:45:56.009938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:45:57.010444      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:45:58.011216      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:45:59.011540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:00.011922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:01.012470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:02.012691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:03.013765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:04.014226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:05.015829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:06.016004      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:07.016348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:08.017202      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:09.017697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:10.018030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:11.018166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:12.018383      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:13.018762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:14.018840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:15.019064      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:16.019538      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:17.020605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:18.021435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:19.022039      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:20.022246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:21.022369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:22.022609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:23.023552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:46:23.358202 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8022" for this suite. @ 10/15/24 09:46:23.369
• [37.222 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1497
  STEP: Creating a kubernetes client @ 10/15/24 09:46:23.382
  I1015 09:46:23.382268 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename services @ 10/15/24 09:46:23.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:46:23.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:46:23.43
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-9259 @ 10/15/24 09:46:23.436
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 10/15/24 09:46:23.459
  STEP: creating service externalsvc in namespace services-9259 @ 10/15/24 09:46:23.46
  STEP: creating replication controller externalsvc in namespace services-9259 @ 10/15/24 09:46:23.488
  I1015 09:46:23.503762      22 runners.go:198] Created replication controller with name: externalsvc, namespace: services-9259, replica count: 2
  E1015 09:46:24.024356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:25.024549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:26.024762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:46:26.555475      22 runners.go:198] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 10/15/24 09:46:26.562
  I1015 09:46:26.583088 22 resource.go:361] Creating new exec pod
  E1015 09:46:27.025998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:28.026121      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:46:28.643582 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-9259 exec execpodtkbqc -- /bin/sh -x -c nslookup clusterip-service.services-9259.svc.cluster.local'
  E1015 09:46:29.027311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:46:29.054999 22 builder.go:146] stderr: "+ nslookup clusterip-service.services-9259.svc.cluster.local\n"
  I1015 09:46:29.055091 22 builder.go:147] stdout: "Server:\t\t169.254.25.10\nAddress:\t169.254.25.10#53\n\nclusterip-service.services-9259.svc.cluster.local\tcanonical name = externalsvc.services-9259.svc.cluster.local.\nName:\texternalsvc.services-9259.svc.cluster.local\nAddress: 10.233.9.183\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-9259, will wait for the garbage collector to delete the pods @ 10/15/24 09:46:29.055
  I1015 09:46:29.130799 22 resources.go:139] Deleting ReplicationController externalsvc took: 14.606794ms
  I1015 09:46:29.231381 22 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.579059ms
  E1015 09:46:30.027467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:31.028193      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:32.028274      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:46:32.682848 22 service.go:1506] Cleaning up the ClusterIP to ExternalName test service
  I1015 09:46:32.711700 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9259" for this suite. @ 10/15/24 09:46:32.725
• [9.365 seconds]
------------------------------
SS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 10/15/24 09:46:32.749
  I1015 09:46:32.749820 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename cronjob @ 10/15/24 09:46:32.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:46:32.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:46:32.831
  STEP: Creating a ForbidConcurrent cronjob @ 10/15/24 09:46:32.836
  STEP: Ensuring a job is scheduled @ 10/15/24 09:46:32.844
  E1015 09:46:33.029298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:34.029734      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:35.030533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:36.031036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:37.031479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:38.032419      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:39.033730      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:40.034335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:41.035902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:42.035895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:43.036945      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:44.039885      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:45.040941      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:46.042214      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:47.042069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:48.042108      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:49.042624      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:50.043099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:51.043239      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:52.044059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:53.044934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:54.045165      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:55.045768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:56.046657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:57.047362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:58.049279      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:46:59.048896      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:47:00.049283      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 10/15/24 09:47:00.857
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 10/15/24 09:47:00.863
  STEP: Ensuring no more jobs are scheduled @ 10/15/24 09:47:00.877
  STEP: Removing cronjob @ 10/15/24 09:47:00.885
  I1015 09:47:00.904296 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5670" for this suite. @ 10/15/24 09:47:00.916
• [28.189 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 10/15/24 09:47:00.938
  I1015 09:47:00.938978 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename subpath @ 10/15/24 09:47:00.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:47:01.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:47:01.021
  STEP: Setting up data @ 10/15/24 09:47:01.027
  STEP: Creating pod pod-subpath-test-projected-4kgv @ 10/15/24 09:47:01.048
  STEP: Creating a pod to test atomic-volume-subpath @ 10/15/24 09:47:01.048
  E1015 09:47:01.050475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:47:02.051387      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:47:03.051727      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:47:04.052110      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:47:05.052317      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:47:06.052516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:47:07.052473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:47:08.053397      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:47:09.053934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:47:10.054936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:47:11.055509      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:47:12.056358      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:47:13.056589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:47:14.057012      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:47:15.057606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:47:16.057827      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:47:17.058632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:47:18.059171      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:47:19.059699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:47:20.060933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:47:21.061120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:47:22.061090      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:47:23.062174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:47:24.062597      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:47:25.063389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 09:47:25.222
  I1015 09:47:25.231045 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-subpath-test-projected-4kgv container test-container-subpath-projected-4kgv: <nil>
  STEP: delete the pod @ 10/15/24 09:47:25.273
  STEP: Deleting pod pod-subpath-test-projected-4kgv @ 10/15/24 09:47:25.316
  I1015 09:47:25.316957 22 delete.go:62] Deleting pod "pod-subpath-test-projected-4kgv" in namespace "subpath-1351"
  I1015 09:47:25.321911 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1351" for this suite. @ 10/15/24 09:47:25.332
• [24.412 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 10/15/24 09:47:25.357
  I1015 09:47:25.357375 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename container-runtime @ 10/15/24 09:47:25.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:47:25.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:47:25.41
  STEP: create the container @ 10/15/24 09:47:25.419
  W1015 09:47:25.438038      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 10/15/24 09:47:25.438
  E1015 09:47:26.063974      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:47:27.064122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:47:28.065243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:47:29.065336      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:47:30.066387      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 10/15/24 09:47:30.509
  STEP: the container should be terminated @ 10/15/24 09:47:30.518
  STEP: the termination message should be set @ 10/15/24 09:47:30.518
  I1015 09:47:30.518822 22 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 10/15/24 09:47:30.519
  I1015 09:47:30.552891 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-3210" for this suite. @ 10/15/24 09:47:30.569
• [5.229 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 10/15/24 09:47:30.587
  I1015 09:47:30.587244 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename emptydir @ 10/15/24 09:47:30.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:47:30.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:47:30.654
  STEP: Creating a pod to test emptydir volume type on node default medium @ 10/15/24 09:47:30.661
  E1015 09:47:31.066477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:47:32.066950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:47:33.067404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:47:34.067659      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 09:47:34.71
  I1015 09:47:34.719131 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-78b447c1-7f40-492d-bfa3-ed400bbc5e1c container test-container: <nil>
  STEP: delete the pod @ 10/15/24 09:47:34.732
  I1015 09:47:34.762539 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1578" for this suite. @ 10/15/24 09:47:34.773
• [4.199 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:446
  STEP: Creating a kubernetes client @ 10/15/24 09:47:34.787
  I1015 09:47:34.787209 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename sched-pred @ 10/15/24 09:47:34.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:47:34.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:47:34.826
  I1015 09:47:34.830797 22 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1015 09:47:34.848171 22 util.go:400] Waiting for terminating namespaces to be deleted...
  I1015 09:47:34.853790 22 predicates.go:121] 
  Logging pods the apiserver thinks is on node env1-test-worker-0 before test
  I1015 09:47:34.876898 22 predicates.go:887] filebeat-filebeat-5zdl5 from filebeat started at 2024-10-15 09:13:58 +0000 UTC (1 container statuses recorded)
  I1015 09:47:34.877058 22 predicates.go:889] 	Container filebeat ready: true, restart count 0
  I1015 09:47:34.877113 22 predicates.go:887] calico-node-n5shx from kube-system started at 2024-10-14 21:55:42 +0000 UTC (1 container statuses recorded)
  I1015 09:47:34.877139 22 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I1015 09:47:34.877175 22 predicates.go:887] kube-proxy-b8kdx from kube-system started at 2024-10-14 22:04:07 +0000 UTC (1 container statuses recorded)
  I1015 09:47:34.877200 22 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I1015 09:47:34.877240 22 predicates.go:887] nginx-proxy-env1-test-worker-0 from kube-system started at 2024-10-14 22:03:57 +0000 UTC (1 container statuses recorded)
  I1015 09:47:34.877268 22 predicates.go:889] 	Container nginx-proxy ready: true, restart count 0
  I1015 09:47:34.877320 22 predicates.go:887] nodelocaldns-8q7t8 from kube-system started at 2024-06-27 16:41:31 +0000 UTC (1 container statuses recorded)
  I1015 09:47:34.877355 22 predicates.go:889] 	Container node-cache ready: true, restart count 6351
  I1015 09:47:34.877384 22 predicates.go:887] vsphere-csi-node-zjqvd from kube-system started at 2024-10-14 22:26:07 +0000 UTC (3 container statuses recorded)
  I1015 09:47:34.877412 22 predicates.go:889] 	Container liveness-probe ready: true, restart count 0
  I1015 09:47:34.877438 22 predicates.go:889] 	Container node-driver-registrar ready: true, restart count 0
  I1015 09:47:34.877467 22 predicates.go:889] 	Container vsphere-csi-node ready: true, restart count 0
  I1015 09:47:34.877498 22 predicates.go:887] prometheus-prometheus-node-exporter-kxdsz from prometheus started at 2024-10-15 09:13:58 +0000 UTC (1 container statuses recorded)
  I1015 09:47:34.877523 22 predicates.go:889] 	Container node-exporter ready: true, restart count 0
  I1015 09:47:34.877554 22 predicates.go:887] sonobuoy from sonobuoy started at 2024-10-15 09:11:53 +0000 UTC (1 container statuses recorded)
  I1015 09:47:34.877587 22 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I1015 09:47:34.877617 22 predicates.go:887] sonobuoy-e2e-job-ad162e52225241c9 from sonobuoy started at 2024-10-15 09:11:55 +0000 UTC (2 container statuses recorded)
  I1015 09:47:34.877642 22 predicates.go:889] 	Container e2e ready: true, restart count 0
  I1015 09:47:34.877671 22 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I1015 09:47:34.877702 22 predicates.go:887] sonobuoy-systemd-logs-daemon-set-b8230e29d699455d-ww6dp from sonobuoy started at 2024-10-15 09:11:55 +0000 UTC (2 container statuses recorded)
  I1015 09:47:34.877731 22 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I1015 09:47:34.877779 22 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I1015 09:47:34.877854 22 predicates.go:121] 
  Logging pods the apiserver thinks is on node env1-test-worker-1 before test
  I1015 09:47:34.920970 22 predicates.go:887] filebeat-filebeat-jnfmn from filebeat started at 2024-10-14 22:34:19 +0000 UTC (1 container statuses recorded)
  I1015 09:47:34.921086 22 predicates.go:889] 	Container filebeat ready: true, restart count 0
  I1015 09:47:34.921133 22 predicates.go:887] calico-kube-controllers-b5f8f6849-qb92j from kube-system started at 2024-10-14 22:14:20 +0000 UTC (1 container statuses recorded)
  I1015 09:47:34.921151 22 predicates.go:889] 	Container calico-kube-controllers ready: true, restart count 0
  I1015 09:47:34.921168 22 predicates.go:887] calico-node-dksxm from kube-system started at 2024-10-14 21:55:20 +0000 UTC (1 container statuses recorded)
  I1015 09:47:34.921189 22 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I1015 09:47:34.921232 22 predicates.go:887] kube-proxy-8v72s from kube-system started at 2024-10-14 22:04:07 +0000 UTC (1 container statuses recorded)
  I1015 09:47:34.921429 22 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I1015 09:47:34.921481 22 predicates.go:887] metrics-server-6d9b44975-bljqs from kube-system started at 2024-10-14 22:14:20 +0000 UTC (1 container statuses recorded)
  I1015 09:47:34.921507 22 predicates.go:889] 	Container metrics-server ready: true, restart count 0
  I1015 09:47:34.921556 22 predicates.go:887] nginx-proxy-env1-test-worker-1 from kube-system started at 2024-10-14 22:13:58 +0000 UTC (1 container statuses recorded)
  I1015 09:47:34.921598 22 predicates.go:889] 	Container nginx-proxy ready: true, restart count 0
  I1015 09:47:34.921696 22 predicates.go:887] nodelocaldns-zv48x from kube-system started at 2024-06-27 16:41:33 +0000 UTC (1 container statuses recorded)
  I1015 09:47:34.921784 22 predicates.go:889] 	Container node-cache ready: true, restart count 6068
  I1015 09:47:34.921809 22 predicates.go:887] vsphere-csi-node-w7nm8 from kube-system started at 2024-10-14 22:26:06 +0000 UTC (3 container statuses recorded)
  I1015 09:47:34.921822 22 predicates.go:889] 	Container liveness-probe ready: true, restart count 0
  I1015 09:47:34.921875 22 predicates.go:889] 	Container node-driver-registrar ready: true, restart count 0
  I1015 09:47:34.921891 22 predicates.go:889] 	Container vsphere-csi-node ready: true, restart count 0
  I1015 09:47:34.921909 22 predicates.go:887] prometheus-kube-state-metrics-59b5d58f8f-clnv5 from prometheus started at 2024-10-14 22:14:20 +0000 UTC (1 container statuses recorded)
  I1015 09:47:34.921964 22 predicates.go:889] 	Container kube-state-metrics ready: true, restart count 0
  I1015 09:47:34.921982 22 predicates.go:887] prometheus-prometheus-kube-prometheus-prometheus-0 from prometheus started at 2024-10-14 22:37:40 +0000 UTC (3 container statuses recorded)
  I1015 09:47:34.921996 22 predicates.go:889] 	Container config-reloader ready: true, restart count 0
  I1015 09:47:34.922177 22 predicates.go:889] 	Container prometheus ready: true, restart count 0
  I1015 09:47:34.922353 22 predicates.go:889] 	Container thanos-sidecar ready: true, restart count 0
  I1015 09:47:34.922671 22 predicates.go:887] prometheus-prometheus-node-exporter-w6llj from prometheus started at 2024-07-04 10:34:49 +0000 UTC (1 container statuses recorded)
  I1015 09:47:34.922696 22 predicates.go:889] 	Container node-exporter ready: true, restart count 0
  I1015 09:47:34.922777 22 predicates.go:887] sonobuoy-systemd-logs-daemon-set-b8230e29d699455d-h8ztn from sonobuoy started at 2024-10-15 09:11:55 +0000 UTC (2 container statuses recorded)
  I1015 09:47:34.922799 22 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I1015 09:47:34.922851 22 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I1015 09:47:34.922871 22 predicates.go:121] 
  Logging pods the apiserver thinks is on node env1-test-worker-2 before test
  I1015 09:47:34.943983 22 predicates.go:887] filebeat-filebeat-sbqr4 from filebeat started at 2024-10-14 22:33:46 +0000 UTC (1 container statuses recorded)
  I1015 09:47:34.944079 22 predicates.go:889] 	Container filebeat ready: true, restart count 0
  I1015 09:47:34.944132 22 predicates.go:887] calico-node-6bnv9 from kube-system started at 2024-10-14 21:55:42 +0000 UTC (1 container statuses recorded)
  I1015 09:47:34.944151 22 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I1015 09:47:34.944171 22 predicates.go:887] kube-proxy-znvrf from kube-system started at 2024-10-14 22:04:07 +0000 UTC (1 container statuses recorded)
  I1015 09:47:34.944187 22 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I1015 09:47:34.944286 22 predicates.go:887] nginx-proxy-env1-test-worker-2 from kube-system started at 2024-10-14 22:19:21 +0000 UTC (1 container statuses recorded)
  I1015 09:47:34.944346 22 predicates.go:889] 	Container nginx-proxy ready: true, restart count 0
  I1015 09:47:34.944399 22 predicates.go:887] nodelocaldns-72wf8 from kube-system started at 2024-06-27 16:41:30 +0000 UTC (1 container statuses recorded)
  I1015 09:47:34.944415 22 predicates.go:889] 	Container node-cache ready: true, restart count 5825
  I1015 09:47:34.944473 22 predicates.go:887] vsphere-csi-node-v7dvf from kube-system started at 2024-10-14 22:26:07 +0000 UTC (3 container statuses recorded)
  I1015 09:47:34.944492 22 predicates.go:889] 	Container liveness-probe ready: true, restart count 0
  I1015 09:47:34.944508 22 predicates.go:889] 	Container node-driver-registrar ready: true, restart count 0
  I1015 09:47:34.944559 22 predicates.go:889] 	Container vsphere-csi-node ready: true, restart count 0
  I1015 09:47:34.944584 22 predicates.go:887] alertmanager-prometheus-kube-prometheus-alertmanager-0 from prometheus started at 2024-10-14 22:37:37 +0000 UTC (2 container statuses recorded)
  I1015 09:47:34.944600 22 predicates.go:889] 	Container alertmanager ready: true, restart count 0
  I1015 09:47:34.944738 22 predicates.go:889] 	Container config-reloader ready: true, restart count 0
  I1015 09:47:34.945440 22 predicates.go:887] prometheus-kube-prometheus-operator-8566d54cfb-2qfmk from prometheus started at 2024-10-14 22:37:37 +0000 UTC (1 container statuses recorded)
  I1015 09:47:34.945516 22 predicates.go:889] 	Container kube-prometheus-stack ready: true, restart count 0
  I1015 09:47:34.945624 22 predicates.go:887] prometheus-prometheus-node-exporter-rwxkp from prometheus started at 2024-08-28 01:04:52 +0000 UTC (1 container statuses recorded)
  I1015 09:47:34.945777 22 predicates.go:889] 	Container node-exporter ready: true, restart count 0
  I1015 09:47:34.945835 22 predicates.go:887] thanos-query-68cb879f99-tgg5c from prometheus started at 2024-10-14 22:39:28 +0000 UTC (1 container statuses recorded)
  I1015 09:47:34.945906 22 predicates.go:889] 	Container query ready: true, restart count 0
  I1015 09:47:34.945931 22 predicates.go:887] sonobuoy-systemd-logs-daemon-set-b8230e29d699455d-t6kdt from sonobuoy started at 2024-10-15 09:11:55 +0000 UTC (2 container statuses recorded)
  I1015 09:47:34.945987 22 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I1015 09:47:34.946003 22 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I1015 09:47:34.946022 22 predicates.go:887] velero-55bcb7d97d-h6frv from velero started at 2024-10-15 08:07:56 +0000 UTC (1 container statuses recorded)
  I1015 09:47:34.946068 22 predicates.go:889] 	Container velero ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 10/15/24 09:47:34.946
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17fe974aec8893f2], Reason = [FailedScheduling], Message = [0/6 nodes are available: 3 node(s) didn't match Pod's node affinity/selector, 3 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }. preemption: 0/6 nodes are available: 6 Preemption is not helpful for scheduling.] @ 10/15/24 09:47:35.018
  E1015 09:47:35.067979      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:47:36.018794 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-1787" for this suite. @ 10/15/24 09:47:36.04
• [1.274 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:850
  STEP: Creating a kubernetes client @ 10/15/24 09:47:36.061
  I1015 09:47:36.061678 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename services @ 10/15/24 09:47:36.063
  E1015 09:47:36.068509      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:47:36.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:47:36.125
  STEP: creating service multi-endpoint-test in namespace services-9228 @ 10/15/24 09:47:36.132
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9228 to expose endpoints map[] @ 10/15/24 09:47:36.155
  I1015 09:47:36.163241 22 service.go:4226] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  E1015 09:47:37.069249      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:47:37.182692 22 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-9228 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-9228 @ 10/15/24 09:47:37.183
  E1015 09:47:38.071746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:47:39.072775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9228 to expose endpoints map[pod1:[100]] @ 10/15/24 09:47:39.236
  I1015 09:47:39.256283 22 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-9228 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-9228 @ 10/15/24 09:47:39.257
  E1015 09:47:40.073571      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:47:41.073682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:47:42.074852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:47:43.075913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9228 to expose endpoints map[pod1:[100] pod2:[101]] @ 10/15/24 09:47:43.293
  I1015 09:47:43.317614 22 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-9228 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 10/15/24 09:47:43.317
  I1015 09:47:43.317789 22 resource.go:361] Creating new exec pod
  E1015 09:47:44.079849      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:47:45.080376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:47:46.081055      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:47:46.349240 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-9228 exec execpod8v5f4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I1015 09:47:46.720750 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  I1015 09:47:46.721091 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1015 09:47:46.721475 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-9228 exec execpod8v5f4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.19.221 80'
  E1015 09:47:47.081625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:47:47.086514 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.19.221 80\nConnection to 10.233.19.221 80 port [tcp/http] succeeded!\n"
  I1015 09:47:47.086607 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1015 09:47:47.086737 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-9228 exec execpod8v5f4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I1015 09:47:47.411663 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  I1015 09:47:47.412116 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1015 09:47:47.412348 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-9228 exec execpod8v5f4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.19.221 81'
  I1015 09:47:47.785606 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.19.221 81\nConnection to 10.233.19.221 81 port [tcp/*] succeeded!\n"
  I1015 09:47:47.785919 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-9228 @ 10/15/24 09:47:47.785
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9228 to expose endpoints map[pod2:[101]] @ 10/15/24 09:47:47.828
  E1015 09:47:48.082650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:47:48.901109 22 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-9228 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-9228 @ 10/15/24 09:47:48.901
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-9228 to expose endpoints map[] @ 10/15/24 09:47:48.936
  E1015 09:47:49.082943      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:47:50.006898 22 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-9228 exposes endpoints map[]
  I1015 09:47:50.047193 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9228" for this suite. @ 10/15/24 09:47:50.071
  E1015 09:47:50.083899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
• [14.033 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2218
  STEP: Creating a kubernetes client @ 10/15/24 09:47:50.095
  I1015 09:47:50.095292 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename services @ 10/15/24 09:47:50.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:47:50.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:47:50.171
  STEP: creating service in namespace services-2621 @ 10/15/24 09:47:50.181
  STEP: creating service affinity-nodeport in namespace services-2621 @ 10/15/24 09:47:50.182
  STEP: creating replication controller affinity-nodeport in namespace services-2621 @ 10/15/24 09:47:50.229
  I1015 09:47:50.246835      22 runners.go:198] Created replication controller with name: affinity-nodeport, namespace: services-2621, replica count: 3
  E1015 09:47:51.084286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:47:52.084835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:47:53.085330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:47:53.298888      22 runners.go:198] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1015 09:47:53.322377 22 resource.go:361] Creating new exec pod
  E1015 09:47:54.086372      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:47:55.086706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:47:56.086983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:47:56.386968 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-2621 exec execpod-affinitylgsvx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I1015 09:47:56.722119 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  I1015 09:47:56.722207 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1015 09:47:56.722364 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-2621 exec execpod-affinitylgsvx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.38.84 80'
  I1015 09:47:57.084320 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.38.84 80\nConnection to 10.233.38.84 80 port [tcp/http] succeeded!\n"
  I1015 09:47:57.084404 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1015 09:47:57.084538 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-2621 exec execpod-affinitylgsvx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.61.1.202 30838'
  E1015 09:47:57.087184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:47:57.457989 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.61.1.202 30838\nConnection to 10.61.1.202 30838 port [tcp/*] succeeded!\n"
  I1015 09:47:57.458095 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1015 09:47:57.458257 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-2621 exec execpod-affinitylgsvx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.61.1.200 30838'
  I1015 09:47:57.839656 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.61.1.200 30838\nConnection to 10.61.1.200 30838 port [tcp/*] succeeded!\n"
  I1015 09:47:57.839746 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1015 09:47:57.840133 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-2621 exec execpod-affinitylgsvx -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.61.1.200:30838/ ; done'
  E1015 09:47:58.088255      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:47:58.401742 22 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30838/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30838/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30838/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30838/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30838/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30838/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30838/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30838/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30838/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30838/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30838/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30838/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30838/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30838/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30838/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30838/\n"
  I1015 09:47:58.401914 22 builder.go:147] stdout: "\naffinity-nodeport-ms86w\naffinity-nodeport-ms86w\naffinity-nodeport-ms86w\naffinity-nodeport-ms86w\naffinity-nodeport-ms86w\naffinity-nodeport-ms86w\naffinity-nodeport-ms86w\naffinity-nodeport-ms86w\naffinity-nodeport-ms86w\naffinity-nodeport-ms86w\naffinity-nodeport-ms86w\naffinity-nodeport-ms86w\naffinity-nodeport-ms86w\naffinity-nodeport-ms86w\naffinity-nodeport-ms86w\naffinity-nodeport-ms86w"
  I1015 09:47:58.402002 22 service.go:242] Received response from host: affinity-nodeport-ms86w
  I1015 09:47:58.402047 22 service.go:242] Received response from host: affinity-nodeport-ms86w
  I1015 09:47:58.402080 22 service.go:242] Received response from host: affinity-nodeport-ms86w
  I1015 09:47:58.402109 22 service.go:242] Received response from host: affinity-nodeport-ms86w
  I1015 09:47:58.402141 22 service.go:242] Received response from host: affinity-nodeport-ms86w
  I1015 09:47:58.402172 22 service.go:242] Received response from host: affinity-nodeport-ms86w
  I1015 09:47:58.402207 22 service.go:242] Received response from host: affinity-nodeport-ms86w
  I1015 09:47:58.402238 22 service.go:242] Received response from host: affinity-nodeport-ms86w
  I1015 09:47:58.402473 22 service.go:242] Received response from host: affinity-nodeport-ms86w
  I1015 09:47:58.402546 22 service.go:242] Received response from host: affinity-nodeport-ms86w
  I1015 09:47:58.402755 22 service.go:242] Received response from host: affinity-nodeport-ms86w
  I1015 09:47:58.402827 22 service.go:242] Received response from host: affinity-nodeport-ms86w
  I1015 09:47:58.402864 22 service.go:242] Received response from host: affinity-nodeport-ms86w
  I1015 09:47:58.402898 22 service.go:242] Received response from host: affinity-nodeport-ms86w
  I1015 09:47:58.402930 22 service.go:242] Received response from host: affinity-nodeport-ms86w
  I1015 09:47:58.402959 22 service.go:242] Received response from host: affinity-nodeport-ms86w
  I1015 09:47:58.403343 22 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-2621, will wait for the garbage collector to delete the pods @ 10/15/24 09:47:58.438
  I1015 09:47:58.520409 22 resources.go:139] Deleting ReplicationController affinity-nodeport took: 18.37862ms
  I1015 09:47:58.621081 22 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 100.66491ms
  E1015 09:47:59.089142      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:00.090226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:01.090884      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:02.091272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:48:02.158966 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2621" for this suite. @ 10/15/24 09:48:02.175
• [12.096 seconds]
------------------------------
SS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:420
  STEP: Creating a kubernetes client @ 10/15/24 09:48:02.194
  I1015 09:48:02.195343 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename job @ 10/15/24 09:48:02.198
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:48:02.229
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:48:02.243
  STEP: Creating Indexed job @ 10/15/24 09:48:02.25
  STEP: Ensuring job reaches completions @ 10/15/24 09:48:02.261
  E1015 09:48:03.092118      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:04.092342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:05.093272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:06.093155      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:07.093986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:08.094068      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:09.095143      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:10.095134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:11.095769      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:12.096705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring pods with index for job exist @ 10/15/24 09:48:12.271
  I1015 09:48:12.287127 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-613" for this suite. @ 10/15/24 09:48:12.298
• [10.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 10/15/24 09:48:12.32
  I1015 09:48:12.320326 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename projected @ 10/15/24 09:48:12.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:48:12.388
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:48:12.398
  STEP: Creating configMap with name projected-configmap-test-volume-map-37610df6-177f-471b-a907-f1eae0f73995 @ 10/15/24 09:48:12.406
  STEP: Creating a pod to test consume configMaps @ 10/15/24 09:48:12.423
  E1015 09:48:13.097640      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:14.098029      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:15.098373      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:16.098790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 09:48:16.518
  I1015 09:48:16.525399 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-projected-configmaps-e9f206e4-4bde-4ae3-b4cf-8cf15e9c2b24 container agnhost-container: <nil>
  STEP: delete the pod @ 10/15/24 09:48:16.551
  I1015 09:48:16.624086 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9651" for this suite. @ 10/15/24 09:48:16.641
• [4.339 seconds]
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:707
  STEP: Creating a kubernetes client @ 10/15/24 09:48:16.66
  I1015 09:48:16.661022 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename sched-pred @ 10/15/24 09:48:16.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:48:16.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:48:16.73
  I1015 09:48:16.744801 22 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1015 09:48:16.779101 22 util.go:400] Waiting for terminating namespaces to be deleted...
  I1015 09:48:16.788976 22 predicates.go:121] 
  Logging pods the apiserver thinks is on node env1-test-worker-0 before test
  I1015 09:48:16.826734 22 predicates.go:887] filebeat-filebeat-5zdl5 from filebeat started at 2024-10-15 09:13:58 +0000 UTC (1 container statuses recorded)
  I1015 09:48:16.826801 22 predicates.go:889] 	Container filebeat ready: true, restart count 0
  I1015 09:48:16.826883 22 predicates.go:887] indexed-job-0-kx442 from job-613 started at 2024-10-15 09:48:02 +0000 UTC (1 container statuses recorded)
  I1015 09:48:16.826908 22 predicates.go:889] 	Container c ready: false, restart count 0
  I1015 09:48:16.826928 22 predicates.go:887] indexed-job-1-j5t2f from job-613 started at 2024-10-15 09:48:02 +0000 UTC (1 container statuses recorded)
  I1015 09:48:16.826943 22 predicates.go:889] 	Container c ready: false, restart count 0
  I1015 09:48:16.826960 22 predicates.go:887] indexed-job-2-tbw7k from job-613 started at 2024-10-15 09:48:06 +0000 UTC (1 container statuses recorded)
  I1015 09:48:16.826981 22 predicates.go:889] 	Container c ready: false, restart count 0
  I1015 09:48:16.826998 22 predicates.go:887] indexed-job-3-nk4nq from job-613 started at 2024-10-15 09:48:06 +0000 UTC (1 container statuses recorded)
  I1015 09:48:16.827014 22 predicates.go:889] 	Container c ready: false, restart count 0
  I1015 09:48:16.827031 22 predicates.go:887] calico-node-n5shx from kube-system started at 2024-10-14 21:55:42 +0000 UTC (1 container statuses recorded)
  I1015 09:48:16.827046 22 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I1015 09:48:16.827063 22 predicates.go:887] kube-proxy-b8kdx from kube-system started at 2024-10-14 22:04:07 +0000 UTC (1 container statuses recorded)
  I1015 09:48:16.827078 22 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I1015 09:48:16.827100 22 predicates.go:887] nginx-proxy-env1-test-worker-0 from kube-system started at 2024-10-14 22:03:57 +0000 UTC (1 container statuses recorded)
  I1015 09:48:16.827139 22 predicates.go:889] 	Container nginx-proxy ready: true, restart count 0
  I1015 09:48:16.827196 22 predicates.go:887] nodelocaldns-8q7t8 from kube-system started at 2024-06-27 16:41:31 +0000 UTC (1 container statuses recorded)
  I1015 09:48:16.827230 22 predicates.go:889] 	Container node-cache ready: true, restart count 6351
  I1015 09:48:16.827293 22 predicates.go:887] vsphere-csi-node-zjqvd from kube-system started at 2024-10-14 22:26:07 +0000 UTC (3 container statuses recorded)
  I1015 09:48:16.827511 22 predicates.go:889] 	Container liveness-probe ready: true, restart count 0
  I1015 09:48:16.827627 22 predicates.go:889] 	Container node-driver-registrar ready: true, restart count 0
  I1015 09:48:16.827648 22 predicates.go:889] 	Container vsphere-csi-node ready: true, restart count 0
  I1015 09:48:16.827711 22 predicates.go:887] prometheus-prometheus-node-exporter-kxdsz from prometheus started at 2024-10-15 09:13:58 +0000 UTC (1 container statuses recorded)
  I1015 09:48:16.827730 22 predicates.go:889] 	Container node-exporter ready: true, restart count 0
  I1015 09:48:16.827747 22 predicates.go:887] sonobuoy from sonobuoy started at 2024-10-15 09:11:53 +0000 UTC (1 container statuses recorded)
  I1015 09:48:16.827825 22 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I1015 09:48:16.827846 22 predicates.go:887] sonobuoy-e2e-job-ad162e52225241c9 from sonobuoy started at 2024-10-15 09:11:55 +0000 UTC (2 container statuses recorded)
  I1015 09:48:16.827892 22 predicates.go:889] 	Container e2e ready: true, restart count 0
  I1015 09:48:16.827913 22 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I1015 09:48:16.827932 22 predicates.go:887] sonobuoy-systemd-logs-daemon-set-b8230e29d699455d-ww6dp from sonobuoy started at 2024-10-15 09:11:55 +0000 UTC (2 container statuses recorded)
  I1015 09:48:16.827948 22 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I1015 09:48:16.827997 22 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I1015 09:48:16.828148 22 predicates.go:121] 
  Logging pods the apiserver thinks is on node env1-test-worker-1 before test
  I1015 09:48:16.855342 22 predicates.go:887] filebeat-filebeat-jnfmn from filebeat started at 2024-10-14 22:34:19 +0000 UTC (1 container statuses recorded)
  I1015 09:48:16.855463 22 predicates.go:889] 	Container filebeat ready: true, restart count 0
  I1015 09:48:16.855491 22 predicates.go:887] calico-kube-controllers-b5f8f6849-qb92j from kube-system started at 2024-10-14 22:14:20 +0000 UTC (1 container statuses recorded)
  I1015 09:48:16.855509 22 predicates.go:889] 	Container calico-kube-controllers ready: true, restart count 0
  I1015 09:48:16.855531 22 predicates.go:887] calico-node-dksxm from kube-system started at 2024-10-14 21:55:20 +0000 UTC (1 container statuses recorded)
  I1015 09:48:16.855549 22 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I1015 09:48:16.855567 22 predicates.go:887] kube-proxy-8v72s from kube-system started at 2024-10-14 22:04:07 +0000 UTC (1 container statuses recorded)
  I1015 09:48:16.855582 22 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I1015 09:48:16.855600 22 predicates.go:887] metrics-server-6d9b44975-bljqs from kube-system started at 2024-10-14 22:14:20 +0000 UTC (1 container statuses recorded)
  I1015 09:48:16.855615 22 predicates.go:889] 	Container metrics-server ready: true, restart count 0
  I1015 09:48:16.855768 22 predicates.go:887] nginx-proxy-env1-test-worker-1 from kube-system started at 2024-10-14 22:13:58 +0000 UTC (1 container statuses recorded)
  I1015 09:48:16.855872 22 predicates.go:889] 	Container nginx-proxy ready: true, restart count 0
  I1015 09:48:16.855894 22 predicates.go:887] nodelocaldns-zv48x from kube-system started at 2024-06-27 16:41:33 +0000 UTC (1 container statuses recorded)
  I1015 09:48:16.855953 22 predicates.go:889] 	Container node-cache ready: true, restart count 6068
  I1015 09:48:16.855976 22 predicates.go:887] vsphere-csi-node-w7nm8 from kube-system started at 2024-10-14 22:26:06 +0000 UTC (3 container statuses recorded)
  I1015 09:48:16.855992 22 predicates.go:889] 	Container liveness-probe ready: true, restart count 0
  I1015 09:48:16.856040 22 predicates.go:889] 	Container node-driver-registrar ready: true, restart count 0
  I1015 09:48:16.856058 22 predicates.go:889] 	Container vsphere-csi-node ready: true, restart count 0
  I1015 09:48:16.856077 22 predicates.go:887] prometheus-kube-state-metrics-59b5d58f8f-clnv5 from prometheus started at 2024-10-14 22:14:20 +0000 UTC (1 container statuses recorded)
  I1015 09:48:16.856130 22 predicates.go:889] 	Container kube-state-metrics ready: true, restart count 0
  I1015 09:48:16.856152 22 predicates.go:887] prometheus-prometheus-kube-prometheus-prometheus-0 from prometheus started at 2024-10-14 22:37:40 +0000 UTC (3 container statuses recorded)
  I1015 09:48:16.856167 22 predicates.go:889] 	Container config-reloader ready: true, restart count 0
  I1015 09:48:16.856212 22 predicates.go:889] 	Container prometheus ready: true, restart count 0
  I1015 09:48:16.856230 22 predicates.go:889] 	Container thanos-sidecar ready: true, restart count 0
  I1015 09:48:16.856249 22 predicates.go:887] prometheus-prometheus-node-exporter-w6llj from prometheus started at 2024-07-04 10:34:49 +0000 UTC (1 container statuses recorded)
  I1015 09:48:16.856293 22 predicates.go:889] 	Container node-exporter ready: true, restart count 0
  I1015 09:48:16.856315 22 predicates.go:887] sonobuoy-systemd-logs-daemon-set-b8230e29d699455d-h8ztn from sonobuoy started at 2024-10-15 09:11:55 +0000 UTC (2 container statuses recorded)
  I1015 09:48:16.856331 22 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I1015 09:48:16.856346 22 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I1015 09:48:16.856402 22 predicates.go:121] 
  Logging pods the apiserver thinks is on node env1-test-worker-2 before test
  I1015 09:48:16.900531 22 predicates.go:887] filebeat-filebeat-sbqr4 from filebeat started at 2024-10-14 22:33:46 +0000 UTC (1 container statuses recorded)
  I1015 09:48:16.900610 22 predicates.go:889] 	Container filebeat ready: true, restart count 0
  I1015 09:48:16.900635 22 predicates.go:887] calico-node-6bnv9 from kube-system started at 2024-10-14 21:55:42 +0000 UTC (1 container statuses recorded)
  I1015 09:48:16.900658 22 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I1015 09:48:16.900720 22 predicates.go:887] kube-proxy-znvrf from kube-system started at 2024-10-14 22:04:07 +0000 UTC (1 container statuses recorded)
  I1015 09:48:16.900750 22 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I1015 09:48:16.900788 22 predicates.go:887] nginx-proxy-env1-test-worker-2 from kube-system started at 2024-10-14 22:19:21 +0000 UTC (1 container statuses recorded)
  I1015 09:48:16.901045 22 predicates.go:889] 	Container nginx-proxy ready: true, restart count 0
  I1015 09:48:16.901111 22 predicates.go:887] nodelocaldns-72wf8 from kube-system started at 2024-06-27 16:41:30 +0000 UTC (1 container statuses recorded)
  I1015 09:48:16.901141 22 predicates.go:889] 	Container node-cache ready: true, restart count 5825
  I1015 09:48:16.901161 22 predicates.go:887] vsphere-csi-node-v7dvf from kube-system started at 2024-10-14 22:26:07 +0000 UTC (3 container statuses recorded)
  I1015 09:48:16.901208 22 predicates.go:889] 	Container liveness-probe ready: true, restart count 0
  I1015 09:48:16.901227 22 predicates.go:889] 	Container node-driver-registrar ready: true, restart count 0
  I1015 09:48:16.901243 22 predicates.go:889] 	Container vsphere-csi-node ready: true, restart count 0
  I1015 09:48:16.901306 22 predicates.go:887] alertmanager-prometheus-kube-prometheus-alertmanager-0 from prometheus started at 2024-10-14 22:37:37 +0000 UTC (2 container statuses recorded)
  I1015 09:48:16.901326 22 predicates.go:889] 	Container alertmanager ready: true, restart count 0
  I1015 09:48:16.901342 22 predicates.go:889] 	Container config-reloader ready: true, restart count 0
  I1015 09:48:16.901393 22 predicates.go:887] prometheus-kube-prometheus-operator-8566d54cfb-2qfmk from prometheus started at 2024-10-14 22:37:37 +0000 UTC (1 container statuses recorded)
  I1015 09:48:16.901411 22 predicates.go:889] 	Container kube-prometheus-stack ready: true, restart count 0
  I1015 09:48:16.901509 22 predicates.go:887] prometheus-prometheus-node-exporter-rwxkp from prometheus started at 2024-08-28 01:04:52 +0000 UTC (1 container statuses recorded)
  I1015 09:48:16.901595 22 predicates.go:889] 	Container node-exporter ready: true, restart count 0
  I1015 09:48:16.901615 22 predicates.go:887] thanos-query-68cb879f99-tgg5c from prometheus started at 2024-10-14 22:39:28 +0000 UTC (1 container statuses recorded)
  I1015 09:48:16.901666 22 predicates.go:889] 	Container query ready: true, restart count 0
  I1015 09:48:16.901689 22 predicates.go:887] sonobuoy-systemd-logs-daemon-set-b8230e29d699455d-t6kdt from sonobuoy started at 2024-10-15 09:11:55 +0000 UTC (2 container statuses recorded)
  I1015 09:48:16.901705 22 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I1015 09:48:16.901720 22 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I1015 09:48:16.902112 22 predicates.go:887] velero-55bcb7d97d-h6frv from velero started at 2024-10-15 08:07:56 +0000 UTC (1 container statuses recorded)
  I1015 09:48:16.902296 22 predicates.go:889] 	Container velero ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 10/15/24 09:48:16.902
  E1015 09:48:17.099126      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:18.099776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:19.100265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:20.101360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 10/15/24 09:48:20.968
  STEP: Trying to apply a random label on the found node. @ 10/15/24 09:48:21.024
  STEP: verifying the node has the label kubernetes.io/e2e-3757e96b-edac-4a60-b7dc-0a1140c9d62e 95 @ 10/15/24 09:48:21.059
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 10/15/24 09:48:21.068
  E1015 09:48:21.102235      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:22.102559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:23.103274      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:24.103890      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:25.104612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 10.61.1.200 on the node which pod4 resides and expect not scheduled @ 10/15/24 09:48:25.118
  E1015 09:48:26.104894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:27.105869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:28.106651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:29.107756      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:30.108000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:31.108640      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:32.108853      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:33.109347      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:34.109677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:35.109810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:36.110095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:37.111224      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:38.112081      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:39.114110      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:40.114584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:41.115491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:42.115571      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:43.116671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:44.117120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:45.117698      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:46.117907      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:47.118213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:48.119289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:49.119783      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:50.119939      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:51.120288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:52.121379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:53.121531      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:54.121965      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:55.122497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:56.122643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:57.123651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:58.124184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:48:59.124334      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:00.124456      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:01.125264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:02.126163      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:03.126510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:04.127029      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:05.127824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:06.128592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:07.129706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:08.130120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:09.130519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:10.130778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:11.131910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:12.133066      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:13.133694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:14.134061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:15.134295      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:16.134524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:17.134722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:18.134872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:19.135081      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:20.135681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:21.136148      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:22.136910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:23.137289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:24.138340      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:25.138504      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:26.139788      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:27.140236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:28.140307      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:29.140873      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:30.141204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:31.142180      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:32.142176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:33.142333      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:34.142777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:35.143614      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:36.143676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:37.143852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:38.144063      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:39.144267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:40.144801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:41.144815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:42.145178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:43.145336      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:44.145839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:45.145807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:46.145847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:47.146823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:48.147214      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:49.147736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:50.147781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:51.148294      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:52.148882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:53.149484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:54.150174      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:55.150168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:56.150651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:57.151500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:58.152476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:49:59.152736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:00.153774      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:01.154006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:02.154156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:03.155077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:04.155264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:05.155889      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:06.156882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:07.157662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:08.158128      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:09.158169      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:10.158642      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:11.159659      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:12.160938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:13.160822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:14.161646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:15.162072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:16.163145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:17.163401      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:18.164289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:19.164559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:20.164669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:21.165873      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:22.166861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:23.167448      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:24.167627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:25.167870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:26.169031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:27.169073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:28.169420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:29.169804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:30.170766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:31.171353      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:32.172715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:33.173304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:34.174492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:35.175374      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:36.175987      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:37.176542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:38.177256      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:39.177421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:40.177869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:41.178560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:42.178696      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:43.179637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:44.180576      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:45.181021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:46.181844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:47.183024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:48.182768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:49.183077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:50.183036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:51.183301      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:52.183773      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:53.184593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:54.185167      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:55.185380      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:56.186103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:57.186043      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:58.186738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:50:59.187177      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:00.187109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:01.187798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:02.188344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:03.188974      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:04.189780      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:05.190656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:06.190727      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:07.191069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:08.191937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:09.192459      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:10.192798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:11.192931      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:12.193686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:13.194751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:14.195925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:15.196831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:16.197808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:17.198901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:18.199908      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:19.200112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:20.200300      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:21.200764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:22.201541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:23.202600      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:24.203130      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:25.203591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:26.204530      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:27.205433      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:28.206463      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:29.207358      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:30.207362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:31.207676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:32.208096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:33.208865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:34.209623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:35.209922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:36.211224      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:37.211577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:38.212528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:39.212504      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:40.212831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:41.213429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:42.213630      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:43.214739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:44.215130      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:45.215310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:46.216324      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:47.216620      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:48.217562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:49.218990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:50.218421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:51.219195      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:52.219057      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:53.219306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:54.219889      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:55.220557      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:56.221125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:57.221401      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:58.222447      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:51:59.222819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:00.223013      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:01.223946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:02.224350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:03.224392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:04.224822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:05.225074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:06.225573      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:07.225689      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:08.226470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:09.227171      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:10.227538      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:11.228109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:12.228182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:13.228152      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:14.228562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:15.229172      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:16.230009      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:17.230117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:18.230964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:19.231132      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:20.231554      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:21.231859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:22.231916      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:23.232706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:24.233254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:25.233545      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:26.233557      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:27.233795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:28.234671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:29.235366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:30.235916      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:31.235866      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:32.236856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:33.236947      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:34.237526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:35.237724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:36.237917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:37.238322      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:38.239222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:39.240272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:40.241323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:41.241576      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:42.241769      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:43.241929      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:44.242707      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:45.243027      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:46.243982      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:47.244429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:48.244966      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:49.244851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:50.245005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:51.245189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:52.245505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:53.246386      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:54.247063      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:55.247792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:56.248940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:57.249148      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:58.250309      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:52:59.250582      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:00.251023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:01.251314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:02.252153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:03.252410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:04.252611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:05.252801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:06.253635      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:07.254557      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:08.255834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:09.256694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:10.256943      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:11.257587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:12.258551      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:13.259551      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:14.260303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:15.260440      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:16.261581      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:17.261619      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:18.262729      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:19.263489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:20.263987      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:21.264304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:22.264614      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:23.265875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:24.265989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-3757e96b-edac-4a60-b7dc-0a1140c9d62e off the node env1-test-worker-0 @ 10/15/24 09:53:25.136
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-3757e96b-edac-4a60-b7dc-0a1140c9d62e @ 10/15/24 09:53:25.178
  I1015 09:53:25.186137 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-796" for this suite. @ 10/15/24 09:53:25.199
• [308.560 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 10/15/24 09:53:25.224
  I1015 09:53:25.224793 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename sched-preemption @ 10/15/24 09:53:25.226
  E1015 09:53:25.266450      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:53:25.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:53:25.276
  I1015 09:53:25.319863 22 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1015 09:53:26.266768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:27.267808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:28.268429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:29.268762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:30.269737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:31.270158      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:32.270354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:33.271226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:34.271675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:35.272145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:36.273018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:37.273047      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:38.273252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:39.273482      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:40.274496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:41.274817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:42.275590      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:43.276519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:44.276676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:45.277540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:46.278165      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:47.278693      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:48.279580      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:49.280306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:50.281074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:51.281092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:52.281099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:53.281926      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:54.282285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:55.282676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:56.282791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:57.283244      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:58.283483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:53:59.283746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:00.284675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:01.286072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:02.286525      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:03.287450      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:04.287649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:05.287803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:06.288069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:07.288315      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:08.288488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:09.289168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:10.289280      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:11.289683      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:12.289937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:13.290697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:14.291032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:15.291759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:16.292760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:17.293062      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:18.293731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:19.294315      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:20.294409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:21.294880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:22.295301      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:23.295344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:24.295633      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:25.295776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:54:25.333380 22 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 10/15/24 09:54:25.35
  I1015 09:54:25.350580 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename sched-preemption-path @ 10/15/24 09:54:25.353
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:54:25.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:54:25.438
  I1015 09:54:25.485727 22 preemption.go:818] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I1015 09:54:25.493745 22 preemption.go:824] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  I1015 09:54:25.721584 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-3692" for this suite. @ 10/15/24 09:54:25.736
  I1015 09:54:25.752746 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4588" for this suite. @ 10/15/24 09:54:25.769
• [60.568 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 10/15/24 09:54:25.803
  I1015 09:54:25.803777 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename emptydir @ 10/15/24 09:54:25.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:54:25.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:54:25.853
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 10/15/24 09:54:25.861
  E1015 09:54:26.296734      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:27.297696      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:28.298584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:29.299133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 09:54:29.932
  I1015 09:54:29.940768 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-3775b50e-89fb-4057-a07d-ded4594d8a62 container test-container: <nil>
  STEP: delete the pod @ 10/15/24 09:54:29.975
  I1015 09:54:30.016771 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2480" for this suite. @ 10/15/24 09:54:30.033
• [4.248 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 10/15/24 09:54:30.054
  I1015 09:54:30.054690 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename var-expansion @ 10/15/24 09:54:30.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:54:30.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:54:30.106
  STEP: Creating a pod to test env composition @ 10/15/24 09:54:30.114
  E1015 09:54:30.299339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:31.300380      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:32.301207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:33.301684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 09:54:34.167
  I1015 09:54:34.189661 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod var-expansion-72f813e6-d7e5-478b-83c4-c8c3df8982ad container dapi-container: <nil>
  STEP: delete the pod @ 10/15/24 09:54:34.224
  I1015 09:54:34.283463 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-3239" for this suite. @ 10/15/24 09:54:34.296
  E1015 09:54:34.301938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
• [4.261 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 10/15/24 09:54:34.316
  I1015 09:54:34.316661 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename dns @ 10/15/24 09:54:34.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:54:34.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:54:34.403
  STEP: Creating a test externalName service @ 10/15/24 09:54:34.416
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5762.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-5762.svc.cluster.local; sleep 1; done
   @ 10/15/24 09:54:34.428
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5762.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-5762.svc.cluster.local; sleep 1; done
   @ 10/15/24 09:54:34.428
  STEP: creating a pod to probe DNS @ 10/15/24 09:54:34.428
  STEP: submitting the pod to kubernetes @ 10/15/24 09:54:34.428
  E1015 09:54:35.303359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:36.304296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:37.304929      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:38.305575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 10/15/24 09:54:38.505
  STEP: looking for the results for each expected name from probers @ 10/15/24 09:54:38.515
  I1015 09:54:38.539705 22 dns_common.go:552] DNS probes using dns-test-6d331c44-5411-446b-9819-0172f3112e7c succeeded

  STEP: changing the externalName to bar.example.com @ 10/15/24 09:54:38.541
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5762.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-5762.svc.cluster.local; sleep 1; done
   @ 10/15/24 09:54:38.566
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5762.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-5762.svc.cluster.local; sleep 1; done
   @ 10/15/24 09:54:38.567
  STEP: creating a second pod to probe DNS @ 10/15/24 09:54:38.567
  STEP: submitting the pod to kubernetes @ 10/15/24 09:54:38.568
  E1015 09:54:39.306347      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:40.306810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:41.307021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:42.307369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 10/15/24 09:54:42.63
  STEP: looking for the results for each expected name from probers @ 10/15/24 09:54:42.64
  I1015 09:54:42.658551 22 dns_common.go:552] DNS probes using dns-test-5a04ed6b-b9da-4a64-bad5-8057fa26c97b succeeded

  STEP: changing the service to type=ClusterIP @ 10/15/24 09:54:42.66
  W1015 09:54:42.689459      22 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5762.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-5762.svc.cluster.local; sleep 1; done
   @ 10/15/24 09:54:42.69
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-5762.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-5762.svc.cluster.local; sleep 1; done
   @ 10/15/24 09:54:42.691
  STEP: creating a third pod to probe DNS @ 10/15/24 09:54:42.692
  STEP: submitting the pod to kubernetes @ 10/15/24 09:54:42.723
  E1015 09:54:43.307726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:44.307644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:45.308823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:46.309317      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 10/15/24 09:54:46.797
  STEP: looking for the results for each expected name from probers @ 10/15/24 09:54:46.81
  I1015 09:54:46.835024 22 dns_common.go:552] DNS probes using dns-test-534873e5-8e47-4ab6-9935-8950265cd6da succeeded

  STEP: deleting the pod @ 10/15/24 09:54:46.835
  STEP: deleting the pod @ 10/15/24 09:54:46.871
  STEP: deleting the pod @ 10/15/24 09:54:46.951
  STEP: deleting the test externalName service @ 10/15/24 09:54:46.989
  I1015 09:54:47.091941 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5762" for this suite. @ 10/15/24 09:54:47.112
• [12.821 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 10/15/24 09:54:47.137
  I1015 09:54:47.138023 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename emptydir @ 10/15/24 09:54:47.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:54:47.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:54:47.195
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 10/15/24 09:54:47.206
  E1015 09:54:47.310254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:48.310354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:49.310799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:50.311712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 09:54:51.269
  I1015 09:54:51.278672 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-a111bd31-0660-4185-9da9-e6dabe0e4930 container test-container: <nil>
  STEP: delete the pod @ 10/15/24 09:54:51.296
  E1015 09:54:51.312696      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:54:51.334028 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6101" for this suite. @ 10/15/24 09:54:51.348
• [4.228 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 10/15/24 09:54:51.366
  I1015 09:54:51.366766 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename downward-api @ 10/15/24 09:54:51.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:54:51.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:54:51.413
  STEP: Creating a pod to test downward API volume plugin @ 10/15/24 09:54:51.422
  E1015 09:54:52.312882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:53.313175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:54.313582      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:55.314019      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 09:54:55.465
  I1015 09:54:55.476271 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod downwardapi-volume-da2caddc-f9ed-4bd6-811a-e63bcb74f432 container client-container: <nil>
  STEP: delete the pod @ 10/15/24 09:54:55.496
  I1015 09:54:55.580918 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9722" for this suite. @ 10/15/24 09:54:55.596
• [4.248 seconds]
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 10/15/24 09:54:55.615
  I1015 09:54:55.615788 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename projected @ 10/15/24 09:54:55.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:54:55.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:54:55.709
  STEP: Creating secret with name projected-secret-test-a3d0040e-280a-428d-809b-fe25206d35bf @ 10/15/24 09:54:55.716
  STEP: Creating a pod to test consume secrets @ 10/15/24 09:54:55.732
  E1015 09:54:56.314097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:57.314683      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:58.314960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:54:59.315750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 09:54:59.812
  I1015 09:54:59.819017 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-projected-secrets-2bbaeffb-bfae-4943-afc5-94fed99e6944 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/15/24 09:54:59.831
  I1015 09:54:59.869440 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7193" for this suite. @ 10/15/24 09:54:59.882
• [4.289 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 10/15/24 09:54:59.904
  I1015 09:54:59.904522 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename replicaset @ 10/15/24 09:54:59.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:54:59.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:54:59.957
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 10/15/24 09:54:59.967
  I1015 09:54:59.992796 22 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E1015 09:55:00.316685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:01.317092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:02.317369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:03.318004      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:04.318255      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:55:05.019399 22 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/15/24 09:55:05.019
  STEP: getting scale subresource @ 10/15/24 09:55:05.019
  STEP: updating a scale subresource @ 10/15/24 09:55:05.029
  STEP: verifying the replicaset Spec.Replicas was modified @ 10/15/24 09:55:05.052
  STEP: Patch a scale subresource @ 10/15/24 09:55:05.071
  I1015 09:55:05.109843 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8573" for this suite. @ 10/15/24 09:55:05.154
• [5.327 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:927
  STEP: Creating a kubernetes client @ 10/15/24 09:55:05.232
  I1015 09:55:05.232951 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename job @ 10/15/24 09:55:05.235
  E1015 09:55:05.318729      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:55:05.342
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:55:05.355
  STEP: Creating a suspended job @ 10/15/24 09:55:05.417
  STEP: Patching the Job @ 10/15/24 09:55:05.447
  STEP: Watching for Job to be patched @ 10/15/24 09:55:05.565
  I1015 09:55:05.569599 22 job.go:1109] Event ADDED observed for Job e2e-9vtxt in namespace job-2171 with labels: map[e2e-job-label:e2e-9vtxt] and annotations: map[]
  I1015 09:55:05.570176 22 job.go:1109] Event MODIFIED observed for Job e2e-9vtxt in namespace job-2171 with labels: map[e2e-job-label:e2e-9vtxt] and annotations: map[]
  I1015 09:55:05.570430 22 job.go:1112] Event MODIFIED found for Job e2e-9vtxt in namespace job-2171 with labels: map[e2e-9vtxt:patched e2e-job-label:e2e-9vtxt] and annotations: map[]
  STEP: Updating the job @ 10/15/24 09:55:05.571
  STEP: Watching for Job to be updated @ 10/15/24 09:55:05.598
  I1015 09:55:05.602736 22 job.go:1112] Event MODIFIED found for Job e2e-9vtxt in namespace job-2171 with labels: map[e2e-9vtxt:patched e2e-job-label:e2e-9vtxt] and annotations: map[updated:true]
  I1015 09:55:05.603577 22 job.go:1005] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 10/15/24 09:55:05.604
  I1015 09:55:05.613396 22 job.go:1012] Job: e2e-9vtxt as labels: map[e2e-9vtxt:patched e2e-job-label:e2e-9vtxt]
  STEP: Waiting for job to complete @ 10/15/24 09:55:05.614
  E1015 09:55:06.319087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:07.319627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:08.322031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:09.323853      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:10.324839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:11.324901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:12.324903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:13.325767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Delete a job collection with a labelselector @ 10/15/24 09:55:13.625
  STEP: Watching for Job to be deleted @ 10/15/24 09:55:13.665
  I1015 09:55:13.669874 22 job.go:1109] Event MODIFIED observed for Job e2e-9vtxt in namespace job-2171 with labels: map[e2e-9vtxt:patched e2e-job-label:e2e-9vtxt] and annotations: map[updated:true]
  I1015 09:55:13.670401 22 job.go:1109] Event MODIFIED observed for Job e2e-9vtxt in namespace job-2171 with labels: map[e2e-9vtxt:patched e2e-job-label:e2e-9vtxt] and annotations: map[updated:true]
  I1015 09:55:13.670877 22 job.go:1109] Event MODIFIED observed for Job e2e-9vtxt in namespace job-2171 with labels: map[e2e-9vtxt:patched e2e-job-label:e2e-9vtxt] and annotations: map[updated:true]
  I1015 09:55:13.670991 22 job.go:1109] Event MODIFIED observed for Job e2e-9vtxt in namespace job-2171 with labels: map[e2e-9vtxt:patched e2e-job-label:e2e-9vtxt] and annotations: map[updated:true]
  I1015 09:55:13.671702 22 job.go:1109] Event MODIFIED observed for Job e2e-9vtxt in namespace job-2171 with labels: map[e2e-9vtxt:patched e2e-job-label:e2e-9vtxt] and annotations: map[updated:true]
  I1015 09:55:13.672133 22 job.go:1112] Event DELETED found for Job e2e-9vtxt in namespace job-2171 with labels: map[e2e-9vtxt:patched e2e-job-label:e2e-9vtxt] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 10/15/24 09:55:13.672
  I1015 09:55:13.684719 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2171" for this suite. @ 10/15/24 09:55:13.702
• [8.533 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 10/15/24 09:55:13.774
  I1015 09:55:13.774298 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename events @ 10/15/24 09:55:13.777
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:55:13.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:55:13.9
  STEP: creating a test event @ 10/15/24 09:55:13.911
  STEP: listing all events in all namespaces @ 10/15/24 09:55:13.927
  STEP: patching the test event @ 10/15/24 09:55:13.944
  STEP: fetching the test event @ 10/15/24 09:55:13.989
  STEP: updating the test event @ 10/15/24 09:55:14.017
  STEP: getting the test event @ 10/15/24 09:55:14.063
  STEP: deleting the test event @ 10/15/24 09:55:14.077
  STEP: listing all events in all namespaces @ 10/15/24 09:55:14.11
  I1015 09:55:14.133662 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-7394" for this suite. @ 10/15/24 09:55:14.168
• [0.444 seconds]
------------------------------
SSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 10/15/24 09:55:14.22
  I1015 09:55:14.221113 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename dns @ 10/15/24 09:55:14.223
  E1015 09:55:14.326683      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:55:14.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:55:14.375
  STEP: Creating a test headless service @ 10/15/24 09:55:14.409
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1759 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-1759;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1759 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-1759;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1759.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-1759.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1759.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-1759.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1759.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-1759.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1759.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-1759.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1759.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-1759.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1759.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-1759.svc;check="$$(dig +notcp +noall +answer +search 101.10.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.10.101_udp@PTR;check="$$(dig +tcp +noall +answer +search 101.10.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.10.101_tcp@PTR;sleep 1; done
   @ 10/15/24 09:55:14.493
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1759 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-1759;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1759 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-1759;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1759.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-1759.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1759.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-1759.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1759.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-1759.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1759.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-1759.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1759.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-1759.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1759.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-1759.svc;check="$$(dig +notcp +noall +answer +search 101.10.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.10.101_udp@PTR;check="$$(dig +tcp +noall +answer +search 101.10.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.10.101_tcp@PTR;sleep 1; done
   @ 10/15/24 09:55:14.493
  STEP: creating a pod to probe DNS @ 10/15/24 09:55:14.493
  STEP: submitting the pod to kubernetes @ 10/15/24 09:55:14.494
  E1015 09:55:15.327781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:16.328886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:17.329246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:18.329736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 10/15/24 09:55:18.57
  STEP: looking for the results for each expected name from probers @ 10/15/24 09:55:18.583
  I1015 09:55:18.596230 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-1759/dns-test-75176cf1-3ae5-4ac2-8a54-9526f4bcf3b0: the server could not find the requested resource (get pods dns-test-75176cf1-3ae5-4ac2-8a54-9526f4bcf3b0)
  I1015 09:55:18.609463 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-1759/dns-test-75176cf1-3ae5-4ac2-8a54-9526f4bcf3b0: the server could not find the requested resource (get pods dns-test-75176cf1-3ae5-4ac2-8a54-9526f4bcf3b0)
  I1015 09:55:18.619342 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-1759 from pod dns-1759/dns-test-75176cf1-3ae5-4ac2-8a54-9526f4bcf3b0: the server could not find the requested resource (get pods dns-test-75176cf1-3ae5-4ac2-8a54-9526f4bcf3b0)
  I1015 09:55:18.630385 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-1759 from pod dns-1759/dns-test-75176cf1-3ae5-4ac2-8a54-9526f4bcf3b0: the server could not find the requested resource (get pods dns-test-75176cf1-3ae5-4ac2-8a54-9526f4bcf3b0)
  I1015 09:55:18.640356 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-1759.svc from pod dns-1759/dns-test-75176cf1-3ae5-4ac2-8a54-9526f4bcf3b0: the server could not find the requested resource (get pods dns-test-75176cf1-3ae5-4ac2-8a54-9526f4bcf3b0)
  I1015 09:55:18.660991 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-1759.svc from pod dns-1759/dns-test-75176cf1-3ae5-4ac2-8a54-9526f4bcf3b0: the server could not find the requested resource (get pods dns-test-75176cf1-3ae5-4ac2-8a54-9526f4bcf3b0)
  I1015 09:55:18.671482 22 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1759.svc from pod dns-1759/dns-test-75176cf1-3ae5-4ac2-8a54-9526f4bcf3b0: the server could not find the requested resource (get pods dns-test-75176cf1-3ae5-4ac2-8a54-9526f4bcf3b0)
  I1015 09:55:18.684881 22 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1759.svc from pod dns-1759/dns-test-75176cf1-3ae5-4ac2-8a54-9526f4bcf3b0: the server could not find the requested resource (get pods dns-test-75176cf1-3ae5-4ac2-8a54-9526f4bcf3b0)
  I1015 09:55:18.747175 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-1759/dns-test-75176cf1-3ae5-4ac2-8a54-9526f4bcf3b0: the server could not find the requested resource (get pods dns-test-75176cf1-3ae5-4ac2-8a54-9526f4bcf3b0)
  I1015 09:55:18.759520 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-1759/dns-test-75176cf1-3ae5-4ac2-8a54-9526f4bcf3b0: the server could not find the requested resource (get pods dns-test-75176cf1-3ae5-4ac2-8a54-9526f4bcf3b0)
  I1015 09:55:18.772314 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-1759 from pod dns-1759/dns-test-75176cf1-3ae5-4ac2-8a54-9526f4bcf3b0: the server could not find the requested resource (get pods dns-test-75176cf1-3ae5-4ac2-8a54-9526f4bcf3b0)
  I1015 09:55:18.796329 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-1759 from pod dns-1759/dns-test-75176cf1-3ae5-4ac2-8a54-9526f4bcf3b0: the server could not find the requested resource (get pods dns-test-75176cf1-3ae5-4ac2-8a54-9526f4bcf3b0)
  I1015 09:55:18.808562 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-1759.svc from pod dns-1759/dns-test-75176cf1-3ae5-4ac2-8a54-9526f4bcf3b0: the server could not find the requested resource (get pods dns-test-75176cf1-3ae5-4ac2-8a54-9526f4bcf3b0)
  I1015 09:55:18.821033 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-1759.svc from pod dns-1759/dns-test-75176cf1-3ae5-4ac2-8a54-9526f4bcf3b0: the server could not find the requested resource (get pods dns-test-75176cf1-3ae5-4ac2-8a54-9526f4bcf3b0)
  I1015 09:55:18.831790 22 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1759.svc from pod dns-1759/dns-test-75176cf1-3ae5-4ac2-8a54-9526f4bcf3b0: the server could not find the requested resource (get pods dns-test-75176cf1-3ae5-4ac2-8a54-9526f4bcf3b0)
  I1015 09:55:18.843590 22 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1759.svc from pod dns-1759/dns-test-75176cf1-3ae5-4ac2-8a54-9526f4bcf3b0: the server could not find the requested resource (get pods dns-test-75176cf1-3ae5-4ac2-8a54-9526f4bcf3b0)
  I1015 09:55:18.907167 22 dns_common.go:489] Lookups using dns-1759/dns-test-75176cf1-3ae5-4ac2-8a54-9526f4bcf3b0 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-1759 wheezy_tcp@dns-test-service.dns-1759 wheezy_udp@dns-test-service.dns-1759.svc wheezy_tcp@dns-test-service.dns-1759.svc wheezy_udp@_http._tcp.dns-test-service.dns-1759.svc wheezy_tcp@_http._tcp.dns-test-service.dns-1759.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-1759 jessie_tcp@dns-test-service.dns-1759 jessie_udp@dns-test-service.dns-1759.svc jessie_tcp@dns-test-service.dns-1759.svc jessie_udp@_http._tcp.dns-test-service.dns-1759.svc jessie_tcp@_http._tcp.dns-test-service.dns-1759.svc]

  I1015 09:55:18.930002 22 dns_common.go:495] Pod client logs for webserver: 
  I1015 09:55:18.951887 22 dns_common.go:495] Pod client logs for querier: 
  I1015 09:55:18.984466 22 dns_common.go:495] Pod client logs for jessie-querier: 
  E1015 09:55:19.330475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:20.331708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:21.332328      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:22.332375      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:23.333351      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:55:23.931357 22 dns_common.go:527] DNS probes using dns-1759/dns-test-75176cf1-3ae5-4ac2-8a54-9526f4bcf3b0 succeeded

  STEP: deleting the pod @ 10/15/24 09:55:23.931
  STEP: deleting the test service @ 10/15/24 09:55:24.031
  STEP: deleting the test headless service @ 10/15/24 09:55:24.104
  I1015 09:55:24.152164 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1759" for this suite. @ 10/15/24 09:55:24.177
• [9.979 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 10/15/24 09:55:24.201
  I1015 09:55:24.202157 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename pods @ 10/15/24 09:55:24.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:55:24.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:55:24.267
  I1015 09:55:24.286716 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: creating the pod @ 10/15/24 09:55:24.288
  STEP: submitting the pod to kubernetes @ 10/15/24 09:55:24.288
  E1015 09:55:24.333768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:25.335791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:26.336603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:27.337209      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:28.338003      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:55:28.563058 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9539" for this suite. @ 10/15/24 09:55:28.573
• [4.391 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 10/15/24 09:55:28.596
  I1015 09:55:28.596549 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename deployment @ 10/15/24 09:55:28.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:55:28.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:55:28.675
  STEP: creating a Deployment @ 10/15/24 09:55:28.699
  STEP: waiting for Deployment to be created @ 10/15/24 09:55:28.712
  STEP: waiting for all Replicas to be Ready @ 10/15/24 09:55:28.717
  I1015 09:55:28.721049 22 deployment.go:246] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1015 09:55:28.721125 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1015 09:55:28.759003 22 deployment.go:246] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1015 09:55:28.759136 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1015 09:55:28.845821 22 deployment.go:246] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1015 09:55:28.845908 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1015 09:55:28.899860 22 deployment.go:246] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1015 09:55:28.899918 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  E1015 09:55:29.338245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:30.338280      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:55:30.479275 22 deployment.go:246] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I1015 09:55:30.479937 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I1015 09:55:30.601021 22 deployment.go:248] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 10/15/24 09:55:30.601
  I1015 09:55:30.634261 22 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 10/15/24 09:55:30.634
  I1015 09:55:30.641181 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 0
  I1015 09:55:30.641337 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 0
  I1015 09:55:30.641449 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 0
  I1015 09:55:30.641587 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 0
  I1015 09:55:30.642366 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 0
  I1015 09:55:30.642418 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 0
  I1015 09:55:30.642450 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 0
  I1015 09:55:30.642468 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 0
  I1015 09:55:30.643377 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 1
  I1015 09:55:30.643504 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 1
  I1015 09:55:30.643620 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 2
  I1015 09:55:30.643747 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 2
  I1015 09:55:30.644108 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 2
  I1015 09:55:30.644195 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 2
  I1015 09:55:30.681877 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 2
  I1015 09:55:30.682275 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 2
  I1015 09:55:30.752523 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 2
  I1015 09:55:30.752587 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 2
  I1015 09:55:30.796350 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 1
  I1015 09:55:30.796699 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 1
  I1015 09:55:30.858639 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 1
  I1015 09:55:30.858703 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 1
  E1015 09:55:31.338893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:32.339159      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:55:32.441176 22 deployment.go:309] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 2
  I1015 09:55:32.441267 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 2
  I1015 09:55:32.509767 22 deployment.go:311] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 1
  STEP: listing Deployments @ 10/15/24 09:55:32.51
  I1015 09:55:32.522653 22 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 10/15/24 09:55:32.522
  I1015 09:55:32.560539 22 deployment.go:360] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 10/15/24 09:55:32.56
  I1015 09:55:32.582335 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1015 09:55:32.597712 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1015 09:55:32.696313 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1015 09:55:32.728453 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1015 09:55:32.763674 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  E1015 09:55:33.339266      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:34.339481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:55:34.519588 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1015 09:55:34.558172 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1015 09:55:34.606702 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1015 09:55:34.647819 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1015 09:55:34.697284 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  E1015 09:55:35.339673      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:36.340822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:55:36.690369 22 deployment.go:389] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 10/15/24 09:55:36.731
  STEP: fetching the DeploymentStatus @ 10/15/24 09:55:36.75
  I1015 09:55:36.762738 22 deployment.go:449] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 1
  I1015 09:55:36.762847 22 deployment.go:449] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 1
  I1015 09:55:36.763258 22 deployment.go:449] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 1
  I1015 09:55:36.763309 22 deployment.go:449] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 1
  I1015 09:55:36.763633 22 deployment.go:449] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 1
  I1015 09:55:36.763946 22 deployment.go:449] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 2
  I1015 09:55:36.764324 22 deployment.go:449] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 2
  I1015 09:55:36.764440 22 deployment.go:449] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 2
  I1015 09:55:36.764818 22 deployment.go:449] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 2
  I1015 09:55:36.764884 22 deployment.go:449] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 2
  I1015 09:55:36.764907 22 deployment.go:449] observed Deployment test-deployment in namespace deployment-4255 with ReadyReplicas 3
  STEP: deleting the Deployment @ 10/15/24 09:55:36.765
  I1015 09:55:36.794700 22 deployment.go:475] observed event type MODIFIED
  I1015 09:55:36.795738 22 deployment.go:475] observed event type MODIFIED
  I1015 09:55:36.795803 22 deployment.go:475] observed event type MODIFIED
  I1015 09:55:36.795830 22 deployment.go:475] observed event type MODIFIED
  I1015 09:55:36.796073 22 deployment.go:475] observed event type MODIFIED
  I1015 09:55:36.796119 22 deployment.go:475] observed event type MODIFIED
  I1015 09:55:36.796142 22 deployment.go:475] observed event type MODIFIED
  I1015 09:55:36.796540 22 deployment.go:475] observed event type MODIFIED
  I1015 09:55:36.796680 22 deployment.go:475] observed event type MODIFIED
  I1015 09:55:36.796795 22 deployment.go:475] observed event type MODIFIED
  I1015 09:55:36.797243 22 deployment.go:475] observed event type MODIFIED
  I1015 09:55:36.797278 22 deployment.go:475] observed event type MODIFIED
  I1015 09:55:36.797300 22 deployment.go:475] observed event type MODIFIED
  I1015 09:55:36.797503 22 deployment.go:475] observed event type MODIFIED
  I1015 09:55:36.808876 22 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I1015 09:55:36.817078 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4255" for this suite. @ 10/15/24 09:55:36.842
• [8.282 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 10/15/24 09:55:36.879
  I1015 09:55:36.879511 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename secrets @ 10/15/24 09:55:36.883
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:55:36.946
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:55:36.956
  STEP: Creating secret with name s-test-opt-del-49e49039-bb9c-4b6d-b608-f1e1b9dabd97 @ 10/15/24 09:55:36.977
  STEP: Creating secret with name s-test-opt-upd-eb12de13-a585-44ec-8751-f6cd203ddb5c @ 10/15/24 09:55:36.988
  STEP: Creating the pod @ 10/15/24 09:55:37.003
  E1015 09:55:37.342830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:38.343404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:39.344612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:40.344611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-49e49039-bb9c-4b6d-b608-f1e1b9dabd97 @ 10/15/24 09:55:41.137
  STEP: Updating secret s-test-opt-upd-eb12de13-a585-44ec-8751-f6cd203ddb5c @ 10/15/24 09:55:41.152
  STEP: Creating secret with name s-test-opt-create-b2ca7b88-0037-4253-bde6-f3b9a3640172 @ 10/15/24 09:55:41.172
  STEP: waiting to observe update in volume @ 10/15/24 09:55:41.185
  E1015 09:55:41.344857      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:42.345765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:43.346534      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:44.346740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:45.347532      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:46.348371      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:47.348955      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:48.349558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:49.350186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:50.350428      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:51.350688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:52.350824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:53.351073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:54.351807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:55.352352      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:56.353385      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:57.353859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:58.354197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:55:59.354755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:00.355464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:01.356254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:02.356702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:03.357570      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:04.358617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:05.358793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:06.359362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:07.359667      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:08.359808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:09.360742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:10.360849      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:11.361299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:12.361943      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:13.362575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:14.363298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:15.364858      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:16.365467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:17.365702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:18.365991      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:19.366066      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:20.366682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:21.367219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:22.367178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:23.367893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:24.368231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:25.368397      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:26.369156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:27.369872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:28.370994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:29.371570      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:30.372555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:31.373791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:32.373334      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:33.373529      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:34.374036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:35.374691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:36.374963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:37.375185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:38.375380      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:39.375991      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:40.376339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:41.376618      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:42.377562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:43.377650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:44.377902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:45.378237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:46.379352      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:47.379602      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:48.379549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:49.379817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:50.380131      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:51.380390      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:52.380620      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:53.381553      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:54.382323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:55.382727      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:56.383386      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:57.383745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:58.384778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:56:59.385061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:57:00.385379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:57:01.385527      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:57:02.385851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:57:03.386643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:57:04.161749 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1845" for this suite. @ 10/15/24 09:57:04.224
• [87.398 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 10/15/24 09:57:04.279
  I1015 09:57:04.279602 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename replication-controller @ 10/15/24 09:57:04.281
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:57:04.338
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:57:04.343
  STEP: Given a ReplicationController is created @ 10/15/24 09:57:04.357
  E1015 09:57:04.387831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: When the matched label of one of its pods change @ 10/15/24 09:57:04.399
  I1015 09:57:04.423021 22 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  E1015 09:57:05.387981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:57:06.389015      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:57:07.389316      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:57:08.389428      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:57:09.390138      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:57:09.433677 22 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 10/15/24 09:57:09.475
  E1015 09:57:10.390762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:57:10.505110 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3426" for this suite. @ 10/15/24 09:57:10.528
• [6.284 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:668
  STEP: Creating a kubernetes client @ 10/15/24 09:57:10.564
  I1015 09:57:10.564164 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename job @ 10/15/24 09:57:10.567
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:57:10.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:57:10.608
  STEP: Creating a job @ 10/15/24 09:57:10.618
  STEP: Ensuring active pods == parallelism @ 10/15/24 09:57:10.639
  E1015 09:57:11.390650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:57:12.390880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:57:13.391537      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:57:14.392093      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete a job @ 10/15/24 09:57:14.654
  STEP: deleting Job.batch foo in namespace job-263, will wait for the garbage collector to delete the pods @ 10/15/24 09:57:14.654
  I1015 09:57:14.737174 22 resources.go:139] Deleting Job.batch foo took: 23.419513ms
  I1015 09:57:14.840622 22 resources.go:163] Terminating Job.batch foo pods took: 103.470805ms
  E1015 09:57:15.392096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring job was deleted @ 10/15/24 09:57:16.141
  I1015 09:57:16.152544 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-263" for this suite. @ 10/15/24 09:57:16.17
• [5.618 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 10/15/24 09:57:16.188
  I1015 09:57:16.188646 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename downward-api @ 10/15/24 09:57:16.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:57:16.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:57:16.25
  STEP: Creating a pod to test downward API volume plugin @ 10/15/24 09:57:16.255
  E1015 09:57:16.392470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:57:17.393086      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:57:18.393528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:57:19.394316      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 09:57:20.304
  I1015 09:57:20.316539 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod downwardapi-volume-0bee9400-e664-44ab-b60b-0bb6a189db01 container client-container: <nil>
  STEP: delete the pod @ 10/15/24 09:57:20.341
  E1015 09:57:20.394889      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:57:20.422527 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1314" for this suite. @ 10/15/24 09:57:20.439
• [4.281 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 10/15/24 09:57:20.469
  I1015 09:57:20.469808 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename emptydir @ 10/15/24 09:57:20.472
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:57:20.523
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:57:20.533
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 10/15/24 09:57:20.54
  E1015 09:57:21.395813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:57:22.396675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:57:23.396859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:57:24.397024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 09:57:24.608
  I1015 09:57:24.640536 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-3108e47a-e32e-4e0b-9974-037bc27954d4 container test-container: <nil>
  STEP: delete the pod @ 10/15/24 09:57:24.684
  I1015 09:57:24.725907 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4204" for this suite. @ 10/15/24 09:57:24.735
• [4.281 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 10/15/24 09:57:24.755
  I1015 09:57:24.756290 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename replicaset @ 10/15/24 09:57:24.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:57:24.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:57:24.85
  I1015 09:57:24.900716 22 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E1015 09:57:25.397919      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:57:26.398453      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:57:27.398869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:57:28.399655      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:57:29.400445      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:57:29.909063 22 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/15/24 09:57:29.909
  STEP: Scaling up "test-rs" replicaset @ 10/15/24 09:57:29.909
  I1015 09:57:29.934622 22 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 10/15/24 09:57:29.934
  I1015 09:57:29.970181 22 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-1215 with ReadyReplicas 1, AvailableReplicas 1
  I1015 09:57:30.019219 22 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-1215 with ReadyReplicas 1, AvailableReplicas 1
  I1015 09:57:30.067130 22 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-1215 with ReadyReplicas 1, AvailableReplicas 1
  I1015 09:57:30.097728 22 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-1215 with ReadyReplicas 1, AvailableReplicas 1
  E1015 09:57:30.401604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:57:31.404917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:57:32.192976 22 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-1215 with ReadyReplicas 2, AvailableReplicas 2
  I1015 09:57:32.214380 22 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-1215 with ReadyReplicas 3 found true
  I1015 09:57:32.215176 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1215" for this suite. @ 10/15/24 09:57:32.228
• [7.494 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 10/15/24 09:57:32.251
  I1015 09:57:32.251779 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename container-probe @ 10/15/24 09:57:32.253
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 09:57:32.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 09:57:32.298
  STEP: Creating pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203 @ 10/15/24 09:57:32.306
  E1015 09:57:32.402086      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:57:33.404215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/15/24 09:57:34.348
  I1015 09:57:34.353356 22 container_probe.go:1749] Initial restart count of pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 is 0
  I1015 09:57:34.359636 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:57:34.405054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:57:35.405581      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:57:36.373029 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:57:36.406279      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:57:37.407070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:57:38.393289 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:57:38.408168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:57:39.408856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:57:40.409399      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:57:40.429497 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:57:41.409953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:57:42.410662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:57:42.439195 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:57:43.411631      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:57:44.411787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:57:44.451576 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:57:45.412310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:57:46.413432      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:57:46.463534 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:57:47.414434      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:57:48.415037      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:57:48.474738 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:57:49.414751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:57:50.415560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:57:50.483810 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:57:51.415805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:57:52.416423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:57:52.496050 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:57:53.416516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:57:54.416638      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:57:54.506783 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:57:55.417691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:57:56.417862      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:57:56.516366 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:57:57.418700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:57:58.419049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:57:58.524951 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:57:59.419958      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:58:00.421038      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:58:00.536102 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:58:01.421096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:58:02.421641      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:58:02.544525 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:58:03.421718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:58:04.422297      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:58:04.551091 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:58:05.423094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:58:06.423663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:58:06.561277 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:58:07.424062      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:58:08.424220      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:58:08.571696 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:58:09.424395      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:58:10.424977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:58:10.580624 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:58:11.425012      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:58:12.425424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:58:12.589126 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:58:13.426367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:58:14.427072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:58:14.598200 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:58:15.428012      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:58:16.429311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:58:16.620833 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:58:17.430269      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:58:18.431310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:58:18.632472 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:58:19.431314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:58:20.431998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:58:20.640074 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:58:21.432976      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:58:22.433395      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:58:22.651244 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:58:23.433608      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:58:24.433749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:58:24.661046 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:58:25.433809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:58:26.434359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:58:26.668777 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:58:27.434558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:58:28.437895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:58:28.675661 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:58:29.435893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:58:30.436499      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:58:30.686231 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:58:31.436797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:58:32.436979      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:58:32.695242 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:58:33.437183      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:58:34.437464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:58:34.737604 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:58:35.438335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:58:36.439256      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:58:36.748187 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:58:37.439587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:58:38.440062      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:58:38.756561 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:58:39.440185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:58:40.440385      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:58:40.770802 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:58:41.441516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:58:42.441790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:58:42.783741 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:58:43.442678      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:58:44.443187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:58:44.791999 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:58:45.443673      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:58:46.444044      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:58:46.803055 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:58:47.444849      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:58:48.445733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:58:48.816282 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:58:49.445899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:58:50.446070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:58:50.826698 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:58:51.446363      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:58:52.446940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:58:52.834930 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:58:53.447149      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:58:54.448008      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:58:54.844956 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:58:55.448368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:58:56.449087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:58:56.856400 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:58:57.450097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:58:58.450207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:58:58.868895 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:58:59.450963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:59:00.451008      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:59:00.880834 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:59:01.451849      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:59:02.451924      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:59:02.890862 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:59:03.452878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:59:04.453559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:59:04.904111 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:59:05.454374      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:59:06.455526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:59:06.911165 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:59:07.455345      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:59:08.456289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:59:08.918506 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:59:09.456623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:59:10.457823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:59:10.929300 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:59:11.457826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:59:12.458319      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:59:12.945459 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:59:13.458582      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:59:14.459131      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:59:14.954357 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:59:15.460046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:59:16.460304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:59:16.972588 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:59:17.461273      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:59:18.462076      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:59:18.983636 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:59:19.462175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:59:20.463054      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:59:20.992603 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:59:21.464215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:59:22.464781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:59:23.002955 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:59:23.465048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:59:24.465148      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:59:25.013675 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:59:25.466298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:59:26.466589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:59:27.021075 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:59:27.467690      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:59:28.468548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:59:29.031543 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:59:29.469769      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:59:30.470780      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:59:31.041877 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:59:31.471285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:59:32.472332      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:59:33.054026 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:59:33.472604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:59:34.472755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:59:35.063396 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:59:35.473292      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:59:36.474141      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:59:37.072153 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:59:37.474312      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:59:38.474859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:59:39.081167 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:59:39.475340      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:59:40.475611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:59:41.089953 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:59:41.476109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:59:42.476311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:59:43.104138 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:59:43.476449      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:59:44.476934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:59:45.112986 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:59:45.477156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:59:46.478260      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:59:47.124824 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:59:47.478553      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:59:48.479342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:59:49.135949 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:59:49.479884      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:59:50.480434      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:59:51.145082 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:59:51.480876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:59:52.481535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:59:53.162315 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:59:53.482278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:59:54.483090      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:59:55.173147 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:59:55.484019      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:59:56.484860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:59:57.182139 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:59:57.485640      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 09:59:58.486712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 09:59:59.192241 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 09:59:59.487269      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:00:00.487945      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:00:01.201477 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:00:01.489107      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:00:02.490604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:00:03.209330 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:00:03.490730      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:00:04.491835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:00:05.217628 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:00:05.493006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:00:06.493615      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:00:07.225896 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:00:07.494338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:00:08.495062      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:00:09.237425 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:00:09.495102      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:00:10.495246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:00:11.247529 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:00:11.496310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:00:12.496441      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:00:13.255858 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:00:13.497343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:00:14.497712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:00:15.268782 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:00:15.497928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:00:16.498068      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:00:17.280570 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:00:17.498271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:00:18.498394      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:00:19.293811 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:00:19.498577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:00:20.499191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:00:21.305598 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:00:21.499983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:00:22.500743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:00:23.315591 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:00:23.501613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:00:24.501735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:00:25.323803 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:00:25.501903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:00:26.502354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:00:27.330444 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:00:27.502460      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:00:28.502490      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:00:29.337142 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:00:29.502732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:00:30.503254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:00:31.346500 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:00:31.503729      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:00:32.504210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:00:33.357903 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:00:33.504596      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:00:34.505155      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:00:35.367393 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:00:35.505251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:00:36.506334      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:00:37.374754 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:00:37.507189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:00:38.508078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:00:39.383119 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:00:39.508359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:00:40.508914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:00:41.392789 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:00:41.510194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:00:42.510595      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:00:43.400754 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:00:43.510906      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:00:44.511280      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:00:45.410468 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:00:45.511659      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:00:46.512092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:00:47.418192 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:00:47.512783      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:00:48.513073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:00:49.426116 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:00:49.513756      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:00:50.513917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:00:51.434172 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:00:51.514276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:00:52.514796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:00:53.441431 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:00:53.515879      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:00:54.516548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:00:55.453458 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:00:55.516588      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:00:56.517450      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:00:57.462392 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:00:57.518429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:00:58.519570      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:00:59.470903 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:00:59.520260      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:01:00.520662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:01:01.481226 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:01:01.521468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:01:02.521728      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:01:03.492247 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:01:03.522477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:01:04.523299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:01:05.507005 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:01:05.524060      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:01:06.524911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:01:07.515717 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:01:07.525742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:01:08.525842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:01:09.524514 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:01:09.526776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:01:10.527101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:01:11.527508      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:01:11.534369 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:01:12.528096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:01:13.528394      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:01:13.545415 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:01:14.529363      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:01:15.529556      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:01:15.557748 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:01:16.529760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:01:17.530158      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:01:17.566549 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:01:18.530842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:01:19.531953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:01:19.575170 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:01:20.532216      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:01:21.533494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:01:21.583815 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:01:22.533880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:01:23.534047      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:01:23.597963 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:01:24.534171      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:01:25.535007      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:01:25.606927 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:01:26.535263      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:01:27.535719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:01:27.616514 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:01:28.536753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:01:29.537312      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:01:29.628584 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:01:30.538021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:01:31.538271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:01:31.636061 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:01:32.539242      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:01:33.540277      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:01:33.647973 22 container_probe.go:1759] Get pod test-grpc-d0f874b7-2947-457b-b9a4-a317fbb6fc25 in namespace container-probe-6203
  E1015 10:01:34.540736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:01:35.540897      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 10/15/24 10:01:35.648
  I1015 10:01:35.678262 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6203" for this suite. @ 10/15/24 10:01:35.69
• [243.448 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 10/15/24 10:01:35.701
  I1015 10:01:35.701414 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename security-context-test @ 10/15/24 10:01:35.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:01:35.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:01:35.751
  E1015 10:01:36.541708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:01:37.542072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:01:38.542701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:01:39.542779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:01:39.804121 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7741" for this suite. @ 10/15/24 10:01:39.82
• [4.150 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 10/15/24 10:01:39.854
  I1015 10:01:39.854371 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/15/24 10:01:39.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:01:39.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:01:39.91
  I1015 10:01:39.918916 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  E1015 10:01:40.543864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:01:41.544872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:01:42.546323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:01:43.547068      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:01:44.548005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:01:45.548870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:01:46.549698      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:01:47.550621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:01:48.551361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:01:49.551576      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:01:50.552199      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:01:51.552789      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:01:52.553523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:01:53.554259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:01:54.554461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:01:55.555656      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:01:56.556534      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:01:57.557135      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:01:58.558046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:01:59.558442      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:00.558597      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:01.558859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:02.559977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:03.560159      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:04.561286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:05.562358      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:06.562679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:07.563269      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:08.563870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:09.564244      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:10.565416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:11.565570      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:12.566286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:13.567192      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:14.567693      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:15.568590      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:16.568693      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:17.569948      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:18.571122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:19.572186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:20.572798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:21.573001      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:22.573918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:23.574877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:24.575920      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:25.577117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:26.577498      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:27.577597      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:28.577860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:29.578866      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:30.579032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:31.579509      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:32.580864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:33.581850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:34.582046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:35.582792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:36.583593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:37.584546      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:38.584936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:39.585843      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:40.587097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:41.587927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:42.588896      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:02:42.621369 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7897" for this suite. @ 10/15/24 10:02:42.634
• [62.795 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 10/15/24 10:02:42.654
  I1015 10:02:42.654836 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename secrets @ 10/15/24 10:02:42.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:02:42.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:02:42.707
  STEP: Creating secret with name secret-test-a5fda50f-e5a4-44e2-ad79-b463b511caf8 @ 10/15/24 10:02:42.714
  STEP: Creating a pod to test consume secrets @ 10/15/24 10:02:42.732
  E1015 10:02:43.590690      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:44.591589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:45.591657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:46.592806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 10:02:46.79
  I1015 10:02:46.801229 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-secrets-7d5e2bd6-c64b-41a8-a0a1-b0c770a606a4 container secret-env-test: <nil>
  STEP: delete the pod @ 10/15/24 10:02:46.877
  I1015 10:02:46.922748 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8757" for this suite. @ 10/15/24 10:02:46.935
• [4.298 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:334
  STEP: Creating a kubernetes client @ 10/15/24 10:02:46.953
  I1015 10:02:46.953657 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename sched-pred @ 10/15/24 10:02:46.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:02:47.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:02:47.075
  I1015 10:02:47.081528 22 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1015 10:02:47.120672 22 util.go:400] Waiting for terminating namespaces to be deleted...
  I1015 10:02:47.132349 22 predicates.go:121] 
  Logging pods the apiserver thinks is on node env1-test-worker-0 before test
  I1015 10:02:47.158848 22 predicates.go:887] filebeat-filebeat-5zdl5 from filebeat started at 2024-10-15 09:13:58 +0000 UTC (1 container statuses recorded)
  I1015 10:02:47.158923 22 predicates.go:889] 	Container filebeat ready: true, restart count 0
  I1015 10:02:47.158947 22 predicates.go:887] calico-node-n5shx from kube-system started at 2024-10-14 21:55:42 +0000 UTC (1 container statuses recorded)
  I1015 10:02:47.158964 22 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I1015 10:02:47.158982 22 predicates.go:887] kube-proxy-b8kdx from kube-system started at 2024-10-14 22:04:07 +0000 UTC (1 container statuses recorded)
  I1015 10:02:47.159152 22 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I1015 10:02:47.159199 22 predicates.go:887] nginx-proxy-env1-test-worker-0 from kube-system started at 2024-10-14 22:03:57 +0000 UTC (1 container statuses recorded)
  I1015 10:02:47.159215 22 predicates.go:889] 	Container nginx-proxy ready: true, restart count 0
  I1015 10:02:47.159335 22 predicates.go:887] nodelocaldns-8q7t8 from kube-system started at 2024-06-27 16:41:31 +0000 UTC (1 container statuses recorded)
  I1015 10:02:47.159364 22 predicates.go:889] 	Container node-cache ready: true, restart count 6351
  I1015 10:02:47.159490 22 predicates.go:887] vsphere-csi-node-zjqvd from kube-system started at 2024-10-14 22:26:07 +0000 UTC (3 container statuses recorded)
  I1015 10:02:47.159515 22 predicates.go:889] 	Container liveness-probe ready: true, restart count 0
  I1015 10:02:47.159612 22 predicates.go:889] 	Container node-driver-registrar ready: true, restart count 0
  I1015 10:02:47.159679 22 predicates.go:889] 	Container vsphere-csi-node ready: true, restart count 0
  I1015 10:02:47.159699 22 predicates.go:887] prometheus-prometheus-node-exporter-kxdsz from prometheus started at 2024-10-15 09:13:58 +0000 UTC (1 container statuses recorded)
  I1015 10:02:47.159754 22 predicates.go:889] 	Container node-exporter ready: true, restart count 0
  I1015 10:02:47.159808 22 predicates.go:887] sonobuoy from sonobuoy started at 2024-10-15 09:11:53 +0000 UTC (1 container statuses recorded)
  I1015 10:02:47.159824 22 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I1015 10:02:47.159865 22 predicates.go:887] sonobuoy-e2e-job-ad162e52225241c9 from sonobuoy started at 2024-10-15 09:11:55 +0000 UTC (2 container statuses recorded)
  I1015 10:02:47.159986 22 predicates.go:889] 	Container e2e ready: true, restart count 0
  I1015 10:02:47.160010 22 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I1015 10:02:47.160036 22 predicates.go:887] sonobuoy-systemd-logs-daemon-set-b8230e29d699455d-ww6dp from sonobuoy started at 2024-10-15 09:11:55 +0000 UTC (2 container statuses recorded)
  I1015 10:02:47.160135 22 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I1015 10:02:47.160152 22 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I1015 10:02:47.160222 22 predicates.go:121] 
  Logging pods the apiserver thinks is on node env1-test-worker-1 before test
  I1015 10:02:47.195652 22 predicates.go:887] filebeat-filebeat-jnfmn from filebeat started at 2024-10-14 22:34:19 +0000 UTC (1 container statuses recorded)
  I1015 10:02:47.195763 22 predicates.go:889] 	Container filebeat ready: true, restart count 0
  I1015 10:02:47.195839 22 predicates.go:887] calico-kube-controllers-b5f8f6849-qb92j from kube-system started at 2024-10-14 22:14:20 +0000 UTC (1 container statuses recorded)
  I1015 10:02:47.195876 22 predicates.go:889] 	Container calico-kube-controllers ready: true, restart count 0
  I1015 10:02:47.195899 22 predicates.go:887] calico-node-dksxm from kube-system started at 2024-10-14 21:55:20 +0000 UTC (1 container statuses recorded)
  I1015 10:02:47.195915 22 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I1015 10:02:47.195932 22 predicates.go:887] kube-proxy-8v72s from kube-system started at 2024-10-14 22:04:07 +0000 UTC (1 container statuses recorded)
  I1015 10:02:47.195947 22 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I1015 10:02:47.195964 22 predicates.go:887] metrics-server-6d9b44975-bljqs from kube-system started at 2024-10-14 22:14:20 +0000 UTC (1 container statuses recorded)
  I1015 10:02:47.195978 22 predicates.go:889] 	Container metrics-server ready: true, restart count 0
  I1015 10:02:47.195995 22 predicates.go:887] nginx-proxy-env1-test-worker-1 from kube-system started at 2024-10-14 22:13:58 +0000 UTC (1 container statuses recorded)
  I1015 10:02:47.196009 22 predicates.go:889] 	Container nginx-proxy ready: true, restart count 0
  I1015 10:02:47.196026 22 predicates.go:887] nodelocaldns-zv48x from kube-system started at 2024-06-27 16:41:33 +0000 UTC (1 container statuses recorded)
  I1015 10:02:47.196041 22 predicates.go:889] 	Container node-cache ready: true, restart count 6068
  I1015 10:02:47.196071 22 predicates.go:887] vsphere-csi-node-w7nm8 from kube-system started at 2024-10-14 22:26:06 +0000 UTC (3 container statuses recorded)
  I1015 10:02:47.196114 22 predicates.go:889] 	Container liveness-probe ready: true, restart count 0
  I1015 10:02:47.196149 22 predicates.go:889] 	Container node-driver-registrar ready: true, restart count 0
  I1015 10:02:47.196194 22 predicates.go:889] 	Container vsphere-csi-node ready: true, restart count 0
  I1015 10:02:47.196225 22 predicates.go:887] prometheus-kube-state-metrics-59b5d58f8f-clnv5 from prometheus started at 2024-10-14 22:14:20 +0000 UTC (1 container statuses recorded)
  I1015 10:02:47.196241 22 predicates.go:889] 	Container kube-state-metrics ready: true, restart count 0
  I1015 10:02:47.196260 22 predicates.go:887] prometheus-prometheus-kube-prometheus-prometheus-0 from prometheus started at 2024-10-14 22:37:40 +0000 UTC (3 container statuses recorded)
  I1015 10:02:47.196274 22 predicates.go:889] 	Container config-reloader ready: true, restart count 0
  I1015 10:02:47.196289 22 predicates.go:889] 	Container prometheus ready: true, restart count 0
  I1015 10:02:47.196307 22 predicates.go:889] 	Container thanos-sidecar ready: true, restart count 0
  I1015 10:02:47.196324 22 predicates.go:887] prometheus-prometheus-node-exporter-w6llj from prometheus started at 2024-07-04 10:34:49 +0000 UTC (1 container statuses recorded)
  I1015 10:02:47.196338 22 predicates.go:889] 	Container node-exporter ready: true, restart count 0
  I1015 10:02:47.196355 22 predicates.go:887] sonobuoy-systemd-logs-daemon-set-b8230e29d699455d-h8ztn from sonobuoy started at 2024-10-15 09:11:55 +0000 UTC (2 container statuses recorded)
  I1015 10:02:47.196393 22 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I1015 10:02:47.196434 22 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I1015 10:02:47.196476 22 predicates.go:121] 
  Logging pods the apiserver thinks is on node env1-test-worker-2 before test
  I1015 10:02:47.228358 22 predicates.go:887] filebeat-filebeat-sbqr4 from filebeat started at 2024-10-14 22:33:46 +0000 UTC (1 container statuses recorded)
  I1015 10:02:47.228447 22 predicates.go:889] 	Container filebeat ready: true, restart count 0
  I1015 10:02:47.228478 22 predicates.go:887] calico-node-6bnv9 from kube-system started at 2024-10-14 21:55:42 +0000 UTC (1 container statuses recorded)
  I1015 10:02:47.228503 22 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I1015 10:02:47.228526 22 predicates.go:887] kube-proxy-znvrf from kube-system started at 2024-10-14 22:04:07 +0000 UTC (1 container statuses recorded)
  I1015 10:02:47.228554 22 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I1015 10:02:47.228586 22 predicates.go:887] nginx-proxy-env1-test-worker-2 from kube-system started at 2024-10-14 22:19:21 +0000 UTC (1 container statuses recorded)
  I1015 10:02:47.228614 22 predicates.go:889] 	Container nginx-proxy ready: true, restart count 0
  I1015 10:02:47.228638 22 predicates.go:887] nodelocaldns-72wf8 from kube-system started at 2024-06-27 16:41:30 +0000 UTC (1 container statuses recorded)
  I1015 10:02:47.228660 22 predicates.go:889] 	Container node-cache ready: true, restart count 5825
  I1015 10:02:47.228698 22 predicates.go:887] vsphere-csi-node-v7dvf from kube-system started at 2024-10-14 22:26:07 +0000 UTC (3 container statuses recorded)
  I1015 10:02:47.228720 22 predicates.go:889] 	Container liveness-probe ready: true, restart count 0
  I1015 10:02:47.228748 22 predicates.go:889] 	Container node-driver-registrar ready: true, restart count 0
  I1015 10:02:47.228771 22 predicates.go:889] 	Container vsphere-csi-node ready: true, restart count 0
  I1015 10:02:47.228793 22 predicates.go:887] alertmanager-prometheus-kube-prometheus-alertmanager-0 from prometheus started at 2024-10-14 22:37:37 +0000 UTC (2 container statuses recorded)
  I1015 10:02:47.228811 22 predicates.go:889] 	Container alertmanager ready: true, restart count 0
  I1015 10:02:47.228830 22 predicates.go:889] 	Container config-reloader ready: true, restart count 0
  I1015 10:02:47.228854 22 predicates.go:887] prometheus-kube-prometheus-operator-8566d54cfb-2qfmk from prometheus started at 2024-10-14 22:37:37 +0000 UTC (1 container statuses recorded)
  I1015 10:02:47.228873 22 predicates.go:889] 	Container kube-prometheus-stack ready: true, restart count 0
  I1015 10:02:47.228894 22 predicates.go:887] prometheus-prometheus-node-exporter-rwxkp from prometheus started at 2024-08-28 01:04:52 +0000 UTC (1 container statuses recorded)
  I1015 10:02:47.228912 22 predicates.go:889] 	Container node-exporter ready: true, restart count 0
  I1015 10:02:47.228962 22 predicates.go:887] thanos-query-68cb879f99-tgg5c from prometheus started at 2024-10-14 22:39:28 +0000 UTC (1 container statuses recorded)
  I1015 10:02:47.228988 22 predicates.go:889] 	Container query ready: true, restart count 0
  I1015 10:02:47.229026 22 predicates.go:887] sonobuoy-systemd-logs-daemon-set-b8230e29d699455d-t6kdt from sonobuoy started at 2024-10-15 09:11:55 +0000 UTC (2 container statuses recorded)
  I1015 10:02:47.229076 22 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I1015 10:02:47.229094 22 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I1015 10:02:47.229115 22 predicates.go:887] velero-55bcb7d97d-h6frv from velero started at 2024-10-15 08:07:56 +0000 UTC (1 container statuses recorded)
  I1015 10:02:47.229133 22 predicates.go:889] 	Container velero ready: true, restart count 0
  STEP: verifying the node has the label node env1-test-worker-0 @ 10/15/24 10:02:47.32
  STEP: verifying the node has the label node env1-test-worker-1 @ 10/15/24 10:02:47.356
  STEP: verifying the node has the label node env1-test-worker-2 @ 10/15/24 10:02:47.401
  I1015 10:02:47.466762 22 predicates.go:374] Pod filebeat-filebeat-5zdl5 requesting resource cpu=200m on Node env1-test-worker-0
  I1015 10:02:47.466835 22 predicates.go:374] Pod filebeat-filebeat-jnfmn requesting resource cpu=200m on Node env1-test-worker-1
  I1015 10:02:47.466858 22 predicates.go:374] Pod filebeat-filebeat-sbqr4 requesting resource cpu=200m on Node env1-test-worker-2
  I1015 10:02:47.466877 22 predicates.go:374] Pod calico-kube-controllers-b5f8f6849-qb92j requesting resource cpu=30m on Node env1-test-worker-1
  I1015 10:02:47.466896 22 predicates.go:374] Pod calico-node-6bnv9 requesting resource cpu=150m on Node env1-test-worker-2
  I1015 10:02:47.466915 22 predicates.go:374] Pod calico-node-dksxm requesting resource cpu=150m on Node env1-test-worker-1
  I1015 10:02:47.466935 22 predicates.go:374] Pod calico-node-n5shx requesting resource cpu=150m on Node env1-test-worker-0
  I1015 10:02:47.466957 22 predicates.go:374] Pod kube-proxy-8v72s requesting resource cpu=0m on Node env1-test-worker-1
  I1015 10:02:47.466974 22 predicates.go:374] Pod kube-proxy-b8kdx requesting resource cpu=0m on Node env1-test-worker-0
  I1015 10:02:47.467003 22 predicates.go:374] Pod kube-proxy-znvrf requesting resource cpu=0m on Node env1-test-worker-2
  I1015 10:02:47.467033 22 predicates.go:374] Pod metrics-server-6d9b44975-bljqs requesting resource cpu=100m on Node env1-test-worker-1
  I1015 10:02:47.467058 22 predicates.go:374] Pod nginx-proxy-env1-test-worker-0 requesting resource cpu=25m on Node env1-test-worker-0
  I1015 10:02:47.467076 22 predicates.go:374] Pod nginx-proxy-env1-test-worker-1 requesting resource cpu=25m on Node env1-test-worker-1
  I1015 10:02:47.467093 22 predicates.go:374] Pod nginx-proxy-env1-test-worker-2 requesting resource cpu=25m on Node env1-test-worker-2
  I1015 10:02:47.467111 22 predicates.go:374] Pod nodelocaldns-72wf8 requesting resource cpu=100m on Node env1-test-worker-2
  I1015 10:02:47.467129 22 predicates.go:374] Pod nodelocaldns-8q7t8 requesting resource cpu=100m on Node env1-test-worker-0
  I1015 10:02:47.467146 22 predicates.go:374] Pod nodelocaldns-zv48x requesting resource cpu=100m on Node env1-test-worker-1
  I1015 10:02:47.467316 22 predicates.go:374] Pod vsphere-csi-node-v7dvf requesting resource cpu=0m on Node env1-test-worker-2
  I1015 10:02:47.467338 22 predicates.go:374] Pod vsphere-csi-node-w7nm8 requesting resource cpu=0m on Node env1-test-worker-1
  I1015 10:02:47.467474 22 predicates.go:374] Pod vsphere-csi-node-zjqvd requesting resource cpu=0m on Node env1-test-worker-0
  I1015 10:02:47.467492 22 predicates.go:374] Pod alertmanager-prometheus-kube-prometheus-alertmanager-0 requesting resource cpu=0m on Node env1-test-worker-2
  I1015 10:02:47.467509 22 predicates.go:374] Pod prometheus-kube-prometheus-operator-8566d54cfb-2qfmk requesting resource cpu=0m on Node env1-test-worker-2
  I1015 10:02:47.467526 22 predicates.go:374] Pod prometheus-kube-state-metrics-59b5d58f8f-clnv5 requesting resource cpu=0m on Node env1-test-worker-1
  I1015 10:02:47.467543 22 predicates.go:374] Pod prometheus-prometheus-kube-prometheus-prometheus-0 requesting resource cpu=400m on Node env1-test-worker-1
  I1015 10:02:47.467561 22 predicates.go:374] Pod prometheus-prometheus-node-exporter-kxdsz requesting resource cpu=0m on Node env1-test-worker-0
  I1015 10:02:47.467628 22 predicates.go:374] Pod prometheus-prometheus-node-exporter-rwxkp requesting resource cpu=0m on Node env1-test-worker-2
  I1015 10:02:47.467651 22 predicates.go:374] Pod prometheus-prometheus-node-exporter-w6llj requesting resource cpu=0m on Node env1-test-worker-1
  I1015 10:02:47.467669 22 predicates.go:374] Pod thanos-query-68cb879f99-tgg5c requesting resource cpu=10m on Node env1-test-worker-2
  I1015 10:02:47.467685 22 predicates.go:374] Pod sonobuoy requesting resource cpu=0m on Node env1-test-worker-0
  I1015 10:02:47.467702 22 predicates.go:374] Pod sonobuoy-e2e-job-ad162e52225241c9 requesting resource cpu=0m on Node env1-test-worker-0
  I1015 10:02:47.467720 22 predicates.go:374] Pod sonobuoy-systemd-logs-daemon-set-b8230e29d699455d-h8ztn requesting resource cpu=0m on Node env1-test-worker-1
  I1015 10:02:47.467744 22 predicates.go:374] Pod sonobuoy-systemd-logs-daemon-set-b8230e29d699455d-t6kdt requesting resource cpu=0m on Node env1-test-worker-2
  I1015 10:02:47.467764 22 predicates.go:374] Pod sonobuoy-systemd-logs-daemon-set-b8230e29d699455d-ww6dp requesting resource cpu=0m on Node env1-test-worker-0
  I1015 10:02:47.467797 22 predicates.go:374] Pod velero-55bcb7d97d-h6frv requesting resource cpu=500m on Node env1-test-worker-2
  STEP: Starting Pods to consume most of the cluster CPU. @ 10/15/24 10:02:47.467
  I1015 10:02:47.467957 22 predicates.go:384] Creating a pod which consumes cpu=2026m on Node env1-test-worker-1
  I1015 10:02:47.489410 22 predicates.go:384] Creating a pod which consumes cpu=2040m on Node env1-test-worker-2
  I1015 10:02:47.502777 22 predicates.go:384] Creating a pod which consumes cpu=2397m on Node env1-test-worker-0
  E1015 10:02:47.593824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:48.594652      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:49.594894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:50.595589      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 10/15/24 10:02:51.587
  E1015 10:02:51.595391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b220c637-5d8a-446c-b0b3-17fa477bc612.17fe981f623cea53], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6181/filler-pod-b220c637-5d8a-446c-b0b3-17fa477bc612 to env1-test-worker-1] @ 10/15/24 10:02:51.596
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b220c637-5d8a-446c-b0b3-17fa477bc612.17fe981fac1f570a], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 10/15/24 10:02:51.596
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b220c637-5d8a-446c-b0b3-17fa477bc612.17fe981fad0196b7], Reason = [Created], Message = [Created container filler-pod-b220c637-5d8a-446c-b0b3-17fa477bc612] @ 10/15/24 10:02:51.597
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-b220c637-5d8a-446c-b0b3-17fa477bc612.17fe981fbad3d5ae], Reason = [Started], Message = [Started container filler-pod-b220c637-5d8a-446c-b0b3-17fa477bc612] @ 10/15/24 10:02:51.597
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f24128dd-2aea-42dc-a6ba-57fcfbefc1fe.17fe981f625374d4], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6181/filler-pod-f24128dd-2aea-42dc-a6ba-57fcfbefc1fe to env1-test-worker-2] @ 10/15/24 10:02:51.597
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f24128dd-2aea-42dc-a6ba-57fcfbefc1fe.17fe981fa8041429], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 10/15/24 10:02:51.598
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f24128dd-2aea-42dc-a6ba-57fcfbefc1fe.17fe981fa93a35b6], Reason = [Created], Message = [Created container filler-pod-f24128dd-2aea-42dc-a6ba-57fcfbefc1fe] @ 10/15/24 10:02:51.598
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f24128dd-2aea-42dc-a6ba-57fcfbefc1fe.17fe981fb5dc0b64], Reason = [Started], Message = [Started container filler-pod-f24128dd-2aea-42dc-a6ba-57fcfbefc1fe] @ 10/15/24 10:02:51.599
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f7fd43db-7cd0-4278-8e72-748498f65011.17fe981f64991d07], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6181/filler-pod-f7fd43db-7cd0-4278-8e72-748498f65011 to env1-test-worker-0] @ 10/15/24 10:02:51.6
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f7fd43db-7cd0-4278-8e72-748498f65011.17fe981fa6f224a5], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 10/15/24 10:02:51.6
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f7fd43db-7cd0-4278-8e72-748498f65011.17fe981fa824a164], Reason = [Created], Message = [Created container filler-pod-f7fd43db-7cd0-4278-8e72-748498f65011] @ 10/15/24 10:02:51.601
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-f7fd43db-7cd0-4278-8e72-748498f65011.17fe981fb523173d], Reason = [Started], Message = [Started container filler-pod-f7fd43db-7cd0-4278-8e72-748498f65011] @ 10/15/24 10:02:51.601
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17fe9820568807b5], Reason = [FailedScheduling], Message = [0/6 nodes are available: 3 Insufficient cpu, 3 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }. preemption: 0/6 nodes are available: 3 No preemption victims found for incoming pod, 3 Preemption is not helpful for scheduling.] @ 10/15/24 10:02:51.626
  E1015 10:02:52.595686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label node off the node env1-test-worker-0 @ 10/15/24 10:02:52.625
  STEP: verifying the node doesn't have the label node @ 10/15/24 10:02:52.668
  STEP: removing the label node off the node env1-test-worker-1 @ 10/15/24 10:02:52.677
  STEP: verifying the node doesn't have the label node @ 10/15/24 10:02:52.708
  STEP: removing the label node off the node env1-test-worker-2 @ 10/15/24 10:02:52.713
  STEP: verifying the node doesn't have the label node @ 10/15/24 10:02:52.764
  I1015 10:02:52.772393 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6181" for this suite. @ 10/15/24 10:02:52.784
• [5.846 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 10/15/24 10:02:52.8
  I1015 10:02:52.800523 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/15/24 10:02:52.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:02:52.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:02:52.843
  I1015 10:02:52.850663 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  E1015 10:02:53.597198      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:54.597755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:55.598221      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:56.598584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:57.599700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:58.599640      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:02:59.599811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:03:00.600310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:03:01.240083 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3493" for this suite. @ 10/15/24 10:03:01.255
• [8.470 seconds]
------------------------------
SSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 10/15/24 10:03:01.27
  I1015 10:03:01.270408 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename var-expansion @ 10/15/24 10:03:01.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:03:01.296
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:03:01.3
  STEP: Creating a pod to test substitution in container's args @ 10/15/24 10:03:01.306
  E1015 10:03:01.600286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:03:02.601169      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:03:03.601177      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:03:04.601384      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 10:03:05.368
  I1015 10:03:05.385320 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod var-expansion-e43558a4-064b-48a3-8c8f-826ec71f5501 container dapi-container: <nil>
  STEP: delete the pod @ 10/15/24 10:03:05.407
  I1015 10:03:05.480500 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6678" for this suite. @ 10/15/24 10:03:05.498
• [4.254 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 10/15/24 10:03:05.526
  I1015 10:03:05.526333 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/15/24 10:03:05.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:03:05.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:03:05.57
  I1015 10:03:05.576884 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  E1015 10:03:05.602217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:03:06.603055      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:03:07.604560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:03:08.605091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:03:09.605689      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:03:10.605629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:03:11.606119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:03:12.607117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:03:13.608201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:03:14.608865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 10/15/24 10:03:14.83
  I1015 10:03:14.830642 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=crd-publish-openapi-5500 --namespace=crd-publish-openapi-5500 create -f -'
  I1015 10:03:15.076463 22 builder.go:146] stderr: ""
  I1015 10:03:15.076580 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8550-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I1015 10:03:15.076732 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=crd-publish-openapi-5500 --namespace=crd-publish-openapi-5500 delete e2e-test-crd-publish-openapi-8550-crds test-cr'
  I1015 10:03:15.326416 22 builder.go:146] stderr: ""
  I1015 10:03:15.326528 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8550-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I1015 10:03:15.326705 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=crd-publish-openapi-5500 --namespace=crd-publish-openapi-5500 apply -f -'
  I1015 10:03:15.547527 22 builder.go:146] stderr: ""
  I1015 10:03:15.547641 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8550-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I1015 10:03:15.547794 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=crd-publish-openapi-5500 --namespace=crd-publish-openapi-5500 delete e2e-test-crd-publish-openapi-8550-crds test-cr'
  E1015 10:03:15.609551      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:03:15.727782 22 builder.go:146] stderr: ""
  I1015 10:03:15.727860 22 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8550-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 10/15/24 10:03:15.727
  I1015 10:03:15.728002 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=crd-publish-openapi-5500 explain e2e-test-crd-publish-openapi-8550-crds'
  I1015 10:03:15.939583 22 builder.go:146] stderr: ""
  I1015 10:03:15.939721 22 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-8550-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E1015 10:03:16.610463      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:03:17.610859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:03:18.611718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:03:19.612029      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:03:20.140955 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5500" for this suite. @ 10/15/24 10:03:20.163
• [14.654 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:715
  STEP: Creating a kubernetes client @ 10/15/24 10:03:20.185
  I1015 10:03:20.185240 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename webhook @ 10/15/24 10:03:20.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:03:20.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:03:20.234
  STEP: Setting up server cert @ 10/15/24 10:03:20.3
  E1015 10:03:20.612664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/15/24 10:03:21.129
  STEP: Deploying the webhook pod @ 10/15/24 10:03:21.141
  STEP: Wait for the deployment to be ready @ 10/15/24 10:03:21.164
  I1015 10:03:21.194684 22 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1015 10:03:21.613851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:03:22.614042      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/15/24 10:03:23.221
  STEP: Verifying the service has paired with the endpoint @ 10/15/24 10:03:23.253
  E1015 10:03:23.614269      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:03:24.253892 22 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 10/15/24 10:03:24.272
  STEP: verifying the validating webhook match conditions @ 10/15/24 10:03:24.286
  STEP: updating the validating webhook match conditions @ 10/15/24 10:03:24.293
  STEP: verifying the validating webhook match conditions @ 10/15/24 10:03:24.308
  I1015 10:03:24.510298 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1175" for this suite. @ 10/15/24 10:03:24.535
  STEP: Destroying namespace "webhook-markers-2969" for this suite. @ 10/15/24 10:03:24.564
• [4.428 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:622
  E1015 10:03:24.615042      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a kubernetes client @ 10/15/24 10:03:24.616
  I1015 10:03:24.616443 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename field-validation @ 10/15/24 10:03:24.618
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:03:24.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:03:24.7
  I1015 10:03:24.713583 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  E1015 10:03:25.615640      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:03:26.615768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:03:27.616184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:03:28.616457      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:03:29.616742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:03:30.618145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:03:31.618616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  W1015 10:03:32.329727      22 warnings.go:70] unknown field "alpha"
  W1015 10:03:32.329791      22 warnings.go:70] unknown field "beta"
  W1015 10:03:32.329809      22 warnings.go:70] unknown field "delta"
  W1015 10:03:32.329826      22 warnings.go:70] unknown field "epsilon"
  W1015 10:03:32.329841      22 warnings.go:70] unknown field "gamma"
  E1015 10:03:32.618780      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:03:32.947913 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5808" for this suite. @ 10/15/24 10:03:32.976
• [8.385 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 10/15/24 10:03:33.001
  I1015 10:03:33.001932 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename ingressclass @ 10/15/24 10:03:33.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:03:33.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:03:33.039
  STEP: getting /apis @ 10/15/24 10:03:33.046
  STEP: getting /apis/networking.k8s.io @ 10/15/24 10:03:33.056
  STEP: getting /apis/networking.k8s.iov1 @ 10/15/24 10:03:33.059
  STEP: creating @ 10/15/24 10:03:33.062
  STEP: getting @ 10/15/24 10:03:33.088
  STEP: listing @ 10/15/24 10:03:33.094
  STEP: watching @ 10/15/24 10:03:33.108
  I1015 10:03:33.108765 22 ingressclass.go:348] starting watch
  STEP: patching @ 10/15/24 10:03:33.111
  STEP: updating @ 10/15/24 10:03:33.129
  I1015 10:03:33.138475 22 ingressclass.go:364] waiting for watch events with expected annotations
  I1015 10:03:33.138570 22 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 10/15/24 10:03:33.138
  STEP: deleting a collection @ 10/15/24 10:03:33.159
  I1015 10:03:33.187523 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-2796" for this suite. @ 10/15/24 10:03:33.197
• [0.208 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 10/15/24 10:03:33.21
  I1015 10:03:33.210497 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename downward-api @ 10/15/24 10:03:33.212
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:03:33.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:03:33.253
  STEP: Creating a pod to test downward api env vars @ 10/15/24 10:03:33.258
  E1015 10:03:33.619041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:03:34.619067      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:03:35.619323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:03:36.620283      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 10:03:37.303
  I1015 10:03:37.311914 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod downward-api-dfc7c9aa-2ff3-4ff8-a75f-9a6a8c144d13 container dapi-container: <nil>
  STEP: delete the pod @ 10/15/24 10:03:37.33
  I1015 10:03:37.371628 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4974" for this suite. @ 10/15/24 10:03:37.386
• [4.196 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 10/15/24 10:03:37.407
  I1015 10:03:37.407496 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename configmap @ 10/15/24 10:03:37.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:03:37.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:03:37.476
  STEP: Creating configMap with name configmap-test-volume-65765db0-bed4-48ab-b4de-9a7649b69998 @ 10/15/24 10:03:37.482
  STEP: Creating a pod to test consume configMaps @ 10/15/24 10:03:37.493
  E1015 10:03:37.620665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:03:38.623655      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:03:39.624259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:03:40.625246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 10:03:41.536
  I1015 10:03:41.544511 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-configmaps-a59cc484-4847-4ebb-be1d-6491f514735b container agnhost-container: <nil>
  STEP: delete the pod @ 10/15/24 10:03:41.562
  I1015 10:03:41.602067 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1" for this suite. @ 10/15/24 10:03:41.612
• [4.218 seconds]
------------------------------
SSSSSS  E1015 10:03:41.625121      22 retrywatcher.go:129] "Watch failed" err="context canceled"
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1533
  STEP: Creating a kubernetes client @ 10/15/24 10:03:41.625
  I1015 10:03:41.625862 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename kubectl @ 10/15/24 10:03:41.627
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:03:41.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:03:41.689
  STEP: creating Agnhost RC @ 10/15/24 10:03:41.697
  I1015 10:03:41.697785 22 kubectl.go:1540] namespace kubectl-277
  I1015 10:03:41.698133 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-277 create -f -'
  I1015 10:03:42.032979 22 builder.go:146] stderr: ""
  I1015 10:03:42.033065 22 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 10/15/24 10:03:42.033
  E1015 10:03:42.625404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:03:43.043509 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1015 10:03:43.043581 22 framework.go:733] Found 0 / 1
  E1015 10:03:43.625708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:03:44.046754 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1015 10:03:44.046899 22 framework.go:733] Found 1 / 1
  I1015 10:03:44.046943 22 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I1015 10:03:44.054672 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1015 10:03:44.054739 22 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1015 10:03:44.054761 22 kubectl.go:1547] wait on agnhost-primary startup in kubectl-277 
  I1015 10:03:44.054849 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-277 logs agnhost-primary-ftztk agnhost-primary'
  I1015 10:03:44.272760 22 builder.go:146] stderr: ""
  I1015 10:03:44.272858 22 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 10/15/24 10:03:44.272
  I1015 10:03:44.273022 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-277 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I1015 10:03:44.454009 22 builder.go:146] stderr: ""
  I1015 10:03:44.454115 22 builder.go:147] stdout: "service/rm2 exposed\n"
  I1015 10:03:44.473431 22 utils.go:1179] Service rm2 in namespace kubectl-277 found.
  E1015 10:03:44.626544      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:03:45.626937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: exposing service @ 10/15/24 10:03:46.49
  I1015 10:03:46.491010 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-277 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  E1015 10:03:46.627830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:03:46.763512 22 builder.go:146] stderr: ""
  I1015 10:03:46.763589 22 builder.go:147] stdout: "service/rm3 exposed\n"
  I1015 10:03:46.793129 22 utils.go:1179] Service rm3 in namespace kubectl-277 found.
  E1015 10:03:47.628841      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:03:48.629160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:03:48.807190 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-277" for this suite. @ 10/15/24 10:03:48.82
• [7.213 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:330
  STEP: Creating a kubernetes client @ 10/15/24 10:03:48.84
  I1015 10:03:48.840450 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename resourcequota @ 10/15/24 10:03:48.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:03:48.887
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:03:48.902
  E1015 10:03:49.629962      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:03:50.630477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:03:51.630663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:03:52.631498      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:03:53.632185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:03:54.632929      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:03:55.633777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:03:56.634181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:03:57.634856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:03:58.634936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:03:59.635265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:00.635818      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:01.636213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:02.636246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:03.637168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:04.637292      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:05.637330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 10/15/24 10:04:05.92
  E1015 10:04:06.637801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:07.637995      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:08.639095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:09.639275      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:10.639391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 10/15/24 10:04:10.929
  STEP: Ensuring resource quota status is calculated @ 10/15/24 10:04:10.94
  E1015 10:04:11.640321      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:12.640476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 10/15/24 10:04:12.96
  STEP: Ensuring resource quota status captures configMap creation @ 10/15/24 10:04:12.98
  E1015 10:04:13.641555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:14.642072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 10/15/24 10:04:14.998
  STEP: Ensuring resource quota status released usage @ 10/15/24 10:04:15.017
  E1015 10:04:15.642292      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:16.643083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:04:17.031116 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4410" for this suite. @ 10/15/24 10:04:17.052
• [28.258 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 10/15/24 10:04:17.097
  I1015 10:04:17.097917 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename emptydir @ 10/15/24 10:04:17.1
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:04:17.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:04:17.147
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 10/15/24 10:04:17.152
  E1015 10:04:17.643322      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:18.643635      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:19.643715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:20.643966      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 10:04:21.195
  I1015 10:04:21.201098 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-8da80304-e802-4298-97e3-c0b649cf57c2 container test-container: <nil>
  STEP: delete the pod @ 10/15/24 10:04:21.212
  I1015 10:04:21.246251 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1796" for this suite. @ 10/15/24 10:04:21.256
• [4.174 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 10/15/24 10:04:21.272
  I1015 10:04:21.272495 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename svcaccounts @ 10/15/24 10:04:21.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:04:21.312
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:04:21.319
  I1015 10:04:21.331528 22 service_accounts.go:754] Got root ca configmap in namespace "svcaccounts-3356"
  I1015 10:04:21.343708 22 service_accounts.go:757] Deleted root ca configmap in namespace "svcaccounts-3356"
  E1015 10:04:21.644263      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for a new root ca configmap created @ 10/15/24 10:04:21.848
  I1015 10:04:21.856046 22 service_accounts.go:771] Recreated root ca configmap in namespace "svcaccounts-3356"
  I1015 10:04:21.866610 22 service_accounts.go:782] Updated root ca configmap in namespace "svcaccounts-3356"
  STEP: waiting for the root ca configmap reconciled @ 10/15/24 10:04:22.366
  I1015 10:04:22.372627 22 service_accounts.go:800] Reconciled root ca configmap in namespace "svcaccounts-3356"
  I1015 10:04:22.373503 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-3356" for this suite. @ 10/15/24 10:04:22.384
• [1.137 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 10/15/24 10:04:22.411
  I1015 10:04:22.411380 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename secrets @ 10/15/24 10:04:22.414
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:04:22.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:04:22.476
  STEP: Creating secret with name secret-test-826bb3c7-a7d9-4b77-9014-a2ab0fd94a50 @ 10/15/24 10:04:22.481
  STEP: Creating a pod to test consume secrets @ 10/15/24 10:04:22.492
  E1015 10:04:22.645446      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:23.646056      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:24.646983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:25.648418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 10:04:26.563
  I1015 10:04:26.570752 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-secrets-cb2cb4e9-1cc5-4722-9323-746f0bed870d container secret-volume-test: <nil>
  STEP: delete the pod @ 10/15/24 10:04:26.586
  I1015 10:04:26.623491 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4069" for this suite. @ 10/15/24 10:04:26.64
  E1015 10:04:26.650415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
• [4.255 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 10/15/24 10:04:26.669
  I1015 10:04:26.669481 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename sched-preemption @ 10/15/24 10:04:26.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:04:26.698
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:04:26.703
  I1015 10:04:26.739611 22 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1015 10:04:27.650031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:28.651219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:29.651495      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:30.651545      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:31.651688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:32.651911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:33.652833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:34.653245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:35.653469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:36.654445      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:37.655157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:38.655536      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:39.656526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:40.656845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:41.656965      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:42.657621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:43.658371      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:44.659033      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:45.659936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:46.660690      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:47.661449      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:48.662499      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:49.662846      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:50.663622      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:51.663901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:52.664408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:53.665236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:54.666730      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:55.667115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:56.667291      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:57.668147      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:58.668342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:04:59.668715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:00.668975      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:01.669098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:02.669417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:03.669820      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:04.670261      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:05.670524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:06.671144      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:07.671314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:08.671926      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:09.672294      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:10.673287      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:11.673827      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:12.673976      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:13.674330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:14.674593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:15.674900      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:16.675223      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:17.675322      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:18.676004      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:19.676576      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:20.676840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:21.677611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:22.678070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:23.679301      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:24.679683      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:25.679880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:26.680821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:05:26.752679 22 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 10/15/24 10:05:26.761
  I1015 10:05:26.824355 22 preemption.go:178] Created pod: pod0-0-sched-preemption-low-priority
  I1015 10:05:26.850309 22 preemption.go:178] Created pod: pod0-1-sched-preemption-medium-priority
  I1015 10:05:26.912733 22 preemption.go:178] Created pod: pod1-0-sched-preemption-medium-priority
  I1015 10:05:26.940541 22 preemption.go:178] Created pod: pod1-1-sched-preemption-medium-priority
  I1015 10:05:26.996187 22 preemption.go:178] Created pod: pod2-0-sched-preemption-medium-priority
  I1015 10:05:27.020873 22 preemption.go:178] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 10/15/24 10:05:27.021
  E1015 10:05:27.681555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:28.682804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:29.683768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:30.683767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 10/15/24 10:05:31.11
  E1015 10:05:31.684190      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:32.684815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:33.687405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:34.687905      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:05:35.303234 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-7954" for this suite. @ 10/15/24 10:05:35.316
• [68.661 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:348
  STEP: Creating a kubernetes client @ 10/15/24 10:05:35.33
  I1015 10:05:35.330982 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename disruption @ 10/15/24 10:05:35.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:05:35.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:05:35.37
  STEP: Creating a pdb that targets all three pods in a test replica set @ 10/15/24 10:05:35.376
  STEP: Waiting for the pdb to be processed @ 10/15/24 10:05:35.388
  E1015 10:05:35.688427      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:36.688804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: First trying to evict a pod which shouldn't be evictable @ 10/15/24 10:05:37.408
  STEP: Waiting for all pods to be running @ 10/15/24 10:05:37.409
  I1015 10:05:37.418451 22 disruption.go:567] pods: 0 < 3
  E1015 10:05:37.689637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:38.689132      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 10/15/24 10:05:39.422
  STEP: Updating the pdb to allow a pod to be evicted @ 10/15/24 10:05:39.455
  STEP: Waiting for the pdb to be processed @ 10/15/24 10:05:39.482
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 10/15/24 10:05:39.495
  STEP: Waiting for all pods to be running @ 10/15/24 10:05:39.496
  STEP: Waiting for the pdb to observed all healthy pods @ 10/15/24 10:05:39.521
  STEP: Patching the pdb to disallow a pod to be evicted @ 10/15/24 10:05:39.584
  STEP: Waiting for the pdb to be processed @ 10/15/24 10:05:39.611
  E1015 10:05:39.690102      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:40.690438      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 10/15/24 10:05:41.62
  STEP: locating a running pod @ 10/15/24 10:05:41.63
  STEP: Deleting the pdb to allow a pod to be evicted @ 10/15/24 10:05:41.656
  STEP: Waiting for the pdb to be deleted @ 10/15/24 10:05:41.683
  E1015 10:05:41.690681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 10/15/24 10:05:41.691
  STEP: Waiting for all pods to be running @ 10/15/24 10:05:41.691
  I1015 10:05:41.776422 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6567" for this suite. @ 10/15/24 10:05:41.799
• [6.518 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 10/15/24 10:05:41.849
  I1015 10:05:41.849236 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename pods @ 10/15/24 10:05:41.85
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:05:42.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:05:42.022
  STEP: creating pod @ 10/15/24 10:05:42.031
  E1015 10:05:42.691852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:43.691953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:05:44.098079 22 pods.go:83] Pod pod-hostip-5658cd07-cb4a-4f3e-808a-3cd159d5d024 has hostIP: 10.61.1.200
  I1015 10:05:44.098268 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9891" for this suite. @ 10/15/24 10:05:44.114
• [2.294 seconds]
------------------------------
SS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 10/15/24 10:05:44.145
  I1015 10:05:44.145753 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename pod-network-test @ 10/15/24 10:05:44.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:05:44.234
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:05:44.244
  STEP: Performing setup for networking test in namespace pod-network-test-6210 @ 10/15/24 10:05:44.265
  STEP: creating a selector @ 10/15/24 10:05:44.266
  STEP: Creating the service pods in kubernetes @ 10/15/24 10:05:44.266
  I1015 10:05:44.266811 22 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1015 10:05:44.692701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:45.693655      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:46.693990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:47.694088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:48.695607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:49.695778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:50.696088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:51.699606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:52.700622      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:53.701530      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:54.702397      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:55.703204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:56.703628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:57.703777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:58.704603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:05:59.704842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:06:00.705702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:06:01.706420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:06:02.706780      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:06:03.707668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:06:04.708775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:06:05.709448      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 10/15/24 10:06:06.554
  E1015 10:06:06.709674      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:06:07.711781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:06:08.633527 22 utils.go:779] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1015 10:06:08.633612 22 utils.go:472] Going to poll 10.233.118.16 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I1015 10:06:08.640916 22 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.118.16 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6210 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1015 10:06:08.641047 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  I1015 10:06:08.643769 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I1015 10:06:08.643901 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6210/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.118.16+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E1015 10:06:08.712339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:06:09.712451      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:06:09.793570 22 utils.go:489] Found all 1 expected endpoints: [netserver-0]
  I1015 10:06:09.793640 22 utils.go:472] Going to poll 10.233.87.127 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I1015 10:06:09.803000 22 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.87.127 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6210 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1015 10:06:09.803656 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  I1015 10:06:09.804933 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I1015 10:06:09.805496 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6210/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.87.127+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E1015 10:06:10.713269      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:06:10.973823 22 utils.go:489] Found all 1 expected endpoints: [netserver-1]
  I1015 10:06:10.973917 22 utils.go:472] Going to poll 10.233.76.172 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I1015 10:06:10.983539 22 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.233.76.172 8081 | grep -v '^\s*$'] Namespace:pod-network-test-6210 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1015 10:06:10.983612 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  I1015 10:06:10.984841 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I1015 10:06:10.984972 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-6210/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.233.76.172+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  E1015 10:06:11.714165      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:06:12.127607 22 utils.go:489] Found all 1 expected endpoints: [netserver-2]
  I1015 10:06:12.127851 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6210" for this suite. @ 10/15/24 10:06:12.141
• [28.013 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 10/15/24 10:06:12.158
  I1015 10:06:12.158579 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename validating-admission-policy @ 10/15/24 10:06:12.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:06:12.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:06:12.213
  STEP: creating a policy with variables @ 10/15/24 10:06:12.234
  STEP: waiting until the marker is denied @ 10/15/24 10:06:12.283
  E1015 10:06:12.715503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: testing a replicated Deployment to be allowed @ 10/15/24 10:06:13.096
  STEP: testing a non-replicated ReplicaSet not to be denied @ 10/15/24 10:06:13.121
  I1015 10:06:13.236833 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-7524" for this suite. @ 10/15/24 10:06:13.259
• [1.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 10/15/24 10:06:13.293
  I1015 10:06:13.293164 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename events @ 10/15/24 10:06:13.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:06:13.404
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:06:13.411
  STEP: creating a test event @ 10/15/24 10:06:13.417
  STEP: listing events in all namespaces @ 10/15/24 10:06:13.446
  STEP: listing events in test namespace @ 10/15/24 10:06:13.464
  STEP: listing events with field selection filtering on source @ 10/15/24 10:06:13.489
  STEP: listing events with field selection filtering on reportingController @ 10/15/24 10:06:13.505
  STEP: getting the test event @ 10/15/24 10:06:13.518
  STEP: patching the test event @ 10/15/24 10:06:13.534
  STEP: getting the test event @ 10/15/24 10:06:13.551
  STEP: updating the test event @ 10/15/24 10:06:13.558
  STEP: getting the test event @ 10/15/24 10:06:13.574
  STEP: deleting the test event @ 10/15/24 10:06:13.581
  STEP: listing events in all namespaces @ 10/15/24 10:06:13.598
  STEP: listing events in test namespace @ 10/15/24 10:06:13.613
  I1015 10:06:13.622903 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1275" for this suite. @ 10/15/24 10:06:13.636
• [0.369 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 10/15/24 10:06:13.662
  I1015 10:06:13.663226 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename dns @ 10/15/24 10:06:13.666
  E1015 10:06:13.716314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:06:13.724
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:06:13.735
  STEP: Creating a test headless service @ 10/15/24 10:06:13.742
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-8301.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-8301.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 10/15/24 10:06:13.764
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-8301.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-8301.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 10/15/24 10:06:13.764
  STEP: creating a pod to probe DNS @ 10/15/24 10:06:13.764
  STEP: submitting the pod to kubernetes @ 10/15/24 10:06:13.764
  E1015 10:06:14.716337      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:06:15.717113      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:06:16.717563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:06:17.718178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 10/15/24 10:06:17.824
  STEP: looking for the results for each expected name from probers @ 10/15/24 10:06:17.848
  I1015 10:06:17.938967 22 dns_common.go:527] DNS probes using dns-8301/dns-test-9c2f8929-d64e-417a-bb75-84c600803bde succeeded

  STEP: deleting the pod @ 10/15/24 10:06:17.939
  STEP: deleting the test headless service @ 10/15/24 10:06:17.996
  I1015 10:06:18.033311 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8301" for this suite. @ 10/15/24 10:06:18.055
• [4.426 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 10/15/24 10:06:18.089
  I1015 10:06:18.089752 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename field-validation @ 10/15/24 10:06:18.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:06:18.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:06:18.152
  STEP: apply creating a deployment @ 10/15/24 10:06:18.158
  I1015 10:06:18.208273 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4805" for this suite. @ 10/15/24 10:06:18.235
• [0.186 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 10/15/24 10:06:18.276
  I1015 10:06:18.276136 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename validating-admission-policy @ 10/15/24 10:06:18.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:06:18.341
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:06:18.36
  STEP: creating the policy @ 10/15/24 10:06:18.385
  STEP: waiting until the marker is denied @ 10/15/24 10:06:18.412
  E1015 10:06:18.718326      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: testing a replicated Deployment to be allowed @ 10/15/24 10:06:19.131
  STEP: testing a non-replicated ReplicaSet not to be denied @ 10/15/24 10:06:19.17
  I1015 10:06:19.281240 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-3855" for this suite. @ 10/15/24 10:06:19.294
• [1.030 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 10/15/24 10:06:19.315
  I1015 10:06:19.316096 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename webhook @ 10/15/24 10:06:19.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:06:19.394
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:06:19.4
  STEP: Setting up server cert @ 10/15/24 10:06:19.476
  E1015 10:06:19.719196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/15/24 10:06:20.035
  STEP: Deploying the webhook pod @ 10/15/24 10:06:20.056
  STEP: Wait for the deployment to be ready @ 10/15/24 10:06:20.086
  I1015 10:06:20.102531 22 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1015 10:06:20.719313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:06:21.720011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/15/24 10:06:22.129
  STEP: Verifying the service has paired with the endpoint @ 10/15/24 10:06:22.158
  E1015 10:06:22.720590      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:06:23.159258 22 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 10/15/24 10:06:23.172
  STEP: create a configmap that should be updated by the webhook @ 10/15/24 10:06:23.204
  I1015 10:06:23.320615 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-575" for this suite. @ 10/15/24 10:06:23.345
  STEP: Destroying namespace "webhook-markers-6495" for this suite. @ 10/15/24 10:06:23.364
• [4.070 seconds]
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 10/15/24 10:06:23.386
  I1015 10:06:23.387827 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename proxy @ 10/15/24 10:06:23.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:06:23.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:06:23.495
  I1015 10:06:23.509802 22 proxy.go:293] Creating pod...
  E1015 10:06:23.723297      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:06:24.723798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:06:25.724124      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:06:26.724299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:06:27.557694 22 proxy.go:317] Creating service...
  I1015 10:06:27.589508 22 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-567/pods/agnhost/proxy/some/path/with/DELETE
  I1015 10:06:27.600892 22 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1015 10:06:27.601078 22 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-567/pods/agnhost/proxy/some/path/with/GET
  I1015 10:06:27.611553 22 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I1015 10:06:27.611684 22 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-567/pods/agnhost/proxy/some/path/with/HEAD
  I1015 10:06:27.620156 22 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I1015 10:06:27.620277 22 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-567/pods/agnhost/proxy/some/path/with/OPTIONS
  I1015 10:06:27.628214 22 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1015 10:06:27.628367 22 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-567/pods/agnhost/proxy/some/path/with/PATCH
  I1015 10:06:27.639309 22 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1015 10:06:27.639452 22 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-567/pods/agnhost/proxy/some/path/with/POST
  I1015 10:06:27.650442 22 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1015 10:06:27.650555 22 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-567/pods/agnhost/proxy/some/path/with/PUT
  I1015 10:06:27.656858 22 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1015 10:06:27.657497 22 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-567/services/test-service/proxy/some/path/with/DELETE
  I1015 10:06:27.677397 22 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1015 10:06:27.678389 22 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-567/services/test-service/proxy/some/path/with/GET
  I1015 10:06:27.695507 22 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I1015 10:06:27.695621 22 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-567/services/test-service/proxy/some/path/with/HEAD
  I1015 10:06:27.706676 22 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I1015 10:06:27.706771 22 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-567/services/test-service/proxy/some/path/with/OPTIONS
  E1015 10:06:27.727840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:06:27.735054 22 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1015 10:06:27.735400 22 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-567/services/test-service/proxy/some/path/with/PATCH
  I1015 10:06:27.761725 22 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1015 10:06:27.761838 22 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-567/services/test-service/proxy/some/path/with/POST
  I1015 10:06:27.786658 22 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1015 10:06:27.786762 22 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-567/services/test-service/proxy/some/path/with/PUT
  I1015 10:06:27.807915 22 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1015 10:06:27.808355 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-567" for this suite. @ 10/15/24 10:06:27.826
• [4.459 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:57
  STEP: Creating a kubernetes client @ 10/15/24 10:06:27.851
  I1015 10:06:27.851755 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename volumeattachment @ 10/15/24 10:06:27.854
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:06:27.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:06:27.927
  STEP: Create VolumeAttachment "va-e2e-5lt6w" on node "env1-test-master-0" @ 10/15/24 10:06:27.968
  STEP: Get VolumeAttachment "va-e2e-5lt6w" on node "env1-test-master-0" @ 10/15/24 10:06:28
  STEP: Patch VolumeAttachment "va-e2e-5lt6w" on node "env1-test-master-0" @ 10/15/24 10:06:28.012
  STEP: List VolumeAttachments with "va-e2e-5lt6w=patched" label @ 10/15/24 10:06:28.028
  STEP: Delete VolumeAttachment "va-e2e-5lt6w" on node "env1-test-master-0" @ 10/15/24 10:06:28.044
  STEP: Confirm deletion of VolumeAttachment "va-e2e-5lt6w" on node "env1-test-master-0" @ 10/15/24 10:06:28.067
  STEP: Create VolumeAttachment "va-e2e-pv7v5" on node "env1-test-worker-1" @ 10/15/24 10:06:28.102
  STEP: Update the VolumeAttachment "va-e2e-pv7v5" on node "env1-test-worker-1" with label "va-e2e=updated" @ 10/15/24 10:06:28.109
  STEP: Create VolumeAttachment "va-e2e-56gs9" on node "env1-test-worker-1" @ 10/15/24 10:06:28.131
  STEP: Update the VolumeAttachment "va-e2e-56gs9" on node "env1-test-worker-1" with label "va-e2e=updated" @ 10/15/24 10:06:28.143
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 10/15/24 10:06:28.16
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 10/15/24 10:06:28.186
  I1015 10:06:28.192293 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-2675" for this suite. @ 10/15/24 10:06:28.203
• [0.367 seconds]
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 10/15/24 10:06:28.219
  I1015 10:06:28.220364 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename subpath @ 10/15/24 10:06:28.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:06:28.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:06:28.263
  STEP: Setting up data @ 10/15/24 10:06:28.27
  STEP: Creating pod pod-subpath-test-configmap-c2q7 @ 10/15/24 10:06:28.287
  STEP: Creating a pod to test atomic-volume-subpath @ 10/15/24 10:06:28.288
  E1015 10:06:28.728860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:06:29.728863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:06:30.730381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:06:31.730514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:06:32.731254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:06:33.731406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:06:34.732412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:06:35.733071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:06:36.733676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:06:37.733992      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:06:38.734143      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:06:39.734308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:06:40.734294      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:06:41.735390      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:06:42.736780      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:06:43.736873      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:06:44.736907      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:06:45.737465      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:06:46.738236      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:06:47.739284      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:06:48.740218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:06:49.741278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:06:50.741613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:06:51.743686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 10:06:52.522
  I1015 10:06:52.531992 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-subpath-test-configmap-c2q7 container test-container-subpath-configmap-c2q7: <nil>
  STEP: delete the pod @ 10/15/24 10:06:52.574
  STEP: Deleting pod pod-subpath-test-configmap-c2q7 @ 10/15/24 10:06:52.632
  I1015 10:06:52.633171 22 delete.go:62] Deleting pod "pod-subpath-test-configmap-c2q7" in namespace "subpath-6747"
  I1015 10:06:52.663233 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-6747" for this suite. @ 10/15/24 10:06:52.678
• [24.482 seconds]
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 10/15/24 10:06:52.703
  I1015 10:06:52.703242 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename gc @ 10/15/24 10:06:52.707
  E1015 10:06:52.744796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:06:52.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:06:52.775
  STEP: create the deployment @ 10/15/24 10:06:52.786
  W1015 10:06:52.802083      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 10/15/24 10:06:52.802
  STEP: delete the deployment @ 10/15/24 10:06:53.312
  STEP: wait for all rs to be garbage collected @ 10/15/24 10:06:53.327
  STEP: expected 0 rs, got 1 rs @ 10/15/24 10:06:53.34
  STEP: expected 0 pods, got 2 pods @ 10/15/24 10:06:53.364
  E1015 10:06:53.746286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 10/15/24 10:06:53.855
  I1015 10:06:54.122255 22 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1015 10:06:54.122729 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4238" for this suite. @ 10/15/24 10:06:54.135
• [1.450 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 10/15/24 10:06:54.161
  I1015 10:06:54.161624 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename endpointslice @ 10/15/24 10:06:54.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:06:54.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:06:54.233
  E1015 10:06:54.746953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:06:55.747145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 10/15/24 10:06:56.464
  STEP: referencing matching pods with named port @ 10/15/24 10:06:56.489
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 10/15/24 10:06:56.517
  STEP: recreating EndpointSlices after they've been deleted @ 10/15/24 10:06:56.538
  I1015 10:06:56.589672 22 endpointslice.go:938] EndpointSlice for Service endpointslice-8422/example-named-port not found
  E1015 10:06:56.747581      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:06:57.747966      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:06:58.597389 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8422" for this suite. @ 10/15/24 10:06:58.609
• [4.466 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 10/15/24 10:06:58.63
  I1015 10:06:58.630588 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename pods @ 10/15/24 10:06:58.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:06:58.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:06:58.686
  E1015 10:06:58.748111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:06:59.749623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:07:00.750340      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:07:01.750682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:07:02.751079      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:07:03.755575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:07:04.755651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:07:05.755725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:07:06.756679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 10:07:06.837
  I1015 10:07:06.845777 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod client-envvars-549fe6d6-082b-47b9-9337-cba46fce7911 container env3cont: <nil>
  STEP: delete the pod @ 10/15/24 10:07:06.863
  I1015 10:07:06.914331 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8552" for this suite. @ 10/15/24 10:07:06.925
• [8.310 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1726
  STEP: Creating a kubernetes client @ 10/15/24 10:07:06.942
  I1015 10:07:06.942259 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename kubectl @ 10/15/24 10:07:06.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:07:06.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:07:06.993
  I1015 10:07:07.001298 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-4893 version'
  I1015 10:07:07.185643 22 builder.go:146] stderr: ""
  I1015 10:07:07.185767 22 builder.go:147] stdout: "Client Version: v1.30.4\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.30.4\n"
  I1015 10:07:07.186914 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4893" for this suite. @ 10/15/24 10:07:07.199
• [0.271 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 10/15/24 10:07:07.213
  I1015 10:07:07.213861 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename disruption @ 10/15/24 10:07:07.215
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:07:07.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:07:07.255
  STEP: Waiting for the pdb to be processed @ 10/15/24 10:07:07.277
  E1015 10:07:07.757767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:07:08.757893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 10/15/24 10:07:09.342
  I1015 10:07:09.361626 22 disruption.go:578] running pods: 0 < 3
  E1015 10:07:09.759705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:07:10.760025      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:07:11.353406 22 disruption.go:578] running pods: 1 < 3
  E1015 10:07:11.760986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:07:12.761441      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:07:13.363053 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-6717" for this suite. @ 10/15/24 10:07:13.376
• [6.180 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 10/15/24 10:07:13.395
  I1015 10:07:13.396167 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename proxy @ 10/15/24 10:07:13.398
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:07:13.429
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:07:13.435
  I1015 10:07:13.443639 22 proxy.go:387] Creating pod...
  E1015 10:07:13.764564      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:07:14.765917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:07:15.491334 22 proxy.go:411] Creating service...
  I1015 10:07:15.523760 22 proxy.go:448] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7785/pods/agnhost/proxy?method=DELETE
  I1015 10:07:15.550877 22 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1015 10:07:15.551006 22 proxy.go:448] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7785/pods/agnhost/proxy?method=OPTIONS
  I1015 10:07:15.570106 22 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1015 10:07:15.571629 22 proxy.go:448] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7785/pods/agnhost/proxy?method=PATCH
  I1015 10:07:15.582925 22 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1015 10:07:15.583713 22 proxy.go:448] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7785/pods/agnhost/proxy?method=POST
  I1015 10:07:15.601127 22 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1015 10:07:15.601974 22 proxy.go:448] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7785/pods/agnhost/proxy?method=PUT
  I1015 10:07:15.620021 22 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1015 10:07:15.621854 22 proxy.go:459] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7785/services/e2e-proxy-test-service/proxy?method=DELETE
  I1015 10:07:15.642918 22 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1015 10:07:15.643738 22 proxy.go:459] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7785/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I1015 10:07:15.670810 22 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1015 10:07:15.672428 22 proxy.go:459] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7785/services/e2e-proxy-test-service/proxy?method=PATCH
  I1015 10:07:15.708130 22 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1015 10:07:15.708218 22 proxy.go:459] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7785/services/e2e-proxy-test-service/proxy?method=POST
  I1015 10:07:15.722757 22 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1015 10:07:15.723740 22 proxy.go:459] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7785/services/e2e-proxy-test-service/proxy?method=PUT
  I1015 10:07:15.758544 22 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1015 10:07:15.759318 22 proxy.go:479] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7785/pods/agnhost/proxy?method=GET
  E1015 10:07:15.766424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:07:15.766768 22 proxy.go:487] http.Client request:GET StatusCode:301
  I1015 10:07:15.766966 22 proxy.go:479] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7785/services/e2e-proxy-test-service/proxy?method=GET
  I1015 10:07:15.794434 22 proxy.go:487] http.Client request:GET StatusCode:301
  I1015 10:07:15.794594 22 proxy.go:479] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7785/pods/agnhost/proxy?method=HEAD
  I1015 10:07:15.807835 22 proxy.go:487] http.Client request:HEAD StatusCode:301
  I1015 10:07:15.809016 22 proxy.go:479] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7785/services/e2e-proxy-test-service/proxy?method=HEAD
  I1015 10:07:15.824344 22 proxy.go:487] http.Client request:HEAD StatusCode:301
  I1015 10:07:15.825052 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-7785" for this suite. @ 10/15/24 10:07:15.841
• [2.462 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 10/15/24 10:07:15.862
  I1015 10:07:15.863084 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename replicaset @ 10/15/24 10:07:15.866
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:07:15.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:07:15.936
  I1015 10:07:15.953047 22 replica_set.go:191] Creating ReplicaSet my-hostname-basic-4a70c26a-7c8c-43a3-8272-68e407ca8c7f
  I1015 10:07:15.985519 22 resource.go:87] Pod name my-hostname-basic-4a70c26a-7c8c-43a3-8272-68e407ca8c7f: Found 0 pods out of 1
  E1015 10:07:16.767454      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:07:17.767762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:07:18.767987      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:07:19.768806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:07:20.769213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:07:20.996448 22 resource.go:87] Pod name my-hostname-basic-4a70c26a-7c8c-43a3-8272-68e407ca8c7f: Found 1 pods out of 1
  I1015 10:07:20.997377 22 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-4a70c26a-7c8c-43a3-8272-68e407ca8c7f" is running
  I1015 10:07:21.011348 22 replica_set.go:220] Pod "my-hostname-basic-4a70c26a-7c8c-43a3-8272-68e407ca8c7f-g6ngw" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-10-15 10:07:18 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-10-15 10:07:16 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-10-15 10:07:18 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-10-15 10:07:18 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-10-15 10:07:15 +0000 UTC Reason: Message:}])
  I1015 10:07:21.011681 22 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 10/15/24 10:07:21.011
  I1015 10:07:21.035499 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1322" for this suite. @ 10/15/24 10:07:21.049
• [5.202 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 10/15/24 10:07:21.065
  I1015 10:07:21.065921 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/15/24 10:07:21.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:07:21.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:07:21.15
  STEP: set up a multi version CRD @ 10/15/24 10:07:21.159
  I1015 10:07:21.160984 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  E1015 10:07:21.769980      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:07:22.770070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:07:23.770795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:07:24.770770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:07:25.772488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:07:26.772674      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:07:27.772635      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:07:28.772994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:07:29.773643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:07:30.774492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:07:31.775388      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:07:32.775744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:07:33.776349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:07:34.776341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:07:35.777240      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: rename a version @ 10/15/24 10:07:36.114
  STEP: check the new version name is served @ 10/15/24 10:07:36.15
  E1015 10:07:36.777825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:07:37.778036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:07:38.778517      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:07:39.779165      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the old version name is removed @ 10/15/24 10:07:40.211
  E1015 10:07:40.779948      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check the other version is not changed @ 10/15/24 10:07:41.516
  E1015 10:07:41.781073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:07:42.781398      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:07:43.782093      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:07:44.782636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:07:45.783705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:07:46.784711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:07:47.785720      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:07:48.769972 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  E1015 10:07:48.785960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "crd-publish-openapi-8995" for this suite. @ 10/15/24 10:07:48.794
• [27.749 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:397
  STEP: Creating a kubernetes client @ 10/15/24 10:07:48.814
  I1015 10:07:48.814895 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename resourcequota @ 10/15/24 10:07:48.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:07:48.865
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:07:48.89
  STEP: Counting existing ResourceQuota @ 10/15/24 10:07:48.901
  E1015 10:07:49.786478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:07:50.786699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:07:51.786957      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:07:52.787539      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:07:53.788396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 10/15/24 10:07:53.912
  STEP: Ensuring resource quota status is calculated @ 10/15/24 10:07:53.93
  E1015 10:07:54.789496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:07:55.789706      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 10/15/24 10:07:55.937
  STEP: Ensuring resource quota status captures replication controller creation @ 10/15/24 10:07:55.96
  E1015 10:07:56.790153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:07:57.790977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 10/15/24 10:07:57.985
  STEP: Ensuring resource quota status released usage @ 10/15/24 10:07:58
  E1015 10:07:58.791566      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:07:59.791755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:08:00.010221 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5283" for this suite. @ 10/15/24 10:08:00.023
• [11.228 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 10/15/24 10:08:00.045
  I1015 10:08:00.045397 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename configmap @ 10/15/24 10:08:00.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:08:00.102
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:08:00.111
  STEP: Creating configMap configmap-6534/configmap-test-50b554f8-251f-49b9-b919-85e4bba75358 @ 10/15/24 10:08:00.119
  STEP: Creating a pod to test consume configMaps @ 10/15/24 10:08:00.13
  E1015 10:08:00.792317      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:08:01.792327      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:08:02.793458      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:08:03.794103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 10:08:04.182
  I1015 10:08:04.204833 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-configmaps-a38e7e5c-4ccb-4b32-af0b-36da5d490756 container env-test: <nil>
  STEP: delete the pod @ 10/15/24 10:08:04.27
  I1015 10:08:04.318075 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6534" for this suite. @ 10/15/24 10:08:04.351
• [4.326 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 10/15/24 10:08:04.372
  I1015 10:08:04.372711 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename pods @ 10/15/24 10:08:04.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:08:04.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:08:04.429
  STEP: Create set of pods @ 10/15/24 10:08:04.436
  I1015 10:08:04.513937 22 pods.go:871] created test-pod-1
  I1015 10:08:04.537026 22 pods.go:871] created test-pod-2
  I1015 10:08:04.548849 22 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 10/15/24 10:08:04.548
  E1015 10:08:04.794695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:08:05.795466      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 10/15/24 10:08:06.683
  I1015 10:08:06.693605 22 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  E1015 10:08:06.795949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:08:07.698157 22 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  E1015 10:08:07.796386      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:08:08.693002 22 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  E1015 10:08:08.796896      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:08:09.695232 22 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  E1015 10:08:09.797684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:08:10.693586 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4406" for this suite. @ 10/15/24 10:08:10.71
• [6.364 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 10/15/24 10:08:10.738
  I1015 10:08:10.738979 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename projected @ 10/15/24 10:08:10.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:08:10.797
  E1015 10:08:10.800008      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:08:10.806
  STEP: Creating a pod to test downward API volume plugin @ 10/15/24 10:08:10.822
  E1015 10:08:11.799457      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:08:12.799912      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:08:13.801261      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:08:14.801928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 10:08:14.874
  I1015 10:08:14.883492 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod downwardapi-volume-cc677b0a-f828-4d31-93c5-2828497950e4 container client-container: <nil>
  STEP: delete the pod @ 10/15/24 10:08:14.903
  I1015 10:08:14.932369 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4075" for this suite. @ 10/15/24 10:08:14.946
• [4.225 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 10/15/24 10:08:14.964
  I1015 10:08:14.964806 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename var-expansion @ 10/15/24 10:08:14.967
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:08:15.03
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:08:15.044
  E1015 10:08:15.802857      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:08:16.803258      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:08:17.106019 22 delete.go:62] Deleting pod "var-expansion-ab85f5ca-7d78-4363-b694-bff2277cee2d" in namespace "var-expansion-6832"
  I1015 10:08:17.138843 22 delete.go:70] Wait up to 5m0s for pod "var-expansion-ab85f5ca-7d78-4363-b694-bff2277cee2d" to be fully deleted
  E1015 10:08:17.804379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:08:18.804567      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:08:19.805585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:08:20.805643      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:08:21.166067 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6832" for this suite. @ 10/15/24 10:08:21.183
• [6.241 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 10/15/24 10:08:21.209
  I1015 10:08:21.210243 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename endpointslice @ 10/15/24 10:08:21.212
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:08:21.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:08:21.26
  STEP: getting /apis @ 10/15/24 10:08:21.267
  STEP: getting /apis/discovery.k8s.io @ 10/15/24 10:08:21.28
  STEP: getting /apis/discovery.k8s.iov1 @ 10/15/24 10:08:21.283
  STEP: creating @ 10/15/24 10:08:21.286
  STEP: getting @ 10/15/24 10:08:21.319
  STEP: listing @ 10/15/24 10:08:21.326
  STEP: watching @ 10/15/24 10:08:21.334
  I1015 10:08:21.334083 22 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 10/15/24 10:08:21.337
  STEP: cluster-wide watching @ 10/15/24 10:08:21.346
  I1015 10:08:21.346753 22 endpointslice.go:459] starting watch
  STEP: patching @ 10/15/24 10:08:21.351
  STEP: updating @ 10/15/24 10:08:21.361
  I1015 10:08:21.405703 22 endpointslice.go:482] waiting for watch events with expected annotations
  I1015 10:08:21.406005 22 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 10/15/24 10:08:21.406
  STEP: deleting a collection @ 10/15/24 10:08:21.439
  I1015 10:08:21.483236 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-6220" for this suite. @ 10/15/24 10:08:21.514
• [0.320 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:341
  STEP: Creating a kubernetes client @ 10/15/24 10:08:21.534
  I1015 10:08:21.534178 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename cronjob @ 10/15/24 10:08:21.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:08:21.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:08:21.577
  STEP: Creating a cronjob @ 10/15/24 10:08:21.583
  STEP: creating @ 10/15/24 10:08:21.583
  STEP: getting @ 10/15/24 10:08:21.594
  STEP: listing @ 10/15/24 10:08:21.601
  STEP: watching @ 10/15/24 10:08:21.606
  I1015 10:08:21.606221 22 cronjob.go:370] starting watch
  STEP: cluster-wide listing @ 10/15/24 10:08:21.608
  STEP: cluster-wide watching @ 10/15/24 10:08:21.614
  I1015 10:08:21.614462 22 cronjob.go:382] starting watch
  STEP: patching @ 10/15/24 10:08:21.616
  STEP: updating @ 10/15/24 10:08:21.632
  I1015 10:08:21.655970 22 cronjob.go:406] waiting for watch events with expected annotations
  I1015 10:08:21.656079 22 cronjob.go:420] saw patched and updated annotations
  STEP: patching /status @ 10/15/24 10:08:21.656
  STEP: updating /status @ 10/15/24 10:08:21.673
  STEP: get /status @ 10/15/24 10:08:21.69
  STEP: deleting @ 10/15/24 10:08:21.701
  STEP: deleting a collection @ 10/15/24 10:08:21.738
  I1015 10:08:21.770209 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-4146" for this suite. @ 10/15/24 10:08:21.778
• [0.269 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1833
  STEP: Creating a kubernetes client @ 10/15/24 10:08:21.803
  I1015 10:08:21.803681 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename kubectl @ 10/15/24 10:08:21.805
  E1015 10:08:21.805898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:08:21.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:08:21.857
  STEP: starting the proxy server @ 10/15/24 10:08:21.863
  I1015 10:08:21.863863 22 util.go:592] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-655 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 10/15/24 10:08:21.996
  I1015 10:08:22.019891 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  I1015 10:08:22.024974 22 kubectl.go:2228] kubectl proxy stderr: W1015 10:08:21.994814     614 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  I1015 10:08:22.025081 22 kubectl.go:2223] kubectl proxy stdout: Starting to serve on 127.0.0.1:38039

  STEP: Destroying namespace "kubectl-655" for this suite. @ 10/15/24 10:08:22.029
• [0.241 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 10/15/24 10:08:22.046
  I1015 10:08:22.046680 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename runtimeclass @ 10/15/24 10:08:22.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:08:22.089
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:08:22.097
  I1015 10:08:22.119144 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3921" for this suite. @ 10/15/24 10:08:22.136
• [0.109 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:754
  STEP: Creating a kubernetes client @ 10/15/24 10:08:22.157
  I1015 10:08:22.157852 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename statefulset @ 10/15/24 10:08:22.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:08:22.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:08:22.217
  STEP: Creating service test in namespace statefulset-3417 @ 10/15/24 10:08:22.225
  STEP: Creating stateful set ss in namespace statefulset-3417 @ 10/15/24 10:08:22.241
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-3417 @ 10/15/24 10:08:22.269
  I1015 10:08:22.283057 22 wait.go:40] Found 0 stateful pods, waiting for 1
  E1015 10:08:22.807132      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:08:23.807293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:08:24.808665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:08:25.809355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:08:26.809380      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:08:27.809541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:08:28.809745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:08:29.811040      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:08:30.811288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:08:31.811384      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:08:32.282040 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 10/15/24 10:08:32.282
  I1015 10:08:32.291894 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=statefulset-3417 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1015 10:08:32.652718 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1015 10:08:32.652802 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1015 10:08:32.652841 22 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1015 10:08:32.665839 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E1015 10:08:32.812420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:08:33.812453      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:08:34.812849      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:08:35.813319      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:08:36.813468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:08:37.814379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:08:38.815098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:08:39.815679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:08:40.816187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:08:41.816705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:08:42.664198 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1015 10:08:42.664311 22 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1015 10:08:42.706154 22 resource.go:168] POD   NODE                PHASE    GRACE  CONDITIONS
  I1015 10:08:42.706561 22 resource.go:175] ss-0  env1-test-worker-0  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:08:24 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:08:22 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:08:32 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:08:32 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:08:22 +0000 UTC  }]
  I1015 10:08:42.706603 22 resource.go:178] 
  I1015 10:08:42.706622 22 statefulset.go:2413] StatefulSet ss has not reached scale 3, at 1
  E1015 10:08:42.816915      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:08:43.720954 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.992342917s
  E1015 10:08:43.817863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:08:44.736580 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.976861532s
  E1015 10:08:44.818641      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:08:45.748247 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.961968595s
  E1015 10:08:45.819209      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:08:46.766688 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.950279864s
  E1015 10:08:46.819979      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:08:47.781644 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.931531911s
  E1015 10:08:47.820801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:08:48.792289 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.916866961s
  E1015 10:08:48.821543      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:08:49.803162 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.906330142s
  E1015 10:08:49.822270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:08:50.815952 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.895177333s
  E1015 10:08:50.823552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:08:51.823662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:08:51.829008 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 882.803177ms
  E1015 10:08:52.824907      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-3417 @ 10/15/24 10:08:52.829
  I1015 10:08:52.849996 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=statefulset-3417 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1015 10:08:53.149562 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1015 10:08:53.149631 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1015 10:08:53.149651 22 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1015 10:08:53.149888 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=statefulset-3417 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1015 10:08:53.484575 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I1015 10:08:53.484642 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1015 10:08:53.484663 22 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1015 10:08:53.484736 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=statefulset-3417 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1015 10:08:53.798692 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I1015 10:08:53.798755 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1015 10:08:53.798788 22 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1015 10:08:53.811788 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1015 10:08:53.811865 22 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I1015 10:08:53.811888 22 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 10/15/24 10:08:53.812
  I1015 10:08:53.819675 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=statefulset-3417 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E1015 10:08:53.825312      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:08:54.070270 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1015 10:08:54.070380 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1015 10:08:54.070413 22 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1015 10:08:54.070508 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=statefulset-3417 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1015 10:08:54.362334 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1015 10:08:54.362419 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1015 10:08:54.362448 22 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1015 10:08:54.362544 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=statefulset-3417 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1015 10:08:54.657897 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1015 10:08:54.658017 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1015 10:08:54.658062 22 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1015 10:08:54.658100 22 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1015 10:08:54.673154 22 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  E1015 10:08:54.825549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:08:55.826119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:08:56.827041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:08:57.827725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:08:58.828649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:08:59.829051      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:09:00.829485      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:09:01.829926      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:09:02.830400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:09:03.830453      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:09:04.699250 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1015 10:09:04.699328 22 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I1015 10:09:04.699352 22 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I1015 10:09:04.739744 22 resource.go:168] POD   NODE                PHASE    GRACE  CONDITIONS
  I1015 10:09:04.740232 22 resource.go:175] ss-0  env1-test-worker-0  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:08:24 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:08:22 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:08:54 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:08:54 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:08:22 +0000 UTC  }]
  I1015 10:09:04.740352 22 resource.go:175] ss-1  env1-test-worker-2  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:08:44 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:08:42 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:08:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:08:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:08:42 +0000 UTC  }]
  I1015 10:09:04.740532 22 resource.go:175] ss-2  env1-test-worker-1  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:08:44 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:08:42 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:08:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:08:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:08:42 +0000 UTC  }]
  I1015 10:09:04.740559 22 resource.go:178] 
  I1015 10:09:04.740594 22 statefulset.go:2413] StatefulSet ss has not reached scale 0, at 3
  E1015 10:09:04.834574      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:09:05.747535 22 resource.go:168] POD   NODE                PHASE      GRACE  CONDITIONS
  I1015 10:09:05.748224 22 resource.go:175] ss-0  env1-test-worker-0  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:09:05 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:08:22 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:08:54 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:08:54 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:08:22 +0000 UTC  }]
  I1015 10:09:05.748761 22 resource.go:175] ss-1  env1-test-worker-2  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:09:05 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:08:42 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:08:55 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:08:55 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:08:42 +0000 UTC  }]
  I1015 10:09:05.748996 22 resource.go:175] ss-2  env1-test-worker-1  Running    30s    [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:08:44 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:08:42 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:08:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:08:55 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:08:42 +0000 UTC  }]
  I1015 10:09:05.749188 22 resource.go:178] 
  I1015 10:09:05.749480 22 statefulset.go:2413] StatefulSet ss has not reached scale 0, at 3
  E1015 10:09:05.833859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:09:06.758081 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 7.980462722s
  E1015 10:09:06.835001      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:09:07.770432 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 6.97201342s
  E1015 10:09:07.835033      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:09:08.778553 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 5.959706225s
  E1015 10:09:08.836082      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:09:09.789645 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 4.950907521s
  E1015 10:09:09.837208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:09:10.797632 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 3.940508409s
  E1015 10:09:10.838102      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:09:11.806482 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 2.932056576s
  E1015 10:09:11.838805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:09:12.818267 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 1.923741746s
  E1015 10:09:12.839785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:09:13.826388 22 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 911.899434ms
  E1015 10:09:13.840644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-3417 @ 10/15/24 10:09:14.826
  I1015 10:09:14.834254 22 rest.go:150] Scaling statefulset ss to 0
  E1015 10:09:14.841766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:09:14.848908 22 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1015 10:09:14.856016 22 statefulset.go:138] Deleting all statefulset in ns statefulset-3417
  I1015 10:09:14.861219 22 rest.go:150] Scaling statefulset ss to 0
  I1015 10:09:14.876920 22 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1015 10:09:14.884536 22 rest.go:88] Deleting statefulset ss
  I1015 10:09:14.943178 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3417" for this suite. @ 10/15/24 10:09:14.96
• [52.826 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 10/15/24 10:09:14.985
  I1015 10:09:14.985509 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename projected @ 10/15/24 10:09:14.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:09:15.047
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:09:15.054
  STEP: Creating configMap with name projected-configmap-test-volume-map-cb353120-f84c-4721-9e8b-25bf9899163e @ 10/15/24 10:09:15.066
  STEP: Creating a pod to test consume configMaps @ 10/15/24 10:09:15.078
  E1015 10:09:15.841959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:09:16.842074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:09:17.842487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:09:18.842738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 10:09:19.148
  I1015 10:09:19.159821 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-projected-configmaps-fa1aa560-1074-40e9-a214-d30766151b4e container agnhost-container: <nil>
  STEP: delete the pod @ 10/15/24 10:09:19.179
  I1015 10:09:19.218181 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4254" for this suite. @ 10/15/24 10:09:19.232
• [4.265 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 10/15/24 10:09:19.254
  I1015 10:09:19.254827 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename downward-api @ 10/15/24 10:09:19.257
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:09:19.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:09:19.308
  STEP: Creating a pod to test downward api env vars @ 10/15/24 10:09:19.317
  E1015 10:09:19.843086      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:09:20.843857      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:09:21.844673      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:09:22.845709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 10:09:23.379
  I1015 10:09:23.387019 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod downward-api-424610a5-a718-4461-8871-7f3eb0acb18d container dapi-container: <nil>
  STEP: delete the pod @ 10/15/24 10:09:23.407
  I1015 10:09:23.453896 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9167" for this suite. @ 10/15/24 10:09:23.469
• [4.243 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:697
  STEP: Creating a kubernetes client @ 10/15/24 10:09:23.498
  I1015 10:09:23.498282 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename job @ 10/15/24 10:09:23.499
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:09:23.546
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:09:23.558
  STEP: Creating a job @ 10/15/24 10:09:23.566
  STEP: Ensuring active pods == parallelism @ 10/15/24 10:09:23.581
  E1015 10:09:23.846113      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:09:24.846237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:09:25.847202      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:09:26.847555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Orphaning one of the Job's Pods @ 10/15/24 10:09:27.592
  E1015 10:09:27.848073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:09:28.137712 22 pod_client.go:141] Successfully updated pod "adopt-release-9g4h6"
  STEP: Checking that the Job readopts the Pod @ 10/15/24 10:09:28.137
  E1015 10:09:28.848937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:09:29.850196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing the labels from the Job's Pod @ 10/15/24 10:09:30.153
  I1015 10:09:30.679006 22 pod_client.go:141] Successfully updated pod "adopt-release-9g4h6"
  STEP: Checking that the Job releases the Pod @ 10/15/24 10:09:30.679
  E1015 10:09:30.850234      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:09:31.850768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:09:32.701855 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6808" for this suite. @ 10/15/24 10:09:32.716
• [9.249 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1048
  STEP: Creating a kubernetes client @ 10/15/24 10:09:32.749
  I1015 10:09:32.749427 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename kubectl @ 10/15/24 10:09:32.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:09:32.802
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:09:32.814
  STEP: create deployment with httpd image @ 10/15/24 10:09:32.82
  I1015 10:09:32.821210 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-2303 create -f -'
  E1015 10:09:32.850828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:09:33.127074 22 builder.go:146] stderr: ""
  I1015 10:09:33.127140 22 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 10/15/24 10:09:33.127
  I1015 10:09:33.127316 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-2303 diff -f -'
  I1015 10:09:33.487331 22 builder.go:135] rc: 1
  I1015 10:09:33.487513 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-2303 delete -f -'
  I1015 10:09:33.709279 22 builder.go:146] stderr: ""
  I1015 10:09:33.709440 22 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I1015 10:09:33.709658 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2303" for this suite. @ 10/15/24 10:09:33.728
• [1.009 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 10/15/24 10:09:33.759
  I1015 10:09:33.759353 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename watch @ 10/15/24 10:09:33.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:09:33.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:09:33.835
  E1015 10:09:33.851130      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a watch on configmaps with label A @ 10/15/24 10:09:33.851
  STEP: creating a watch on configmaps with label B @ 10/15/24 10:09:33.854
  STEP: creating a watch on configmaps with label A or B @ 10/15/24 10:09:33.859
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 10/15/24 10:09:33.863
  I1015 10:09:33.886803 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1732  cc3b16df-2bf1-48cb-92e3-57e1cdb01865 53471708 0 2024-10-15 10:09:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-10-15 10:09:33 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1015 10:09:33.887098 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1732  cc3b16df-2bf1-48cb-92e3-57e1cdb01865 53471708 0 2024-10-15 10:09:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-10-15 10:09:33 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 10/15/24 10:09:33.887
  I1015 10:09:33.910817 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1732  cc3b16df-2bf1-48cb-92e3-57e1cdb01865 53471710 0 2024-10-15 10:09:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-10-15 10:09:33 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1015 10:09:33.911645 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1732  cc3b16df-2bf1-48cb-92e3-57e1cdb01865 53471710 0 2024-10-15 10:09:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-10-15 10:09:33 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 10/15/24 10:09:33.912
  I1015 10:09:33.931326 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1732  cc3b16df-2bf1-48cb-92e3-57e1cdb01865 53471711 0 2024-10-15 10:09:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-10-15 10:09:33 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1015 10:09:33.932393 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1732  cc3b16df-2bf1-48cb-92e3-57e1cdb01865 53471711 0 2024-10-15 10:09:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-10-15 10:09:33 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 10/15/24 10:09:33.932
  I1015 10:09:33.950493 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1732  cc3b16df-2bf1-48cb-92e3-57e1cdb01865 53471712 0 2024-10-15 10:09:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-10-15 10:09:33 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1015 10:09:33.952385 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-1732  cc3b16df-2bf1-48cb-92e3-57e1cdb01865 53471712 0 2024-10-15 10:09:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-10-15 10:09:33 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 10/15/24 10:09:33.953
  I1015 10:09:33.968194 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1732  e475e51d-946c-411f-9bf2-05bb2efb4a16 53471713 0 2024-10-15 10:09:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-10-15 10:09:33 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1015 10:09:33.968824 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1732  e475e51d-946c-411f-9bf2-05bb2efb4a16 53471713 0 2024-10-15 10:09:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-10-15 10:09:33 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E1015 10:09:34.851449      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:09:35.852098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:09:36.852474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:09:37.853394      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:09:38.855818      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:09:39.856322      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:09:40.856663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:09:41.857844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:09:42.857578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:09:43.858470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 10/15/24 10:09:43.97
  I1015 10:09:43.990404 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1732  e475e51d-946c-411f-9bf2-05bb2efb4a16 53471812 0 2024-10-15 10:09:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-10-15 10:09:33 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1015 10:09:43.990677 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-1732  e475e51d-946c-411f-9bf2-05bb2efb4a16 53471812 0 2024-10-15 10:09:33 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-10-15 10:09:33 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E1015 10:09:44.859746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:09:45.860673      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:09:46.860680      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:09:47.861067      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:09:48.862401      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:09:49.862253      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:09:50.862230      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:09:51.862869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:09:52.863197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:09:53.863336      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:09:53.992219 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1732" for this suite. @ 10/15/24 10:09:54.008
• [20.276 seconds]
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1420
  STEP: Creating a kubernetes client @ 10/15/24 10:09:54.034
  I1015 10:09:54.034979 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename services @ 10/15/24 10:09:54.037
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:09:54.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:09:54.082
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-255 @ 10/15/24 10:09:54.09
  STEP: changing the ExternalName service to type=ClusterIP @ 10/15/24 10:09:54.104
  STEP: creating replication controller externalname-service in namespace services-255 @ 10/15/24 10:09:54.136
  I1015 10:09:54.154901      22 runners.go:198] Created replication controller with name: externalname-service, namespace: services-255, replica count: 2
  E1015 10:09:54.864628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:09:55.864917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:09:56.865749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:09:57.206160      22 runners.go:198] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1015 10:09:57.206227 22 resource.go:361] Creating new exec pod
  E1015 10:09:57.866572      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:09:58.867597      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:09:59.868302      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:10:00.246673 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-255 exec execpodhc76l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1015 10:10:00.593668 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I1015 10:10:00.593729 22 builder.go:147] stdout: "externalname-service-gsc27"
  I1015 10:10:00.593838 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-255 exec execpodhc76l -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.13.84 80'
  E1015 10:10:00.868543      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:10:00.895266 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.13.84 80\nConnection to 10.233.13.84 80 port [tcp/http] succeeded!\n"
  I1015 10:10:00.895374 22 builder.go:147] stdout: "externalname-service-ghgr5"
  I1015 10:10:00.895627 22 service.go:1429] Cleaning up the ExternalName to ClusterIP test service
  I1015 10:10:00.932433 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-255" for this suite. @ 10/15/24 10:10:00.949
• [6.945 seconds]
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 10/15/24 10:10:00.98
  I1015 10:10:00.981128 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename field-validation @ 10/15/24 10:10:00.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:10:01.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:10:01.028
  STEP: apply creating a deployment @ 10/15/24 10:10:01.063
  I1015 10:10:01.102680 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8162" for this suite. @ 10/15/24 10:10:01.118
• [0.154 seconds]
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 10/15/24 10:10:01.135
  I1015 10:10:01.135217 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename conformance-tests @ 10/15/24 10:10:01.139
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:10:01.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:10:01.19
  STEP: Getting node addresses @ 10/15/24 10:10:01.197
  I1015 10:10:01.197789 22 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I1015 10:10:01.217211 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-145" for this suite. @ 10/15/24 10:10:01.228
• [0.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 10/15/24 10:10:01.252
  I1015 10:10:01.252604 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename configmap @ 10/15/24 10:10:01.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:10:01.288
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:10:01.294
  STEP: Creating configMap with name configmap-test-volume-map-7be14249-4442-4198-b334-a76926a49804 @ 10/15/24 10:10:01.303
  STEP: Creating a pod to test consume configMaps @ 10/15/24 10:10:01.316
  E1015 10:10:01.869340      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:02.869677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:03.870155      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:04.870316      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 10:10:05.38
  I1015 10:10:05.391819 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-configmaps-34762bc8-9334-447a-a2c9-68c29ae4592d container agnhost-container: <nil>
  STEP: delete the pod @ 10/15/24 10:10:05.415
  I1015 10:10:05.464921 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-813" for this suite. @ 10/15/24 10:10:05.487
• [4.254 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 10/15/24 10:10:05.508
  I1015 10:10:05.509301 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename pods @ 10/15/24 10:10:05.512
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:10:05.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:10:05.554
  STEP: creating the pod @ 10/15/24 10:10:05.561
  STEP: submitting the pod to kubernetes @ 10/15/24 10:10:05.561
  E1015 10:10:05.871363      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:06.872007      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 10/15/24 10:10:07.604
  STEP: updating the pod @ 10/15/24 10:10:07.61
  E1015 10:10:07.872762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:10:08.132477 22 pod_client.go:141] Successfully updated pod "pod-update-04f2a6a7-ff7a-4070-acf0-1f8d800d661f"
  STEP: verifying the updated pod is in kubernetes @ 10/15/24 10:10:08.146
  I1015 10:10:08.158491 22 pods.go:391] Pod update OK
  I1015 10:10:08.158792 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1359" for this suite. @ 10/15/24 10:10:08.172
• [2.681 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 10/15/24 10:10:08.19
  I1015 10:10:08.190583 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename projected @ 10/15/24 10:10:08.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:10:08.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:10:08.234
  STEP: Creating configMap with name projected-configmap-test-volume-7c451e7e-c6ab-42f9-a6f1-2e2e04c37e94 @ 10/15/24 10:10:08.24
  STEP: Creating a pod to test consume configMaps @ 10/15/24 10:10:08.268
  E1015 10:10:08.872948      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:09.873641      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:10.873803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:11.874432      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 10:10:12.308
  I1015 10:10:12.314453 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-projected-configmaps-958561fe-722d-4c91-b0a3-6ae103803104 container agnhost-container: <nil>
  STEP: delete the pod @ 10/15/24 10:10:12.33
  I1015 10:10:12.374949 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7376" for this suite. @ 10/15/24 10:10:12.389
• [4.221 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 10/15/24 10:10:12.412
  I1015 10:10:12.412932 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename subpath @ 10/15/24 10:10:12.415
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:10:12.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:10:12.465
  STEP: Setting up data @ 10/15/24 10:10:12.47
  STEP: Creating pod pod-subpath-test-downwardapi-85m2 @ 10/15/24 10:10:12.516
  STEP: Creating a pod to test atomic-volume-subpath @ 10/15/24 10:10:12.516
  E1015 10:10:12.874477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:13.875746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:14.877101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:15.877724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:16.878649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:17.879664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:18.879975      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:19.880599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:20.881476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:21.881621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:22.882233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:23.882492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:24.883509      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:25.883898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:26.885066      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:27.885623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:28.886314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:29.886937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:30.887892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:31.887902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:32.887954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:33.888371      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:34.888415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:35.889149      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 10:10:36.708
  I1015 10:10:36.716505 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-subpath-test-downwardapi-85m2 container test-container-subpath-downwardapi-85m2: <nil>
  STEP: delete the pod @ 10/15/24 10:10:36.735
  STEP: Deleting pod pod-subpath-test-downwardapi-85m2 @ 10/15/24 10:10:36.771
  I1015 10:10:36.771905 22 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-85m2" in namespace "subpath-2189"
  I1015 10:10:36.788776 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2189" for this suite. @ 10/15/24 10:10:36.804
• [24.406 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 10/15/24 10:10:36.82
  I1015 10:10:36.820422 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename namespaces @ 10/15/24 10:10:36.822
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:10:36.861
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:10:36.87
  STEP: Read namespace status @ 10/15/24 10:10:36.879
  I1015 10:10:36.888820 22 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 10/15/24 10:10:36.888
  E1015 10:10:36.889159      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:10:36.914451 22 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 10/15/24 10:10:36.914
  I1015 10:10:36.941997 22 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I1015 10:10:36.942372 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4764" for this suite. @ 10/15/24 10:10:36.968
• [0.172 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 10/15/24 10:10:36.993
  I1015 10:10:36.993494 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename sched-preemption @ 10/15/24 10:10:36.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:10:37.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:10:37.066
  I1015 10:10:37.105674 22 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1015 10:10:37.889876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:38.889906      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:39.890358      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:40.891160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:41.891935      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:42.892797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:43.892998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:44.893180      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:45.893824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:46.894491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:47.894993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:48.895777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:49.896817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:50.897157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:51.897945      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:52.898385      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:53.898602      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:54.898954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:55.899075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:56.899929      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:57.900789      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:58.901542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:10:59.902465      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:00.903216      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:01.903765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:02.904352      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:03.904719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:04.904998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:05.906095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:06.907146      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:07.907361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:08.907844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:09.908564      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:10.908953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:11.909243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:12.909802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:13.910835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:14.911609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:15.911705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:16.912050      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:17.912842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:18.912963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:19.913583      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:20.914172      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:21.914323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:22.914768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:23.915597      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:24.916110      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:25.917045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:26.917522      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:27.917920      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:28.918139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:29.918870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:30.919690      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:31.920063      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:32.920240      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:33.921023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:34.921605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:35.922341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:36.922547      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:11:37.129674 22 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 10/15/24 10:11:37.136
  I1015 10:11:37.136968 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename sched-preemption-path @ 10/15/24 10:11:37.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:11:37.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:11:37.216
  STEP: Finding an available node @ 10/15/24 10:11:37.222
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 10/15/24 10:11:37.222
  E1015 10:11:37.922888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:38.923911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:39.924189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:40.925120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 10/15/24 10:11:41.276
  I1015 10:11:41.312079 22 preemption.go:583] found a healthy node: env1-test-worker-0
  E1015 10:11:41.926057      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:42.926378      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:43.926801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:44.927371      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:45.927684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:46.927835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:47.928153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:48.929035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:49.929574      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:50.930228      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:51.930660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:52.931088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:11:53.482721 22 preemption.go:706] pods created so far: [1 1 1]
  I1015 10:11:53.482966 22 preemption.go:707] length of pods created so far: 3
  E1015 10:11:53.931610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:54.932553      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:55.933611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:56.933629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:57.934092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:11:58.934358      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:11:59.522959 22 preemption.go:724] pods created so far: [2 2 1]
  E1015 10:11:59.935474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:12:00.936189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:12:01.937069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:12:02.938045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:12:03.938232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:12:04.938369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:12:05.938631      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:12:06.849256 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-2544" for this suite. @ 10/15/24 10:12:06.863
  I1015 10:12:06.887898 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5930" for this suite. @ 10/15/24 10:12:06.902
• [89.930 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1537
  STEP: Creating a kubernetes client @ 10/15/24 10:12:06.923
  I1015 10:12:06.923023 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename services @ 10/15/24 10:12:06.924
  E1015 10:12:06.939018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:12:06.984
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:12:06.993
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-2176 @ 10/15/24 10:12:07.001
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 10/15/24 10:12:07.042
  STEP: creating service externalsvc in namespace services-2176 @ 10/15/24 10:12:07.042
  STEP: creating replication controller externalsvc in namespace services-2176 @ 10/15/24 10:12:07.073
  I1015 10:12:07.094796      22 runners.go:198] Created replication controller with name: externalsvc, namespace: services-2176, replica count: 2
  E1015 10:12:07.939962      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:12:08.940366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:12:09.940679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:12:10.146264      22 runners.go:198] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 10/15/24 10:12:10.156
  I1015 10:12:10.201121 22 resource.go:361] Creating new exec pod
  E1015 10:12:10.941197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:12:11.942467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:12:12.267768 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-2176 exec execpodgbfrk -- /bin/sh -x -c nslookup nodeport-service.services-2176.svc.cluster.local'
  I1015 10:12:12.687134 22 builder.go:146] stderr: "+ nslookup nodeport-service.services-2176.svc.cluster.local\n"
  I1015 10:12:12.687344 22 builder.go:147] stdout: "Server:\t\t169.254.25.10\nAddress:\t169.254.25.10#53\n\nnodeport-service.services-2176.svc.cluster.local\tcanonical name = externalsvc.services-2176.svc.cluster.local.\nName:\texternalsvc.services-2176.svc.cluster.local\nAddress: 10.233.10.14\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-2176, will wait for the garbage collector to delete the pods @ 10/15/24 10:12:12.687
  I1015 10:12:12.760265 22 resources.go:139] Deleting ReplicationController externalsvc took: 13.879448ms
  I1015 10:12:12.862428 22 resources.go:163] Terminating ReplicationController externalsvc pods took: 102.149249ms
  E1015 10:12:12.942911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:12:13.944010      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:12:14.944937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:12:15.945479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:12:16.324064 22 service.go:1548] Cleaning up the NodePort to ExternalName test service
  I1015 10:12:16.396893 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2176" for this suite. @ 10/15/24 10:12:16.428
• [9.525 seconds]
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 10/15/24 10:12:16.449
  I1015 10:12:16.449420 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename runtimeclass @ 10/15/24 10:12:16.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:12:16.583
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:12:16.594
  STEP: Deleting RuntimeClass runtimeclass-3436-delete-me @ 10/15/24 10:12:16.608
  STEP: Waiting for the RuntimeClass to disappear @ 10/15/24 10:12:16.64
  I1015 10:12:16.667934 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-3436" for this suite. @ 10/15/24 10:12:16.678
• [0.243 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2240
  STEP: Creating a kubernetes client @ 10/15/24 10:12:16.694
  I1015 10:12:16.694851 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename services @ 10/15/24 10:12:16.697
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:12:16.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:12:16.746
  STEP: creating service in namespace services-5971 @ 10/15/24 10:12:16.753
  STEP: creating service affinity-nodeport-transition in namespace services-5971 @ 10/15/24 10:12:16.753
  STEP: creating replication controller affinity-nodeport-transition in namespace services-5971 @ 10/15/24 10:12:16.788
  I1015 10:12:16.811951      22 runners.go:198] Created replication controller with name: affinity-nodeport-transition, namespace: services-5971, replica count: 3
  E1015 10:12:16.946811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:12:17.947388      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:12:18.947546      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:12:19.863363      22 runners.go:198] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1015 10:12:19.884790 22 resource.go:361] Creating new exec pod
  E1015 10:12:19.948349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:12:20.949218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:12:21.949657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:12:22.950506      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:12:22.966423 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-5971 exec execpod-affinityqf2tz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I1015 10:12:23.354095 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  I1015 10:12:23.354358 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1015 10:12:23.354533 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-5971 exec execpod-affinityqf2tz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.9.170 80'
  I1015 10:12:23.735180 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.9.170 80\nConnection to 10.233.9.170 80 port [tcp/http] succeeded!\n"
  I1015 10:12:23.735341 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1015 10:12:23.735685 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-5971 exec execpod-affinityqf2tz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.61.1.202 30460'
  E1015 10:12:23.951311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:12:24.086171 22 builder.go:146] stderr: "+ echo+  hostName\nnc -v -t -w 2 10.61.1.202 30460\nConnection to 10.61.1.202 30460 port [tcp/*] succeeded!\n"
  I1015 10:12:24.086298 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1015 10:12:24.086919 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-5971 exec execpod-affinityqf2tz -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.61.1.201 30460'
  I1015 10:12:24.406525 22 builder.go:146] stderr: "+ nc -v -t -w 2 10.61.1.201 30460\n+ echo hostName\nConnection to 10.61.1.201 30460 port [tcp/*] succeeded!\n"
  I1015 10:12:24.406818 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1015 10:12:24.426864 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-5971 exec execpod-affinityqf2tz -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.61.1.200:30460/ ; done'
  E1015 10:12:24.951581      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:12:25.046461 22 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30460/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30460/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30460/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30460/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30460/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30460/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30460/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30460/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30460/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30460/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30460/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30460/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30460/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30460/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30460/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30460/\n"
  I1015 10:12:25.046590 22 builder.go:147] stdout: "\naffinity-nodeport-transition-z87w4\naffinity-nodeport-transition-fr6vj\naffinity-nodeport-transition-md89h\naffinity-nodeport-transition-z87w4\naffinity-nodeport-transition-fr6vj\naffinity-nodeport-transition-md89h\naffinity-nodeport-transition-z87w4\naffinity-nodeport-transition-fr6vj\naffinity-nodeport-transition-md89h\naffinity-nodeport-transition-z87w4\naffinity-nodeport-transition-fr6vj\naffinity-nodeport-transition-md89h\naffinity-nodeport-transition-z87w4\naffinity-nodeport-transition-fr6vj\naffinity-nodeport-transition-md89h\naffinity-nodeport-transition-z87w4"
  I1015 10:12:25.046635 22 service.go:242] Received response from host: affinity-nodeport-transition-z87w4
  I1015 10:12:25.046807 22 service.go:242] Received response from host: affinity-nodeport-transition-fr6vj
  I1015 10:12:25.046997 22 service.go:242] Received response from host: affinity-nodeport-transition-md89h
  I1015 10:12:25.047152 22 service.go:242] Received response from host: affinity-nodeport-transition-z87w4
  I1015 10:12:25.047216 22 service.go:242] Received response from host: affinity-nodeport-transition-fr6vj
  I1015 10:12:25.047238 22 service.go:242] Received response from host: affinity-nodeport-transition-md89h
  I1015 10:12:25.047315 22 service.go:242] Received response from host: affinity-nodeport-transition-z87w4
  I1015 10:12:25.047406 22 service.go:242] Received response from host: affinity-nodeport-transition-fr6vj
  I1015 10:12:25.047579 22 service.go:242] Received response from host: affinity-nodeport-transition-md89h
  I1015 10:12:25.047615 22 service.go:242] Received response from host: affinity-nodeport-transition-z87w4
  I1015 10:12:25.047635 22 service.go:242] Received response from host: affinity-nodeport-transition-fr6vj
  I1015 10:12:25.047660 22 service.go:242] Received response from host: affinity-nodeport-transition-md89h
  I1015 10:12:25.047798 22 service.go:242] Received response from host: affinity-nodeport-transition-z87w4
  I1015 10:12:25.047831 22 service.go:242] Received response from host: affinity-nodeport-transition-fr6vj
  I1015 10:12:25.047850 22 service.go:242] Received response from host: affinity-nodeport-transition-md89h
  I1015 10:12:25.047963 22 service.go:242] Received response from host: affinity-nodeport-transition-z87w4
  I1015 10:12:25.072849 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-5971 exec execpod-affinityqf2tz -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.61.1.200:30460/ ; done'
  I1015 10:12:25.663979 22 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30460/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30460/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30460/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30460/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30460/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30460/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30460/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30460/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30460/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30460/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30460/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30460/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30460/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30460/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30460/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.61.1.200:30460/\n"
  I1015 10:12:25.664107 22 builder.go:147] stdout: "\naffinity-nodeport-transition-fr6vj\naffinity-nodeport-transition-fr6vj\naffinity-nodeport-transition-fr6vj\naffinity-nodeport-transition-fr6vj\naffinity-nodeport-transition-fr6vj\naffinity-nodeport-transition-fr6vj\naffinity-nodeport-transition-fr6vj\naffinity-nodeport-transition-fr6vj\naffinity-nodeport-transition-fr6vj\naffinity-nodeport-transition-fr6vj\naffinity-nodeport-transition-fr6vj\naffinity-nodeport-transition-fr6vj\naffinity-nodeport-transition-fr6vj\naffinity-nodeport-transition-fr6vj\naffinity-nodeport-transition-fr6vj\naffinity-nodeport-transition-fr6vj"
  I1015 10:12:25.664146 22 service.go:242] Received response from host: affinity-nodeport-transition-fr6vj
  I1015 10:12:25.664166 22 service.go:242] Received response from host: affinity-nodeport-transition-fr6vj
  I1015 10:12:25.664197 22 service.go:242] Received response from host: affinity-nodeport-transition-fr6vj
  I1015 10:12:25.664239 22 service.go:242] Received response from host: affinity-nodeport-transition-fr6vj
  I1015 10:12:25.664304 22 service.go:242] Received response from host: affinity-nodeport-transition-fr6vj
  I1015 10:12:25.664335 22 service.go:242] Received response from host: affinity-nodeport-transition-fr6vj
  I1015 10:12:25.664381 22 service.go:242] Received response from host: affinity-nodeport-transition-fr6vj
  I1015 10:12:25.664488 22 service.go:242] Received response from host: affinity-nodeport-transition-fr6vj
  I1015 10:12:25.664519 22 service.go:242] Received response from host: affinity-nodeport-transition-fr6vj
  I1015 10:12:25.664574 22 service.go:242] Received response from host: affinity-nodeport-transition-fr6vj
  I1015 10:12:25.664595 22 service.go:242] Received response from host: affinity-nodeport-transition-fr6vj
  I1015 10:12:25.664611 22 service.go:242] Received response from host: affinity-nodeport-transition-fr6vj
  I1015 10:12:25.664656 22 service.go:242] Received response from host: affinity-nodeport-transition-fr6vj
  I1015 10:12:25.664677 22 service.go:242] Received response from host: affinity-nodeport-transition-fr6vj
  I1015 10:12:25.664693 22 service.go:242] Received response from host: affinity-nodeport-transition-fr6vj
  I1015 10:12:25.664708 22 service.go:242] Received response from host: affinity-nodeport-transition-fr6vj
  I1015 10:12:25.664871 22 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-5971, will wait for the garbage collector to delete the pods @ 10/15/24 10:12:25.701
  I1015 10:12:25.780859 22 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 16.975957ms
  I1015 10:12:25.882873 22 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 102.009269ms
  E1015 10:12:25.958012      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:12:26.957399      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:12:27.957714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:12:28.958559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:12:29.438356 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5971" for this suite. @ 10/15/24 10:12:29.449
• [12.769 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 10/15/24 10:12:29.468
  I1015 10:12:29.468678 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename namespaces @ 10/15/24 10:12:29.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:12:29.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:12:29.518
  STEP: Creating a test namespace @ 10/15/24 10:12:29.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:12:29.569
  STEP: Creating a pod in the namespace @ 10/15/24 10:12:29.577
  STEP: Waiting for the pod to have running status @ 10/15/24 10:12:29.599
  E1015 10:12:29.959166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:12:30.959199      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the namespace @ 10/15/24 10:12:31.619
  STEP: Waiting for the namespace to be removed. @ 10/15/24 10:12:31.645
  E1015 10:12:31.960177      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:12:32.960510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:12:33.961494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:12:34.962120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:12:35.962310      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:12:36.962604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:12:37.967678      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:12:38.968095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:12:39.968901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:12:40.969030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:12:41.969275      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:12:42.970063      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:12:43.970304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 10/15/24 10:12:44.654
  STEP: Verifying there are no pods in the namespace @ 10/15/24 10:12:44.696
  I1015 10:12:44.709516 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4783" for this suite. @ 10/15/24 10:12:44.72
  STEP: Destroying namespace "nsdeletetest-2906" for this suite. @ 10/15/24 10:12:44.735
  I1015 10:12:44.742875 22 framework.go:370] Namespace nsdeletetest-2906 was already deleted
  STEP: Destroying namespace "nsdeletetest-7777" for this suite. @ 10/15/24 10:12:44.743
• [15.293 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 10/15/24 10:12:44.764
  I1015 10:12:44.765375 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename endpointslicemirroring @ 10/15/24 10:12:44.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:12:44.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:12:44.824
  STEP: mirroring a new custom Endpoint @ 10/15/24 10:12:44.851
  I1015 10:12:44.876360 22 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  E1015 10:12:44.971048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:12:45.971791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring an update to a custom Endpoint @ 10/15/24 10:12:46.891
  I1015 10:12:46.936688 22 endpointslicemirroring.go:171] Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  E1015 10:12:46.972441      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:12:47.973305      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: mirroring deletion of a custom Endpoint @ 10/15/24 10:12:48.946
  E1015 10:12:48.973639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:12:48.979939 22 endpointslicemirroring.go:194] Waiting for 0 EndpointSlices to exist, got 1
  E1015 10:12:49.974031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:12:50.974419      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:12:50.990070 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-4720" for this suite. @ 10/15/24 10:12:51.007
• [6.284 seconds]
------------------------------
SSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 10/15/24 10:12:51.05
  I1015 10:12:51.050256 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename init-container @ 10/15/24 10:12:51.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:12:51.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:12:51.106
  STEP: creating the pod @ 10/15/24 10:12:51.112
  I1015 10:12:51.112887 22 init_container.go:499] PodSpec: initContainers in spec.initContainers
  E1015 10:12:51.975512      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:12:52.976378      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:12:53.976967      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:12:54.977111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:12:55.663560 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-8519" for this suite. @ 10/15/24 10:12:55.677
• [4.645 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 10/15/24 10:12:55.696
  I1015 10:12:55.696139 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename init-container @ 10/15/24 10:12:55.698
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:12:55.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:12:55.754
  STEP: creating the pod @ 10/15/24 10:12:55.768
  I1015 10:12:55.768421 22 init_container.go:294] PodSpec: initContainers in spec.initContainers
  E1015 10:12:55.977833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:12:56.978422      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:12:57.979050      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:12:58.979295      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:12:59.979994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:13:00.111491 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2614" for this suite. @ 10/15/24 10:13:00.13
• [4.470 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 10/15/24 10:13:00.188
  I1015 10:13:00.188527 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename csistoragecapacity @ 10/15/24 10:13:00.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:13:00.225
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:13:00.231
  STEP: getting /apis @ 10/15/24 10:13:00.238
  STEP: getting /apis/storage.k8s.io @ 10/15/24 10:13:00.258
  STEP: getting /apis/storage.k8s.io/v1 @ 10/15/24 10:13:00.262
  STEP: creating @ 10/15/24 10:13:00.265
  STEP: watching @ 10/15/24 10:13:00.306
  I1015 10:13:00.306322 22 csistoragecapacity.go:143] starting watch
  STEP: getting @ 10/15/24 10:13:00.326
  STEP: listing in namespace @ 10/15/24 10:13:00.332
  STEP: listing across namespaces @ 10/15/24 10:13:00.365
  STEP: patching @ 10/15/24 10:13:00.377
  STEP: updating @ 10/15/24 10:13:00.395
  I1015 10:13:00.419951 22 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I1015 10:13:00.420654 22 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 10/15/24 10:13:00.42
  STEP: deleting a collection @ 10/15/24 10:13:00.455
  I1015 10:13:00.500136 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-1555" for this suite. @ 10/15/24 10:13:00.509
• [0.331 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:817
  STEP: Creating a kubernetes client @ 10/15/24 10:13:00.52
  I1015 10:13:00.520255 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename webhook @ 10/15/24 10:13:00.521
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:13:00.563
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:13:00.569
  STEP: Setting up server cert @ 10/15/24 10:13:00.634
  E1015 10:13:00.981381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:13:01.981072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/15/24 10:13:02.051
  STEP: Deploying the webhook pod @ 10/15/24 10:13:02.071
  STEP: Wait for the deployment to be ready @ 10/15/24 10:13:02.105
  I1015 10:13:02.126019 22 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1015 10:13:02.981354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:13:03.981764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:13:04.177619 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 15, 10, 13, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 10, 13, 2, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 15, 10, 13, 2, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 10, 13, 2, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1015 10:13:04.982746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:13:05.984067      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/15/24 10:13:06.19
  STEP: Verifying the service has paired with the endpoint @ 10/15/24 10:13:06.231
  E1015 10:13:06.985623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:13:07.232176 22 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 10/15/24 10:13:07.253
  I1015 10:13:07.376004 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1766" for this suite. @ 10/15/24 10:13:07.391
  STEP: Destroying namespace "webhook-markers-7346" for this suite. @ 10/15/24 10:13:07.409
• [6.920 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 10/15/24 10:13:07.442
  I1015 10:13:07.442626 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename configmap @ 10/15/24 10:13:07.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:13:07.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:13:07.548
  STEP: Creating configMap with name configmap-test-volume-map-00bb7939-ecd7-4429-be4e-d49d65284d50 @ 10/15/24 10:13:07.561
  STEP: Creating a pod to test consume configMaps @ 10/15/24 10:13:07.572
  E1015 10:13:07.985775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:13:08.986261      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:13:09.986510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:13:10.991721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 10:13:11.62
  I1015 10:13:11.630758 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-configmaps-cf126aee-5c97-4e74-bc60-8087f22cf868 container agnhost-container: <nil>
  STEP: delete the pod @ 10/15/24 10:13:11.675
  I1015 10:13:11.715018 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4825" for this suite. @ 10/15/24 10:13:11.729
• [4.305 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:355
  STEP: Creating a kubernetes client @ 10/15/24 10:13:11.75
  I1015 10:13:11.750738 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename kubectl @ 10/15/24 10:13:11.754
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:13:11.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:13:11.807
  STEP: creating a replication controller @ 10/15/24 10:13:11.818
  I1015 10:13:11.818365 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-5829 create -f -'
  E1015 10:13:11.992336      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:13:12.150271 22 builder.go:146] stderr: ""
  I1015 10:13:12.150371 22 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 10/15/24 10:13:12.15
  I1015 10:13:12.150678 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-5829 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1015 10:13:12.356644 22 builder.go:146] stderr: ""
  I1015 10:13:12.356769 22 builder.go:147] stdout: "update-demo-nautilus-5rjbf update-demo-nautilus-srw26 "
  I1015 10:13:12.357056 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-5829 get pods update-demo-nautilus-5rjbf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1015 10:13:12.553687 22 builder.go:146] stderr: ""
  I1015 10:13:12.553757 22 builder.go:147] stdout: ""
  I1015 10:13:12.553781 22 kubectl.go:2501] update-demo-nautilus-5rjbf is created but not running
  E1015 10:13:12.993081      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:13:13.993999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:13:14.994692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:13:15.995091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:13:16.995204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:13:17.554379 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-5829 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1015 10:13:17.729599 22 builder.go:146] stderr: ""
  I1015 10:13:17.729668 22 builder.go:147] stdout: "update-demo-nautilus-5rjbf update-demo-nautilus-srw26 "
  I1015 10:13:17.729759 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-5829 get pods update-demo-nautilus-5rjbf -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1015 10:13:17.931330 22 builder.go:146] stderr: ""
  I1015 10:13:17.931451 22 builder.go:147] stdout: "true"
  I1015 10:13:17.931586 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-5829 get pods update-demo-nautilus-5rjbf -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  E1015 10:13:17.995660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:13:18.111076 22 builder.go:146] stderr: ""
  I1015 10:13:18.111202 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1015 10:13:18.111980 22 kubectl.go:2392] validating pod update-demo-nautilus-5rjbf
  I1015 10:13:18.122063 22 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I1015 10:13:18.122188 22 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1015 10:13:18.122523 22 kubectl.go:2519] update-demo-nautilus-5rjbf is verified up and running
  I1015 10:13:18.122723 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-5829 get pods update-demo-nautilus-srw26 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1015 10:13:18.308829 22 builder.go:146] stderr: ""
  I1015 10:13:18.308970 22 builder.go:147] stdout: "true"
  I1015 10:13:18.309075 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-5829 get pods update-demo-nautilus-srw26 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1015 10:13:18.497570 22 builder.go:146] stderr: ""
  I1015 10:13:18.497936 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1015 10:13:18.497968 22 kubectl.go:2392] validating pod update-demo-nautilus-srw26
  I1015 10:13:18.516264 22 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I1015 10:13:18.516422 22 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1015 10:13:18.516454 22 kubectl.go:2519] update-demo-nautilus-srw26 is verified up and running
  STEP: scaling down the replication controller @ 10/15/24 10:13:18.516
  I1015 10:13:18.520923 22 kubectl.go:324] scanned /root for discovery docs: <nil>
  I1015 10:13:18.521092 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-5829 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E1015 10:13:18.995685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:13:19.744663 22 builder.go:146] stderr: ""
  I1015 10:13:19.744752 22 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 10/15/24 10:13:19.744
  I1015 10:13:19.744966 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-5829 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1015 10:13:19.940561 22 builder.go:146] stderr: ""
  I1015 10:13:19.940637 22 builder.go:147] stdout: "update-demo-nautilus-5rjbf update-demo-nautilus-srw26 "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 10/15/24 10:13:19.94
  E1015 10:13:19.996837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:13:20.997018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:13:21.997664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:13:22.998673      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:13:23.999239      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:13:24.941544 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-5829 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E1015 10:13:24.999694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:13:25.118334 22 builder.go:146] stderr: ""
  I1015 10:13:25.118413 22 builder.go:147] stdout: "update-demo-nautilus-srw26 "
  I1015 10:13:25.119115 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-5829 get pods update-demo-nautilus-srw26 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1015 10:13:25.311627 22 builder.go:146] stderr: ""
  I1015 10:13:25.311730 22 builder.go:147] stdout: "true"
  I1015 10:13:25.312792 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-5829 get pods update-demo-nautilus-srw26 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1015 10:13:25.524618 22 builder.go:146] stderr: ""
  I1015 10:13:25.524716 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1015 10:13:25.525020 22 kubectl.go:2392] validating pod update-demo-nautilus-srw26
  I1015 10:13:25.540455 22 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I1015 10:13:25.540585 22 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1015 10:13:25.540615 22 kubectl.go:2519] update-demo-nautilus-srw26 is verified up and running
  STEP: scaling up the replication controller @ 10/15/24 10:13:25.54
  I1015 10:13:25.546963 22 kubectl.go:324] scanned /root for discovery docs: <nil>
  I1015 10:13:25.547803 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-5829 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E1015 10:13:25.999854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:13:26.799258 22 builder.go:146] stderr: ""
  I1015 10:13:26.799328 22 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 10/15/24 10:13:26.799
  I1015 10:13:26.799512 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-5829 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E1015 10:13:27.000251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:13:27.019706 22 builder.go:146] stderr: ""
  I1015 10:13:27.019778 22 builder.go:147] stdout: "update-demo-nautilus-k6phv update-demo-nautilus-srw26 "
  I1015 10:13:27.020241 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-5829 get pods update-demo-nautilus-k6phv -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1015 10:13:27.182692 22 builder.go:146] stderr: ""
  I1015 10:13:27.182894 22 builder.go:147] stdout: ""
  I1015 10:13:27.182921 22 kubectl.go:2501] update-demo-nautilus-k6phv is created but not running
  E1015 10:13:28.001233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:13:29.001669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:13:30.002139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:13:31.002912      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:13:32.003377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:13:32.183312 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-5829 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1015 10:13:32.368955 22 builder.go:146] stderr: ""
  I1015 10:13:32.369320 22 builder.go:147] stdout: "update-demo-nautilus-k6phv update-demo-nautilus-srw26 "
  I1015 10:13:32.369547 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-5829 get pods update-demo-nautilus-k6phv -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1015 10:13:32.517951 22 builder.go:146] stderr: ""
  I1015 10:13:32.518016 22 builder.go:147] stdout: "true"
  I1015 10:13:32.518297 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-5829 get pods update-demo-nautilus-k6phv -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1015 10:13:32.678787 22 builder.go:146] stderr: ""
  I1015 10:13:32.678882 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1015 10:13:32.678925 22 kubectl.go:2392] validating pod update-demo-nautilus-k6phv
  I1015 10:13:32.692493 22 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I1015 10:13:32.692580 22 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1015 10:13:32.692601 22 kubectl.go:2519] update-demo-nautilus-k6phv is verified up and running
  I1015 10:13:32.692772 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-5829 get pods update-demo-nautilus-srw26 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1015 10:13:32.873112 22 builder.go:146] stderr: ""
  I1015 10:13:32.873212 22 builder.go:147] stdout: "true"
  I1015 10:13:32.873706 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-5829 get pods update-demo-nautilus-srw26 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  E1015 10:13:33.004160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:13:33.088347 22 builder.go:146] stderr: ""
  I1015 10:13:33.088475 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1015 10:13:33.088511 22 kubectl.go:2392] validating pod update-demo-nautilus-srw26
  I1015 10:13:33.098388 22 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I1015 10:13:33.098607 22 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1015 10:13:33.098637 22 kubectl.go:2519] update-demo-nautilus-srw26 is verified up and running
  STEP: using delete to clean up resources @ 10/15/24 10:13:33.098
  I1015 10:13:33.098774 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-5829 delete --grace-period=0 --force -f -'
  I1015 10:13:33.298409 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1015 10:13:33.299443 22 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I1015 10:13:33.299557 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-5829 get rc,svc -l name=update-demo --no-headers'
  I1015 10:13:33.555614 22 builder.go:146] stderr: "No resources found in kubectl-5829 namespace.\n"
  I1015 10:13:33.555745 22 builder.go:147] stdout: ""
  I1015 10:13:33.555893 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-5829 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1015 10:13:33.771392 22 builder.go:146] stderr: ""
  I1015 10:13:33.771514 22 builder.go:147] stdout: ""
  I1015 10:13:33.771750 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5829" for this suite. @ 10/15/24 10:13:33.784
• [22.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:766
  STEP: Creating a kubernetes client @ 10/15/24 10:13:33.817
  I1015 10:13:33.817142 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename webhook @ 10/15/24 10:13:33.818
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:13:33.881
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:13:33.889
  E1015 10:13:34.005463      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 10/15/24 10:13:34.042
  E1015 10:13:35.005978      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/15/24 10:13:35.049
  STEP: Deploying the webhook pod @ 10/15/24 10:13:35.062
  STEP: Wait for the deployment to be ready @ 10/15/24 10:13:35.085
  I1015 10:13:35.125054 22 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1015 10:13:36.007144      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:13:37.008339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:13:37.146705 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 15, 10, 13, 35, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 10, 13, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 15, 10, 13, 35, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 10, 13, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1015 10:13:38.009368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:13:39.009796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/15/24 10:13:39.163
  STEP: Verifying the service has paired with the endpoint @ 10/15/24 10:13:39.22
  E1015 10:13:40.010117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:13:40.221960 22 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 10/15/24 10:13:40.241
  STEP: verifying the mutating webhook match conditions @ 10/15/24 10:13:40.263
  STEP: updating the mutating webhook match conditions @ 10/15/24 10:13:40.277
  STEP: verifying the mutating webhook match conditions @ 10/15/24 10:13:40.296
  I1015 10:13:40.545658 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5980" for this suite. @ 10/15/24 10:13:40.591
  STEP: Destroying namespace "webhook-markers-4681" for this suite. @ 10/15/24 10:13:40.626
• [6.837 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 10/15/24 10:13:40.657
  I1015 10:13:40.657748 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename podtemplate @ 10/15/24 10:13:40.66
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:13:40.72
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:13:40.725
  STEP: Create set of pod templates @ 10/15/24 10:13:40.732
  I1015 10:13:40.747841 22 podtemplates.go:143] created test-podtemplate-1
  I1015 10:13:40.757952 22 podtemplates.go:143] created test-podtemplate-2
  I1015 10:13:40.768154 22 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 10/15/24 10:13:40.768
  STEP: delete collection of pod templates @ 10/15/24 10:13:40.779
  I1015 10:13:40.779349 22 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 10/15/24 10:13:40.819
  I1015 10:13:40.819243 22 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I1015 10:13:40.824955 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-3436" for this suite. @ 10/15/24 10:13:40.841
• [0.200 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 10/15/24 10:13:40.862
  I1015 10:13:40.862957 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename projected @ 10/15/24 10:13:40.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:13:40.922
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:13:40.94
  STEP: Creating a pod to test downward API volume plugin @ 10/15/24 10:13:40.95
  E1015 10:13:41.010661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:13:42.010518      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:13:43.010804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:13:44.011232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:13:45.011636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 10:13:45.017
  I1015 10:13:45.025648 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod downwardapi-volume-72f8bd9f-26c6-44d7-9a83-47ce145a0cfc container client-container: <nil>
  STEP: delete the pod @ 10/15/24 10:13:45.048
  I1015 10:13:45.101370 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9205" for this suite. @ 10/15/24 10:13:45.115
• [4.270 seconds]
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:833
  STEP: Creating a kubernetes client @ 10/15/24 10:13:45.131
  I1015 10:13:45.131978 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename job @ 10/15/24 10:13:45.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:13:45.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:13:45.237
  STEP: Creating a job @ 10/15/24 10:13:45.247
  STEP: Ensure pods equal to parallelism count is attached to the job @ 10/15/24 10:13:45.26
  E1015 10:13:46.012392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:13:47.012668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:13:48.013558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:13:49.014327      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 10/15/24 10:13:49.276
  STEP: updating /status @ 10/15/24 10:13:49.3
  STEP: get /status @ 10/15/24 10:13:49.325
  I1015 10:13:49.343120 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1407" for this suite. @ 10/15/24 10:13:49.361
• [4.261 seconds]
------------------------------
S
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 10/15/24 10:13:49.395
  I1015 10:13:49.396416 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename containers @ 10/15/24 10:13:49.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:13:49.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:13:49.481
  STEP: Creating a pod to test override arguments @ 10/15/24 10:13:49.492
  E1015 10:13:50.014922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:13:51.015299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:13:52.015812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:13:53.016503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 10:13:53.564
  I1015 10:13:53.572865 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod client-containers-815d7874-c0e4-4f27-ac06-786016b40aa3 container agnhost-container: <nil>
  STEP: delete the pod @ 10/15/24 10:13:53.59
  I1015 10:13:53.620984 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9800" for this suite. @ 10/15/24 10:13:53.633
• [4.267 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 10/15/24 10:13:53.663
  I1015 10:13:53.663714 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename replication-controller @ 10/15/24 10:13:53.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:13:53.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:13:53.711
  STEP: Creating ReplicationController "e2e-rc-hzmfl" @ 10/15/24 10:13:53.719
  I1015 10:13:53.735494 22 rc.go:792] Get Replication Controller "e2e-rc-hzmfl" to confirm replicas
  E1015 10:13:54.017200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:13:54.736308 22 rc.go:792] Get Replication Controller "e2e-rc-hzmfl" to confirm replicas
  I1015 10:13:54.741287 22 rc.go:801] Found 1 replicas for "e2e-rc-hzmfl" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-hzmfl" @ 10/15/24 10:13:54.741
  STEP: Updating a scale subresource @ 10/15/24 10:13:54.751
  STEP: Verifying replicas where modified for replication controller "e2e-rc-hzmfl" @ 10/15/24 10:13:54.774
  I1015 10:13:54.775279 22 rc.go:792] Get Replication Controller "e2e-rc-hzmfl" to confirm replicas
  E1015 10:13:55.017406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:13:55.775909 22 rc.go:792] Get Replication Controller "e2e-rc-hzmfl" to confirm replicas
  I1015 10:13:55.784956 22 rc.go:801] Found 2 replicas for "e2e-rc-hzmfl" replication controller
  I1015 10:13:55.785385 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6300" for this suite. @ 10/15/24 10:13:55.806
• [2.157 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 10/15/24 10:13:55.821
  I1015 10:13:55.821693 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename discovery @ 10/15/24 10:13:55.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:13:55.868
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:13:55.876
  STEP: Setting up server cert @ 10/15/24 10:13:55.885
  E1015 10:13:56.017921      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:13:56.780253 22 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I1015 10:13:56.782476 22 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I1015 10:13:56.783067 22 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I1015 10:13:56.783352 22 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I1015 10:13:56.783664 22 discovery.go:139] Checking APIGroup: apps
  I1015 10:13:56.785703 22 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I1015 10:13:56.786046 22 discovery.go:148] Versions found [{apps/v1 v1}]
  I1015 10:13:56.786264 22 discovery.go:154] apps/v1 matches apps/v1
  I1015 10:13:56.786444 22 discovery.go:139] Checking APIGroup: events.k8s.io
  I1015 10:13:56.788545 22 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I1015 10:13:56.788605 22 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I1015 10:13:56.788625 22 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I1015 10:13:56.788642 22 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I1015 10:13:56.790288 22 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I1015 10:13:56.790369 22 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I1015 10:13:56.790390 22 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I1015 10:13:56.790409 22 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I1015 10:13:56.792929 22 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I1015 10:13:56.793215 22 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I1015 10:13:56.793372 22 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I1015 10:13:56.793513 22 discovery.go:139] Checking APIGroup: autoscaling
  I1015 10:13:56.795511 22 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I1015 10:13:56.795701 22 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I1015 10:13:56.795858 22 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I1015 10:13:56.796008 22 discovery.go:139] Checking APIGroup: batch
  I1015 10:13:56.798202 22 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I1015 10:13:56.798257 22 discovery.go:148] Versions found [{batch/v1 v1}]
  I1015 10:13:56.798275 22 discovery.go:154] batch/v1 matches batch/v1
  I1015 10:13:56.798294 22 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I1015 10:13:56.800245 22 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I1015 10:13:56.800595 22 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I1015 10:13:56.800765 22 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I1015 10:13:56.800918 22 discovery.go:139] Checking APIGroup: networking.k8s.io
  I1015 10:13:56.802905 22 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I1015 10:13:56.803283 22 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I1015 10:13:56.803514 22 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I1015 10:13:56.803692 22 discovery.go:139] Checking APIGroup: policy
  I1015 10:13:56.805572 22 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I1015 10:13:56.805657 22 discovery.go:148] Versions found [{policy/v1 v1}]
  I1015 10:13:56.805679 22 discovery.go:154] policy/v1 matches policy/v1
  I1015 10:13:56.805764 22 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I1015 10:13:56.808064 22 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I1015 10:13:56.808140 22 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I1015 10:13:56.808160 22 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I1015 10:13:56.808179 22 discovery.go:139] Checking APIGroup: storage.k8s.io
  I1015 10:13:56.810251 22 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I1015 10:13:56.810341 22 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I1015 10:13:56.810387 22 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I1015 10:13:56.810405 22 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I1015 10:13:56.816309 22 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I1015 10:13:56.816379 22 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I1015 10:13:56.816400 22 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I1015 10:13:56.816435 22 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I1015 10:13:56.817771 22 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I1015 10:13:56.817826 22 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I1015 10:13:56.817861 22 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I1015 10:13:56.817921 22 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I1015 10:13:56.819674 22 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I1015 10:13:56.819721 22 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I1015 10:13:56.819740 22 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I1015 10:13:56.819761 22 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I1015 10:13:56.821385 22 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I1015 10:13:56.821446 22 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I1015 10:13:56.821465 22 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I1015 10:13:56.821482 22 discovery.go:139] Checking APIGroup: node.k8s.io
  I1015 10:13:56.822782 22 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I1015 10:13:56.822836 22 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I1015 10:13:56.822866 22 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I1015 10:13:56.822884 22 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I1015 10:13:56.824113 22 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I1015 10:13:56.824169 22 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I1015 10:13:56.824232 22 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I1015 10:13:56.824257 22 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I1015 10:13:56.825791 22 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I1015 10:13:56.825864 22 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  I1015 10:13:56.825893 22 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I1015 10:13:56.825922 22 discovery.go:139] Checking APIGroup: crd.projectcalico.org
  I1015 10:13:56.827867 22 discovery.go:147] PreferredVersion.GroupVersion: crd.projectcalico.org/v1
  I1015 10:13:56.827925 22 discovery.go:148] Versions found [{crd.projectcalico.org/v1 v1}]
  I1015 10:13:56.827943 22 discovery.go:154] crd.projectcalico.org/v1 matches crd.projectcalico.org/v1
  I1015 10:13:56.828107 22 discovery.go:139] Checking APIGroup: monitoring.coreos.com
  I1015 10:13:56.830539 22 discovery.go:147] PreferredVersion.GroupVersion: monitoring.coreos.com/v1
  I1015 10:13:56.830725 22 discovery.go:148] Versions found [{monitoring.coreos.com/v1 v1} {monitoring.coreos.com/v1alpha1 v1alpha1}]
  I1015 10:13:56.830828 22 discovery.go:154] monitoring.coreos.com/v1 matches monitoring.coreos.com/v1
  I1015 10:13:56.830913 22 discovery.go:139] Checking APIGroup: velero.io
  I1015 10:13:56.832585 22 discovery.go:147] PreferredVersion.GroupVersion: velero.io/v1
  I1015 10:13:56.832644 22 discovery.go:148] Versions found [{velero.io/v1 v1} {velero.io/v2alpha1 v2alpha1}]
  I1015 10:13:56.832661 22 discovery.go:154] velero.io/v1 matches velero.io/v1
  I1015 10:13:56.832678 22 discovery.go:139] Checking APIGroup: cns.vmware.com
  I1015 10:13:56.834539 22 discovery.go:147] PreferredVersion.GroupVersion: cns.vmware.com/v1alpha1
  I1015 10:13:56.834627 22 discovery.go:148] Versions found [{cns.vmware.com/v1alpha1 v1alpha1}]
  I1015 10:13:56.834658 22 discovery.go:154] cns.vmware.com/v1alpha1 matches cns.vmware.com/v1alpha1
  I1015 10:13:56.834690 22 discovery.go:139] Checking APIGroup: traefik.containo.us
  I1015 10:13:56.836839 22 discovery.go:147] PreferredVersion.GroupVersion: traefik.containo.us/v1alpha1
  I1015 10:13:56.836910 22 discovery.go:148] Versions found [{traefik.containo.us/v1alpha1 v1alpha1}]
  I1015 10:13:56.836930 22 discovery.go:154] traefik.containo.us/v1alpha1 matches traefik.containo.us/v1alpha1
  I1015 10:13:56.836950 22 discovery.go:139] Checking APIGroup: traefik.io
  I1015 10:13:56.838529 22 discovery.go:147] PreferredVersion.GroupVersion: traefik.io/v1alpha1
  I1015 10:13:56.838609 22 discovery.go:148] Versions found [{traefik.io/v1alpha1 v1alpha1}]
  I1015 10:13:56.838699 22 discovery.go:154] traefik.io/v1alpha1 matches traefik.io/v1alpha1
  I1015 10:13:56.838798 22 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I1015 10:13:56.840467 22 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I1015 10:13:56.840526 22 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I1015 10:13:56.840546 22 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I1015 10:13:56.840788 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-7370" for this suite. @ 10/15/24 10:13:56.849
• [1.040 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 10/15/24 10:13:56.862
  I1015 10:13:56.862649 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename svcaccounts @ 10/15/24 10:13:56.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:13:56.899
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:13:56.903
  E1015 10:13:57.019116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:13:58.020683      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 10/15/24 10:13:58.961
  I1015 10:13:58.961984 22 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6410 pod-service-account-acc1a416-1856-40b9-b39b-5b62f48dd6b4 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  E1015 10:13:59.021548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 10/15/24 10:13:59.395
  I1015 10:13:59.395994 22 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6410 pod-service-account-acc1a416-1856-40b9-b39b-5b62f48dd6b4 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 10/15/24 10:13:59.753
  I1015 10:13:59.753526 22 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-6410 pod-service-account-acc1a416-1856-40b9-b39b-5b62f48dd6b4 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  E1015 10:14:00.022235      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:14:00.121430 22 service_accounts.go:114] Got root ca configmap in namespace "svcaccounts-6410"
  I1015 10:14:00.125627 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6410" for this suite. @ 10/15/24 10:14:00.136
• [3.301 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 10/15/24 10:14:00.164
  I1015 10:14:00.164416 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename projected @ 10/15/24 10:14:00.168
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:14:00.21
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:14:00.217
  STEP: Creating a pod to test downward API volume plugin @ 10/15/24 10:14:00.223
  E1015 10:14:01.022545      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:02.022845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:03.023110      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:04.023650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 10:14:04.276
  I1015 10:14:04.286218 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod downwardapi-volume-48746953-4207-47d4-9528-1de0733d5ac0 container client-container: <nil>
  STEP: delete the pod @ 10/15/24 10:14:04.3
  I1015 10:14:04.335395 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9220" for this suite. @ 10/15/24 10:14:04.356
• [4.247 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 10/15/24 10:14:04.415
  I1015 10:14:04.415455 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename discovery @ 10/15/24 10:14:04.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:14:04.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:14:04.506
  STEP: Setting up server cert @ 10/15/24 10:14:04.523
  E1015 10:14:05.024283      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Requesting APIResourceList from "/api/v1" @ 10/15/24 10:14:05.765
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 10/15/24 10:14:05.768
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 10/15/24 10:14:05.771
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 10/15/24 10:14:05.773
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 10/15/24 10:14:05.775
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 10/15/24 10:14:05.777
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 10/15/24 10:14:05.779
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 10/15/24 10:14:05.781
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 10/15/24 10:14:05.783
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 10/15/24 10:14:05.784
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 10/15/24 10:14:05.786
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 10/15/24 10:14:05.788
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 10/15/24 10:14:05.79
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 10/15/24 10:14:05.791
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 10/15/24 10:14:05.793
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 10/15/24 10:14:05.795
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 10/15/24 10:14:05.797
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 10/15/24 10:14:05.801
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 10/15/24 10:14:05.805
  I1015 10:14:05.811736 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-5203" for this suite. @ 10/15/24 10:14:05.821
• [1.421 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 10/15/24 10:14:05.837
  I1015 10:14:05.838030 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename init-container @ 10/15/24 10:14:05.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:14:05.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:14:05.893
  STEP: creating the pod @ 10/15/24 10:14:05.901
  I1015 10:14:05.901846 22 init_container.go:374] PodSpec: initContainers in spec.initContainers
  E1015 10:14:06.025308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:07.025894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:08.027103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:09.027903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:10.028038      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:11.028520      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:12.029042      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:13.030161      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:14.030396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:15.030871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:16.031519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:17.031803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:18.031965      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:19.032783      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:20.034264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:21.034808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:22.035896      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:23.036436      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:24.036634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:25.036752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:26.037156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:27.037151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:28.037268      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:29.037579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:30.038359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:31.038737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:32.039094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:33.039903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:34.041123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:35.041127      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:36.042081      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:37.042506      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:38.045111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:39.047295      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:40.047362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:41.048510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:42.048607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:43.049407      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:44.049763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:45.049959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:46.050153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:47.050369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:48.051920      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:49.052859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:14:49.835485 22 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-4c0825c3-9a28-431a-bc71-34320bd4618d", GenerateName:"", Namespace:"init-container-2916", SelfLink:"", UID:"58ca971f-6322-413d-b5d5-747e06736bfe", ResourceVersion:"53474395", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 10, 14, 5, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"901811699"}, Annotations:map[string]string{"cni.projectcalico.org/containerID":"3b53397821b1998b7f43c0ac07ea00dc82addf06c67bbd83de2593c85dcf8a23", "cni.projectcalico.org/podIP":"10.233.118.11/32", "cni.projectcalico.org/podIPs":"10.233.118.11/32"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 10, 14, 5, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005386528), Subresource:""}, v1.ManagedFieldsEntry{Manager:"calico", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 10, 14, 6, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005386558), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 10, 14, 49, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005386588), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-zrncf", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc0062956e0), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-zrncf", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-zrncf", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-zrncf", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc00812c598), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"env1-test-worker-0", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc003edc080), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00812c610)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00812c630)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc00812c638), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00812c63c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc0055725c0), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.October, 15, 10, 14, 7, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.October, 15, 10, 14, 5, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.October, 15, 10, 14, 5, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.October, 15, 10, 14, 5, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.October, 15, 10, 14, 5, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"10.61.1.200", HostIPs:[]v1.HostIP{v1.HostIP{IP:"10.61.1.200"}}, PodIP:"10.233.118.11", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.233.118.11"}}, StartTime:time.Date(2024, time.October, 15, 10, 14, 5, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00035e850)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00035ea80)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://19bada1593b490dd72fac2fa9332c82d5cabf3d55083c44a9225992a5d15c7aa", Started:(*bool)(0xc00812c6da), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc006295740), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc00812c6ef), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc006295720), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc00812c6bf), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I1015 10:14:49.836042 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2916" for this suite. @ 10/15/24 10:14:49.854
• [44.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3656
  STEP: Creating a kubernetes client @ 10/15/24 10:14:49.882
  I1015 10:14:49.882889 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename services @ 10/15/24 10:14:49.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:14:49.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:14:49.937
  STEP: creating service multiprotocol-test in namespace services-8898 @ 10/15/24 10:14:49.946
  STEP: creating pod pod1 in namespace services-8898 @ 10/15/24 10:14:49.975
  STEP: Creating pod pod1 in namespace services-8898 @ 10/15/24 10:14:49.976
  E1015 10:14:50.054035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:51.054434      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:52.054719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-8898 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 10/15/24 10:14:52.075
  I1015 10:14:52.107221 22 service.go:4351] successfully validated that service multiprotocol-test in namespace services-8898 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 10/15/24 10:14:52.107
  I1015 10:14:52.107395 22 resource.go:361] Creating new exec pod
  E1015 10:14:53.055709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:54.056021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:14:54.175987 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-8898 exec execpodg5pp5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.31.123 80'
  I1015 10:14:54.492365 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.31.123 80\nConnection to 10.233.31.123 80 port [tcp/http] succeeded!\n"
  I1015 10:14:54.492481 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1015 10:14:54.493023 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-8898 exec execpodg5pp5 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.31.123 80'
  E1015 10:14:55.056537      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:56.057227      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:57.058244      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:14:58.059290      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:14:58.908747 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.31.123 80\nConnection to 10.233.31.123 80 port [udp/*] succeeded!\n"
  I1015 10:14:58.908858 22 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 10/15/24 10:14:58.908
  I1015 10:14:58.942095 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-8898 exec execpodg5pp5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.31.123 80'
  E1015 10:14:59.060415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:14:59.465692 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.31.123 80\nConnection to 10.233.31.123 80 port [tcp/http] succeeded!\n"
  I1015 10:14:59.465803 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1015 10:14:59.466043 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-8898 exec execpodg5pp5 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.31.123 80'
  I1015 10:14:59.722435 22 builder.go:135] rc: 1
  I1015 10:14:59.722522 22 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-8898 exec execpodg5pp5 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.31.123 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -u -w 2 10.233.31.123 80
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E1015 10:15:00.061137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:15:01.061829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:15:01.466776 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-8898 exec execpodg5pp5 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.31.123 80'
  I1015 10:15:01.800031 22 builder.go:135] rc: 1
  I1015 10:15:01.800156 22 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-8898 exec execpodg5pp5 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.31.123 80:
  Command stdout:

  stderr:
  + nc -v -u -w 2 10.233.31.123 80
  + echo hostName
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E1015 10:15:02.062492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:15:03.063019      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:15:03.466969 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-8898 exec execpodg5pp5 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.31.123 80'
  I1015 10:15:03.698322 22 builder.go:135] rc: 1
  I1015 10:15:03.698444 22 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-8898 exec execpodg5pp5 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.31.123 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -u -w 2 10.233.31.123 80
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E1015 10:15:04.064178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:15:05.064587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:15:05.466429 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-8898 exec execpodg5pp5 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.31.123 80'
  I1015 10:15:05.774929 22 builder.go:135] rc: 1
  I1015 10:15:05.775064 22 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-8898 exec execpodg5pp5 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.31.123 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -u -w 2 10.233.31.123 80
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  STEP: Checking if the Service forwards traffic to UDP only @ 10/15/24 10:15:05.775
  I1015 10:15:05.801765 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-8898 exec execpodg5pp5 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.31.123 80'
  E1015 10:15:06.064717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:15:06.157881 22 builder.go:135] rc: 1
  I1015 10:15:06.158052 22 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-8898 exec execpodg5pp5 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.31.123 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -u -w 2 10.233.31.123 80
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E1015 10:15:07.064899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:15:07.802042 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-8898 exec execpodg5pp5 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.31.123 80'
  E1015 10:15:08.065381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:15:09.065944      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:15:10.066479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:15:11.067614      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:15:12.068746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:15:12.083566 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.31.123 80\nConnection to 10.233.31.123 80 port [udp/*] succeeded!\n"
  I1015 10:15:12.083973 22 builder.go:147] stdout: "pod1"
  I1015 10:15:12.084304 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-8898 exec execpodg5pp5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.31.123 80'
  E1015 10:15:13.069923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:15:13.419196 22 builder.go:135] rc: 1
  I1015 10:15:13.419686 22 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-8898 exec execpodg5pp5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.31.123 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.31.123 80
  nc: connect to 10.233.31.123 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E1015 10:15:14.070694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:15:14.085232 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-8898 exec execpodg5pp5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.31.123 80'
  E1015 10:15:15.070889      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:15:15.437321 22 builder.go:135] rc: 1
  I1015 10:15:15.437505 22 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-8898 exec execpodg5pp5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.31.123 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.233.31.123 80
  + echo hostName
  nc: connect to 10.233.31.123 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E1015 10:15:16.070967      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:15:16.084433 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-8898 exec execpodg5pp5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.31.123 80'
  E1015 10:15:17.071504      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:15:17.453979 22 builder.go:135] rc: 1
  I1015 10:15:17.454201 22 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-8898 exec execpodg5pp5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.31.123 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.31.123 80
  nc: connect to 10.233.31.123 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  E1015 10:15:18.072545      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:15:18.085055 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-8898 exec execpodg5pp5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.31.123 80'
  E1015 10:15:19.072738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:15:19.432262 22 builder.go:135] rc: 1
  I1015 10:15:19.432406 22 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-8898 exec execpodg5pp5 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.31.123 80:
  Command stdout:

  stderr:
  + + echo hostName
  nc -v -t -w 2 10.233.31.123 80
  nc: connect to 10.233.31.123 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1015 10:15:19.432723 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8898" for this suite. @ 10/15/24 10:15:19.446
• [29.588 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 10/15/24 10:15:19.477
  I1015 10:15:19.477942 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename aggregateddiscovery @ 10/15/24 10:15:19.479
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:15:19.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:15:19.551
  I1015 10:15:19.572853 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-983" for this suite. @ 10/15/24 10:15:19.589
• [0.128 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 10/15/24 10:15:19.607
  I1015 10:15:19.607468 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename aggregateddiscovery @ 10/15/24 10:15:19.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:15:19.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:15:19.666
  I1015 10:15:19.674794 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  E1015 10:15:20.073319      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:15:21.073565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:15:22.073718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:15:23.073985      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:15:24.074841      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:15:25.075861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:15:26.075731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:15:27.076844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:15:27.812097 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-6216" for this suite. @ 10/15/24 10:15:27.822
• [8.233 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 10/15/24 10:15:27.84
  I1015 10:15:27.840711 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename replication-controller @ 10/15/24 10:15:27.842
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:15:27.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:15:27.935
  STEP: Creating replication controller my-hostname-basic-469a64c8-89b3-419d-9b07-25ad49f7aa8e @ 10/15/24 10:15:27.941
  I1015 10:15:27.969856 22 resource.go:87] Pod name my-hostname-basic-469a64c8-89b3-419d-9b07-25ad49f7aa8e: Found 0 pods out of 1
  E1015 10:15:28.077232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:15:29.078097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:15:30.079122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:15:31.079755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:15:32.079831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:15:32.981120 22 resource.go:87] Pod name my-hostname-basic-469a64c8-89b3-419d-9b07-25ad49f7aa8e: Found 1 pods out of 1
  I1015 10:15:32.981216 22 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-469a64c8-89b3-419d-9b07-25ad49f7aa8e" are running
  I1015 10:15:32.995900 22 rc.go:523] Pod "my-hostname-basic-469a64c8-89b3-419d-9b07-25ad49f7aa8e-7cz5p" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-10-15 10:15:30 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-10-15 10:15:28 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-10-15 10:15:30 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-10-15 10:15:30 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-10-15 10:15:27 +0000 UTC Reason: Message:}])
  I1015 10:15:32.996191 22 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 10/15/24 10:15:32.996
  I1015 10:15:33.021598 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-173" for this suite. @ 10/15/24 10:15:33.037
• [5.230 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 10/15/24 10:15:33.073
  I1015 10:15:33.073605 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename webhook @ 10/15/24 10:15:33.076
  E1015 10:15:33.080910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:15:33.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:15:33.13
  STEP: Setting up server cert @ 10/15/24 10:15:33.196
  E1015 10:15:34.081931      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/15/24 10:15:34.434
  STEP: Deploying the webhook pod @ 10/15/24 10:15:34.475
  STEP: Wait for the deployment to be ready @ 10/15/24 10:15:34.523
  I1015 10:15:34.560494 22 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1015 10:15:35.082139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:15:36.082969      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/15/24 10:15:36.594
  STEP: Verifying the service has paired with the endpoint @ 10/15/24 10:15:36.62
  E1015 10:15:37.083191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:15:37.622364 22 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 10/15/24 10:15:37.656
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 10/15/24 10:15:37.663
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 10/15/24 10:15:37.663
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 10/15/24 10:15:37.663
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 10/15/24 10:15:37.666
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 10/15/24 10:15:37.666
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 10/15/24 10:15:37.669
  I1015 10:15:37.867518 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-322" for this suite. @ 10/15/24 10:15:37.886
  STEP: Destroying namespace "webhook-markers-9293" for this suite. @ 10/15/24 10:15:37.911
• [4.878 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 10/15/24 10:15:37.956
  I1015 10:15:37.956399 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename container-probe @ 10/15/24 10:15:37.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:15:38.074
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:15:38.082
  E1015 10:15:38.083135      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727 @ 10/15/24 10:15:38.091
  E1015 10:15:39.083605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:15:40.083791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/15/24 10:15:40.146
  I1015 10:15:40.156715 22 container_probe.go:1749] Initial restart count of pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb is 0
  I1015 10:15:40.166957 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:15:41.084182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:15:42.087008      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:15:42.179364 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:15:43.087346      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:15:44.087790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:15:44.203314 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:15:45.088182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:15:46.088786      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:15:46.214009 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:15:47.089048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:15:48.089510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:15:48.223266 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:15:49.094575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:15:50.095062      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:15:50.233513 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:15:51.095787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:15:52.096067      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:15:52.244933 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:15:53.096296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:15:54.096581      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:15:54.257030 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:15:55.096830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:15:56.097036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:15:56.268260 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:15:57.097363      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:15:58.098318      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:15:58.275733 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:15:59.101634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:16:00.101819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:16:00.284183 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:16:01.102143      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:16:02.102462      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:16:02.294370 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:16:03.102579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:16:04.103194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:16:04.305262 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:16:05.103257      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:16:06.103729      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:16:06.315921 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:16:07.103710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:16:08.104440      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:16:08.328272 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:16:09.104930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:16:10.105124      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:16:10.338203 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:16:11.106139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:16:12.107197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:16:12.345572 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:16:13.107334      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:16:14.107750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:16:14.360819 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:16:15.108411      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:16:16.108916      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:16:16.369898 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:16:17.109408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:16:18.109551      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:16:18.379281 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:16:19.111819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:16:20.110478      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:16:20.401044 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:16:21.111244      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:16:22.111518      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:16:22.408677 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:16:23.111485      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:16:24.111849      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:16:24.417421 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:16:25.112880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:16:26.113020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:16:26.433680 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:16:27.113500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:16:28.113681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:16:28.441683 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:16:29.114839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:16:30.115375      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:16:30.459644 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:16:31.116020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:16:32.116250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:16:32.467898 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:16:33.116420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:16:34.116966      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:16:34.485021 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:16:35.117956      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:16:36.118550      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:16:36.495741 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:16:37.119278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:16:38.120176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:16:38.513439 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:16:39.120561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:16:40.120894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:16:40.532466 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:16:41.121031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:16:42.121453      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:16:42.542510 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:16:43.122422      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:16:44.122944      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:16:44.554644 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:16:45.123669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:16:46.124289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:16:46.569600 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:16:47.124270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:16:48.124402      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:16:48.581481 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:16:49.125382      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:16:50.125849      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:16:50.590695 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:16:51.126559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:16:52.126564      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:16:52.601814 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:16:53.127142      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:16:54.128583      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:16:54.617298 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:16:55.128709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:16:56.129034      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:16:56.629127 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:16:57.130079      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:16:58.130499      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:16:58.636904 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:16:59.132298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:17:00.133130      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:17:00.652464 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:17:01.133195      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:17:02.133374      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:17:02.669769 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:17:03.134145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:17:04.134871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:17:04.678030 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:17:05.135553      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:17:06.135657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:17:06.685682 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:17:07.135937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:17:08.136501      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:17:08.693365 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:17:09.138932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:17:10.139630      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:17:10.703726 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:17:11.139870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:17:12.140597      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:17:12.714239 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:17:13.141070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:17:14.141283      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:17:14.728414 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:17:15.141556      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:17:16.141791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:17:16.739573 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:17:17.141890      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:17:18.142415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:17:18.751790 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:17:19.142716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:17:20.143381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:17:20.765722 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:17:21.144390      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:17:22.144931      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:17:22.779179 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:17:23.146122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:17:24.146716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:17:24.790296 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:17:25.147523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:17:26.147676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:17:26.800635 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:17:27.148839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:17:28.149203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:17:28.810875 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:17:29.149902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:17:30.150447      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:17:30.822236 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:17:31.150543      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:17:32.150951      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:17:32.832635 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:17:33.151189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:17:34.151367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:17:34.843610 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:17:35.152397      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:17:36.152814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:17:36.851706 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:17:37.153004      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:17:38.153730      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:17:38.859797 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:17:39.154146      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:17:40.154629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:17:40.868038 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:17:41.154852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:17:42.155271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:17:42.876465 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:17:43.156207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:17:44.156903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:17:44.886661 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:17:45.157605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:17:46.158415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:17:46.897612 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:17:47.159567      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:17:48.159681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:17:48.906604 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:17:49.159932      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:17:50.160557      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:17:50.918054 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:17:51.161355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:17:52.161428      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:17:52.930993 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:17:53.162024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:17:54.162099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:17:54.940893 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:17:55.162261      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:17:56.162930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:17:56.951581 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:17:57.163889      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:17:58.163848      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:17:58.961420 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:17:59.165289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:18:00.165308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:18:00.971890 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:18:01.165487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:18:02.165776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:18:02.985206 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:18:03.166693      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:18:04.167031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:18:04.999402 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:18:05.167575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:18:06.168056      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:18:07.008699 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:18:07.168737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:18:08.169874      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:18:09.018522 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:18:09.170797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:18:10.171268      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:18:11.028512 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:18:11.171472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:18:12.171378      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:18:13.036919 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:18:13.172426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:18:14.172925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:18:15.050215 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:18:15.173192      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:18:16.174031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:18:17.058749 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:18:17.174180      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:18:18.174493      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:18:19.067850 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:18:19.175339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:18:20.175893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:18:21.077066 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:18:21.176462      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:18:22.176928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:18:23.089582 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:18:23.177747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:18:24.178257      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:18:25.102665 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:18:25.178413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:18:26.179257      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:18:27.111032 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:18:27.180644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:18:28.181584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:18:29.120078 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:18:29.182099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:18:30.182685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:18:31.128256 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:18:31.183268      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:18:32.183862      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:18:33.138213 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:18:33.184636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:18:34.184793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:18:35.154329 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:18:35.185504      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:18:36.186409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:18:37.162916 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:18:37.187271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:18:38.187553      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:18:39.170923 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:18:39.188338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:18:40.188811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:18:41.188871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:18:41.189344 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:18:42.189403      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:18:43.190620      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:18:43.201469 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:18:44.191744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:18:45.192264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:18:45.210540 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:18:46.193192      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:18:47.193726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:18:47.219526 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:18:48.195000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:18:49.195719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:18:49.226108 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:18:50.196628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:18:51.197115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:18:51.234176 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:18:52.198188      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:18:53.199089      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:18:53.242880 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:18:54.199775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:18:55.200059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:18:55.253452 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:18:56.200868      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:18:57.201881      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:18:57.263868 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:18:58.202564      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:18:59.203050      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:18:59.273425 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:19:00.203264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:19:01.203602      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:19:01.281140 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:19:02.203659      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:19:03.204578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:19:03.290166 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:19:04.204860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:19:05.204954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:19:05.311060 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:19:06.206035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:19:07.206302      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:19:07.321395 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:19:08.206679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:19:09.207732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:19:09.330205 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:19:10.207845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:19:11.208133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:19:11.338724 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:19:12.208325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:19:13.209530      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:19:13.348653 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:19:14.210207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:19:15.210767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:19:15.358708 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:19:16.211150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:19:17.211302      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:19:17.377797 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:19:18.211521      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:19:19.211743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:19:19.386946 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:19:20.212377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:19:21.212587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:19:21.396732 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:19:22.212762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:19:23.213927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:19:23.407306 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:19:24.214146      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:19:25.214755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:19:25.415997 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:19:26.215037      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:19:27.215832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:19:27.425275 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:19:28.216326      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:19:29.216544      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:19:29.435325 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:19:30.216940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:19:31.217226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:19:31.444416 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:19:32.217402      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:19:33.217653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:19:33.461791 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:19:34.218386      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:19:35.219459      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:19:35.471233 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:19:36.219989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:19:37.220469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:19:37.479561 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:19:38.220939      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:19:39.221111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:19:39.490215 22 container_probe.go:1759] Get pod busybox-0a0a75bd-068e-409e-af90-1a8e9aee81bb in namespace container-probe-2727
  E1015 10:19:40.222544      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:19:41.223343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 10/15/24 10:19:41.491
  I1015 10:19:41.520332 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2727" for this suite. @ 10/15/24 10:19:41.535
• [243.607 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 10/15/24 10:19:41.566
  I1015 10:19:41.566658 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 10/15/24 10:19:41.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:19:41.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:19:41.644
  STEP: create the container to handle the HTTPGet hook request. @ 10/15/24 10:19:41.66
  E1015 10:19:42.223684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:19:43.224941      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:19:44.225488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:19:45.225986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 10/15/24 10:19:45.727
  E1015 10:19:46.226929      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:19:47.227584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 10/15/24 10:19:47.775
  E1015 10:19:48.228323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:19:49.228779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:19:50.229432      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:19:51.230533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 10/15/24 10:19:51.844
  I1015 10:19:51.893304 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4847" for this suite. @ 10/15/24 10:19:51.911
• [10.372 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 10/15/24 10:19:51.938
  I1015 10:19:51.938384 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename projected @ 10/15/24 10:19:51.94
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:19:52.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:19:52.016
  STEP: Creating configMap with name configmap-projected-all-test-volume-4db37ff4-a152-4399-9c76-64a6786187c1 @ 10/15/24 10:19:52.024
  STEP: Creating secret with name secret-projected-all-test-volume-10615abd-2cc6-4bf8-aa6e-beff12d0fc3d @ 10/15/24 10:19:52.039
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 10/15/24 10:19:52.059
  E1015 10:19:52.231657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:19:53.232173      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:19:54.232838      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:19:55.233652      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 10:19:56.125
  I1015 10:19:56.132195 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod projected-volume-32e881bc-f21a-49b4-a2c0-b3c1eab37728 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 10/15/24 10:19:56.178
  E1015 10:19:56.234352      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:19:56.237553 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9528" for this suite. @ 10/15/24 10:19:56.25
• [4.329 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 10/15/24 10:19:56.267
  I1015 10:19:56.267158 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename downward-api @ 10/15/24 10:19:56.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:19:56.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:19:56.342
  STEP: Creating a pod to test downward API volume plugin @ 10/15/24 10:19:56.352
  E1015 10:19:57.235127      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:19:58.235899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:19:59.236150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:00.237151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 10:20:00.418
  I1015 10:20:00.429976 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod downwardapi-volume-6a4a9cf8-b9ca-4b5b-b196-b9a41a199d09 container client-container: <nil>
  STEP: delete the pod @ 10/15/24 10:20:00.462
  I1015 10:20:00.498464 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3726" for this suite. @ 10/15/24 10:20:00.509
• [4.259 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 10/15/24 10:20:00.526
  I1015 10:20:00.526038 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename secrets @ 10/15/24 10:20:00.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:20:00.561
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:20:00.568
  STEP: Creating secret with name secret-test-map-20d7b0bf-e9bc-46a1-9b98-ca0bc35e3823 @ 10/15/24 10:20:00.573
  STEP: Creating a pod to test consume secrets @ 10/15/24 10:20:00.581
  E1015 10:20:01.237714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:02.238217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:03.239270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:04.239641      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 10:20:04.648
  I1015 10:20:04.671667 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-secrets-06d6615f-062e-4c89-b3cf-f1b623b5e970 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/15/24 10:20:04.704
  I1015 10:20:04.757509 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1071" for this suite. @ 10/15/24 10:20:04.773
• [4.271 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 10/15/24 10:20:04.798
  I1015 10:20:04.798219 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename runtimeclass @ 10/15/24 10:20:04.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:20:04.855
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:20:04.867
  E1015 10:20:05.240526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:06.240922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:20:06.972859 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5104" for this suite. @ 10/15/24 10:20:06.988
• [2.208 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 10/15/24 10:20:07.007
  I1015 10:20:07.007934 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename ingress @ 10/15/24 10:20:07.009
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:20:07.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:20:07.061
  STEP: getting /apis @ 10/15/24 10:20:07.067
  STEP: getting /apis/networking.k8s.io @ 10/15/24 10:20:07.076
  STEP: getting /apis/networking.k8s.iov1 @ 10/15/24 10:20:07.078
  STEP: creating @ 10/15/24 10:20:07.08
  STEP: getting @ 10/15/24 10:20:07.111
  STEP: listing @ 10/15/24 10:20:07.117
  STEP: watching @ 10/15/24 10:20:07.125
  I1015 10:20:07.125760 22 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 10/15/24 10:20:07.127
  STEP: cluster-wide watching @ 10/15/24 10:20:07.134
  I1015 10:20:07.134909 22 ingress.go:198] starting watch
  STEP: patching @ 10/15/24 10:20:07.137
  STEP: updating @ 10/15/24 10:20:07.149
  I1015 10:20:07.170609 22 ingress.go:221] waiting for watch events with expected annotations
  I1015 10:20:07.170730 22 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 10/15/24 10:20:07.171
  STEP: updating /status @ 10/15/24 10:20:07.182
  STEP: get /status @ 10/15/24 10:20:07.198
  STEP: deleting @ 10/15/24 10:20:07.205
  E1015 10:20:07.241662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting a collection @ 10/15/24 10:20:07.243
  I1015 10:20:07.284458 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-5858" for this suite. @ 10/15/24 10:20:07.302
• [0.313 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 10/15/24 10:20:07.323
  I1015 10:20:07.323833 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename var-expansion @ 10/15/24 10:20:07.325
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:20:07.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:20:07.375
  STEP: creating the pod with failed condition @ 10/15/24 10:20:07.38
  E1015 10:20:08.242444      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:09.242872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:10.243738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:11.244013      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:12.244320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:13.245115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:14.246222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:15.246585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:16.246635      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:17.247060      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:18.249427      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:19.249981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:20.250377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:21.250827      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:22.251966      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:23.252716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:24.252851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:25.253231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:26.253778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:27.253898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:28.254159      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:29.254328      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:30.255505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:31.255703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:32.255733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:33.256943      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:34.257799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:35.259033      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:36.258987      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:37.259544      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:38.259764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:39.260092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:40.260217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:41.260454      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:42.260646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:43.261083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:44.261665      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:45.262088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:46.262894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:47.263294      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:48.264525      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:49.265307      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:50.265591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:51.266212      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:52.266275      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:53.266678      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:54.266956      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:55.267266      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:56.267791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:57.267924      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:58.269045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:20:59.269156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:00.270312      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:01.270591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:02.271871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:03.272737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:04.273581      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:05.274089      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:06.275268      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:07.275306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:08.275588      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:09.275926      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:10.275999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:11.276459      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:12.276686      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:13.277456      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:14.278621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:15.278959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:16.279823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:17.280875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:18.282014      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:19.282560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:20.283630      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:21.284135      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:22.285137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:23.285307      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:24.286388      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:25.287494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:26.287522      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:27.287768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:28.288751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:29.289222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:30.290118      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:31.290701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:32.290992      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:33.291528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:34.292496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:35.292624      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:36.293635      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:37.293989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:38.294913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:39.295340      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:40.295644      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:41.295774      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:42.296023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:43.296911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:44.297014      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:45.297493      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:46.298520      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:47.298819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:48.299252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:49.299875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:50.300528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:51.300789      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:52.301552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:53.302470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:54.302713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:55.303366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:56.304228      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:57.304851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:58.305878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:21:59.306352      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:00.306426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:01.306654      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:02.307281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:03.307613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:04.308562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:05.309039      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:06.309682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:07.309983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pod @ 10/15/24 10:22:07.401
  I1015 10:22:07.937887 22 pod_client.go:141] Successfully updated pod "var-expansion-cdb4eecb-a1f7-4d13-98de-de7e5c553b1d"
  STEP: waiting for pod running @ 10/15/24 10:22:07.937
  E1015 10:22:08.310441      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:09.310788      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 10/15/24 10:22:09.965
  I1015 10:22:09.965791 22 delete.go:62] Deleting pod "var-expansion-cdb4eecb-a1f7-4d13-98de-de7e5c553b1d" in namespace "var-expansion-6517"
  I1015 10:22:09.982529 22 delete.go:70] Wait up to 5m0s for pod "var-expansion-cdb4eecb-a1f7-4d13-98de-de7e5c553b1d" to be fully deleted
  E1015 10:22:10.311995      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:11.312143      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:12.313105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:13.313537      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:14.314291      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:15.314990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:16.316111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:17.316618      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:18.317293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:19.318311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:20.318551      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:21.319662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:22.319634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:23.320893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:24.321412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:25.322085      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:26.323070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:27.323778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:28.324437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:29.324739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:30.325092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:31.325357      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:32.325685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:33.326834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:34.326984      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:35.327237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:36.327511      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:37.327719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:38.327787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:39.328216      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:40.328690      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:41.329287      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:22:42.202859 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6517" for this suite. @ 10/15/24 10:22:42.225
• [154.928 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 10/15/24 10:22:42.251
  I1015 10:22:42.251328 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename pods @ 10/15/24 10:22:42.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:22:42.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:22:42.32
  E1015 10:22:42.330136      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a Pod with a static label @ 10/15/24 10:22:42.361
  STEP: watching for Pod to be ready @ 10/15/24 10:22:42.388
  I1015 10:22:42.394073 22 pods.go:945] observed Pod pod-test in namespace pods-3460 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I1015 10:22:42.402435 22 pods.go:945] observed Pod pod-test in namespace pods-3460 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:22:42 +0000 UTC  }]
  I1015 10:22:42.477406 22 pods.go:945] observed Pod pod-test in namespace pods-3460 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:22:42 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:22:42 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:22:42 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:22:42 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:22:42 +0000 UTC  }]
  I1015 10:22:43.125739 22 pods.go:945] observed Pod pod-test in namespace pods-3460 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:22:42 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:22:42 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:22:42 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:22:42 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:22:42 +0000 UTC  }]
  E1015 10:22:43.330732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:22:43.931014 22 pods.go:948] Found Pod pod-test in namespace pods-3460 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:22:43 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:22:42 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:22:43 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:22:43 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-10-15 10:22:42 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 10/15/24 10:22:43.942
  STEP: getting the Pod and ensuring that it's patched @ 10/15/24 10:22:43.973
  STEP: replacing the Pod's status Ready condition to False @ 10/15/24 10:22:43.982
  STEP: check the Pod again to ensure its Ready conditions are False @ 10/15/24 10:22:44.014
  STEP: deleting the Pod via a Collection with a LabelSelector @ 10/15/24 10:22:44.014
  STEP: watching for the Pod to be deleted @ 10/15/24 10:22:44.04
  I1015 10:22:44.046893 22 pods.go:1058] observed event type MODIFIED
  E1015 10:22:44.330947      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:45.331928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:22:45.971372 22 pods.go:1058] observed event type MODIFIED
  I1015 10:22:46.329761 22 pods.go:1058] observed event type MODIFIED
  E1015 10:22:46.332541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:22:46.734226 22 pods.go:1058] observed event type MODIFIED
  I1015 10:22:46.975965 22 pods.go:1058] observed event type MODIFIED
  I1015 10:22:47.003076 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3460" for this suite. @ 10/15/24 10:22:47.016
• [4.785 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 10/15/24 10:22:47.037
  I1015 10:22:47.037605 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename container-probe @ 10/15/24 10:22:47.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:22:47.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:22:47.098
  STEP: Creating pod liveness-7eca9abe-07ce-4ee9-bbd6-c625bb9e9f44 in namespace container-probe-8762 @ 10/15/24 10:22:47.105
  E1015 10:22:47.332404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:48.335814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/15/24 10:22:49.173
  I1015 10:22:49.184280 22 container_probe.go:1749] Initial restart count of pod liveness-7eca9abe-07ce-4ee9-bbd6-c625bb9e9f44 is 0
  I1015 10:22:49.193860 22 container_probe.go:1759] Get pod liveness-7eca9abe-07ce-4ee9-bbd6-c625bb9e9f44 in namespace container-probe-8762
  E1015 10:22:49.333689      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:50.334343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:22:51.203732 22 container_probe.go:1759] Get pod liveness-7eca9abe-07ce-4ee9-bbd6-c625bb9e9f44 in namespace container-probe-8762
  E1015 10:22:51.334972      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:52.335263      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:22:53.215732 22 container_probe.go:1759] Get pod liveness-7eca9abe-07ce-4ee9-bbd6-c625bb9e9f44 in namespace container-probe-8762
  E1015 10:22:53.335500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:54.335701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:22:55.229795 22 container_probe.go:1759] Get pod liveness-7eca9abe-07ce-4ee9-bbd6-c625bb9e9f44 in namespace container-probe-8762
  E1015 10:22:55.335934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:56.336512      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:22:57.240132 22 container_probe.go:1759] Get pod liveness-7eca9abe-07ce-4ee9-bbd6-c625bb9e9f44 in namespace container-probe-8762
  E1015 10:22:57.336908      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:22:58.337950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:22:59.251316 22 container_probe.go:1759] Get pod liveness-7eca9abe-07ce-4ee9-bbd6-c625bb9e9f44 in namespace container-probe-8762
  E1015 10:22:59.338727      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:00.339215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:23:01.261603 22 container_probe.go:1759] Get pod liveness-7eca9abe-07ce-4ee9-bbd6-c625bb9e9f44 in namespace container-probe-8762
  E1015 10:23:01.340479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:02.340623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:23:03.269363 22 container_probe.go:1759] Get pod liveness-7eca9abe-07ce-4ee9-bbd6-c625bb9e9f44 in namespace container-probe-8762
  E1015 10:23:03.341045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:04.342516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:23:05.278093 22 container_probe.go:1759] Get pod liveness-7eca9abe-07ce-4ee9-bbd6-c625bb9e9f44 in namespace container-probe-8762
  E1015 10:23:05.343049      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:06.343900      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:23:07.291105 22 container_probe.go:1759] Get pod liveness-7eca9abe-07ce-4ee9-bbd6-c625bb9e9f44 in namespace container-probe-8762
  E1015 10:23:07.344210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:08.344786      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:23:09.299963 22 container_probe.go:1759] Get pod liveness-7eca9abe-07ce-4ee9-bbd6-c625bb9e9f44 in namespace container-probe-8762
  I1015 10:23:09.300039 22 container_probe.go:1763] Restart count of pod container-probe-8762/liveness-7eca9abe-07ce-4ee9-bbd6-c625bb9e9f44 is now 1 (20.11563099s elapsed)
  STEP: deleting the pod @ 10/15/24 10:23:09.3
  E1015 10:23:09.346348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:23:09.362423 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8762" for this suite. @ 10/15/24 10:23:09.386
• [22.371 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 10/15/24 10:23:09.408
  I1015 10:23:09.408121 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename configmap @ 10/15/24 10:23:09.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:23:09.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:23:09.471
  STEP: Creating configMap with name cm-test-opt-del-d112c656-6321-417a-842c-db31b2dc94e9 @ 10/15/24 10:23:09.496
  STEP: Creating configMap with name cm-test-opt-upd-7d82d63f-2803-446c-bde5-0fce19ff01f5 @ 10/15/24 10:23:09.508
  STEP: Creating the pod @ 10/15/24 10:23:09.52
  E1015 10:23:10.347109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:11.347881      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:12.347936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:13.348845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-d112c656-6321-417a-842c-db31b2dc94e9 @ 10/15/24 10:23:13.676
  STEP: Updating configmap cm-test-opt-upd-7d82d63f-2803-446c-bde5-0fce19ff01f5 @ 10/15/24 10:23:13.689
  STEP: Creating configMap with name cm-test-opt-create-2cdc750a-2767-4d80-a18a-eb1886b7ec44 @ 10/15/24 10:23:13.705
  STEP: waiting to observe update in volume @ 10/15/24 10:23:13.717
  E1015 10:23:14.348940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:15.350020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:16.350893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:17.351311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:18.352381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:19.352559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:20.352964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:21.353209      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:22.353552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:23.354225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:24.354434      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:25.355227      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:26.356375      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:27.356839      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:28.360325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:29.360418      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:30.361366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:31.361543      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:32.361711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:33.362775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:34.363012      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:35.363606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:36.364370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:37.364471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:38.365704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:39.365889      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:40.367071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:41.368288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:42.368328      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:43.369329      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:44.370033      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:45.370250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:46.370907      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:47.371743      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:48.372523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:49.373162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:50.374136      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:51.374303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:52.374550      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:53.375681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:54.375666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:55.376024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:56.381436      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:57.381487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:58.381685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:23:59.382819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:00.383038      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:01.384036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:02.384750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:03.384700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:04.385028      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:05.386115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:06.386955      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:07.387248      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:08.387863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:09.388083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:10.389320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:11.389924      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:12.390497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:13.391592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:14.392091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:15.392226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:16.393018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:17.393414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:18.394573      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:19.394768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:20.395294      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:21.395817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:22.396361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:23.396958      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:24.397645      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:25.398223      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:26.399213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:27.399500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:28.399584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:29.400208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:30.400349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:31.401314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:32.407794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:33.408264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:34.408475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:35.409407      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:36.409930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:37.410255      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:38.411183      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:39.411463      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:40.411731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:41.412001      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:42.412678      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:24:42.794535 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9702" for this suite. @ 10/15/24 10:24:42.805
• [93.411 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 10/15/24 10:24:42.82
  I1015 10:24:42.820435 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename subjectreview @ 10/15/24 10:24:42.822
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:24:42.86
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:24:42.867
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-8091" @ 10/15/24 10:24:42.874
  I1015 10:24:42.893302 22 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-8091:e2e"
  I1015 10:24:42.893370 22 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-8091"}
  I1015 10:24:42.893391 22 subjectreviews.go:71] saUID: "9c806729-6535-4ce9-acc7-1ebdf857d42b"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-8091:e2e" @ 10/15/24 10:24:42.893
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-8091:e2e" @ 10/15/24 10:24:42.894
  I1015 10:24:42.898731 22 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-8091:e2e" api 'list' configmaps in "subjectreview-8091" namespace @ 10/15/24 10:24:42.899
  I1015 10:24:42.903323 22 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-8091:e2e" @ 10/15/24 10:24:42.903
  I1015 10:24:42.908074 22 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I1015 10:24:42.908130 22 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I1015 10:24:42.908491 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-8091" for this suite. @ 10/15/24 10:24:42.92
• [0.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 10/15/24 10:24:42.938
  I1015 10:24:42.938738 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename secrets @ 10/15/24 10:24:42.94
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:24:42.984
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:24:42.991
  STEP: Creating secret with name secret-test-map-ad6f2521-d436-4ab8-bc27-f7333e368729 @ 10/15/24 10:24:42.999
  STEP: Creating a pod to test consume secrets @ 10/15/24 10:24:43.01
  E1015 10:24:43.413757      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:44.413843      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:45.414111      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:46.414196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:47.415300      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:48.415733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 10:24:49.08
  I1015 10:24:49.090501 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-secrets-057e7525-2102-4ccc-ba06-49637898bdbd container secret-volume-test: <nil>
  STEP: delete the pod @ 10/15/24 10:24:49.111
  I1015 10:24:49.179866 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8674" for this suite. @ 10/15/24 10:24:49.193
• [6.284 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 10/15/24 10:24:49.227
  I1015 10:24:49.227818 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename projected @ 10/15/24 10:24:49.229
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:24:49.278
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:24:49.285
  STEP: Creating the pod @ 10/15/24 10:24:49.292
  E1015 10:24:49.416775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:50.416797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:51.426354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:52.427334      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:53.428112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:24:53.930171 22 pod_client.go:141] Successfully updated pod "annotationupdate93716f3e-dc5e-4c5a-8f06-d71a000f01bd"
  E1015 10:24:54.428234      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:55.428410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:24:55.966363 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-601" for this suite. @ 10/15/24 10:24:55.982
• [6.769 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 10/15/24 10:24:56.003
  I1015 10:24:56.003454 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename container-runtime @ 10/15/24 10:24:56.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:24:56.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:24:56.051
  STEP: create the container @ 10/15/24 10:24:56.055
  W1015 10:24:56.071063      22 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 10/15/24 10:24:56.071
  E1015 10:24:56.429282      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:57.430217      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:58.431107      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:24:59.432317      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 10/15/24 10:25:00.118
  STEP: the container should be terminated @ 10/15/24 10:25:00.126
  STEP: the termination message should be set @ 10/15/24 10:25:00.126
  I1015 10:25:00.126441 22 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 10/15/24 10:25:00.126
  I1015 10:25:00.166163 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-915" for this suite. @ 10/15/24 10:25:00.184
• [4.204 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 10/15/24 10:25:00.207
  I1015 10:25:00.208051 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename pods @ 10/15/24 10:25:00.212
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:25:00.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:25:00.276
  STEP: creating the pod @ 10/15/24 10:25:00.286
  STEP: submitting the pod to kubernetes @ 10/15/24 10:25:00.287
  STEP: verifying QOS class is set on the pod @ 10/15/24 10:25:00.33
  I1015 10:25:00.355476 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4553" for this suite. @ 10/15/24 10:25:00.372
• [0.198 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2181
  STEP: Creating a kubernetes client @ 10/15/24 10:25:00.406
  I1015 10:25:00.406789 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename services @ 10/15/24 10:25:00.41
  E1015 10:25:00.432778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:25:00.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:25:00.485
  STEP: creating service in namespace services-8231 @ 10/15/24 10:25:00.492
  STEP: creating service affinity-clusterip in namespace services-8231 @ 10/15/24 10:25:00.492
  STEP: creating replication controller affinity-clusterip in namespace services-8231 @ 10/15/24 10:25:00.534
  I1015 10:25:00.552073      22 runners.go:198] Created replication controller with name: affinity-clusterip, namespace: services-8231, replica count: 3
  E1015 10:25:01.433311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:25:02.433606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:25:03.434173      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:25:03.603663      22 runners.go:198] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1015 10:25:03.625693 22 resource.go:361] Creating new exec pod
  E1015 10:25:04.434497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:25:05.435361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:25:06.435645      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:25:06.659971 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-8231 exec execpod-affinityfcv6q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I1015 10:25:06.981817 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  I1015 10:25:06.981971 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1015 10:25:06.982182 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-8231 exec execpod-affinityfcv6q -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.2.4 80'
  I1015 10:25:07.254235 22 builder.go:146] stderr: "+ echo hostName+ \nnc -v -t -w 2 10.233.2.4 80\nConnection to 10.233.2.4 80 port [tcp/http] succeeded!\n"
  I1015 10:25:07.254318 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1015 10:25:07.254483 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-8231 exec execpod-affinityfcv6q -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.2.4:80/ ; done'
  E1015 10:25:07.436504      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:25:07.767246 22 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.2.4:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.2.4:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.2.4:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.2.4:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.2.4:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.2.4:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.2.4:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.2.4:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.2.4:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.2.4:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.2.4:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.2.4:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.2.4:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.2.4:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.2.4:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.2.4:80/\n"
  I1015 10:25:07.767391 22 builder.go:147] stdout: "\naffinity-clusterip-zhznk\naffinity-clusterip-zhznk\naffinity-clusterip-zhznk\naffinity-clusterip-zhznk\naffinity-clusterip-zhznk\naffinity-clusterip-zhznk\naffinity-clusterip-zhznk\naffinity-clusterip-zhznk\naffinity-clusterip-zhznk\naffinity-clusterip-zhznk\naffinity-clusterip-zhznk\naffinity-clusterip-zhznk\naffinity-clusterip-zhznk\naffinity-clusterip-zhznk\naffinity-clusterip-zhznk\naffinity-clusterip-zhznk"
  I1015 10:25:07.767516 22 service.go:242] Received response from host: affinity-clusterip-zhznk
  I1015 10:25:07.767584 22 service.go:242] Received response from host: affinity-clusterip-zhznk
  I1015 10:25:07.767605 22 service.go:242] Received response from host: affinity-clusterip-zhznk
  I1015 10:25:07.767654 22 service.go:242] Received response from host: affinity-clusterip-zhznk
  I1015 10:25:07.767676 22 service.go:242] Received response from host: affinity-clusterip-zhznk
  I1015 10:25:07.767695 22 service.go:242] Received response from host: affinity-clusterip-zhznk
  I1015 10:25:07.767794 22 service.go:242] Received response from host: affinity-clusterip-zhznk
  I1015 10:25:07.767827 22 service.go:242] Received response from host: affinity-clusterip-zhznk
  I1015 10:25:07.767879 22 service.go:242] Received response from host: affinity-clusterip-zhznk
  I1015 10:25:07.767901 22 service.go:242] Received response from host: affinity-clusterip-zhznk
  I1015 10:25:07.767920 22 service.go:242] Received response from host: affinity-clusterip-zhznk
  I1015 10:25:07.767973 22 service.go:242] Received response from host: affinity-clusterip-zhznk
  I1015 10:25:07.767991 22 service.go:242] Received response from host: affinity-clusterip-zhznk
  I1015 10:25:07.768066 22 service.go:242] Received response from host: affinity-clusterip-zhznk
  I1015 10:25:07.768191 22 service.go:242] Received response from host: affinity-clusterip-zhznk
  I1015 10:25:07.768276 22 service.go:242] Received response from host: affinity-clusterip-zhznk
  I1015 10:25:07.768489 22 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-8231, will wait for the garbage collector to delete the pods @ 10/15/24 10:25:07.833
  I1015 10:25:07.934402 22 resources.go:139] Deleting ReplicationController affinity-clusterip took: 17.66485ms
  I1015 10:25:08.036151 22 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 101.744377ms
  E1015 10:25:08.438462      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:25:09.439247      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:25:10.439355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:25:11.439856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:25:11.779092 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8231" for this suite. @ 10/15/24 10:25:11.802
• [11.413 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 10/15/24 10:25:11.82
  I1015 10:25:11.820508 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename webhook @ 10/15/24 10:25:11.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:25:11.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:25:11.9
  STEP: Setting up server cert @ 10/15/24 10:25:11.979
  E1015 10:25:12.440895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:25:13.441719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/15/24 10:25:14.288
  STEP: Deploying the webhook pod @ 10/15/24 10:25:14.309
  STEP: Wait for the deployment to be ready @ 10/15/24 10:25:14.339
  I1015 10:25:14.356858 22 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1015 10:25:14.442725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:25:15.442416      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/15/24 10:25:16.382
  STEP: Verifying the service has paired with the endpoint @ 10/15/24 10:25:16.401
  E1015 10:25:16.443061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:25:17.402119 22 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  E1015 10:25:17.443887      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Listing all of the created validation webhooks @ 10/15/24 10:25:17.541
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/15/24 10:25:17.603
  STEP: Deleting the collection of validation webhooks @ 10/15/24 10:25:17.661
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 10/15/24 10:25:17.837
  I1015 10:25:18.048040 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4166" for this suite. @ 10/15/24 10:25:18.063
  STEP: Destroying namespace "webhook-markers-9568" for this suite. @ 10/15/24 10:25:18.117
• [6.356 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 10/15/24 10:25:18.177
  I1015 10:25:18.177220 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename watch @ 10/15/24 10:25:18.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:25:18.258
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:25:18.271
  STEP: creating a watch on configmaps @ 10/15/24 10:25:18.279
  STEP: creating a new configmap @ 10/15/24 10:25:18.282
  STEP: modifying the configmap once @ 10/15/24 10:25:18.291
  STEP: closing the watch once it receives two notifications @ 10/15/24 10:25:18.313
  I1015 10:25:18.314683 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3546  02b0d172-5b27-4462-8172-dd000665b98e 53477565 0 2024-10-15 10:25:18 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-10-15 10:25:18 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1015 10:25:18.315725 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3546  02b0d172-5b27-4462-8172-dd000665b98e 53477567 0 2024-10-15 10:25:18 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-10-15 10:25:18 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 10/15/24 10:25:18.316
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 10/15/24 10:25:18.344
  STEP: deleting the configmap @ 10/15/24 10:25:18.348
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 10/15/24 10:25:18.366
  I1015 10:25:18.367009 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3546  02b0d172-5b27-4462-8172-dd000665b98e 53477568 0 2024-10-15 10:25:18 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-10-15 10:25:18 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1015 10:25:18.370131 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-3546  02b0d172-5b27-4462-8172-dd000665b98e 53477570 0 2024-10-15 10:25:18 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-10-15 10:25:18 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1015 10:25:18.371400 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3546" for this suite. @ 10/15/24 10:25:18.388
• [0.257 seconds]
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 10/15/24 10:25:18.436
  I1015 10:25:18.436852 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename disruption @ 10/15/24 10:25:18.439
  E1015 10:25:18.444141      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:25:18.517
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:25:18.529
  STEP: Waiting for the pdb to be processed @ 10/15/24 10:25:18.558
  STEP: Updating PodDisruptionBudget status @ 10/15/24 10:25:18.603
  STEP: Waiting for all pods to be running @ 10/15/24 10:25:18.644
  I1015 10:25:18.665783 22 disruption.go:578] running pods: 0 < 1
  E1015 10:25:19.444307      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:25:20.445030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:25:20.653831 22 disruption.go:578] running pods: 0 < 1
  E1015 10:25:21.445540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:25:22.446007      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 10/15/24 10:25:22.654
  STEP: Waiting for the pdb to be processed @ 10/15/24 10:25:22.7
  STEP: Patching PodDisruptionBudget status @ 10/15/24 10:25:22.725
  STEP: Waiting for the pdb to be processed @ 10/15/24 10:25:22.746
  I1015 10:25:22.756356 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4064" for this suite. @ 10/15/24 10:25:22.773
• [4.355 seconds]
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 10/15/24 10:25:22.792
  I1015 10:25:22.792485 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename downward-api @ 10/15/24 10:25:22.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:25:22.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:25:22.899
  STEP: Creating a pod to test downward API volume plugin @ 10/15/24 10:25:22.906
  E1015 10:25:23.446202      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:25:24.446335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:25:25.446605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:25:26.447699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 10:25:26.978
  I1015 10:25:26.986356 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod downwardapi-volume-9b56a5ea-4d2a-452c-93b7-5d5ee6e868f9 container client-container: <nil>
  STEP: delete the pod @ 10/15/24 10:25:27.009
  I1015 10:25:27.040076 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7385" for this suite. @ 10/15/24 10:25:27.051
• [4.284 seconds]
------------------------------
S
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 10/15/24 10:25:27.076
  I1015 10:25:27.076804 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename pod-network-test @ 10/15/24 10:25:27.079
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:25:27.122
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:25:27.135
  STEP: Performing setup for networking test in namespace pod-network-test-3791 @ 10/15/24 10:25:27.142
  STEP: creating a selector @ 10/15/24 10:25:27.142
  STEP: Creating the service pods in kubernetes @ 10/15/24 10:25:27.142
  I1015 10:25:27.142680 22 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E1015 10:25:27.448259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:25:28.449361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:25:29.449799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:25:30.450368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:25:31.451389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:25:32.452042      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:25:33.451904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:25:34.452974      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:25:35.453934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:25:36.454388      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:25:37.455279      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:25:38.456289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:25:39.456668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:25:40.456881      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:25:41.457436      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:25:42.457664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:25:43.458089      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:25:44.458338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:25:45.459098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:25:46.460023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:25:47.460215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:25:48.463837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 10/15/24 10:25:49.371
  E1015 10:25:49.464870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:25:50.465964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:25:51.439989 22 utils.go:779] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1015 10:25:51.440797 22 networking.go:42] Breadth first check of 10.233.118.31 on host 10.61.1.200...
  I1015 10:25:51.453946 22 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.118.5:9080/dial?request=hostname&protocol=http&host=10.233.118.31&port=8083&tries=1'] Namespace:pod-network-test-3791 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1015 10:25:51.454092 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  I1015 10:25:51.455345 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I1015 10:25:51.455531 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-3791/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.118.5%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.118.31%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  E1015 10:25:51.467348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:25:51.612024 22 utils.go:331] Waiting for responses: map[]
  I1015 10:25:51.612396 22 utils.go:335] reached 10.233.118.31 after 0/1 tries
  I1015 10:25:51.612601 22 networking.go:42] Breadth first check of 10.233.87.72 on host 10.61.1.201...
  I1015 10:25:51.622040 22 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.118.5:9080/dial?request=hostname&protocol=http&host=10.233.87.72&port=8083&tries=1'] Namespace:pod-network-test-3791 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1015 10:25:51.622402 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  I1015 10:25:51.624192 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I1015 10:25:51.624571 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-3791/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.118.5%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.87.72%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1015 10:25:51.772501 22 utils.go:331] Waiting for responses: map[]
  I1015 10:25:51.772575 22 utils.go:335] reached 10.233.87.72 after 0/1 tries
  I1015 10:25:51.772612 22 networking.go:42] Breadth first check of 10.233.76.145 on host 10.61.1.202...
  I1015 10:25:51.788845 22 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.233.118.5:9080/dial?request=hostname&protocol=http&host=10.233.76.145&port=8083&tries=1'] Namespace:pod-network-test-3791 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1015 10:25:51.788931 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  I1015 10:25:51.790143 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I1015 10:25:51.790537 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-3791/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.233.118.5%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.233.76.145%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1015 10:25:51.944333 22 utils.go:331] Waiting for responses: map[]
  I1015 10:25:51.944425 22 utils.go:335] reached 10.233.76.145 after 0/1 tries
  I1015 10:25:51.944704 22 networking.go:53] Going to retry 0 out of 3 pods....
  I1015 10:25:51.945484 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-3791" for this suite. @ 10/15/24 10:25:51.963
• [24.919 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 10/15/24 10:25:51.997
  I1015 10:25:51.997497 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 10/15/24 10:25:51.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:25:52.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:25:52.047
  STEP: create the container to handle the HTTPGet hook request. @ 10/15/24 10:25:52.07
  E1015 10:25:52.467509      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:25:53.467646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 10/15/24 10:25:54.124
  E1015 10:25:54.467763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:25:55.468148      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 10/15/24 10:25:56.18
  STEP: delete the pod with lifecycle hook @ 10/15/24 10:25:56.227
  E1015 10:25:56.472660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:25:57.473205      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:25:58.474020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:25:59.474515      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:26:00.276082 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5608" for this suite. @ 10/15/24 10:26:00.291
• [8.324 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 10/15/24 10:26:00.331
  I1015 10:26:00.331550 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename disruption @ 10/15/24 10:26:00.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:26:00.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:26:00.417
  STEP: Creating a kubernetes client @ 10/15/24 10:26:00.431
  I1015 10:26:00.431399 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename disruption-2 @ 10/15/24 10:26:00.433
  E1015 10:26:00.475179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:26:00.492
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:26:00.501
  STEP: Waiting for the pdb to be processed @ 10/15/24 10:26:00.516
  E1015 10:26:01.475484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:02.476695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 10/15/24 10:26:02.537
  E1015 10:26:03.476812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:04.477381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 10/15/24 10:26:04.566
  STEP: listing a collection of PDBs across all namespaces @ 10/15/24 10:26:04.586
  STEP: listing a collection of PDBs in namespace disruption-972 @ 10/15/24 10:26:04.597
  STEP: deleting a collection of PDBs @ 10/15/24 10:26:04.609
  STEP: Waiting for the PDB collection to be deleted @ 10/15/24 10:26:04.655
  I1015 10:26:04.676716 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-7410" for this suite. @ 10/15/24 10:26:04.713
  I1015 10:26:04.732012 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-972" for this suite. @ 10/15/24 10:26:04.757
• [4.451 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 10/15/24 10:26:04.783
  I1015 10:26:04.783281 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename projected @ 10/15/24 10:26:04.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:26:04.834
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:26:04.841
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-82e5c923-cccf-43a7-9a54-d0eaec465ed4 @ 10/15/24 10:26:04.866
  STEP: Creating the pod @ 10/15/24 10:26:04.879
  E1015 10:26:05.477606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:06.478748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:07.478905      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:08.479930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-82e5c923-cccf-43a7-9a54-d0eaec465ed4 @ 10/15/24 10:26:08.96
  STEP: waiting to observe update in volume @ 10/15/24 10:26:08.976
  E1015 10:26:09.481285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:10.482043      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:11.482699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:12.483218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:13.483943      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:14.484350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:15.484841      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:16.485231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:17.485389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:18.486374      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:19.486750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:20.487535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:21.488299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:22.489485      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:23.490410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:24.491526      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:25.492258      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:26.492385      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:27.493346      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:28.493646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:29.493732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:30.494520      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:31.495983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:32.496115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:33.497096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:34.497503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:35.498136      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:36.498360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:37.498801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:38.499884      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:39.500848      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:40.502009      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:41.502186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:42.502544      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:43.503549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:44.503989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:45.504429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:46.505039      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:47.505806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:48.506913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:49.507356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:50.507940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:51.508719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:52.509067      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:53.510052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:54.510215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:55.511145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:56.512250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:57.513146      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:58.514172      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:26:59.515164      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:00.516051      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:01.516736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:02.517356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:03.517584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:04.518419      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:05.518969      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:06.519387      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:07.519748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:08.520934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:09.521567      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:10.521832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:11.521810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:12.522950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:13.523903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:14.524567      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:15.524781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:16.525919      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:17.526437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:18.527621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:19.527891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:20.528291      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:21.528524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:22.529400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:23.530653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:24.531118      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:25.531758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:27:25.780866 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3451" for this suite. @ 10/15/24 10:27:25.795
• [81.024 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:453
  STEP: Creating a kubernetes client @ 10/15/24 10:27:25.808
  I1015 10:27:25.808697 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename resourcequota @ 10/15/24 10:27:25.812
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:27:25.86
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:27:25.871
  STEP: Counting existing ResourceQuota @ 10/15/24 10:27:25.878
  E1015 10:27:26.531952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:27.533106      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:28.533211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:29.533925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:30.534928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 10/15/24 10:27:30.907
  STEP: Ensuring resource quota status is calculated @ 10/15/24 10:27:30.919
  E1015 10:27:31.535143      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:32.535602      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 10/15/24 10:27:32.93
  STEP: Ensuring resource quota status captures replicaset creation @ 10/15/24 10:27:32.958
  E1015 10:27:33.535723      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:34.536035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 10/15/24 10:27:34.969
  STEP: Ensuring resource quota status released usage @ 10/15/24 10:27:34.986
  E1015 10:27:35.536784      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:36.538299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:27:36.997723 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4309" for this suite. @ 10/15/24 10:27:37.009
• [11.218 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 10/15/24 10:27:37.027
  I1015 10:27:37.027953 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename downward-api @ 10/15/24 10:27:37.029
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:27:37.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:27:37.088
  STEP: Creating a pod to test downward API volume plugin @ 10/15/24 10:27:37.094
  E1015 10:27:37.538907      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:38.539203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:39.539940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:40.540971      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 10:27:41.159
  I1015 10:27:41.165309 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod downwardapi-volume-834b4dca-bd03-42bf-aba5-63428a67080f container client-container: <nil>
  STEP: delete the pod @ 10/15/24 10:27:41.179
  I1015 10:27:41.221528 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1837" for this suite. @ 10/15/24 10:27:41.235
• [4.230 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 10/15/24 10:27:41.263
  I1015 10:27:41.263850 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename subpath @ 10/15/24 10:27:41.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:27:41.332
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:27:41.347
  STEP: Setting up data @ 10/15/24 10:27:41.377
  STEP: Creating pod pod-subpath-test-secret-st6m @ 10/15/24 10:27:41.408
  STEP: Creating a pod to test atomic-volume-subpath @ 10/15/24 10:27:41.408
  E1015 10:27:41.541653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:42.542244      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:43.543324      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:44.543835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:45.544326      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:46.544435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:47.545646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:48.547513      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:49.548430      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:50.548693      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:51.549597      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:52.550147      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:53.550969      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:54.551898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:55.552441      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:56.552852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:57.552971      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:58.553649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:27:59.554634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:28:00.554828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:28:01.555377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:28:02.556069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:28:03.556510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:28:04.556593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:28:05.557514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 10:28:05.6
  I1015 10:28:05.609730 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-subpath-test-secret-st6m container test-container-subpath-secret-st6m: <nil>
  STEP: delete the pod @ 10/15/24 10:28:05.624
  STEP: Deleting pod pod-subpath-test-secret-st6m @ 10/15/24 10:28:05.664
  I1015 10:28:05.665009 22 delete.go:62] Deleting pod "pod-subpath-test-secret-st6m" in namespace "subpath-9641"
  I1015 10:28:05.671729 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9641" for this suite. @ 10/15/24 10:28:05.682
• [24.430 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:163
  STEP: Creating a kubernetes client @ 10/15/24 10:28:05.694
  I1015 10:28:05.694844 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename resourcequota @ 10/15/24 10:28:05.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:28:05.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:28:05.74
  STEP: Discovering how many secrets are in namespace by default @ 10/15/24 10:28:05.745
  E1015 10:28:06.558551      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:28:07.558781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:28:08.559096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:28:09.559282      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:28:10.560094      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 10/15/24 10:28:10.759
  E1015 10:28:11.560204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:28:12.560483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:28:13.560900      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:28:14.561035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:28:15.561891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 10/15/24 10:28:15.77
  STEP: Ensuring resource quota status is calculated @ 10/15/24 10:28:15.787
  E1015 10:28:16.562196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:28:17.562864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Secret @ 10/15/24 10:28:17.8
  STEP: Ensuring resource quota status captures secret creation @ 10/15/24 10:28:17.826
  E1015 10:28:18.563695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:28:19.563851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a secret @ 10/15/24 10:28:19.834
  STEP: Ensuring resource quota status released usage @ 10/15/24 10:28:19.845
  E1015 10:28:20.563899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:28:21.564813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:28:21.855335 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5293" for this suite. @ 10/15/24 10:28:21.871
• [16.201 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 10/15/24 10:28:21.897
  I1015 10:28:21.897553 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename projected @ 10/15/24 10:28:21.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:28:21.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:28:21.958
  STEP: Creating projection with secret that has name projected-secret-test-map-20e75ff8-8e6e-4bc9-b627-1d88218dbe74 @ 10/15/24 10:28:21.964
  STEP: Creating a pod to test consume secrets @ 10/15/24 10:28:21.972
  E1015 10:28:22.565799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:28:23.566960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:28:24.567681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:28:25.567825      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 10:28:26.035
  I1015 10:28:26.042557 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-projected-secrets-c9cc196a-c4ad-4af1-a7ab-9c6136a4488d container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 10/15/24 10:28:26.058
  I1015 10:28:26.093849 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7599" for this suite. @ 10/15/24 10:28:26.106
• [4.225 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 10/15/24 10:28:26.128
  I1015 10:28:26.128661 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename secrets @ 10/15/24 10:28:26.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:28:26.183
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:28:26.191
  STEP: Creating secret with name secret-test-d002256c-9b5e-4826-bac9-f501f4d983d3 @ 10/15/24 10:28:26.198
  STEP: Creating a pod to test consume secrets @ 10/15/24 10:28:26.21
  E1015 10:28:26.567958      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:28:27.569270      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:28:28.570250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:28:29.570414      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 10:28:30.29
  I1015 10:28:30.298345 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-secrets-e7fa26eb-5a83-418e-9262-5b3156f3aa25 container secret-volume-test: <nil>
  STEP: delete the pod @ 10/15/24 10:28:30.311
  I1015 10:28:30.349835 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5548" for this suite. @ 10/15/24 10:28:30.367
• [4.260 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 10/15/24 10:28:30.388
  I1015 10:28:30.388256 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename deployment @ 10/15/24 10:28:30.39
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:28:30.445
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:28:30.453
  I1015 10:28:30.460069 22 deployment.go:1645] Creating simple deployment test-new-deployment
  I1015 10:28:30.492052 22 deployment.go:222] new replicaset for deployment "test-new-deployment" is yet to be created
  E1015 10:28:30.571525      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:28:31.571830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:28:32.520466 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 15, 10, 28, 30, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 10, 28, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 15, 10, 28, 30, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 10, 28, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-new-deployment-77db57d8df\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1015 10:28:32.572737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:28:33.572838      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting scale subresource @ 10/15/24 10:28:34.535
  STEP: updating a scale subresource @ 10/15/24 10:28:34.545
  STEP: verifying the deployment Spec.Replicas was modified @ 10/15/24 10:28:34.569
  E1015 10:28:34.573629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patch a scale subresource @ 10/15/24 10:28:34.598
  I1015 10:28:34.717439 22 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8158",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "731dbcfa-b10f-4c43-ab0d-2684726cb7e6",
      ResourceVersion: (string) (len=8) "53478778",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864584910,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864584910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864584914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864584912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864584910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-77db57d8df\" has successfully progressed."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864584914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864584914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1015 10:28:34.783859 22 deployment.go:39] New ReplicaSet "test-new-deployment-77db57d8df" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-77db57d8df",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-8158",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bfff45d4-ca18-41c7-94ea-6ac56587bbc3",
      ResourceVersion: (string) (len=8) "53478780",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864584910,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "731dbcfa-b10f-4c43-ab0d-2684726cb7e6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864584914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 37 33 31 64 62 63  66 61 2d 62 31 30 66 2d  |\"731dbcfa-b10f-|
              00000120  34 63 34 33 2d 61 62 30  64 2d 32 36 38 34 37 32  |4c43-ab0d-268472|
              00000130  36 63 62 37 65 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |6cb7e6\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864584914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1015 10:28:34.914423 22 deployment.go:67] Pod "test-new-deployment-77db57d8df-2xhsm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-77db57d8df-2xhsm",
      GenerateName: (string) (len=31) "test-new-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-8158",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6b6cad52-0f41-4a5a-9b8f-9932ff8f63e3",
      ResourceVersion: (string) (len=8) "53478787",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864584914,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-77db57d8df",
          UID: (types.UID) (len=36) "bfff45d4-ca18-41c7-94ea-6ac56587bbc3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864584914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 66  66 66 34 35 64 34 2d 63  |d\":\"bfff45d4-c|
              00000090  61 31 38 2d 34 31 63 37  2d 39 34 65 61 2d 36 61  |a18-41c7-94ea-6a|
              000000a0  63 35 36 35 38 37 62 62  63 33 5c 22 7d 22 3a 7b  |c56587bbc3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m29mw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m29mw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864584914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1015 10:28:34.927586 22 deployment.go:67] Pod "test-new-deployment-77db57d8df-kfv9z" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-77db57d8df-kfv9z",
      GenerateName: (string) (len=31) "test-new-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-8158",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "eabbc719-ab88-44cd-806e-3442d2f5eec0",
      ResourceVersion: (string) (len=8) "53478786",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864584914,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-77db57d8df",
          UID: (types.UID) (len=36) "bfff45d4-ca18-41c7-94ea-6ac56587bbc3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864584914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 66  66 66 34 35 64 34 2d 63  |d\":\"bfff45d4-c|
              00000090  61 31 38 2d 34 31 63 37  2d 39 34 65 61 2d 36 61  |a18-41c7-94ea-6a|
              000000a0  63 35 36 35 38 37 62 62  63 33 5c 22 7d 22 3a 7b  |c56587bbc3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xsdsj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xsdsj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1015 10:28:34.933137 22 deployment.go:67] Pod "test-new-deployment-77db57d8df-rk44j" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-77db57d8df-rk44j",
      GenerateName: (string) (len=31) "test-new-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-8158",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ebbcd16e-3049-494a-8534-aacba351cfec",
      ResourceVersion: (string) (len=8) "53478781",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864584914,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-77db57d8df",
          UID: (types.UID) (len=36) "bfff45d4-ca18-41c7-94ea-6ac56587bbc3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864584914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 66  66 66 34 35 64 34 2d 63  |d\":\"bfff45d4-c|
              00000090  61 31 38 2d 34 31 63 37  2d 39 34 65 61 2d 36 61  |a18-41c7-94ea-6a|
              000000a0  63 35 36 35 38 37 62 62  63 33 5c 22 7d 22 3a 7b  |c56587bbc3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864584914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m49c9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m49c9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864584914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864584914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864584914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864584914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864584914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.202"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864584914,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1015 10:28:34.947786 22 deployment.go:67] Pod "test-new-deployment-77db57d8df-zpc4f" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-77db57d8df-zpc4f",
      GenerateName: (string) (len=31) "test-new-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-8158",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9f60e7c0-be06-4e66-aea8-8af9d8cb83c7",
      ResourceVersion: (string) (len=8) "53478754",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864584910,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "8ac2621ea6e3a424c3c77e2fab53286b626ab789c3d269fb9c4a95e8c7230d75",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.233.118.46/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.233.118.46/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-77db57d8df",
          UID: (types.UID) (len=36) "bfff45d4-ca18-41c7-94ea-6ac56587bbc3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864584910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 62 66  66 66 34 35 64 34 2d 63  |d\":\"bfff45d4-c|
              00000090  61 31 38 2d 34 31 63 37  2d 39 34 65 61 2d 36 61  |a18-41c7-94ea-6a|
              000000a0  63 35 36 35 38 37 62 62  63 33 5c 22 7d 22 3a 7b  |c56587bbc3\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864584911,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864584912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 31 31 38  2e 34 36 5c 22 7d 22 3a  |.233.118.46\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-flklv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-flklv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864584912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864584910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864584912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864584912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864584910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.200",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.200"
        }
      },
      PodIP: (string) (len=13) "10.233.118.46",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.118.46"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864584910,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864584911,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://38bb950db4da02d15887a01eb3c6c719d5f50b5e2c462d8ef420437e0c0abdfe",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1015 10:28:34.954243 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8158" for this suite. @ 10/15/24 10:28:34.988
• [4.625 seconds]
------------------------------
S
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:147
  STEP: Creating a kubernetes client @ 10/15/24 10:28:35.014
  I1015 10:28:35.014533 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename kubelet-test @ 10/15/24 10:28:35.017
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:28:35.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:28:35.069
  STEP: Waiting for pod completion @ 10/15/24 10:28:35.095
  E1015 10:28:35.580843      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:28:36.576199      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:28:37.577035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:28:38.577265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:28:39.147122 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6249" for this suite. @ 10/15/24 10:28:39.164
• [4.172 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 10/15/24 10:28:39.187
  I1015 10:28:39.187342 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename dns @ 10/15/24 10:28:39.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:28:39.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:28:39.269
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 10/15/24 10:28:39.275
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 10/15/24 10:28:39.275
  STEP: creating a pod to probe DNS @ 10/15/24 10:28:39.275
  STEP: submitting the pod to kubernetes @ 10/15/24 10:28:39.275
  E1015 10:28:39.577331      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:28:40.578005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:28:41.578176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:28:42.578674      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 10/15/24 10:28:43.329
  STEP: looking for the results for each expected name from probers @ 10/15/24 10:28:43.337
  I1015 10:28:43.375188 22 dns_common.go:527] DNS probes using dns-7251/dns-test-ca5465aa-8ff6-4db3-aa1f-d66b379f6141 succeeded

  STEP: deleting the pod @ 10/15/24 10:28:43.375
  I1015 10:28:43.417459 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7251" for this suite. @ 10/15/24 10:28:43.43
• [4.260 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:469
  STEP: Creating a kubernetes client @ 10/15/24 10:28:43.447
  I1015 10:28:43.447149 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename sched-pred @ 10/15/24 10:28:43.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:28:43.504
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:28:43.511
  I1015 10:28:43.520152 22 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1015 10:28:43.547360 22 util.go:400] Waiting for terminating namespaces to be deleted...
  I1015 10:28:43.554164 22 predicates.go:121] 
  Logging pods the apiserver thinks is on node env1-test-worker-0 before test
  E1015 10:28:43.579321      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:28:43.583711 22 predicates.go:887] filebeat-filebeat-5zdl5 from filebeat started at 2024-10-15 09:13:58 +0000 UTC (1 container statuses recorded)
  I1015 10:28:43.583749 22 predicates.go:889] 	Container filebeat ready: true, restart count 0
  I1015 10:28:43.583762 22 predicates.go:887] calico-node-n5shx from kube-system started at 2024-10-14 21:55:42 +0000 UTC (1 container statuses recorded)
  I1015 10:28:43.583771 22 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I1015 10:28:43.583782 22 predicates.go:887] kube-proxy-b8kdx from kube-system started at 2024-10-14 22:04:07 +0000 UTC (1 container statuses recorded)
  I1015 10:28:43.583791 22 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I1015 10:28:43.583801 22 predicates.go:887] nginx-proxy-env1-test-worker-0 from kube-system started at 2024-10-14 22:03:57 +0000 UTC (1 container statuses recorded)
  I1015 10:28:43.583811 22 predicates.go:889] 	Container nginx-proxy ready: true, restart count 0
  I1015 10:28:43.583856 22 predicates.go:887] nodelocaldns-8q7t8 from kube-system started at 2024-06-27 16:41:31 +0000 UTC (1 container statuses recorded)
  I1015 10:28:43.583866 22 predicates.go:889] 	Container node-cache ready: true, restart count 6351
  I1015 10:28:43.583897 22 predicates.go:887] vsphere-csi-node-zjqvd from kube-system started at 2024-10-14 22:26:07 +0000 UTC (3 container statuses recorded)
  I1015 10:28:43.583931 22 predicates.go:889] 	Container liveness-probe ready: true, restart count 0
  I1015 10:28:43.583940 22 predicates.go:889] 	Container node-driver-registrar ready: true, restart count 0
  I1015 10:28:43.583948 22 predicates.go:889] 	Container vsphere-csi-node ready: true, restart count 0
  I1015 10:28:43.583989 22 predicates.go:887] agnhost-host-aliases6b00111e-d6e0-48ae-86cc-dc34b142ac17 from kubelet-test-6249 started at 2024-10-15 10:28:35 +0000 UTC (1 container statuses recorded)
  I1015 10:28:43.584002 22 predicates.go:889] 	Container agnhost-container ready: false, restart count 0
  I1015 10:28:43.584031 22 predicates.go:887] prometheus-prometheus-node-exporter-kxdsz from prometheus started at 2024-10-15 09:13:58 +0000 UTC (1 container statuses recorded)
  I1015 10:28:43.584040 22 predicates.go:889] 	Container node-exporter ready: true, restart count 0
  I1015 10:28:43.584080 22 predicates.go:887] sonobuoy from sonobuoy started at 2024-10-15 09:11:53 +0000 UTC (1 container statuses recorded)
  I1015 10:28:43.584092 22 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I1015 10:28:43.584101 22 predicates.go:887] sonobuoy-e2e-job-ad162e52225241c9 from sonobuoy started at 2024-10-15 09:11:55 +0000 UTC (2 container statuses recorded)
  I1015 10:28:43.584110 22 predicates.go:889] 	Container e2e ready: true, restart count 0
  I1015 10:28:43.584119 22 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I1015 10:28:43.584128 22 predicates.go:887] sonobuoy-systemd-logs-daemon-set-b8230e29d699455d-ww6dp from sonobuoy started at 2024-10-15 09:11:55 +0000 UTC (2 container statuses recorded)
  I1015 10:28:43.584136 22 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I1015 10:28:43.584180 22 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I1015 10:28:43.584190 22 predicates.go:121] 
  Logging pods the apiserver thinks is on node env1-test-worker-1 before test
  I1015 10:28:43.617279 22 predicates.go:887] filebeat-filebeat-jnfmn from filebeat started at 2024-10-14 22:34:19 +0000 UTC (1 container statuses recorded)
  I1015 10:28:43.617357 22 predicates.go:889] 	Container filebeat ready: true, restart count 0
  I1015 10:28:43.617393 22 predicates.go:887] calico-kube-controllers-b5f8f6849-qb92j from kube-system started at 2024-10-14 22:14:20 +0000 UTC (1 container statuses recorded)
  I1015 10:28:43.617417 22 predicates.go:889] 	Container calico-kube-controllers ready: true, restart count 0
  I1015 10:28:43.617435 22 predicates.go:887] calico-node-dksxm from kube-system started at 2024-10-14 21:55:20 +0000 UTC (1 container statuses recorded)
  I1015 10:28:43.617451 22 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I1015 10:28:43.617468 22 predicates.go:887] kube-proxy-8v72s from kube-system started at 2024-10-14 22:04:07 +0000 UTC (1 container statuses recorded)
  I1015 10:28:43.617484 22 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I1015 10:28:43.617501 22 predicates.go:887] metrics-server-6d9b44975-bljqs from kube-system started at 2024-10-14 22:14:20 +0000 UTC (1 container statuses recorded)
  I1015 10:28:43.617879 22 predicates.go:889] 	Container metrics-server ready: true, restart count 0
  I1015 10:28:43.617911 22 predicates.go:887] nginx-proxy-env1-test-worker-1 from kube-system started at 2024-10-14 22:13:58 +0000 UTC (1 container statuses recorded)
  I1015 10:28:43.617926 22 predicates.go:889] 	Container nginx-proxy ready: true, restart count 0
  I1015 10:28:43.617943 22 predicates.go:887] nodelocaldns-zv48x from kube-system started at 2024-06-27 16:41:33 +0000 UTC (1 container statuses recorded)
  I1015 10:28:43.617958 22 predicates.go:889] 	Container node-cache ready: true, restart count 6068
  I1015 10:28:43.617975 22 predicates.go:887] vsphere-csi-node-w7nm8 from kube-system started at 2024-10-14 22:26:06 +0000 UTC (3 container statuses recorded)
  I1015 10:28:43.618145 22 predicates.go:889] 	Container liveness-probe ready: true, restart count 0
  I1015 10:28:43.618240 22 predicates.go:889] 	Container node-driver-registrar ready: true, restart count 0
  I1015 10:28:43.618410 22 predicates.go:889] 	Container vsphere-csi-node ready: true, restart count 0
  I1015 10:28:43.618478 22 predicates.go:887] prometheus-kube-state-metrics-59b5d58f8f-clnv5 from prometheus started at 2024-10-14 22:14:20 +0000 UTC (1 container statuses recorded)
  I1015 10:28:43.618531 22 predicates.go:889] 	Container kube-state-metrics ready: true, restart count 0
  I1015 10:28:43.618590 22 predicates.go:887] prometheus-prometheus-kube-prometheus-prometheus-0 from prometheus started at 2024-10-14 22:37:40 +0000 UTC (3 container statuses recorded)
  I1015 10:28:43.618606 22 predicates.go:889] 	Container config-reloader ready: true, restart count 0
  I1015 10:28:43.618622 22 predicates.go:889] 	Container prometheus ready: true, restart count 0
  I1015 10:28:43.618637 22 predicates.go:889] 	Container thanos-sidecar ready: true, restart count 0
  I1015 10:28:43.618653 22 predicates.go:887] prometheus-prometheus-node-exporter-w6llj from prometheus started at 2024-07-04 10:34:49 +0000 UTC (1 container statuses recorded)
  I1015 10:28:43.618701 22 predicates.go:889] 	Container node-exporter ready: true, restart count 0
  I1015 10:28:43.618823 22 predicates.go:887] sonobuoy-systemd-logs-daemon-set-b8230e29d699455d-h8ztn from sonobuoy started at 2024-10-15 09:11:55 +0000 UTC (2 container statuses recorded)
  I1015 10:28:43.618909 22 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I1015 10:28:43.618936 22 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I1015 10:28:43.619116 22 predicates.go:121] 
  Logging pods the apiserver thinks is on node env1-test-worker-2 before test
  I1015 10:28:43.646645 22 predicates.go:887] filebeat-filebeat-sbqr4 from filebeat started at 2024-10-14 22:33:46 +0000 UTC (1 container statuses recorded)
  I1015 10:28:43.646715 22 predicates.go:889] 	Container filebeat ready: true, restart count 0
  I1015 10:28:43.646738 22 predicates.go:887] calico-node-6bnv9 from kube-system started at 2024-10-14 21:55:42 +0000 UTC (1 container statuses recorded)
  I1015 10:28:43.646755 22 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I1015 10:28:43.646772 22 predicates.go:887] kube-proxy-znvrf from kube-system started at 2024-10-14 22:04:07 +0000 UTC (1 container statuses recorded)
  I1015 10:28:43.646788 22 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I1015 10:28:43.646805 22 predicates.go:887] nginx-proxy-env1-test-worker-2 from kube-system started at 2024-10-14 22:19:21 +0000 UTC (1 container statuses recorded)
  I1015 10:28:43.646821 22 predicates.go:889] 	Container nginx-proxy ready: true, restart count 0
  I1015 10:28:43.646838 22 predicates.go:887] nodelocaldns-72wf8 from kube-system started at 2024-06-27 16:41:30 +0000 UTC (1 container statuses recorded)
  I1015 10:28:43.646854 22 predicates.go:889] 	Container node-cache ready: true, restart count 5825
  I1015 10:28:43.646871 22 predicates.go:887] vsphere-csi-node-v7dvf from kube-system started at 2024-10-14 22:26:07 +0000 UTC (3 container statuses recorded)
  I1015 10:28:43.646886 22 predicates.go:889] 	Container liveness-probe ready: true, restart count 0
  I1015 10:28:43.646902 22 predicates.go:889] 	Container node-driver-registrar ready: true, restart count 0
  I1015 10:28:43.646922 22 predicates.go:889] 	Container vsphere-csi-node ready: true, restart count 0
  I1015 10:28:43.646939 22 predicates.go:887] alertmanager-prometheus-kube-prometheus-alertmanager-0 from prometheus started at 2024-10-14 22:37:37 +0000 UTC (2 container statuses recorded)
  I1015 10:28:43.646954 22 predicates.go:889] 	Container alertmanager ready: true, restart count 0
  I1015 10:28:43.646969 22 predicates.go:889] 	Container config-reloader ready: true, restart count 0
  I1015 10:28:43.646986 22 predicates.go:887] prometheus-kube-prometheus-operator-8566d54cfb-2qfmk from prometheus started at 2024-10-14 22:37:37 +0000 UTC (1 container statuses recorded)
  I1015 10:28:43.647061 22 predicates.go:889] 	Container kube-prometheus-stack ready: true, restart count 0
  I1015 10:28:43.647086 22 predicates.go:887] prometheus-prometheus-node-exporter-rwxkp from prometheus started at 2024-08-28 01:04:52 +0000 UTC (1 container statuses recorded)
  I1015 10:28:43.647158 22 predicates.go:889] 	Container node-exporter ready: true, restart count 0
  I1015 10:28:43.647190 22 predicates.go:887] thanos-query-68cb879f99-tgg5c from prometheus started at 2024-10-14 22:39:28 +0000 UTC (1 container statuses recorded)
  I1015 10:28:43.647280 22 predicates.go:889] 	Container query ready: true, restart count 0
  I1015 10:28:43.647365 22 predicates.go:887] sonobuoy-systemd-logs-daemon-set-b8230e29d699455d-t6kdt from sonobuoy started at 2024-10-15 09:11:55 +0000 UTC (2 container statuses recorded)
  I1015 10:28:43.647502 22 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I1015 10:28:43.647647 22 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I1015 10:28:43.647752 22 predicates.go:887] velero-55bcb7d97d-h6frv from velero started at 2024-10-15 08:07:56 +0000 UTC (1 container statuses recorded)
  I1015 10:28:43.647794 22 predicates.go:889] 	Container velero ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 10/15/24 10:28:43.648
  E1015 10:28:44.579697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:28:45.579638      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:28:46.580182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:28:47.580498      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 10/15/24 10:28:47.732
  STEP: Trying to apply a random label on the found node. @ 10/15/24 10:28:47.802
  STEP: verifying the node has the label kubernetes.io/e2e-4b5194ba-768c-4d22-83d8-045973fcc3cb 42 @ 10/15/24 10:28:47.842
  STEP: Trying to relaunch the pod, now with labels. @ 10/15/24 10:28:47.854
  E1015 10:28:48.581046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:28:49.581984      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-4b5194ba-768c-4d22-83d8-045973fcc3cb off the node env1-test-worker-0 @ 10/15/24 10:28:49.931
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-4b5194ba-768c-4d22-83d8-045973fcc3cb @ 10/15/24 10:28:49.991
  I1015 10:28:50.003087 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3914" for this suite. @ 10/15/24 10:28:50.024
• [6.605 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 10/15/24 10:28:50.053
  I1015 10:28:50.053674 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename custom-resource-definition @ 10/15/24 10:28:50.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:28:50.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:28:50.156
  STEP: fetching the /apis discovery document @ 10/15/24 10:28:50.175
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 10/15/24 10:28:50.18
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 10/15/24 10:28:50.18
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 10/15/24 10:28:50.18
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 10/15/24 10:28:50.184
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 10/15/24 10:28:50.185
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 10/15/24 10:28:50.188
  I1015 10:28:50.188721 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2437" for this suite. @ 10/15/24 10:28:50.207
• [0.173 seconds]
------------------------------
SS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 10/15/24 10:28:50.227
  I1015 10:28:50.227099 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename deployment @ 10/15/24 10:28:50.229
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:28:50.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:28:50.294
  STEP: creating a Deployment @ 10/15/24 10:28:50.317
  I1015 10:28:50.317342 22 deployment.go:507] Creating simple deployment test-deployment-5jlv2
  I1015 10:28:50.348737 22 deployment.go:222] deployment "test-deployment-5jlv2" doesn't have the required revision set
  E1015 10:28:50.581990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:28:51.583013      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Getting /status @ 10/15/24 10:28:52.402
  I1015 10:28:52.412131 22 deployment.go:532] Deployment test-deployment-5jlv2 has Conditions: [{Available True 2024-10-15 10:28:51 +0000 UTC 2024-10-15 10:28:51 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-10-15 10:28:51 +0000 UTC 2024-10-15 10:28:50 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-5jlv2-c8586b885" has successfully progressed.}]
  STEP: updating Deployment Status @ 10/15/24 10:28:52.412
  I1015 10:28:52.436710 22 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.October, 15, 10, 28, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 10, 28, 51, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 15, 10, 28, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 10, 28, 50, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-5jlv2-c8586b885\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 10/15/24 10:28:52.436
  I1015 10:28:52.441560 22 deployment.go:579] Observed &Deployment event: ADDED
  I1015 10:28:52.441731 22 deployment.go:575] Observed Deployment test-deployment-5jlv2 in namespace deployment-7726 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-10-15 10:28:50 +0000 UTC 2024-10-15 10:28:50 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-5jlv2-c8586b885"}
  I1015 10:28:52.442331 22 deployment.go:579] Observed &Deployment event: MODIFIED
  I1015 10:28:52.442467 22 deployment.go:575] Observed Deployment test-deployment-5jlv2 in namespace deployment-7726 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-10-15 10:28:50 +0000 UTC 2024-10-15 10:28:50 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-5jlv2-c8586b885"}
  I1015 10:28:52.442737 22 deployment.go:575] Observed Deployment test-deployment-5jlv2 in namespace deployment-7726 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-10-15 10:28:50 +0000 UTC 2024-10-15 10:28:50 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1015 10:28:52.443468 22 deployment.go:579] Observed &Deployment event: MODIFIED
  I1015 10:28:52.443555 22 deployment.go:575] Observed Deployment test-deployment-5jlv2 in namespace deployment-7726 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-10-15 10:28:50 +0000 UTC 2024-10-15 10:28:50 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1015 10:28:52.443603 22 deployment.go:575] Observed Deployment test-deployment-5jlv2 in namespace deployment-7726 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-10-15 10:28:50 +0000 UTC 2024-10-15 10:28:50 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-5jlv2-c8586b885" is progressing.}
  I1015 10:28:52.444280 22 deployment.go:579] Observed &Deployment event: MODIFIED
  I1015 10:28:52.444435 22 deployment.go:575] Observed Deployment test-deployment-5jlv2 in namespace deployment-7726 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-10-15 10:28:51 +0000 UTC 2024-10-15 10:28:51 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1015 10:28:52.444507 22 deployment.go:575] Observed Deployment test-deployment-5jlv2 in namespace deployment-7726 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-10-15 10:28:51 +0000 UTC 2024-10-15 10:28:50 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-5jlv2-c8586b885" has successfully progressed.}
  I1015 10:28:52.445060 22 deployment.go:579] Observed &Deployment event: MODIFIED
  I1015 10:28:52.445136 22 deployment.go:575] Observed Deployment test-deployment-5jlv2 in namespace deployment-7726 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-10-15 10:28:51 +0000 UTC 2024-10-15 10:28:51 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1015 10:28:52.445167 22 deployment.go:575] Observed Deployment test-deployment-5jlv2 in namespace deployment-7726 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-10-15 10:28:51 +0000 UTC 2024-10-15 10:28:50 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-5jlv2-c8586b885" has successfully progressed.}
  I1015 10:28:52.445216 22 deployment.go:572] Found Deployment test-deployment-5jlv2 in namespace deployment-7726 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1015 10:28:52.445257 22 deployment.go:583] Deployment test-deployment-5jlv2 has an updated status
  STEP: patching the Statefulset Status @ 10/15/24 10:28:52.445
  I1015 10:28:52.445541 22 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1015 10:28:52.470307 22 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 10/15/24 10:28:52.47
  I1015 10:28:52.477371 22 deployment.go:616] Observed &Deployment event: ADDED
  I1015 10:28:52.477874 22 deployment.go:612] Observed deployment test-deployment-5jlv2 in namespace deployment-7726 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-10-15 10:28:50 +0000 UTC 2024-10-15 10:28:50 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-5jlv2-c8586b885"}
  I1015 10:28:52.478617 22 deployment.go:616] Observed &Deployment event: MODIFIED
  I1015 10:28:52.480015 22 deployment.go:612] Observed deployment test-deployment-5jlv2 in namespace deployment-7726 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-10-15 10:28:50 +0000 UTC 2024-10-15 10:28:50 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-5jlv2-c8586b885"}
  I1015 10:28:52.480566 22 deployment.go:612] Observed deployment test-deployment-5jlv2 in namespace deployment-7726 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-10-15 10:28:50 +0000 UTC 2024-10-15 10:28:50 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1015 10:28:52.481312 22 deployment.go:616] Observed &Deployment event: MODIFIED
  I1015 10:28:52.481901 22 deployment.go:612] Observed deployment test-deployment-5jlv2 in namespace deployment-7726 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-10-15 10:28:50 +0000 UTC 2024-10-15 10:28:50 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1015 10:28:52.482441 22 deployment.go:612] Observed deployment test-deployment-5jlv2 in namespace deployment-7726 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-10-15 10:28:50 +0000 UTC 2024-10-15 10:28:50 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-5jlv2-c8586b885" is progressing.}
  I1015 10:28:52.483235 22 deployment.go:616] Observed &Deployment event: MODIFIED
  I1015 10:28:52.483859 22 deployment.go:612] Observed deployment test-deployment-5jlv2 in namespace deployment-7726 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-10-15 10:28:51 +0000 UTC 2024-10-15 10:28:51 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1015 10:28:52.484540 22 deployment.go:612] Observed deployment test-deployment-5jlv2 in namespace deployment-7726 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-10-15 10:28:51 +0000 UTC 2024-10-15 10:28:50 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-5jlv2-c8586b885" has successfully progressed.}
  I1015 10:28:52.485517 22 deployment.go:616] Observed &Deployment event: MODIFIED
  I1015 10:28:52.486570 22 deployment.go:612] Observed deployment test-deployment-5jlv2 in namespace deployment-7726 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-10-15 10:28:51 +0000 UTC 2024-10-15 10:28:51 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1015 10:28:52.487520 22 deployment.go:612] Observed deployment test-deployment-5jlv2 in namespace deployment-7726 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-10-15 10:28:51 +0000 UTC 2024-10-15 10:28:50 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-5jlv2-c8586b885" has successfully progressed.}
  I1015 10:28:52.488392 22 deployment.go:612] Observed deployment test-deployment-5jlv2 in namespace deployment-7726 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1015 10:28:52.489461 22 deployment.go:616] Observed &Deployment event: MODIFIED
  I1015 10:28:52.490098 22 deployment.go:609] Found deployment test-deployment-5jlv2 in namespace deployment-7726 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I1015 10:28:52.490793 22 deployment.go:620] Deployment test-deployment-5jlv2 has a patched status
  I1015 10:28:52.507114 22 deployment.go:633] Deployment "test-deployment-5jlv2":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-5jlv2",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7726",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ef3a7baa-96c0-4ff0-a97f-10e37dec8034",
      ResourceVersion: (string) (len=8) "53479046",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864584930,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864584930,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864584932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864584932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864584932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864584932,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=55) "Found new replica set \"test-deployment-5jlv2-c8586b885\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1015 10:28:52.523291 22 deployment.go:39] New ReplicaSet "test-deployment-5jlv2-c8586b885" of Deployment "test-deployment-5jlv2":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-5jlv2-c8586b885",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7726",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1aa8bb88-dfc8-4e37-93ec-796883b0611e",
      ResourceVersion: (string) (len=8) "53479040",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864584930,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-5jlv2",
          UID: (types.UID) (len=36) "ef3a7baa-96c0-4ff0-a97f-10e37dec8034",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864584930,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 65 66 33  |k:{\"uid\":\"ef3|
              00000120  61 37 62 61 61 2d 39 36  63 30 2d 34 66 66 30 2d  |a7baa-96c0-4ff0-|
              00000130  61 39 37 66 2d 31 30 65  33 37 64 65 63 38 30 33  |a97f-10e37dec803|
              00000140  34 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |4\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864584931,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1015 10:28:52.541089 22 deployment.go:67] Pod "test-deployment-5jlv2-c8586b885-xt4zl" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "test-deployment-5jlv2-c8586b885-xt4zl",
      GenerateName: (string) (len=32) "test-deployment-5jlv2-c8586b885-",
      Namespace: (string) (len=15) "deployment-7726",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "38795de3-d48b-420b-a9aa-cd73195f7b60",
      ResourceVersion: (string) (len=8) "53479039",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864584930,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "0f0dd5eb93aa29d3d01df8080e86ea178f61d1c69469b1c5411acb3bd830674c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.233.118.35/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.233.118.35/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "test-deployment-5jlv2-c8586b885",
          UID: (types.UID) (len=36) "1aa8bb88-dfc8-4e37-93ec-796883b0611e",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864584930,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 31 61 61 38 62 62 38  38 2d 64 66 63 38 2d 34  |"1aa8bb88-dfc8-4|
              000000a0  65 33 37 2d 39 33 65 63  2d 37 39 36 38 38 33 62  |e37-93ec-796883b|
              000000b0  30 36 31 31 65 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |0611e\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864584931,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864584931,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 31 31 38  2e 33 35 5c 22 7d 22 3a  |.233.118.35\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cj9j6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cj9j6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864584931,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864584930,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864584931,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864584931,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864584930,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.200",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.200"
        }
      },
      PodIP: (string) (len=13) "10.233.118.35",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.118.35"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864584930,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864584931,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://bb5eb7943d07e691403fcfb8d1c7426c22e4db429747336e5d24086ae6086582",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1015 10:28:52.551726 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7726" for this suite. @ 10/15/24 10:28:52.564
• [2.352 seconds]
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 10/15/24 10:28:52.578
  I1015 10:28:52.578728 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename aggregator @ 10/15/24 10:28:52.58
  E1015 10:28:52.583700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:28:52.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:28:52.664
  I1015 10:28:52.676758 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Registering the sample API server. @ 10/15/24 10:28:52.678
  E1015 10:28:53.583888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:28:54.585095      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:28:54.808639 22 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I1015 10:28:54.944658 22 deployment.go:222] deployment "sample-apiserver-deployment" doesn't have the required revision set
  E1015 10:28:55.584775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:28:56.587620      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:28:57.081916 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 15, 10, 28, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 10, 28, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 15, 10, 28, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 10, 28, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1015 10:28:57.588332      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:28:58.588349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:28:59.089958 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 15, 10, 28, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 10, 28, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 15, 10, 28, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 10, 28, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1015 10:28:59.588757      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:29:00.589031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:29:01.090441 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 15, 10, 28, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 10, 28, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 15, 10, 28, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 10, 28, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1015 10:29:01.590098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:29:02.590681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:29:03.100744 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 15, 10, 28, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 10, 28, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 15, 10, 28, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 10, 28, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1015 10:29:03.590723      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:29:04.591151      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:29:05.092270 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 15, 10, 28, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 10, 28, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 15, 10, 28, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 10, 28, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1015 10:29:05.591708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:29:06.591695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:29:07.098409 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 15, 10, 28, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 10, 28, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 15, 10, 28, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 10, 28, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1015 10:29:07.591829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:29:08.592407      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:29:09.091689 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 15, 10, 28, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 10, 28, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 15, 10, 28, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 10, 28, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1015 10:29:09.592486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:29:10.592762      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:29:11.091954 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 15, 10, 28, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 10, 28, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 15, 10, 28, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 10, 28, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1015 10:29:11.593614      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:29:12.593815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:29:13.090944 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 15, 10, 28, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 10, 28, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 15, 10, 28, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 10, 28, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1015 10:29:13.594102      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:29:14.594816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:29:15.092816 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 15, 10, 28, 54, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 10, 28, 54, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 15, 10, 28, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 10, 28, 54, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1015 10:29:15.595479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:29:16.596858      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:29:17.247880 22 aggregator.go:755] Waited 143.016557ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 10/15/24 10:29:17.368
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 10/15/24 10:29:17.378
  STEP: List APIServices @ 10/15/24 10:29:17.392
  I1015 10:29:17.410210 22 aggregator.go:556] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 10/15/24 10:29:17.41
  I1015 10:29:17.453659 22 aggregator.go:581] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 10/15/24 10:29:17.453
  I1015 10:29:17.485073 22 aggregator.go:607] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.October, 15, 10, 29, 17, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 10/15/24 10:29:17.485
  I1015 10:29:17.493269 22 aggregator.go:625] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-10-15 10:29:17 +0000 UTC Passed all checks passed}
  I1015 10:29:17.493420 22 aggregator.go:621] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1015 10:29:17.493503 22 aggregator.go:631] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 10/15/24 10:29:17.493
  I1015 10:29:17.513116 22 aggregator.go:647] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-1175986256" @ 10/15/24 10:29:17.513
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 10/15/24 10:29:17.533
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 10/15/24 10:29:17.548
  STEP: Patch APIService Status @ 10/15/24 10:29:17.554
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 10/15/24 10:29:17.57
  I1015 10:29:17.584341 22 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-10-15 10:29:17 +0000 UTC Passed all checks passed}
  I1015 10:29:17.584563 22 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1015 10:29:17.584756 22 aggregator.go:721] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I1015 10:29:17.585166 22 aggregator.go:731] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 10/15/24 10:29:17.585
  E1015 10:29:17.597741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Confirm that the generated APIService has been deleted @ 10/15/24 10:29:17.614
  I1015 10:29:17.614580 22 aggregator.go:792] Requesting list of APIServices to confirm quantity
  I1015 10:29:17.624632 22 aggregator.go:802] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I1015 10:29:17.624721 22 aggregator.go:744] APIService v1alpha1.wardle.example.com has been deleted.
  I1015 10:29:18.045516 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-6578" for this suite. @ 10/15/24 10:29:18.059
• [25.500 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 10/15/24 10:29:18.079
  I1015 10:29:18.079273 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename emptydir-wrapper @ 10/15/24 10:29:18.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:29:18.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:29:18.158
  STEP: Creating 50 configmaps @ 10/15/24 10:29:18.165
  E1015 10:29:18.598427      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 10/15/24 10:29:18.811
  I1015 10:29:18.891650 22 resource.go:87] Pod name wrapped-volume-race-824075f9-6013-4614-a0dc-6a85246e63c1: Found 0 pods out of 5
  E1015 10:29:19.598910      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:29:20.599871      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:29:21.600797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:29:22.601360      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:29:23.601931      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:29:23.913438 22 resource.go:87] Pod name wrapped-volume-race-824075f9-6013-4614-a0dc-6a85246e63c1: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 10/15/24 10:29:23.913
  STEP: Creating RC which spawns configmap-volume pods @ 10/15/24 10:29:24.01
  I1015 10:29:24.062769 22 resource.go:87] Pod name wrapped-volume-race-3a49b0eb-fcaa-4c77-894d-09e6d95c45ae: Found 0 pods out of 5
  E1015 10:29:24.602649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:29:25.603483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:29:26.603947      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:29:27.604221      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:29:28.604885      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:29:29.079247 22 resource.go:87] Pod name wrapped-volume-race-3a49b0eb-fcaa-4c77-894d-09e6d95c45ae: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 10/15/24 10:29:29.079
  STEP: Creating RC which spawns configmap-volume pods @ 10/15/24 10:29:29.137
  I1015 10:29:29.253163 22 resource.go:87] Pod name wrapped-volume-race-a8262186-32ac-4ae3-ba0b-a1175e2e30a3: Found 1 pods out of 5
  E1015 10:29:29.604916      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:29:30.605496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:29:31.606014      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:29:32.606508      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:29:33.607173      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:29:34.291741 22 resource.go:87] Pod name wrapped-volume-race-a8262186-32ac-4ae3-ba0b-a1175e2e30a3: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 10/15/24 10:29:34.292
  STEP: deleting ReplicationController wrapped-volume-race-a8262186-32ac-4ae3-ba0b-a1175e2e30a3 in namespace emptydir-wrapper-5737, will wait for the garbage collector to delete the pods @ 10/15/24 10:29:34.357
  I1015 10:29:34.467199 22 resources.go:139] Deleting ReplicationController wrapped-volume-race-a8262186-32ac-4ae3-ba0b-a1175e2e30a3 took: 38.370317ms
  E1015 10:29:34.608159      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:29:34.768332 22 resources.go:163] Terminating ReplicationController wrapped-volume-race-a8262186-32ac-4ae3-ba0b-a1175e2e30a3 pods took: 301.135257ms
  E1015 10:29:35.608565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:29:36.608674      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-3a49b0eb-fcaa-4c77-894d-09e6d95c45ae in namespace emptydir-wrapper-5737, will wait for the garbage collector to delete the pods @ 10/15/24 10:29:37.368
  I1015 10:29:37.457000 22 resources.go:139] Deleting ReplicationController wrapped-volume-race-3a49b0eb-fcaa-4c77-894d-09e6d95c45ae took: 28.825329ms
  I1015 10:29:37.558157 22 resources.go:163] Terminating ReplicationController wrapped-volume-race-3a49b0eb-fcaa-4c77-894d-09e6d95c45ae pods took: 101.159584ms
  E1015 10:29:37.609747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:29:38.610099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:29:39.610166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-824075f9-6013-4614-a0dc-6a85246e63c1 in namespace emptydir-wrapper-5737, will wait for the garbage collector to delete the pods @ 10/15/24 10:29:40.158
  I1015 10:29:40.230579 22 resources.go:139] Deleting ReplicationController wrapped-volume-race-824075f9-6013-4614-a0dc-6a85246e63c1 took: 12.005409ms
  I1015 10:29:40.330809 22 resources.go:163] Terminating ReplicationController wrapped-volume-race-824075f9-6013-4614-a0dc-6a85246e63c1 pods took: 100.227666ms
  E1015 10:29:40.611713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:29:41.612699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:29:42.613084      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 10/15/24 10:29:42.731
  I1015 10:29:43.471610 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-5737" for this suite. @ 10/15/24 10:29:43.494
• [25.435 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 10/15/24 10:29:43.515
  I1015 10:29:43.515871 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename gc @ 10/15/24 10:29:43.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:29:43.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:29:43.575
  STEP: create the rc @ 10/15/24 10:29:43.581
  W1015 10:29:43.593310      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1015 10:29:43.614051      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:29:44.614887      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:29:45.615398      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:29:46.616015      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:29:47.616298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:29:48.616455      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 10/15/24 10:29:48.619
  STEP: wait for all pods to be garbage collected @ 10/15/24 10:29:48.647
  E1015 10:29:49.616546      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:29:50.617283      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:29:51.617776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:29:52.618400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:29:53.619150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 10/15/24 10:29:53.681
  I1015 10:29:54.027603 22 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1015 10:29:54.028584 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-137" for this suite. @ 10/15/24 10:29:54.045
• [10.576 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 10/15/24 10:29:54.093
  I1015 10:29:54.093228 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename watch @ 10/15/24 10:29:54.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:29:54.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:29:54.144
  STEP: creating a watch on configmaps with a certain label @ 10/15/24 10:29:54.153
  STEP: creating a new configmap @ 10/15/24 10:29:54.161
  STEP: modifying the configmap once @ 10/15/24 10:29:54.195
  STEP: changing the label value of the configmap @ 10/15/24 10:29:54.223
  STEP: Expecting to observe a delete notification for the watched object @ 10/15/24 10:29:54.249
  I1015 10:29:54.249274 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1402  645f5f50-fe4f-4ea7-ba82-3df73cdf083d 53479987 0 2024-10-15 10:29:54 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-10-15 10:29:54 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1015 10:29:54.249794 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1402  645f5f50-fe4f-4ea7-ba82-3df73cdf083d 53479988 0 2024-10-15 10:29:54 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-10-15 10:29:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1015 10:29:54.250182 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1402  645f5f50-fe4f-4ea7-ba82-3df73cdf083d 53479989 0 2024-10-15 10:29:54 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-10-15 10:29:54 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 10/15/24 10:29:54.25
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 10/15/24 10:29:54.278
  E1015 10:29:54.619353      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:29:55.621161      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:29:56.620901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:29:57.621128      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:29:58.621870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:29:59.622285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:30:00.622766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:30:01.623285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:30:02.623396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:30:03.624381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 10/15/24 10:30:04.279
  STEP: modifying the configmap a third time @ 10/15/24 10:30:04.296
  STEP: deleting the configmap @ 10/15/24 10:30:04.309
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 10/15/24 10:30:04.319
  I1015 10:30:04.319666 22 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1402  645f5f50-fe4f-4ea7-ba82-3df73cdf083d 53480041 0 2024-10-15 10:29:54 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-10-15 10:30:04 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1015 10:30:04.320167 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1402  645f5f50-fe4f-4ea7-ba82-3df73cdf083d 53480042 0 2024-10-15 10:29:54 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-10-15 10:30:04 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1015 10:30:04.320570 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-1402  645f5f50-fe4f-4ea7-ba82-3df73cdf083d 53480043 0 2024-10-15 10:29:54 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-10-15 10:30:04 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1015 10:30:04.320862 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-1402" for this suite. @ 10/15/24 10:30:04.334
• [10.273 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 10/15/24 10:30:04.366
  I1015 10:30:04.366589 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename containers @ 10/15/24 10:30:04.367
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:30:04.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:30:04.411
  STEP: Creating a pod to test override all @ 10/15/24 10:30:04.427
  E1015 10:30:04.625517      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:30:05.626565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:30:06.627393      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:30:07.628134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 10:30:08.5
  I1015 10:30:08.507672 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod client-containers-352881f0-5c65-417f-a4bc-e2b53c72ffcf container agnhost-container: <nil>
  STEP: delete the pod @ 10/15/24 10:30:08.522
  I1015 10:30:08.558239 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-2919" for this suite. @ 10/15/24 10:30:08.571
• [4.223 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 10/15/24 10:30:08.59
  I1015 10:30:08.590917 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename svcaccounts @ 10/15/24 10:30:08.593
  E1015 10:30:08.628260      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:30:08.632
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:30:08.649
  I1015 10:30:08.704183 22 service_accounts.go:253] created pod pod-service-account-defaultsa
  I1015 10:30:08.704246 22 service_accounts.go:267] pod pod-service-account-defaultsa service account token volume mount: true
  I1015 10:30:08.716688 22 service_accounts.go:253] created pod pod-service-account-mountsa
  I1015 10:30:08.716759 22 service_accounts.go:267] pod pod-service-account-mountsa service account token volume mount: true
  I1015 10:30:08.730704 22 service_accounts.go:253] created pod pod-service-account-nomountsa
  I1015 10:30:08.730799 22 service_accounts.go:267] pod pod-service-account-nomountsa service account token volume mount: false
  I1015 10:30:08.740128 22 service_accounts.go:253] created pod pod-service-account-defaultsa-mountspec
  I1015 10:30:08.740199 22 service_accounts.go:267] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I1015 10:30:08.751446 22 service_accounts.go:253] created pod pod-service-account-mountsa-mountspec
  I1015 10:30:08.751566 22 service_accounts.go:267] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I1015 10:30:08.772950 22 service_accounts.go:253] created pod pod-service-account-nomountsa-mountspec
  I1015 10:30:08.773035 22 service_accounts.go:267] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I1015 10:30:08.785920 22 service_accounts.go:253] created pod pod-service-account-defaultsa-nomountspec
  I1015 10:30:08.786110 22 service_accounts.go:267] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I1015 10:30:08.821465 22 service_accounts.go:253] created pod pod-service-account-mountsa-nomountspec
  I1015 10:30:08.821555 22 service_accounts.go:267] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I1015 10:30:08.856536 22 service_accounts.go:253] created pod pod-service-account-nomountsa-nomountspec
  I1015 10:30:08.856606 22 service_accounts.go:267] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I1015 10:30:08.856754 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1630" for this suite. @ 10/15/24 10:30:08.887
• [0.326 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 10/15/24 10:30:08.917
  I1015 10:30:08.917608 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename daemonsets @ 10/15/24 10:30:08.919
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:30:09.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:30:09.012
  I1015 10:30:09.109346 22 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I1015 10:30:09.119280 22 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I1015 10:30:09.131123 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:30:09.131198 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:30:09.131230 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:30:09.146589 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1015 10:30:09.146633 22 fixtures.go:130] Node env1-test-worker-0 is running 0 daemon pod, expected 1
  E1015 10:30:09.628898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:30:10.130461 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:30:10.130573 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:30:10.130641 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:30:10.139633 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1015 10:30:10.149356 22 fixtures.go:130] Node env1-test-worker-0 is running 0 daemon pod, expected 1
  E1015 10:30:10.629107      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:30:11.131660 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:30:11.132862 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:30:11.133325 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:30:11.141721 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1015 10:30:11.142406 22 fixtures.go:130] Node env1-test-worker-0 is running 0 daemon pod, expected 1
  E1015 10:30:11.629432      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:30:12.134676 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:30:12.135719 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:30:12.136214 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:30:12.148566 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1015 10:30:12.148838 22 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  I1015 10:30:12.149380 22 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I1015 10:30:12.172516 22 daemon_set.go:102] Updating DaemonSet daemon-set
  E1015 10:30:12.630591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:30:13.631673      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:30:14.632407      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:30:15.233030 22 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I1015 10:30:15.267977 22 daemon_set.go:102] Updating DaemonSet daemon-set
  I1015 10:30:15.268426 22 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I1015 10:30:15.286719 22 daemon_set.go:1178] Wrong image for pod: daemon-set-mfw82. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I1015 10:30:15.286797 22 daemon_set.go:1183] Pod daemon-set-mfw82 is not available
  I1015 10:30:15.318612 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:30:15.318713 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:30:15.318759 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1015 10:30:15.632388      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:30:16.287399 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:30:16.288345 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:30:16.288465 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1015 10:30:16.633146      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:30:17.289194 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:30:17.289720 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:30:17.290226 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1015 10:30:17.632907      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:30:18.291038 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:30:18.292407 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:30:18.293574 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1015 10:30:18.634040      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:30:19.281483 22 daemon_set.go:1183] Pod daemon-set-pffqs is not available
  I1015 10:30:19.300428 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:30:19.300527 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:30:19.300599 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 10/15/24 10:30:19.321
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4711, will wait for the garbage collector to delete the pods @ 10/15/24 10:30:19.321
  I1015 10:30:19.403857 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 22.853839ms
  I1015 10:30:19.505812 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.955404ms
  E1015 10:30:19.635121      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:30:20.636120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:30:21.433117 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1015 10:30:21.433261 22 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1015 10:30:21.437904 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"53480395"},"items":null}

  I1015 10:30:21.442459 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"53480395"},"items":null}

  I1015 10:30:21.478356 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4711" for this suite. @ 10/15/24 10:30:21.491
• [12.617 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 10/15/24 10:30:21.535
  I1015 10:30:21.535487 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename field-validation @ 10/15/24 10:30:21.537
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:30:21.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:30:21.598
  I1015 10:30:21.604340 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  E1015 10:30:21.637118      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:30:22.637197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:30:23.638222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:30:24.638779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:30:25.639016      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:30:26.640516      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:30:27.640973      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:30:28.641067      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:30:29.382577 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3251" for this suite. @ 10/15/24 10:30:29.399
• [7.886 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 10/15/24 10:30:29.424
  I1015 10:30:29.424393 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename projected @ 10/15/24 10:30:29.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:30:29.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:30:29.497
  STEP: Creating a pod to test downward API volume plugin @ 10/15/24 10:30:29.504
  E1015 10:30:29.641736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:30:30.642124      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:30:31.642859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:30:32.643766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 10:30:33.55
  I1015 10:30:33.559334 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod downwardapi-volume-e6159755-d8e2-40ba-ba64-993c35d25642 container client-container: <nil>
  STEP: delete the pod @ 10/15/24 10:30:33.587
  I1015 10:30:33.640755 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  E1015 10:30:33.643918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "projected-9441" for this suite. @ 10/15/24 10:30:33.671
• [4.269 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 10/15/24 10:30:33.693
  I1015 10:30:33.693809 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename emptydir @ 10/15/24 10:30:33.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:30:33.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:30:33.757
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 10/15/24 10:30:33.776
  E1015 10:30:34.644474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:30:35.645115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:30:36.645763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:30:37.646328      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 10:30:37.845
  I1015 10:30:37.858617 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-ae5594de-e0e2-47c1-9f78-4f30f471745f container test-container: <nil>
  STEP: delete the pod @ 10/15/24 10:30:37.876
  I1015 10:30:37.922300 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8412" for this suite. @ 10/15/24 10:30:37.933
• [4.264 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:789
  STEP: Creating a kubernetes client @ 10/15/24 10:30:37.957
  I1015 10:30:37.957651 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename services @ 10/15/24 10:30:37.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:30:38.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:30:38.022
  STEP: creating service endpoint-test2 in namespace services-8661 @ 10/15/24 10:30:38.029
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8661 to expose endpoints map[] @ 10/15/24 10:30:38.057
  I1015 10:30:38.075610 22 service.go:4226] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  E1015 10:30:38.646578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:30:39.100507 22 service.go:4258] successfully validated that service endpoint-test2 in namespace services-8661 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-8661 @ 10/15/24 10:30:39.1
  E1015 10:30:39.647645      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:30:40.647685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8661 to expose endpoints map[pod1:[80]] @ 10/15/24 10:30:41.141
  I1015 10:30:41.164980 22 service.go:4258] successfully validated that service endpoint-test2 in namespace services-8661 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 10/15/24 10:30:41.165
  I1015 10:30:41.165148 22 resource.go:361] Creating new exec pod
  E1015 10:30:41.647893      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:30:42.648349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:30:43.648824      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:30:44.195000 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-8661 exec execpodmm6cp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1015 10:30:44.603024 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I1015 10:30:44.603128 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1015 10:30:44.603262 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-8661 exec execpodmm6cp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.53.51 80'
  E1015 10:30:44.649000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:30:44.910203 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.53.51 80\nConnection to 10.233.53.51 80 port [tcp/http] succeeded!\n"
  I1015 10:30:44.910293 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-8661 @ 10/15/24 10:30:44.91
  E1015 10:30:45.649334      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:30:46.649631      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8661 to expose endpoints map[pod1:[80] pod2:[80]] @ 10/15/24 10:30:46.951
  I1015 10:30:46.991242 22 service.go:4258] successfully validated that service endpoint-test2 in namespace services-8661 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 10/15/24 10:30:46.991
  E1015 10:30:47.650278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:30:47.993077 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-8661 exec execpodmm6cp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1015 10:30:48.332802 22 builder.go:146] stderr: "+ nc+ echo hostName\n -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I1015 10:30:48.332895 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1015 10:30:48.333062 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-8661 exec execpodmm6cp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.53.51 80'
  E1015 10:30:48.650928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:30:48.660932 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.53.51 80\nConnection to 10.233.53.51 80 port [tcp/http] succeeded!\n"
  I1015 10:30:48.661012 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-8661 @ 10/15/24 10:30:48.661
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8661 to expose endpoints map[pod2:[80]] @ 10/15/24 10:30:48.712
  E1015 10:30:49.651975      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:30:49.764242 22 service.go:4258] successfully validated that service endpoint-test2 in namespace services-8661 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 10/15/24 10:30:49.764
  E1015 10:30:50.652855      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:30:50.765360 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-8661 exec execpodmm6cp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1015 10:30:51.106618 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I1015 10:30:51.106754 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1015 10:30:51.106949 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-8661 exec execpodmm6cp -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.53.51 80'
  I1015 10:30:51.498797 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.53.51 80\nConnection to 10.233.53.51 80 port [tcp/http] succeeded!\n"
  I1015 10:30:51.498904 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-8661 @ 10/15/24 10:30:51.499
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-8661 to expose endpoints map[] @ 10/15/24 10:30:51.561
  I1015 10:30:51.585539 22 service.go:4258] successfully validated that service endpoint-test2 in namespace services-8661 exposes endpoints map[]
  I1015 10:30:51.630314 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-8661" for this suite. @ 10/15/24 10:30:51.645
  E1015 10:30:51.652868      22 retrywatcher.go:129] "Watch failed" err="context canceled"
• [13.722 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 10/15/24 10:30:51.683
  I1015 10:30:51.684147 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename namespaces @ 10/15/24 10:30:51.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:30:51.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:30:51.767
  STEP: Updating Namespace "namespaces-7556" @ 10/15/24 10:30:51.775
  I1015 10:30:51.821595 22 namespace.go:389] Namespace "namespaces-7556" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"a8786c21-5c35-4e4c-95a4-da91475f5e43", "kubernetes.io/metadata.name":"namespaces-7556", "namespaces-7556":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I1015 10:30:51.823507 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7556" for this suite. @ 10/15/24 10:30:51.849
• [0.190 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 10/15/24 10:30:51.879
  I1015 10:30:51.879896 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename configmap @ 10/15/24 10:30:51.882
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:30:51.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:30:51.983
  STEP: Creating configMap with name configmap-test-volume-7e91b8db-032d-4eec-9409-ded109f9968c @ 10/15/24 10:30:51.993
  STEP: Creating a pod to test consume configMaps @ 10/15/24 10:30:52.005
  E1015 10:30:52.654399      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:30:53.654541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:30:54.654689      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:30:55.655763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 10:30:56.062
  I1015 10:30:56.070295 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-configmaps-23ad5bcd-b6cb-4d66-ac16-6302e9760548 container agnhost-container: <nil>
  STEP: delete the pod @ 10/15/24 10:30:56.085
  I1015 10:30:56.120213 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2886" for this suite. @ 10/15/24 10:30:56.134
• [4.272 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 10/15/24 10:30:56.161
  I1015 10:30:56.161738 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename watch @ 10/15/24 10:30:56.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:30:56.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:30:56.212
  STEP: getting a starting resourceVersion @ 10/15/24 10:30:56.219
  STEP: starting a background goroutine to produce watch events @ 10/15/24 10:30:56.226
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 10/15/24 10:30:56.227
  E1015 10:30:56.656276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:30:57.657020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:30:58.657343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:30:58.973552 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4967" for this suite. @ 10/15/24 10:30:59.025
• [2.924 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 10/15/24 10:30:59.085
  I1015 10:30:59.085694 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename configmap @ 10/15/24 10:30:59.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:30:59.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:30:59.13
  STEP: Creating configMap that has name configmap-test-emptyKey-49e1a038-a83a-4de4-ae80-51a69cf0be71 @ 10/15/24 10:30:59.136
  I1015 10:30:59.144726 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5293" for this suite. @ 10/15/24 10:30:59.153
• [0.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:234
  STEP: Creating a kubernetes client @ 10/15/24 10:30:59.175
  I1015 10:30:59.175628 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename resourcequota @ 10/15/24 10:30:59.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:30:59.221
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:30:59.228
  STEP: Counting existing ResourceQuota @ 10/15/24 10:30:59.236
  E1015 10:30:59.657320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:31:00.657448      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:31:01.657880      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:31:02.658745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:31:03.660301      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 10/15/24 10:31:04.258
  STEP: Ensuring resource quota status is calculated @ 10/15/24 10:31:04.284
  E1015 10:31:04.660156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:31:05.660290      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 10/15/24 10:31:06.294
  STEP: Ensuring ResourceQuota status captures the pod usage @ 10/15/24 10:31:06.331
  E1015 10:31:06.660927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:31:07.661642      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 10/15/24 10:31:08.342
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 10/15/24 10:31:08.351
  STEP: Ensuring a pod cannot update its resource requirements @ 10/15/24 10:31:08.357
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 10/15/24 10:31:08.387
  E1015 10:31:08.662617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:31:09.662885      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 10/15/24 10:31:10.41
  STEP: Ensuring resource quota status released the pod usage @ 10/15/24 10:31:10.465
  E1015 10:31:10.663010      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:31:11.663699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:31:12.481065 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2704" for this suite. @ 10/15/24 10:31:12.51
• [13.357 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 10/15/24 10:31:12.534
  I1015 10:31:12.534480 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename csi-storageclass @ 10/15/24 10:31:12.536
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:31:12.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:31:12.603
  STEP: Creating a StorageClass @ 10/15/24 10:31:12.61
  STEP: Get StorageClass "e2e-cx4x4" @ 10/15/24 10:31:12.622
  STEP: Patching the StorageClass "e2e-cx4x4" @ 10/15/24 10:31:12.63
  STEP: Delete StorageClass "e2e-cx4x4" @ 10/15/24 10:31:12.656
  E1015 10:31:12.664200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Confirm deletion of StorageClass "e2e-cx4x4" @ 10/15/24 10:31:12.674
  STEP: Create a replacement StorageClass @ 10/15/24 10:31:12.688
  STEP: Updating StorageClass "e2e-v2-8p8f6" @ 10/15/24 10:31:12.703
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-8p8f6=updated" @ 10/15/24 10:31:12.731
  STEP: Deleting StorageClass "e2e-v2-8p8f6" via DeleteCollection @ 10/15/24 10:31:12.74
  STEP: Confirm deletion of StorageClass "e2e-v2-8p8f6" @ 10/15/24 10:31:12.762
  I1015 10:31:12.772845 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-842" for this suite. @ 10/15/24 10:31:12.786
• [0.271 seconds]
------------------------------
S
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 10/15/24 10:31:12.805
  I1015 10:31:12.806849 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename prestop @ 10/15/24 10:31:12.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:31:12.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:31:12.854
  STEP: Creating server pod server in namespace prestop-6350 @ 10/15/24 10:31:12.861
  STEP: Waiting for pods to come up. @ 10/15/24 10:31:12.884
  E1015 10:31:13.664940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:31:14.665294      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating tester pod tester in namespace prestop-6350 @ 10/15/24 10:31:14.93
  E1015 10:31:15.665404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:31:16.666438      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting pre-stop pod @ 10/15/24 10:31:16.971
  E1015 10:31:17.667496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:31:18.667830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:31:19.668011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:31:20.668290      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:31:21.668912      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:31:22.007458 22 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 10/15/24 10:31:22.008
  I1015 10:31:22.029592 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-6350" for this suite. @ 10/15/24 10:31:22.051
• [9.263 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 10/15/24 10:31:22.068
  I1015 10:31:22.068652 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename webhook @ 10/15/24 10:31:22.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:31:22.111
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:31:22.117
  STEP: Setting up server cert @ 10/15/24 10:31:22.179
  E1015 10:31:22.669080      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/15/24 10:31:23.13
  STEP: Deploying the webhook pod @ 10/15/24 10:31:23.143
  STEP: Wait for the deployment to be ready @ 10/15/24 10:31:23.169
  I1015 10:31:23.191874 22 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1015 10:31:23.669655      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:31:24.670170      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/15/24 10:31:25.213
  STEP: Verifying the service has paired with the endpoint @ 10/15/24 10:31:25.227
  E1015 10:31:25.671653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:31:26.228862 22 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 10/15/24 10:31:26.24
  STEP: Creating a custom resource definition that should be denied by the webhook @ 10/15/24 10:31:26.268
  I1015 10:31:26.268737 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  I1015 10:31:26.396070 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7775" for this suite. @ 10/15/24 10:31:26.43
  STEP: Destroying namespace "webhook-markers-3270" for this suite. @ 10/15/24 10:31:26.456
• [4.401 seconds]
------------------------------
SSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 10/15/24 10:31:26.471
  I1015 10:31:26.471117 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename limitrange @ 10/15/24 10:31:26.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:31:26.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:31:26.555
  STEP: Creating a LimitRange @ 10/15/24 10:31:26.564
  STEP: Setting up watch @ 10/15/24 10:31:26.564
  E1015 10:31:26.672305      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Submitting a LimitRange @ 10/15/24 10:31:26.676
  STEP: Verifying LimitRange creation was observed @ 10/15/24 10:31:26.694
  STEP: Fetching the LimitRange to ensure it has proper values @ 10/15/24 10:31:26.695
  I1015 10:31:26.703970 22 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I1015 10:31:26.705939 22 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 10/15/24 10:31:26.707
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 10/15/24 10:31:26.722
  I1015 10:31:26.731863 22 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I1015 10:31:26.731950 22 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 10/15/24 10:31:26.731
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 10/15/24 10:31:26.758
  I1015 10:31:26.776781 22 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I1015 10:31:26.777732 22 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 10/15/24 10:31:26.778
  STEP: Failing to create a Pod with more than max resources @ 10/15/24 10:31:26.788
  STEP: Updating a LimitRange @ 10/15/24 10:31:26.798
  STEP: Verifying LimitRange updating is effective @ 10/15/24 10:31:26.816
  E1015 10:31:27.673504      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:31:28.673634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod with less than former min resources @ 10/15/24 10:31:28.825
  STEP: Failing to create a Pod with more than max resources @ 10/15/24 10:31:28.838
  STEP: Deleting a LimitRange @ 10/15/24 10:31:28.842
  STEP: Verifying the LimitRange was deleted @ 10/15/24 10:31:28.868
  E1015 10:31:29.673962      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:31:30.675392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:31:31.675172      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:31:32.675797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:31:33.675713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:31:33.895401 22 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 10/15/24 10:31:33.895
  I1015 10:31:33.945169 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-7499" for this suite. @ 10/15/24 10:31:33.968
• [7.548 seconds]
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 10/15/24 10:31:34.019
  I1015 10:31:34.019937 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename apf @ 10/15/24 10:31:34.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:31:34.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:31:34.112
  STEP: getting /apis @ 10/15/24 10:31:34.12
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 10/15/24 10:31:34.134
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 10/15/24 10:31:34.137
  STEP: creating @ 10/15/24 10:31:34.14
  STEP: getting @ 10/15/24 10:31:34.261
  STEP: listing @ 10/15/24 10:31:34.299
  STEP: watching @ 10/15/24 10:31:34.318
  I1015 10:31:34.318487 22 flowcontrol.go:394] starting watch
  STEP: patching @ 10/15/24 10:31:34.321
  STEP: updating @ 10/15/24 10:31:34.334
  I1015 10:31:34.364722 22 flowcontrol.go:422] waiting for watch events with expected annotations
  STEP: getting /status @ 10/15/24 10:31:34.364
  STEP: patching /status @ 10/15/24 10:31:34.377
  STEP: updating /status @ 10/15/24 10:31:34.395
  STEP: deleting @ 10/15/24 10:31:34.488
  STEP: deleting a collection @ 10/15/24 10:31:34.532
  I1015 10:31:34.596460 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-6824" for this suite. @ 10/15/24 10:31:34.614
• [0.615 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:177
  STEP: Creating a kubernetes client @ 10/15/24 10:31:34.641
  I1015 10:31:34.642291 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename crd-webhook @ 10/15/24 10:31:34.644
  E1015 10:31:34.676012      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:31:34.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:31:34.775
  STEP: Setting up server cert @ 10/15/24 10:31:34.786
  E1015 10:31:35.676769      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 10/15/24 10:31:35.683
  STEP: Deploying the custom resource conversion webhook pod @ 10/15/24 10:31:35.692
  STEP: Wait for the deployment to be ready @ 10/15/24 10:31:35.715
  I1015 10:31:35.728026 22 deployment.go:222] new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  E1015 10:31:36.677491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:31:37.677874      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:31:37.768728 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 15, 10, 31, 35, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 10, 31, 35, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 15, 10, 31, 35, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 10, 31, 35, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-6c44f5d846\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1015 10:31:38.678020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:31:39.678715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/15/24 10:31:39.779
  STEP: Verifying the service has paired with the endpoint @ 10/15/24 10:31:39.821
  E1015 10:31:40.679275      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:31:40.821835 22 util.go:427] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I1015 10:31:40.842952 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  E1015 10:31:41.680474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:31:42.681307      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:31:43.682159      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:31:44.682469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:31:45.682791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:31:46.683689      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:31:47.684756      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 10/15/24 10:31:48.543
  STEP: Create a v2 custom resource @ 10/15/24 10:31:48.578
  STEP: List CRs in v1 @ 10/15/24 10:31:48.681
  E1015 10:31:48.685609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: List CRs in v2 @ 10/15/24 10:31:48.692
  I1015 10:31:49.336050 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-1699" for this suite. @ 10/15/24 10:31:49.349
• [14.749 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 10/15/24 10:31:49.391
  I1015 10:31:49.391308 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename replicaset @ 10/15/24 10:31:49.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:31:49.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:31:49.484
  STEP: Create a ReplicaSet @ 10/15/24 10:31:49.5
  STEP: Verify that the required pods have come up @ 10/15/24 10:31:49.52
  I1015 10:31:49.531282 22 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  E1015 10:31:49.687311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:31:50.688170      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:31:51.688785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:31:52.689021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:31:53.689907      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:31:54.552957 22 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 10/15/24 10:31:54.553
  I1015 10:31:54.569268 22 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 10/15/24 10:31:54.569
  STEP: DeleteCollection of the ReplicaSets @ 10/15/24 10:31:54.592
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 10/15/24 10:31:54.651
  I1015 10:31:54.679379 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  E1015 10:31:54.690464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replicaset-525" for this suite. @ 10/15/24 10:31:54.712
• [5.393 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 10/15/24 10:31:54.807
  I1015 10:31:54.807976 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename aggregateddiscovery @ 10/15/24 10:31:54.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:31:54.95
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:31:54.959
  I1015 10:31:54.970059 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  E1015 10:31:55.691354      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:31:56.692505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:31:57.693015      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:31:58.692855      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:31:59.693968      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:00.694734      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:01.695647      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:02.696467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:32:03.126517 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-6417" for this suite. @ 10/15/24 10:32:03.149
• [8.358 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:324
  STEP: Creating a kubernetes client @ 10/15/24 10:32:03.176
  I1015 10:32:03.177299 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename statefulset @ 10/15/24 10:32:03.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:32:03.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:32:03.228
  STEP: Creating service test in namespace statefulset-1579 @ 10/15/24 10:32:03.233
  STEP: Creating a new StatefulSet @ 10/15/24 10:32:03.25
  I1015 10:32:03.284481 22 wait.go:40] Found 0 stateful pods, waiting for 3
  E1015 10:32:03.697216      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:04.697958      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:05.699265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:06.699341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:07.699844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:08.700966      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:09.701196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:10.701657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:11.702213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:12.702639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:32:13.289833 22 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1015 10:32:13.289932 22 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1015 10:32:13.289957 22 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I1015 10:32:13.313940 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=statefulset-1579 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1015 10:32:13.662828 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1015 10:32:13.662916 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1015 10:32:13.662946 22 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 10/15/24 10:32:13.691
  E1015 10:32:13.703860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:32:13.732963 22 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 10/15/24 10:32:13.733
  E1015 10:32:14.704042      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:15.704874      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:16.705697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:17.706152      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:18.706283      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:19.706705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:20.707229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:21.707603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:22.707840      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:23.708782      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 10/15/24 10:32:23.753
  I1015 10:32:23.762700 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=statefulset-1579 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1015 10:32:24.075184 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1015 10:32:24.075273 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1015 10:32:24.075304 22 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E1015 10:32:24.709376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:25.709554      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:26.710489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:27.710685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:28.710896      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:29.711193      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:30.712088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:31.712397      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:32.712622      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:33.712628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:32:34.113994 22 wait.go:158] Waiting for StatefulSet statefulset-1579/ss2 to complete update
  E1015 10:32:34.715791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:35.716025      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:36.717341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:37.717976      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:38.718792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:39.719345      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:40.719868      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:41.720619      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:42.721565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:43.722449      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 10/15/24 10:32:44.119
  I1015 10:32:44.119724 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=statefulset-1579 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1015 10:32:44.420436 22 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1015 10:32:44.420522 22 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1015 10:32:44.420554 22 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E1015 10:32:44.723500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:45.723973      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:46.724471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:47.725013      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:48.726163      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:49.726788      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:50.726888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:51.727638      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:52.727886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:53.728190      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:32:54.475139 22 statefulset.go:2507] Updating stateful set ss2
  E1015 10:32:54.728498      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:55.729192      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:56.730239      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:57.731879      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:58.731502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:32:59.731544      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:00.731811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:01.732029      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:02.732099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:03.732301      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 10/15/24 10:33:04.508
  I1015 10:33:04.518239 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=statefulset-1579 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E1015 10:33:04.733122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:33:04.874178 22 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1015 10:33:04.874335 22 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1015 10:33:04.874384 22 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E1015 10:33:05.734050      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:06.734684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:07.735328      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:08.735639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:09.736036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:10.736771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:11.736924      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:12.739764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:13.740081      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:14.740337      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:33:14.943512 22 wait.go:158] Waiting for StatefulSet statefulset-1579/ss2 to complete update
  E1015 10:33:15.740750      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:16.741655      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:17.741827      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:18.742011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:19.742440      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:20.742314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:21.743326      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:22.743841      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:23.744746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:24.745091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:33:24.975338 22 statefulset.go:138] Deleting all statefulset in ns statefulset-1579
  I1015 10:33:24.988000 22 rest.go:150] Scaling statefulset ss2 to 0
  E1015 10:33:25.745892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:26.746269      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:27.747341      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:28.747904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:29.748313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:30.748574      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:31.749548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:32.749736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:33.749899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:34.750290      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:33:35.031744 22 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1015 10:33:35.039691 22 rest.go:88] Deleting statefulset ss2
  I1015 10:33:35.064600 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1579" for this suite. @ 10/15/24 10:33:35.074
• [91.913 seconds]
------------------------------
S
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 10/15/24 10:33:35.09
  I1015 10:33:35.090565 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename sysctl @ 10/15/24 10:33:35.093
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:33:35.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:33:35.154
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 10/15/24 10:33:35.161
  STEP: Watching for error events or started pod @ 10/15/24 10:33:35.185
  E1015 10:33:35.750832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:36.751771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 10/15/24 10:33:37.194
  E1015 10:33:37.752467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:38.752580      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 10/15/24 10:33:39.222
  STEP: Getting logs from the pod @ 10/15/24 10:33:39.222
  STEP: Checking that the sysctl is actually updated @ 10/15/24 10:33:39.265
  I1015 10:33:39.266106 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-4655" for this suite. @ 10/15/24 10:33:39.282
• [4.211 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:779
  STEP: Creating a kubernetes client @ 10/15/24 10:33:39.301
  I1015 10:33:39.301792 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename services @ 10/15/24 10:33:39.303
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:33:39.39
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:33:39.397
  I1015 10:33:39.420707 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7752" for this suite. @ 10/15/24 10:33:39.435
• [0.150 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 10/15/24 10:33:39.484
  I1015 10:33:39.485130 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename security-context @ 10/15/24 10:33:39.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:33:39.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:33:39.543
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 10/15/24 10:33:39.549
  E1015 10:33:39.753446      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:40.754073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:41.754043      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:42.754704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 10:33:43.597
  I1015 10:33:43.605111 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod security-context-9fffadfe-93b4-4413-a4ca-ff9122cf1b16 container test-container: <nil>
  STEP: delete the pod @ 10/15/24 10:33:43.621
  I1015 10:33:43.680003 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-8599" for this suite. @ 10/15/24 10:33:43.694
• [4.246 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 10/15/24 10:33:43.732
  I1015 10:33:43.732116 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename cronjob @ 10/15/24 10:33:43.733
  E1015 10:33:43.755157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:33:43.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:33:43.803
  STEP: Creating a suspended cronjob @ 10/15/24 10:33:43.809
  STEP: Ensuring no jobs are scheduled @ 10/15/24 10:33:43.835
  E1015 10:33:44.755608      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:45.757021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:46.756804      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:47.757499      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:48.758061      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:49.758649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:50.759064      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:51.759593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:52.759847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:53.760292      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:54.760574      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:55.761168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:56.761218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:57.761381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:58.761725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:33:59.762122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:00.762131      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:01.763548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:02.763789      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:03.764868      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:04.765284      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:05.765538      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:06.765783      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:07.766024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:08.766528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:09.766688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:10.766934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:11.767247      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:12.768278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:13.768911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:14.769213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:15.769997      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:16.770131      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:17.770775      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:18.771003      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:19.771187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:20.771300      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:21.771511      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:22.771726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:23.772869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:24.774214      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:25.774468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:26.775480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:27.775719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:28.775886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:29.776108      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:30.776357      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:31.776837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:32.777087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:33.777904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:34.778996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:35.779229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:36.779359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:37.779851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:38.779949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:39.780768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:40.781415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:41.783809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:42.784081      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:43.784254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:44.784398      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:45.784800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:46.785752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:47.786063      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:48.786535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:49.786761      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:50.787892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:51.788558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:52.788737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:53.789069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:54.789850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:55.790474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:56.790547      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:57.791737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:58.792546      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:34:59.792681      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:00.793041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:01.793185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:02.793601      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:03.794420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:04.795600      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:05.796001      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:06.796740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:07.797155      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:08.797855      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:09.798215      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:10.799375      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:11.800417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:12.801602      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:13.802307      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:14.802773      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:15.803092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:16.803451      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:17.803570      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:18.804709      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:19.805066      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:20.806011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:21.806405      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:22.806493      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:23.806725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:24.806851      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:25.807467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:26.808413      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:27.808612      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:28.809591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:29.810561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:30.811292      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:31.811861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:32.812632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:33.813249      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:34.813518      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:35.813844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:36.814374      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:37.815148      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:38.816132      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:39.817178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:40.817246      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:41.817419      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:42.817568      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:43.818197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:44.818419      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:45.819032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:46.819036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:47.819721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:48.820713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:49.821518      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:50.821917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:51.822532      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:52.823063      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:53.823555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:54.824138      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:55.824455      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:56.825792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:57.826349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:58.827391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:35:59.828157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:00.828903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:01.829198      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:02.829835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:03.830219      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:04.830415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:05.830829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:06.831941      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:07.832505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:08.833395      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:09.833479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:10.834363      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:11.835177      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:12.835648      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:13.836187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:14.836845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:15.837662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:16.838534      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:17.839276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:18.839712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:19.839929      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:20.840798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:21.843862      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:22.844205      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:23.844264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:24.845268      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:25.845569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:26.846129      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:27.846548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:28.847595      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:29.848112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:30.849105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:31.849668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:32.849944      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:33.850226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:34.851220      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:35.851999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:36.852777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:37.853026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:38.854078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:39.854335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:40.855195      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:41.855747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:42.856810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:43.857208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:44.857593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:45.857803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:46.858738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:47.858877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:48.859147      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:49.859374      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:50.860272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:51.861297      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:52.862241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:53.862971      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:54.863870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:55.864481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:56.864921      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:57.865349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:58.866365      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:36:59.866992      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:00.867961      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:01.868733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:02.869157      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:03.869603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:04.870211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:05.870277      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:06.870480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:07.870835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:08.870980      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:09.871321      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:10.871877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:11.872125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:12.872789      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:13.872991      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:14.873541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:15.873791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:16.873993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:17.874534      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:18.874800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:19.875132      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:20.875975      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:21.876131      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:22.876387      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:23.876594      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:24.876815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:25.877214      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:26.878180      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:27.878410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:28.878638      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:29.879011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:30.879302      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:31.879983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:32.880079      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:33.880357      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:34.881374      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:35.881525      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:36.882473      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:37.882639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:38.883679      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:39.883725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:40.883890      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:41.884580      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:42.884695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:43.885044      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:44.885134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:45.885597      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:46.885514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:47.885907      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:48.886335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:49.886407      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:50.886834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:51.887941      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:52.888936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:53.889205      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:54.889603      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:55.889687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:56.889878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:57.890064      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:58.890312      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:37:59.890568      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:00.890806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:01.891556      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:02.891688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:03.891953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:04.892178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:05.892292      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:06.892529      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:07.893364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:08.894207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:09.895384      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:10.895807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:11.895933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:12.896735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:13.896759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:14.897314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:15.897511      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:16.898633      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:17.898771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:18.899748      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:19.899902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:20.900251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:21.900600      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:22.901078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:23.901682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:24.902092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:25.902381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:26.903584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:27.903711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:28.903906      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:29.904168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:30.904325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:31.905501      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:32.905946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:33.907030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:34.907500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:35.907752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:36.907882      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:37.908654      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:38.909517      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:39.909805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:40.909983      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:41.910196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:42.910833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 10/15/24 10:38:43.836
  STEP: Removing cronjob @ 10/15/24 10:38:43.844
  I1015 10:38:43.861450 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3172" for this suite. @ 10/15/24 10:38:43.872
• [300.174 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:103
  STEP: Creating a kubernetes client @ 10/15/24 10:38:43.908
  I1015 10:38:43.908354 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename resourcequota @ 10/15/24 10:38:43.91
  E1015 10:38:43.911136      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:38:43.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:38:43.984
  STEP: Counting existing ResourceQuota @ 10/15/24 10:38:43.999
  E1015 10:38:44.911621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:45.911815      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:46.911842      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:47.912222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:48.912531      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 10/15/24 10:38:49.009
  STEP: Ensuring resource quota status is calculated @ 10/15/24 10:38:49.041
  E1015 10:38:49.912599      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:50.912837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 10/15/24 10:38:51.05
  STEP: Creating a NodePort Service @ 10/15/24 10:38:51.079
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 10/15/24 10:38:51.133
  STEP: Ensuring resource quota status captures service creation @ 10/15/24 10:38:51.185
  E1015 10:38:51.913552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:52.914287      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 10/15/24 10:38:53.195
  STEP: Ensuring resource quota status released usage @ 10/15/24 10:38:53.294
  E1015 10:38:53.915316      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:54.915646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:38:55.311736 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4796" for this suite. @ 10/15/24 10:38:55.333
• [11.457 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 10/15/24 10:38:55.366
  I1015 10:38:55.366660 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename secrets @ 10/15/24 10:38:55.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:38:55.43
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:38:55.444
  STEP: creating secret secrets-3634/secret-test-7583cb52-a311-44c4-b9bc-fba2d779d023 @ 10/15/24 10:38:55.452
  STEP: Creating a pod to test consume secrets @ 10/15/24 10:38:55.47
  E1015 10:38:55.916676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:56.917295      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:57.917774      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:58.918205      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:38:59.918459      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:39:00.918719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 10:39:01.589
  I1015 10:39:01.596246 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-configmaps-45d6d669-2132-4b7d-b383-5c8c19f269c3 container env-test: <nil>
  STEP: delete the pod @ 10/15/24 10:39:01.632
  I1015 10:39:01.678866 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3634" for this suite. @ 10/15/24 10:39:01.69
• [6.345 seconds]
------------------------------
S
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 10/15/24 10:39:01.711
  I1015 10:39:01.712026 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename security-context @ 10/15/24 10:39:01.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:39:01.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:39:01.767
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 10/15/24 10:39:01.772
  E1015 10:39:01.918894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:39:02.919628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:39:03.920790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:39:04.922685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 10:39:05.82
  I1015 10:39:05.827939 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod security-context-0036f06d-5ead-42e8-98bf-0942a468504d container test-container: <nil>
  STEP: delete the pod @ 10/15/24 10:39:05.843
  I1015 10:39:05.876204 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-425" for this suite. @ 10/15/24 10:39:05.888
• [4.195 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 10/15/24 10:39:05.909
  I1015 10:39:05.909438 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename container-probe @ 10/15/24 10:39:05.911
  E1015 10:39:05.923139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:39:05.952
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:39:05.959
  STEP: Creating pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737 @ 10/15/24 10:39:05.964
  E1015 10:39:06.923795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:39:07.924883      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/15/24 10:39:08.011
  I1015 10:39:08.020647 22 container_probe.go:1749] Initial restart count of pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc is 0
  I1015 10:39:08.026581 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:39:08.925113      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:39:09.925623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:39:10.032645 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:39:10.926313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:39:11.926760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:39:12.045351 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:39:12.927569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:39:13.927945      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:39:14.053588 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:39:14.927959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:39:15.928132      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:39:16.064483 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:39:16.928584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:39:17.928978      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:39:18.072464 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:39:18.929485      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:39:19.929922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:39:20.082939 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:39:20.930689      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:39:21.932394      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:39:22.092334 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:39:22.932000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:39:23.932211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:39:24.101717 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:39:24.932985      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:39:25.933258      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:39:26.111345 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:39:26.933984      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:39:27.934508      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:39:28.122039 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  I1015 10:39:28.122639 22 container_probe.go:1763] Restart count of pod container-probe-737/liveness-cd07db3c-94de-470c-8422-847bd3423bcc is now 1 (20.101876638s elapsed)
  E1015 10:39:28.934703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:39:29.935159      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:39:30.134859 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:39:30.935469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:39:31.935819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:39:32.144498 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:39:32.936250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:39:33.936500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:39:34.162033 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:39:34.936581      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:39:35.936854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:39:36.174381 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:39:36.937683      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:39:37.938027      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:39:38.186280 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:39:38.938289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:39:39.938819      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:39:40.197234 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:39:40.939114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:39:41.939645      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:39:42.210728 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:39:42.940018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:39:43.940370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:39:44.230633 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:39:44.941075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:39:45.941537      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:39:46.241830 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:39:46.941575      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:39:47.941964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:39:48.252752 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  I1015 10:39:48.252919 22 container_probe.go:1763] Restart count of pod container-probe-737/liveness-cd07db3c-94de-470c-8422-847bd3423bcc is now 2 (40.232160324s elapsed)
  E1015 10:39:48.942175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:39:49.942591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:39:50.264090 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:39:50.942697      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:39:51.943172      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:39:52.277558 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:39:52.944424      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:39:53.945294      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:39:54.294275 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:39:54.945596      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:39:55.946587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:39:56.302610 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:39:56.946917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:39:57.947585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:39:58.311867 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:39:58.948696      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:39:59.949278      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:40:00.320973 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:40:00.949628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:40:01.949826      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:40:02.328140 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:40:02.950988      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:40:03.951872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:40:04.352998 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:40:04.952876      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:40:05.953139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:40:06.360916 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:40:06.953472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:40:07.954252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:40:08.367791 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  I1015 10:40:08.367873 22 container_probe.go:1763] Restart count of pod container-probe-737/liveness-cd07db3c-94de-470c-8422-847bd3423bcc is now 3 (1m0.347120163s elapsed)
  E1015 10:40:08.954752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:40:09.955147      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:40:10.395977 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:40:10.955382      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:40:11.956078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:40:12.405133 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:40:12.956286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:40:13.956429      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:40:14.414708 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:40:14.957122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:40:15.957684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:40:16.428966 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:40:16.958573      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:40:17.959306      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:40:18.444472 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:40:18.959772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:40:19.959894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:40:20.454023 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:40:20.960431      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:40:21.961618      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:40:22.466578 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:40:22.962384      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:40:23.962834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:40:24.477239 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:40:24.963859      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:40:25.963987      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:40:26.485062 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:40:26.964434      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:40:27.965089      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:40:28.493641 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  I1015 10:40:28.493779 22 container_probe.go:1763] Restart count of pod container-probe-737/liveness-cd07db3c-94de-470c-8422-847bd3423bcc is now 4 (1m20.473020566s elapsed)
  E1015 10:40:28.965631      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:40:29.966211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:40:30.503473 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:40:30.966861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:40:31.967481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:40:32.514637 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:40:32.967659      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:40:33.968330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:40:34.523217 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:40:34.968703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:40:35.969299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:40:36.532559 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:40:36.970252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:40:37.970242      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:40:38.542528 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:40:38.970992      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:40:39.971936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:40:40.553504 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:40:40.972649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:40:41.973307      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:40:42.562946 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:40:42.975162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:40:43.975779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:40:44.593468 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:40:44.977017      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:40:45.977561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:40:46.603334 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:40:46.977670      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:40:47.977779      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:40:48.619159 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:40:48.978772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:40:49.979342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:40:50.633142 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:40:50.979925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:40:51.980052      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:40:52.644895 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:40:52.980528      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:40:53.981255      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:40:54.654618 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:40:54.982274      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:40:55.983452      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:40:56.677296 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:40:56.983814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:40:57.984156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:40:58.685870 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:40:58.984363      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:40:59.985348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:41:00.694499 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:41:00.985987      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:41:01.986936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:41:02.701403 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:41:02.987692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:41:03.988334      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:41:04.713580 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:41:04.989034      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:41:05.989616      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:41:06.722169 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:41:06.990399      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:41:07.990674      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:41:08.732402 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:41:08.991731      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:41:09.992245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:41:10.744774 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:41:10.993108      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:41:11.993604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:41:12.752559 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:41:12.994608      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:41:13.997992      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:41:14.765051 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:41:14.999011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:41:15.999539      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:41:16.790115 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:41:16.999535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:41:18.000461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:41:18.797122 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:41:19.001688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:41:20.001887      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:41:20.809475 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:41:21.002854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:41:22.003600      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:41:22.818257 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:41:23.004000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:41:24.004933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:41:24.830337 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:41:25.005020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:41:26.005688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:41:26.838774 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  E1015 10:41:27.006613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:41:28.007809      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:41:28.848220 22 container_probe.go:1759] Get pod liveness-cd07db3c-94de-470c-8422-847bd3423bcc in namespace container-probe-737
  I1015 10:41:28.848325 22 container_probe.go:1763] Restart count of pod container-probe-737/liveness-cd07db3c-94de-470c-8422-847bd3423bcc is now 5 (2m20.827548686s elapsed)
  STEP: deleting the pod @ 10/15/24 10:41:28.849
  I1015 10:41:28.884169 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-737" for this suite. @ 10/15/24 10:41:28.914
• [143.028 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:109
  STEP: Creating a kubernetes client @ 10/15/24 10:41:28.937
  I1015 10:41:28.937631 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename kubelet-test @ 10/15/24 10:41:28.939
  E1015 10:41:29.008724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:41:29.036
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:41:29.048
  E1015 10:41:30.009196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:41:31.009554      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:41:32.009995      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:41:33.010845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:41:33.118421 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3288" for this suite. @ 10/15/24 10:41:33.129
• [4.211 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 10/15/24 10:41:33.149
  I1015 10:41:33.149467 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename emptydir @ 10/15/24 10:41:33.151
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:41:33.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:41:33.242
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 10/15/24 10:41:33.248
  E1015 10:41:34.011588      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:41:35.011764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:41:36.012642      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:41:37.012884      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:41:38.015905      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:41:39.013888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 10:41:39.333
  I1015 10:41:39.340280 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-40ceb3fa-8907-4b87-99a3-6128a3a3af4c container test-container: <nil>
  STEP: delete the pod @ 10/15/24 10:41:39.378
  I1015 10:41:39.422548 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1735" for this suite. @ 10/15/24 10:41:39.436
• [6.309 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 10/15/24 10:41:39.46
  I1015 10:41:39.460087 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename deployment @ 10/15/24 10:41:39.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:41:39.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:41:39.536
  I1015 10:41:39.541650 22 deployment.go:792] Creating deployment "test-recreate-deployment"
  I1015 10:41:39.555502 22 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I1015 10:41:39.577367 22 deployment.go:222] deployment "test-recreate-deployment" doesn't have the required revision set
  E1015 10:41:40.014812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:41:41.015973      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:41:41.591858 22 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I1015 10:41:41.599621 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 15, 10, 41, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 10, 41, 39, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 15, 10, 41, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 10, 41, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-recreate-deployment-6b6d9cd7b6\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1015 10:41:42.016179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:41:43.016271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:41:43.610485 22 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I1015 10:41:43.634331 22 deployment.go:313] Updating deployment test-recreate-deployment
  I1015 10:41:43.634485 22 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I1015 10:41:43.990442 22 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9648",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6d0c93ae-b232-431e-9f49-4d3f23a986b8",
      ResourceVersion: (string) (len=8) "53484404",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864585699,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864585703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864585703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864585703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864585703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864585703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864585699,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-66b65d9f8f\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1015 10:41:44.002662 22 deployment.go:39] New ReplicaSet "test-recreate-deployment-66b65d9f8f" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-66b65d9f8f",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9648",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "21de80b5-06ec-4998-97e8-3904b7684bc4",
      ResourceVersion: (string) (len=8) "53484401",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864585703,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "6d0c93ae-b232-431e-9f49-4d3f23a986b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864585703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 64 30 63 39 33  61 65 2d 62 32 33 32 2d  |\"6d0c93ae-b232-|
              00000120  34 33 31 65 2d 39 66 34  39 2d 34 64 33 66 32 33  |431e-9f49-4d3f23|
              00000130  61 39 38 36 62 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a986b8\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864585703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1015 10:41:44.007739 22 deployment.go:44] All old ReplicaSets of Deployment "test-recreate-deployment":
  I1015 10:41:44.008677 22 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-6b6d9cd7b6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9648",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d1611aec-c2ba-4ad3-a209-51ba0af2deeb",
      ResourceVersion: (string) (len=8) "53484391",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864585699,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6b6d9cd7b6",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "6d0c93ae-b232-431e-9f49-4d3f23a986b8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864585703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 64 30 63 39 33  61 65 2d 62 32 33 32 2d  |\"6d0c93ae-b232-|
              00000120  34 33 31 65 2d 39 66 34  39 2d 34 64 33 66 32 33  |431e-9f49-4d3f23|
              00000130  61 39 38 36 62 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a986b8\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864585703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6b6d9cd7b6"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6b6d9cd7b6"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  E1015 10:41:44.023650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:41:44.026673 22 deployment.go:67] Pod "test-recreate-deployment-66b65d9f8f-wr6z8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-66b65d9f8f-wr6z8",
      GenerateName: (string) (len=36) "test-recreate-deployment-66b65d9f8f-",
      Namespace: (string) (len=15) "deployment-9648",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "02797a3b-9670-4607-a3d4-fd9860a14e7e",
      ResourceVersion: (string) (len=8) "53484403",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864585703,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-66b65d9f8f",
          UID: (types.UID) (len=36) "21de80b5-06ec-4998-97e8-3904b7684bc4",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864585703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 31  64 65 38 30 62 35 2d 30  |d\":\"21de80b5-0|
              00000090  36 65 63 2d 34 39 39 38  2d 39 37 65 38 2d 33 39  |6ec-4998-97e8-39|
              000000a0  30 34 62 37 36 38 34 62  63 34 5c 22 7d 22 3a 7b  |04b7684bc4\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864585703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-79m6b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-79m6b",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864585703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864585703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864585703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864585703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864585703,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.200",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.200"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864585703,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1015 10:41:44.032519 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9648" for this suite. @ 10/15/24 10:41:44.054
• [4.623 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 10/15/24 10:41:44.083
  I1015 10:41:44.083249 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename emptydir @ 10/15/24 10:41:44.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:41:44.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:41:44.138
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 10/15/24 10:41:44.143
  E1015 10:41:45.023756      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:41:46.024002      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:41:47.024934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:41:48.026117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 10:41:48.221
  I1015 10:41:48.232518 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-efbaf85e-4126-44f5-b253-8d2ea2b65d6b container test-container: <nil>
  STEP: delete the pod @ 10/15/24 10:41:48.259
  I1015 10:41:48.321607 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2914" for this suite. @ 10/15/24 10:41:48.344
• [4.321 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1693
  STEP: Creating a kubernetes client @ 10/15/24 10:41:48.421
  I1015 10:41:48.421645 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename kubectl @ 10/15/24 10:41:48.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:41:48.498
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:41:48.508
  STEP: creating Agnhost RC @ 10/15/24 10:41:48.52
  I1015 10:41:48.520606 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-4866 create -f -'
  I1015 10:41:48.889552 22 builder.go:146] stderr: ""
  I1015 10:41:48.889629 22 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 10/15/24 10:41:48.889
  E1015 10:41:49.027043      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:41:49.911563 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1015 10:41:49.911669 22 framework.go:733] Found 0 / 1
  E1015 10:41:50.027205      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:41:50.901666 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1015 10:41:50.902006 22 framework.go:733] Found 1 / 1
  I1015 10:41:50.902083 22 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 10/15/24 10:41:50.902
  I1015 10:41:50.910054 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1015 10:41:50.910250 22 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1015 10:41:50.910372 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-4866 patch pod agnhost-primary-dckms -p {"metadata":{"annotations":{"x":"y"}}}'
  E1015 10:41:51.027497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:41:51.162128 22 builder.go:146] stderr: ""
  I1015 10:41:51.162264 22 builder.go:147] stdout: "pod/agnhost-primary-dckms patched\n"
  STEP: checking annotations @ 10/15/24 10:41:51.162
  I1015 10:41:51.173287 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1015 10:41:51.173371 22 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1015 10:41:51.173568 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4866" for this suite. @ 10/15/24 10:41:51.188
• [2.788 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1459
  STEP: Creating a kubernetes client @ 10/15/24 10:41:51.215
  I1015 10:41:51.215924 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename services @ 10/15/24 10:41:51.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:41:51.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:41:51.275
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-7344 @ 10/15/24 10:41:51.282
  STEP: changing the ExternalName service to type=NodePort @ 10/15/24 10:41:51.294
  STEP: creating replication controller externalname-service in namespace services-7344 @ 10/15/24 10:41:51.336
  I1015 10:41:51.357003      22 runners.go:198] Created replication controller with name: externalname-service, namespace: services-7344, replica count: 2
  E1015 10:41:52.028875      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:41:53.029077      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:41:54.030152      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:41:54.409875      22 runners.go:198] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1015 10:41:54.409989 22 resource.go:361] Creating new exec pod
  E1015 10:41:55.030408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:41:56.031296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:41:57.031713      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:41:58.032472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:41:59.032605      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:41:59.467110 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-7344 exec execpodx56cd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1015 10:41:59.837715 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I1015 10:41:59.837783 22 builder.go:147] stdout: ""
  E1015 10:42:00.032854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:42:00.467889 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-7344 exec execpodx56cd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1015 10:42:00.854013 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I1015 10:42:00.854337 22 builder.go:147] stdout: "externalname-service-bw6sj"
  I1015 10:42:00.854538 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-7344 exec execpodx56cd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.39.153 80'
  E1015 10:42:01.034138      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:42:01.180497 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.39.153 80\nConnection to 10.233.39.153 80 port [tcp/http] succeeded!\n"
  I1015 10:42:01.180609 22 builder.go:147] stdout: ""
  I1015 10:42:01.854835 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-7344 exec execpodx56cd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.39.153 80'
  E1015 10:42:02.033628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:42:02.165815 22 builder.go:146] stderr: "+ nc -v -t -w 2 10.233.39.153 80\n+ echo hostName\nConnection to 10.233.39.153 80 port [tcp/http] succeeded!\n"
  I1015 10:42:02.165945 22 builder.go:147] stdout: ""
  I1015 10:42:02.855007 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-7344 exec execpodx56cd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.39.153 80'
  E1015 10:42:03.034007      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:42:03.198162 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.39.153 80\nConnection to 10.233.39.153 80 port [tcp/http] succeeded!\n"
  I1015 10:42:03.198241 22 builder.go:147] stdout: "externalname-service-8cwbx"
  I1015 10:42:03.198417 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-7344 exec execpodx56cd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.61.1.202 31588'
  I1015 10:42:03.581282 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.61.1.202 31588\nConnection to 10.61.1.202 31588 port [tcp/*] succeeded!\n"
  I1015 10:42:03.581371 22 builder.go:147] stdout: ""
  E1015 10:42:04.034204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:42:04.198996 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-7344 exec execpodx56cd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.61.1.202 31588'
  I1015 10:42:04.540240 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.61.1.202 31588\nConnection to 10.61.1.202 31588 port [tcp/*] succeeded!\n"
  I1015 10:42:04.540323 22 builder.go:147] stdout: "externalname-service-bw6sj"
  I1015 10:42:04.540561 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-7344 exec execpodx56cd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.61.1.200 31588'
  I1015 10:42:04.905202 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.61.1.200 31588\nConnection to 10.61.1.200 31588 port [tcp/*] succeeded!\n"
  I1015 10:42:04.905326 22 builder.go:147] stdout: ""
  E1015 10:42:05.034348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:42:05.541605 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-7344 exec execpodx56cd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.61.1.200 31588'
  I1015 10:42:05.836822 22 builder.go:146] stderr: "+ echo hostName+ \nnc -v -t -w 2 10.61.1.200 31588\nConnection to 10.61.1.200 31588 port [tcp/*] succeeded!\n"
  I1015 10:42:05.837347 22 builder.go:147] stdout: ""
  E1015 10:42:06.034950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:42:06.540851 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-7344 exec execpodx56cd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.61.1.200 31588'
  I1015 10:42:06.841341 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.61.1.200 31588\nConnection to 10.61.1.200 31588 port [tcp/*] succeeded!\n"
  I1015 10:42:06.841432 22 builder.go:147] stdout: "externalname-service-8cwbx"
  I1015 10:42:06.841570 22 service.go:1468] Cleaning up the ExternalName to NodePort test service
  I1015 10:42:06.921088 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7344" for this suite. @ 10/15/24 10:42:06.937
• [15.742 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 10/15/24 10:42:06.958
  I1015 10:42:06.958359 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename downward-api @ 10/15/24 10:42:06.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:42:07.012
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:42:07.019
  STEP: Creating a pod to test downward API volume plugin @ 10/15/24 10:42:07.029
  E1015 10:42:07.035984      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:42:08.040116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:42:09.040469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:42:10.040989      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:42:11.041293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 10:42:11.094
  I1015 10:42:11.102744 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod downwardapi-volume-76b2933c-31fc-41f4-95e3-7a4598ef134f container client-container: <nil>
  STEP: delete the pod @ 10/15/24 10:42:11.123
  I1015 10:42:11.154235 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3593" for this suite. @ 10/15/24 10:42:11.167
• [4.231 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:808
  STEP: Creating a kubernetes client @ 10/15/24 10:42:11.19
  I1015 10:42:11.190477 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename resourcequota @ 10/15/24 10:42:11.192
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:42:11.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:42:11.246
  STEP: Creating a ResourceQuota with best effort scope @ 10/15/24 10:42:11.252
  STEP: Ensuring ResourceQuota status is calculated @ 10/15/24 10:42:11.265
  E1015 10:42:12.044156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:42:13.043567      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 10/15/24 10:42:13.273
  STEP: Ensuring ResourceQuota status is calculated @ 10/15/24 10:42:13.281
  E1015 10:42:14.043868      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:42:15.044951      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 10/15/24 10:42:15.295
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 10/15/24 10:42:15.349
  E1015 10:42:16.044953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:42:17.045356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 10/15/24 10:42:17.365
  E1015 10:42:18.046400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:42:19.046872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 10/15/24 10:42:19.375
  STEP: Ensuring resource quota status released the pod usage @ 10/15/24 10:42:19.415
  E1015 10:42:20.047404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:42:21.048146      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 10/15/24 10:42:21.424
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 10/15/24 10:42:21.446
  E1015 10:42:22.049647      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:42:23.050639      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 10/15/24 10:42:23.453
  E1015 10:42:24.050751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:42:25.051574      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 10/15/24 10:42:25.465
  STEP: Ensuring resource quota status released the pod usage @ 10/15/24 10:42:25.512
  E1015 10:42:26.052694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:42:27.052971      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:42:27.520972 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-396" for this suite. @ 10/15/24 10:42:27.532
• [16.362 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 10/15/24 10:42:27.553
  I1015 10:42:27.553245 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename lease-test @ 10/15/24 10:42:27.555
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:42:27.605
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:42:27.612
  I1015 10:42:27.787642 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-161" for this suite. @ 10/15/24 10:42:27.804
• [0.268 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 10/15/24 10:42:27.821
  I1015 10:42:27.821721 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename daemonsets @ 10/15/24 10:42:27.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:42:27.914
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:42:27.933
  STEP: Creating simple DaemonSet "daemon-set" @ 10/15/24 10:42:28.017
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/15/24 10:42:28.033
  I1015 10:42:28.050108 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:42:28.050254 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:42:28.050352 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1015 10:42:28.053507      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:42:28.060894 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1015 10:42:28.060990 22 fixtures.go:130] Node env1-test-worker-0 is running 0 daemon pod, expected 1
  E1015 10:42:29.055704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:42:29.057400 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:42:29.058180 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:42:29.059071 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:42:29.073457 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1015 10:42:29.073751 22 fixtures.go:130] Node env1-test-worker-0 is running 0 daemon pod, expected 1
  I1015 10:42:30.045653 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:42:30.046929 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:42:30.048136 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1015 10:42:30.055794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:42:30.059781 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1015 10:42:30.061003 22 fixtures.go:130] Node env1-test-worker-1 is running 0 daemon pod, expected 1
  I1015 10:42:31.048281 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:42:31.048382 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:42:31.048425 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  E1015 10:42:31.056733      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:42:31.059705 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1015 10:42:31.060463 22 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 10/15/24 10:42:31.068
  I1015 10:42:31.078591 22 daemon_set.go:912] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 10/15/24 10:42:31.079
  I1015 10:42:31.100726 22 daemon_set.go:932] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 10/15/24 10:42:31.1
  I1015 10:42:31.105129 22 daemon_set.go:957] Observed &DaemonSet event: ADDED
  I1015 10:42:31.106296 22 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I1015 10:42:31.107268 22 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I1015 10:42:31.108341 22 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I1015 10:42:31.109041 22 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I1015 10:42:31.109548 22 daemon_set.go:950] Found daemon set daemon-set in namespace daemonsets-3702 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1015 10:42:31.109621 22 daemon_set.go:961] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 10/15/24 10:42:31.109
  STEP: watching for the daemon set status to be patched @ 10/15/24 10:42:31.131
  I1015 10:42:31.136256 22 daemon_set.go:1001] Observed &DaemonSet event: ADDED
  I1015 10:42:31.137172 22 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I1015 10:42:31.137717 22 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I1015 10:42:31.138183 22 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I1015 10:42:31.138640 22 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I1015 10:42:31.138784 22 daemon_set.go:997] Observed daemon set daemon-set in namespace daemonsets-3702 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1015 10:42:31.139006 22 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I1015 10:42:31.139063 22 daemon_set.go:994] Found daemon set daemon-set in namespace daemonsets-3702 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I1015 10:42:31.139088 22 daemon_set.go:1005] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 10/15/24 10:42:31.152
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3702, will wait for the garbage collector to delete the pods @ 10/15/24 10:42:31.152
  I1015 10:42:31.229118 22 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 14.732933ms
  I1015 10:42:31.330563 22 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.440082ms
  E1015 10:42:32.057690      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:42:33.057898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:42:33.653526 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1015 10:42:33.653606 22 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1015 10:42:33.659569 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"53484933"},"items":null}

  I1015 10:42:33.665010 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"53484933"},"items":null}

  I1015 10:42:33.710616 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3702" for this suite. @ 10/15/24 10:42:33.732
• [5.932 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 10/15/24 10:42:33.757
  I1015 10:42:33.757969 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename container-probe @ 10/15/24 10:42:33.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:42:33.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:42:33.793
  STEP: Creating pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340 @ 10/15/24 10:42:33.804
  E1015 10:42:34.058727      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:42:35.058942      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:42:36.059988      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:42:37.060580      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/15/24 10:42:37.873
  I1015 10:42:37.883897 22 container_probe.go:1749] Initial restart count of pod liveness-899f3dce-e440-4180-9702-a4707903331b is 0
  I1015 10:42:37.897950 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:42:38.061421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:42:39.061895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:42:39.910953 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:42:40.062472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:42:41.062818      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:42:41.919968 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:42:42.063834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:42:43.064033      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:42:43.929925 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:42:44.064917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:42:45.065739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:42:45.938026 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:42:46.066165      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:42:47.066307      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:42:47.947051 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:42:48.066466      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:42:49.066768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:42:49.956488 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:42:50.067936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:42:51.068993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:42:51.965997 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:42:52.069244      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:42:53.069285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:42:53.979232 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:42:54.070018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:42:55.070345      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:42:55.989467 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:42:56.071086      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:42:57.071586      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:42:57.997521 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:42:58.071990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:42:59.076638      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:43:00.007318 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:43:00.077581      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:43:01.078856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:43:02.043639 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:43:02.078659      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:43:03.079479      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:43:04.053198 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:43:04.079986      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:43:05.080503      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:43:06.065273 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:43:06.081419      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:43:07.082303      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:43:08.074120 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:43:08.082552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:43:09.082811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:43:10.083746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:43:10.091045 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:43:11.084742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:43:12.084977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:43:12.099175 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:43:13.085770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:43:14.086652      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:43:14.113997 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:43:15.086651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:43:16.087035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:43:16.125530 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:43:17.087780      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:43:18.088558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:43:18.135392 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:43:19.095545      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:43:20.095338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:43:20.147350 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:43:21.096167      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:43:22.095954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:43:22.156193 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:43:23.097182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:43:24.097759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:43:24.171611 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:43:25.097409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:43:26.097841      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:43:26.182777 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:43:27.098637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:43:28.099243      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:43:28.194772 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:43:29.099869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:43:30.100971      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:43:30.207078 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:43:31.101578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:43:32.102132      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:43:32.217211 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:43:33.102602      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:43:34.103087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:43:34.225746 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:43:35.103623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:43:36.104469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:43:36.236800 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:43:37.104720      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:43:38.104866      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:43:38.249542 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:43:39.105033      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:43:40.105140      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:43:40.257838 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:43:41.105685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:43:42.105937      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:43:42.270825 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:43:43.106147      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:43:44.106813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:43:44.280284 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:43:45.107018      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:43:46.107699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:43:46.288180 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:43:47.108010      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:43:48.108023      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:43:48.295269 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:43:49.108784      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:43:50.109168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:43:50.305230 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:43:51.109398      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:43:52.110133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:43:52.314013 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:43:53.110128      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:43:54.110611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:43:54.323590 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:43:55.111371      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:43:56.112252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:43:56.335154 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:43:57.112497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:43:58.113448      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:43:58.344069 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:43:59.113847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:44:00.114190      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:44:00.359215 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:44:01.115136      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:44:02.116020      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:44:02.375165 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:44:03.116201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:44:04.116381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:44:04.384867 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:44:05.116823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:44:06.117367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:44:06.395743 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:44:07.118454      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:44:08.119311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:44:08.402321 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:44:09.119883      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:44:10.120211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:44:10.410990 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:44:11.120417      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:44:12.120927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:44:12.420001 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:44:13.122000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:44:14.122896      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:44:14.430927 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:44:15.122862      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:44:16.123896      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:44:16.440599 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:44:17.124299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:44:18.124336      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:44:18.453640 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:44:19.124515      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:44:20.124722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:44:20.465239 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:44:21.125011      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:44:22.125256      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:44:22.475855 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:44:23.125591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:44:24.126264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:44:24.485899 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:44:25.126734      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:44:26.127172      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:44:26.494868 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:44:27.127323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:44:28.128320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:44:28.502803 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:44:29.129357      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:44:30.129852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:44:30.510607 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:44:31.130325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:44:32.130796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:44:32.519905 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:44:33.130892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:44:34.131022      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:44:34.535731 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:44:35.131624      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:44:36.131801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:44:36.548943 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:44:37.132055      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:44:38.139803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:44:38.560942 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:44:39.139945      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:44:40.140288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:44:40.567970 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:44:41.141323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:44:42.141574      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:44:42.578360 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:44:43.142579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:44:44.142927      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:44:44.587875 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:44:45.143364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:44:46.143997      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:44:46.598015 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:44:47.144250      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:44:48.144279      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:44:48.606074 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:44:49.146209      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:44:50.146517      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:44:50.614166 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:44:51.146778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:44:52.146916      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:44:52.622729 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:44:53.147585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:44:54.148046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:44:54.632195 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:44:55.148633      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:44:56.149168      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:44:56.647744 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:44:57.149223      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:44:58.149854      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:44:58.656779 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:44:59.150154      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:45:00.151001      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:45:00.667035 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:45:01.151778      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:45:02.152610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:45:02.675940 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:45:03.152684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:45:04.152920      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:45:04.688596 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:45:05.153378      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:45:06.154026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:45:06.702411 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:45:07.154672      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:45:08.155344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:45:08.712439 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:45:09.156321      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:45:10.156513      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:45:10.720588 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:45:11.157505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:45:12.158024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:45:12.730130 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:45:13.158969      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:45:14.159657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:45:14.742124 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:45:15.160807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:45:16.161729      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:45:16.756861 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:45:17.162269      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:45:18.163158      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:45:18.767694 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:45:19.163607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:45:20.164287      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:45:20.775145 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:45:21.164504      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:45:22.165129      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:45:22.784872 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:45:23.165636      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:45:24.165904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:45:24.795562 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:45:25.167070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:45:26.167638      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:45:26.804828 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:45:27.168025      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:45:28.168590      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:45:28.815980 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:45:29.169653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:45:30.169984      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:45:30.826005 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:45:31.170451      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:45:32.170501      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:45:32.836008 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:45:33.171484      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:45:34.172057      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:45:34.846034 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:45:35.172540      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:45:36.173447      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:45:36.857884 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:45:37.174268      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:45:38.175137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:45:38.866301 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:45:39.175732      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:45:40.175911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:45:40.882866 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:45:41.176192      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:45:42.176597      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:45:42.908249 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:45:43.176790      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:45:44.177318      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:45:44.921551 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:45:45.178252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:45:46.178949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:45:46.937264 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:45:47.179452      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:45:48.180398      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:45:48.945987 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:45:49.180504      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:45:50.181291      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:45:50.954124 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:45:51.182028      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:45:52.182184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:45:52.968239 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:45:53.182296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:45:54.182585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:45:54.977595 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:45:55.182870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:45:56.184045      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:45:56.985949 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:45:57.184120      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:45:58.184435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:45:59.001331 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:45:59.185137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:46:00.185593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:46:01.009291 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:46:01.186821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:46:02.187379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:46:03.019058 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:46:03.187734      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:46:04.187939      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:46:05.028263 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:46:05.188872      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:46:06.189883      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:46:07.040989 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:46:07.190119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:46:08.190994      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:46:09.051995 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:46:09.191229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:46:10.191746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:46:11.060955 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:46:11.192324      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:46:12.192535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:46:13.072404 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:46:13.193830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:46:14.194287      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:46:15.085201 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:46:15.194542      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:46:16.195160      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:46:17.093437 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:46:17.195765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:46:18.196039      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:46:19.101527 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:46:19.197684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:46:20.197618      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:46:21.109388 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:46:21.198703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:46:22.199229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:46:23.117308 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:46:23.199606      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:46:24.199798      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:46:25.125143 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:46:25.200492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:46:26.201667      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:46:27.139189 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:46:27.202269      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:46:28.203511      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:46:29.151896 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:46:29.204147      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:46:30.204454      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:46:31.163009 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:46:31.205122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:46:32.205749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:46:33.171314 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:46:33.206715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:46:34.206908      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:46:35.181084 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:46:35.207690      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:46:36.208143      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:46:37.188878 22 container_probe.go:1759] Get pod liveness-899f3dce-e440-4180-9702-a4707903331b in namespace container-probe-7340
  E1015 10:46:37.209248      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:46:38.210199      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 10/15/24 10:46:39.19
  E1015 10:46:39.211351      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:46:39.237887 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7340" for this suite. @ 10/15/24 10:46:39.257
• [245.519 seconds]
------------------------------
SSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 10/15/24 10:46:39.277
  I1015 10:46:39.277243 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename configmap @ 10/15/24 10:46:39.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:46:39.315
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:46:39.322
  STEP: Creating configMap configmap-4170/configmap-test-fa5e976f-09be-4f63-88b6-e9f53e200ece @ 10/15/24 10:46:39.344
  STEP: Creating a pod to test consume configMaps @ 10/15/24 10:46:39.355
  E1015 10:46:40.215271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:46:41.215694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:46:42.216002      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:46:43.217025      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 10:46:43.402
  I1015 10:46:43.410634 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-configmaps-e4ac893c-fb65-4faf-bf34-22319f94c2e3 container env-test: <nil>
  STEP: delete the pod @ 10/15/24 10:46:43.454
  I1015 10:46:43.488406 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4170" for this suite. @ 10/15/24 10:46:43.499
• [4.240 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 10/15/24 10:46:43.516
  I1015 10:46:43.517013 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename container-probe @ 10/15/24 10:46:43.52
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:46:43.565
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:46:43.571
  E1015 10:46:44.217156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:46:45.218142      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:46:46.218242      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:46:47.218718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:46:48.219510      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:46:49.220476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:46:50.221554      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:46:51.221717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:46:52.222003      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:46:53.222136      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:46:54.222892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:46:55.224012      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:46:56.224944      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:46:57.225747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:46:58.226832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:46:59.227961      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:00.228497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:01.229565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:02.230703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:03.231332      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:04.231355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:05.232519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:06.233211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:07.234051      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:08.239579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:09.239598      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:10.239818      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:11.240053      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:12.240231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:13.241320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:14.241515      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:15.243485      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:16.244114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:17.245281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:18.245707      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:19.245702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:20.245796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:21.246081      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:22.246998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:23.247232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:24.247670      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:25.247699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:26.248675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:27.249749      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:28.250772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:29.251290      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:30.251763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:31.252342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:32.253047      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:33.253717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:34.254663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:35.254935      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:36.256208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:37.256201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:38.256831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:39.257056      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:40.257862      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:41.259728      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:42.260945      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:43.261647      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:47:43.615474 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1971" for this suite. @ 10/15/24 10:47:43.628
• [60.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 10/15/24 10:47:43.66
  I1015 10:47:43.660423 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename projected @ 10/15/24 10:47:43.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:47:43.739
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:47:43.75
  STEP: Creating secret with name s-test-opt-del-36009c77-c297-4819-8335-943c6d6d174c @ 10/15/24 10:47:43.8
  STEP: Creating secret with name s-test-opt-upd-40494a07-0ded-4e4c-b318-12edb19871b1 @ 10/15/24 10:47:43.83
  STEP: Creating the pod @ 10/15/24 10:47:43.849
  E1015 10:47:44.261637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:45.261691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:46.262593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:47.262857      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting secret s-test-opt-del-36009c77-c297-4819-8335-943c6d6d174c @ 10/15/24 10:47:47.978
  STEP: Updating secret s-test-opt-upd-40494a07-0ded-4e4c-b318-12edb19871b1 @ 10/15/24 10:47:47.999
  STEP: Creating secret with name s-test-opt-create-daf8f5bc-9616-4d8e-85e9-e5ee3ef00ff5 @ 10/15/24 10:47:48.018
  STEP: waiting to observe update in volume @ 10/15/24 10:47:48.037
  E1015 10:47:48.263189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:49.263754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:50.265291      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:51.265127      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:52.266432      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:53.266355      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:54.267637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:55.268327      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:56.269240      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:57.269858      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:58.270235      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:47:59.270993      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:00.272229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:01.272672      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:02.273740      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:03.274435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:04.275356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:05.275903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:06.276113      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:07.276460      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:08.276662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:09.277366      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:10.277411      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:11.278483      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:12.279634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:13.280556      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:14.280998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:15.281200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:16.281502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:17.281899      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:18.282796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:19.282930      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:20.283173      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:21.283286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:22.283771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:23.284923      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:24.284903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:25.285021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:26.285361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:27.285466      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:28.286204      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:29.287161      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:30.287801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:31.288797      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:32.289304      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:33.289659      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:34.289650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:35.289861      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:36.290427      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:37.290901      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:38.291942      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:39.293000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:40.293593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:41.293663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:42.294350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:43.294624      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:44.295072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:45.295662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:46.296089      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:47.296911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:48.297337      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:49.297481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:50.297720      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:51.298005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:52.298283      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:53.298559      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:54.298712      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:48:54.825016 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3547" for this suite. @ 10/15/24 10:48:54.84
• [71.204 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 10/15/24 10:48:54.869
  I1015 10:48:54.870144 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename field-validation @ 10/15/24 10:48:54.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:48:54.949
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:48:54.955
  I1015 10:48:54.961896 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  E1015 10:48:55.299727      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:56.300390      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:57.300592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:58.300938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:48:59.301562      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:49:00.302072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:49:01.302950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:49:02.303105      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  W1015 10:49:02.571243      22 warnings.go:70] unknown field "alpha"
  W1015 10:49:02.572873      22 warnings.go:70] unknown field "beta"
  W1015 10:49:02.573082      22 warnings.go:70] unknown field "delta"
  W1015 10:49:02.573173      22 warnings.go:70] unknown field "epsilon"
  W1015 10:49:02.573259      22 warnings.go:70] unknown field "gamma"
  I1015 10:49:03.193031 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-1561" for this suite. @ 10/15/24 10:49:03.208
• [8.356 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 10/15/24 10:49:03.226
  I1015 10:49:03.226211 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename gc @ 10/15/24 10:49:03.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:49:03.28
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:49:03.287
  E1015 10:49:03.304071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the rc @ 10/15/24 10:49:03.307
  W1015 10:49:03.323642      22 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1015 10:49:04.305005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:49:05.305781      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:49:06.306662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:49:07.308948      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:49:08.315214      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:49:09.319002      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 10/15/24 10:49:09.336
  STEP: wait for the rc to be deleted @ 10/15/24 10:49:09.354
  E1015 10:49:10.319632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:49:10.456186 22 garbage_collector.go:670] 80 pods remaining
  I1015 10:49:10.456310 22 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I1015 10:49:10.456330 22 garbage_collector.go:678] 
  E1015 10:49:11.320752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:49:11.405202 22 garbage_collector.go:670] 74 pods remaining
  I1015 10:49:11.405269 22 garbage_collector.go:677] 72 pods has nil DeletionTimestamp
  I1015 10:49:11.405342 22 garbage_collector.go:678] 
  E1015 10:49:12.321193      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:49:12.417440 22 garbage_collector.go:670] 60 pods remaining
  I1015 10:49:12.417509 22 garbage_collector.go:677] 60 pods has nil DeletionTimestamp
  I1015 10:49:12.417530 22 garbage_collector.go:678] 
  E1015 10:49:13.322099      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:49:13.421222 22 garbage_collector.go:670] 43 pods remaining
  I1015 10:49:13.421286 22 garbage_collector.go:677] 41 pods has nil DeletionTimestamp
  I1015 10:49:13.421307 22 garbage_collector.go:678] 
  E1015 10:49:14.322662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:49:14.394062 22 garbage_collector.go:670] 31 pods remaining
  I1015 10:49:14.394113 22 garbage_collector.go:677] 31 pods has nil DeletionTimestamp
  I1015 10:49:14.394124 22 garbage_collector.go:678] 
  E1015 10:49:15.323671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:49:15.393412 22 garbage_collector.go:670] 19 pods remaining
  I1015 10:49:15.393487 22 garbage_collector.go:677] 19 pods has nil DeletionTimestamp
  I1015 10:49:15.393509 22 garbage_collector.go:678] 
  E1015 10:49:16.324591      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 10/15/24 10:49:16.387
  I1015 10:49:16.637271 22 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1015 10:49:16.637545 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6149" for this suite. @ 10/15/24 10:49:16.654
• [13.455 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 10/15/24 10:49:16.682
  I1015 10:49:16.682648 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/15/24 10:49:16.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:49:16.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:49:16.78
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 10/15/24 10:49:16.785
  I1015 10:49:16.786064 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  E1015 10:49:17.326717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:49:18.327191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:49:19.327879      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:49:20.328032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:49:21.328845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:49:22.329486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:49:23.329959      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:49:24.330211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:49:25.331064      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:49:26.192537 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  E1015 10:49:26.331244      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:49:27.331836      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:49:28.332830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:49:29.333841      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:49:30.334812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:49:31.335886      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:49:32.336022      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:49:33.336897      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:49:34.337584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:49:35.338996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:49:36.339780      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:49:37.340578      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:49:38.341073      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:49:39.341583      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:49:40.342032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:49:41.343032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:49:42.343192      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:49:43.343990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:49:44.344677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:49:45.345468      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:49:46.130362 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7807" for this suite. @ 10/15/24 10:49:46.166
• [29.514 seconds]
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 10/15/24 10:49:46.197
  I1015 10:49:46.197823 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename containers @ 10/15/24 10:49:46.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:49:46.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:49:46.246
  E1015 10:49:46.346300      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:49:47.346933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:49:48.347263      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:49:49.348255      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:49:50.348862      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:49:50.363121 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-7674" for this suite. @ 10/15/24 10:49:50.389
• [4.217 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:841
  STEP: Creating a kubernetes client @ 10/15/24 10:49:50.417
  I1015 10:49:50.417258 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename webhook @ 10/15/24 10:49:50.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:49:50.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:49:50.472
  STEP: Setting up server cert @ 10/15/24 10:49:50.52
  E1015 10:49:51.349069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:49:52.349765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/15/24 10:49:52.737
  STEP: Deploying the webhook pod @ 10/15/24 10:49:52.755
  STEP: Wait for the deployment to be ready @ 10/15/24 10:49:52.793
  I1015 10:49:52.825587 22 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1015 10:49:53.350423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:49:54.351664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/15/24 10:49:54.856
  STEP: Verifying the service has paired with the endpoint @ 10/15/24 10:49:54.895
  E1015 10:49:55.352036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:49:55.896329 22 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 10/15/24 10:49:55.911
  I1015 10:49:56.062239 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4192" for this suite. @ 10/15/24 10:49:56.133
  STEP: Destroying namespace "webhook-markers-3899" for this suite. @ 10/15/24 10:49:56.171
• [5.800 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 10/15/24 10:49:56.218
  I1015 10:49:56.219029 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename daemonsets @ 10/15/24 10:49:56.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:49:56.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:49:56.28
  E1015 10:49:56.352691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating simple DaemonSet "daemon-set" @ 10/15/24 10:49:56.405
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/15/24 10:49:56.415
  I1015 10:49:56.430925 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:49:56.431139 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:49:56.431232 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:49:56.455878 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1015 10:49:56.456006 22 fixtures.go:130] Node env1-test-worker-0 is running 0 daemon pod, expected 1
  E1015 10:49:57.353678      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:49:57.428140 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:49:57.428362 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:49:57.428539 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:49:57.435355 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1015 10:49:57.435822 22 fixtures.go:130] Node env1-test-worker-0 is running 0 daemon pod, expected 1
  E1015 10:49:58.354149      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:49:58.432242 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:49:58.432931 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:49:58.433401 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:49:58.445693 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1015 10:49:58.445762 22 fixtures.go:130] Node env1-test-worker-0 is running 0 daemon pod, expected 1
  E1015 10:49:59.354884      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:49:59.425435 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:49:59.425519 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:49:59.425575 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:49:59.434306 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1015 10:49:59.434415 22 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 10/15/24 10:49:59.443
  STEP: DeleteCollection of the DaemonSets @ 10/15/24 10:49:59.452
  STEP: Verify that ReplicaSets have been deleted @ 10/15/24 10:49:59.473
  I1015 10:49:59.542512 22 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"53488866"},"items":null}

  I1015 10:49:59.553677 22 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"53488866"},"items":[{"metadata":{"name":"daemon-set-2wdgj","generateName":"daemon-set-","namespace":"daemonsets-7638","uid":"999e3eed-c0f1-4339-8421-a06b5b366988","resourceVersion":"53488866","creationTimestamp":"2024-10-15T10:49:56Z","deletionTimestamp":"2024-10-15T10:50:29Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"7d79bd845c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"dc55e3d59d461d3349994f65953e0b44c24b83840b28c4680d663d155c024898","cni.projectcalico.org/podIP":"10.233.87.91/32","cni.projectcalico.org/podIPs":"10.233.87.91/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"8e38a0aa-493b-4e71-b34f-f05d574d973d","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-10-15T10:49:56Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8e38a0aa-493b-4e71-b34f-f05d574d973d\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-10-15T10:49:57Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-10-15T10:49:58Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.87.91\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-ncwfx","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-ncwfx","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"env1-test-worker-1","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["env1-test-worker-1"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-15T10:49:58Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-15T10:49:56Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-15T10:49:58Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-15T10:49:58Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-15T10:49:56Z"}],"hostIP":"10.61.1.201","hostIPs":[{"ip":"10.61.1.201"}],"podIP":"10.233.87.91","podIPs":[{"ip":"10.233.87.91"}],"startTime":"2024-10-15T10:49:56Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-10-15T10:49:57Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://9dda4119de5aa8c2b5ef4060954c5767cd9230e3cb0e5e48c6146f88d4272647","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-4k7gp","generateName":"daemon-set-","namespace":"daemonsets-7638","uid":"a9176060-5d90-4959-8111-b1569832e9ed","resourceVersion":"53488864","creationTimestamp":"2024-10-15T10:49:56Z","deletionTimestamp":"2024-10-15T10:50:29Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"7d79bd845c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"491a0beb1ea78b6c7548c7c0ebc544c90f105e4a0592ff316e6dc401a9fd887a","cni.projectcalico.org/podIP":"10.233.118.37/32","cni.projectcalico.org/podIPs":"10.233.118.37/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"8e38a0aa-493b-4e71-b34f-f05d574d973d","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-10-15T10:49:56Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8e38a0aa-493b-4e71-b34f-f05d574d973d\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-10-15T10:49:57Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-10-15T10:49:58Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.118.37\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-q2qjh","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-q2qjh","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"env1-test-worker-0","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["env1-test-worker-0"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-15T10:49:58Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-15T10:49:56Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-15T10:49:58Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-15T10:49:58Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-15T10:49:56Z"}],"hostIP":"10.61.1.200","hostIPs":[{"ip":"10.61.1.200"}],"podIP":"10.233.118.37","podIPs":[{"ip":"10.233.118.37"}],"startTime":"2024-10-15T10:49:56Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-10-15T10:49:57Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://fe8e1b2720c6e4777103c092203b6668f16fb3e4ccec527a18848e6a3951edbc","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-z29q5","generateName":"daemon-set-","namespace":"daemonsets-7638","uid":"2da3d748-8662-42fb-94c6-e9a0704f838b","resourceVersion":"53488865","creationTimestamp":"2024-10-15T10:49:56Z","deletionTimestamp":"2024-10-15T10:50:29Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"7d79bd845c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"23a084d0b8a2ca810a6d243807e3231d3d03e7861cfbb3b2aa691b4a28d7886a","cni.projectcalico.org/podIP":"10.233.76.164/32","cni.projectcalico.org/podIPs":"10.233.76.164/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"8e38a0aa-493b-4e71-b34f-f05d574d973d","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-10-15T10:49:56Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"8e38a0aa-493b-4e71-b34f-f05d574d973d\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-10-15T10:49:57Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-10-15T10:49:58Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.233.76.164\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-t2fbw","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-t2fbw","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"env1-test-worker-2","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["env1-test-worker-2"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-15T10:49:58Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-15T10:49:56Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-15T10:49:58Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-15T10:49:58Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-10-15T10:49:56Z"}],"hostIP":"10.61.1.202","hostIPs":[{"ip":"10.61.1.202"}],"podIP":"10.233.76.164","podIPs":[{"ip":"10.233.76.164"}],"startTime":"2024-10-15T10:49:56Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-10-15T10:49:57Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://1cd038ceadc71e39a955c6b138a582562da805aa92cd59944718034c4d287c1d","started":true}],"qosClass":"BestEffort"}}]}

  I1015 10:49:59.602769 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7638" for this suite. @ 10/15/24 10:49:59.617
• [3.418 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 10/15/24 10:49:59.639
  I1015 10:49:59.639641 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename downward-api @ 10/15/24 10:49:59.641
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:49:59.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:49:59.705
  STEP: Creating a pod to test downward api env vars @ 10/15/24 10:49:59.713
  E1015 10:50:00.354903      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:50:01.355594      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:50:02.356395      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:50:03.357282      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 10:50:03.781
  I1015 10:50:03.789357 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod downward-api-674042c4-5763-418a-9e51-03b560752a45 container dapi-container: <nil>
  STEP: delete the pod @ 10/15/24 10:50:03.804
  I1015 10:50:03.839393 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7730" for this suite. @ 10/15/24 10:50:03.852
• [4.229 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 10/15/24 10:50:03.868
  I1015 10:50:03.869086 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename replication-controller @ 10/15/24 10:50:03.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:50:03.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:50:03.921
  I1015 10:50:03.933710 22 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 10/15/24 10:50:03.955
  STEP: Checking rc "condition-test" has the desired failure condition set @ 10/15/24 10:50:03.965
  E1015 10:50:04.358075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 10/15/24 10:50:05.028
  I1015 10:50:05.046529 22 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 10/15/24 10:50:05.046
  E1015 10:50:05.359383      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:50:06.083570 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5582" for this suite. @ 10/15/24 10:50:06.095
• [2.248 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 10/15/24 10:50:06.117
  I1015 10:50:06.117754 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename container-probe @ 10/15/24 10:50:06.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:50:06.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:50:06.167
  STEP: Creating pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263 @ 10/15/24 10:50:06.172
  E1015 10:50:06.359573      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:50:07.359723      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 10/15/24 10:50:08.224
  I1015 10:50:08.231605 22 container_probe.go:1749] Initial restart count of pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 is 0
  I1015 10:50:08.242662 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:50:08.360720      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:50:09.360858      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:50:10.260801 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:50:10.361047      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:50:11.361342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:50:12.274949 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:50:12.362107      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:50:13.362841      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:50:14.289505 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:50:14.362793      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:50:15.363551      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:50:16.298322 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:50:16.364339      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:50:17.364850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:50:18.307851 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:50:18.365774      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:50:19.366587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:50:20.319947 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:50:20.367326      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:50:21.367980      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:50:22.329505 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:50:22.369377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:50:23.370585      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:50:24.341368 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:50:24.371666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:50:25.372101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:50:26.358972 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:50:26.372834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:50:27.373097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:50:28.366093 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:50:28.373475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:50:29.373929      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:50:30.374600      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:50:30.398997 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:50:31.375072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:50:32.376286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:50:32.411097 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:50:33.376763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:50:34.377299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:50:34.424962 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:50:35.377915      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:50:36.377965      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:50:36.441785 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:50:37.378344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:50:38.378607      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:50:38.458121 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:50:39.379568      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:50:40.379514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:50:40.466308 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:50:41.379920      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:50:42.380613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:50:42.476970 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:50:43.380849      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:50:44.381320      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:50:44.487595 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:50:45.382430      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:50:46.383041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:50:46.529018 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:50:47.383832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:50:48.384579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:50:48.537074 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:50:49.384708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:50:50.385296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:50:50.549695 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:50:51.385356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:50:52.386206      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:50:52.559179 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:50:53.386305      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:50:54.386565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:50:54.568373 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:50:55.387130      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:50:56.388212      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:50:56.577179 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:50:57.388960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:50:58.389863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:50:58.588880 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:50:59.390621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:51:00.390889      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:51:00.601734 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:51:01.391089      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:51:02.391630      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:51:02.610846 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:51:03.391771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:51:04.392313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:51:04.629246 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:51:05.392447      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:51:06.393600      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:51:06.638895 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:51:07.394083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:51:08.394856      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:51:08.649889 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:51:09.395136      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:51:10.395299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:51:10.660148 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:51:11.396408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:51:12.396760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:51:12.665380 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:51:13.397491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:51:14.397785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:51:14.678457 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:51:15.398060      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:51:16.399041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:51:16.690887 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:51:17.399041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:51:18.400046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:51:18.704650 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:51:19.400476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:51:20.400946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:51:20.714834 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:51:21.401659      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:51:22.402577      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:51:22.723890 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:51:23.402755      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:51:24.403337      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:51:24.734719 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:51:25.403362      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:51:26.404127      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:51:26.743814 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:51:27.404348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:51:28.404570      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:51:28.753496 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:51:29.404660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:51:30.405232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:51:30.765186 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:51:31.405254      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:51:32.405889      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:51:32.776288 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:51:33.405939      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:51:34.406169      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:51:34.790526 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:51:35.407327      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:51:36.408327      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:51:36.799195 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:51:37.408843      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:51:38.409661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:51:38.807540 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:51:39.410687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:51:40.411579      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:51:40.815254 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:51:41.411783      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:51:42.413007      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:51:42.824516 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:51:43.413584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:51:44.414753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:51:44.833031 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:51:45.415397      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:51:46.416443      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:51:46.841960 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:51:47.416727      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:51:48.417523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:51:48.851112 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:51:49.417662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:51:50.418724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:51:50.860098 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:51:51.418979      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:51:52.419554      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:51:52.866511 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:51:53.419890      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:51:54.420067      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:51:54.895169 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:51:55.420458      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:51:56.421102      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:51:56.901325 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:51:57.421951      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:51:58.422746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:51:58.910597 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:51:59.422800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:52:00.423033      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:52:00.918748 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:52:01.423397      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:52:02.423492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:52:02.929898 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:52:03.423738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:52:04.424347      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:52:04.937134 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:52:05.424598      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:52:06.425631      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:52:06.949516 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:52:07.426096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:52:08.426284      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:52:08.989856 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:52:09.426380      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:52:10.426811      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:52:11.002490 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:52:11.427312      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:52:12.427608      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:52:13.010406 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:52:13.427998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:52:14.428486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:52:15.021730 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:52:15.428716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:52:16.429423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:52:17.029533 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:52:17.430115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:52:18.430922      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:52:19.037009 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:52:19.431969      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:52:20.432960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:52:21.047804 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:52:21.433075      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:52:22.433627      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:52:23.055931 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:52:23.434415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:52:24.434904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:52:25.065842 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:52:25.435592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:52:26.436402      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:52:27.077524 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:52:27.436850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:52:28.437990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:52:29.091040 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:52:29.437744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:52:30.438338      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:52:31.106630 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:52:31.439293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:52:32.439593      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:52:33.115051 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:52:33.440737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:52:34.441260      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:52:35.124859 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:52:35.442118      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:52:36.443835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:52:37.135339 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:52:37.443791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:52:38.443721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:52:39.157956 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:52:39.444788      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:52:40.445323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:52:41.166114 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:52:41.446367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:52:42.446761      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:52:43.175545 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:52:43.447754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:52:44.448642      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:52:45.187032 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:52:45.449383      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:52:46.450196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:52:47.198592 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:52:47.451046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:52:48.451818      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:52:49.212455 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:52:49.451735      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:52:50.452026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:52:51.229686 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:52:51.453032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:52:52.453699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:52:53.240962 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:52:53.454223      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:52:54.454637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:52:55.249761 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:52:55.455476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:52:56.455561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:52:57.257689 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:52:57.455832      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:52:58.456523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:52:59.268650 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:52:59.457255      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:53:00.457463      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:53:01.276578 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:53:01.457791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:53:02.458293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:53:03.282682 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:53:03.459269      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:53:04.459906      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:53:05.295197 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:53:05.460580      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:53:06.461621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:53:07.304328 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:53:07.462511      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:53:08.463497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:53:09.317034 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:53:09.464285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:53:10.464759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:53:11.326790 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:53:11.465231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:53:12.465653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:53:13.333917 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:53:13.465960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:53:14.466356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:53:15.340582 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:53:15.466437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:53:16.466814      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:53:17.349824 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:53:17.467948      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:53:18.468602      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:53:19.372058 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:53:19.469766      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:53:20.470175      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:53:21.384092 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:53:21.471169      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:53:22.471961      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:53:23.392967 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:53:23.472070      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:53:24.472137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:53:25.414503 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:53:25.473083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:53:26.474046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:53:27.422098 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:53:27.474676      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:53:28.475646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:53:29.431126 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:53:29.475765      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:53:30.476128      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:53:31.446455 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:53:31.476268      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:53:32.476668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:53:33.454431 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:53:33.477571      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:53:34.478097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:53:35.463760 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:53:35.478807      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:53:36.479742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:53:37.474409 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:53:37.480565      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:53:38.481515      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:53:39.481717      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:53:39.485680 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:53:40.482453      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:53:41.482614      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:53:41.499020 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:53:42.483543      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:53:43.484327      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:53:43.510178 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:53:44.484548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:53:45.485640      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:53:45.526548 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:53:46.485961      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:53:47.486504      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:53:47.533874 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:53:48.487609      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:53:49.487999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:53:49.547559 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:53:50.488446      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:53:51.489109      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:53:51.559872 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:53:52.489597      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:53:53.490671      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:53:53.569439 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:53:54.491650      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:53:55.492078      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:53:55.580484 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:53:56.492878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:53:57.493622      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:53:57.590959 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:53:58.494657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:53:59.495016      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:53:59.601322 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:54:00.495289      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:54:01.495897      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:54:01.611955 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:54:02.495963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:54:03.496725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:54:03.619240 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:54:04.497741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:54:05.498118      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:54:05.629752 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:54:06.498233      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:54:07.498687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:54:07.636267 22 container_probe.go:1759] Get pod test-webserver-55cb5f45-72b1-4b53-ad26-d01d3f454490 in namespace container-probe-263
  E1015 10:54:08.498879      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:54:09.499293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 10/15/24 10:54:09.637
  I1015 10:54:09.690755 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-263" for this suite. @ 10/15/24 10:54:09.712
• [243.609 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 10/15/24 10:54:09.753
  I1015 10:54:09.753290 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename runtimeclass @ 10/15/24 10:54:09.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:54:09.798
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:54:09.804
  E1015 10:54:10.500121      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:54:11.500272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:54:11.918624 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6508" for this suite. @ 10/15/24 10:54:11.934
• [2.201 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2203
  STEP: Creating a kubernetes client @ 10/15/24 10:54:11.954
  I1015 10:54:11.954769 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename services @ 10/15/24 10:54:11.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:54:12.001
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:54:12.012
  STEP: creating service in namespace services-6994 @ 10/15/24 10:54:12.022
  STEP: creating service affinity-clusterip-transition in namespace services-6994 @ 10/15/24 10:54:12.022
  STEP: creating replication controller affinity-clusterip-transition in namespace services-6994 @ 10/15/24 10:54:12.07
  I1015 10:54:12.123763      22 runners.go:198] Created replication controller with name: affinity-clusterip-transition, namespace: services-6994, replica count: 3
  E1015 10:54:12.501323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:54:13.502138      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:54:14.502454      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:54:15.176149      22 runners.go:198] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1015 10:54:15.193712 22 resource.go:361] Creating new exec pod
  E1015 10:54:15.502604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:54:16.503391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:54:17.507491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:54:18.228384 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-6994 exec execpod-affinityppsx4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  E1015 10:54:18.507946      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:54:18.666369 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  I1015 10:54:18.666480 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1015 10:54:18.666661 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-6994 exec execpod-affinityppsx4 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.63.143 80'
  I1015 10:54:19.016646 22 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.63.143 80\nConnection to 10.233.63.143 80 port [tcp/http] succeeded!\n"
  I1015 10:54:19.016728 22 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1015 10:54:19.038044 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-6994 exec execpod-affinityppsx4 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.63.143:80/ ; done'
  E1015 10:54:19.508387      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:54:19.655064 22 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.143:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.143:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.143:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.143:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.143:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.143:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.143:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.143:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.143:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.143:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.143:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.143:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.143:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.143:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.143:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.143:80/\n"
  I1015 10:54:19.655207 22 builder.go:147] stdout: "\naffinity-clusterip-transition-q9nww\naffinity-clusterip-transition-9mqpk\naffinity-clusterip-transition-l6hcj\naffinity-clusterip-transition-q9nww\naffinity-clusterip-transition-9mqpk\naffinity-clusterip-transition-l6hcj\naffinity-clusterip-transition-q9nww\naffinity-clusterip-transition-9mqpk\naffinity-clusterip-transition-l6hcj\naffinity-clusterip-transition-q9nww\naffinity-clusterip-transition-9mqpk\naffinity-clusterip-transition-l6hcj\naffinity-clusterip-transition-q9nww\naffinity-clusterip-transition-9mqpk\naffinity-clusterip-transition-l6hcj\naffinity-clusterip-transition-q9nww"
  I1015 10:54:19.655391 22 service.go:242] Received response from host: affinity-clusterip-transition-q9nww
  I1015 10:54:19.655674 22 service.go:242] Received response from host: affinity-clusterip-transition-9mqpk
  I1015 10:54:19.655729 22 service.go:242] Received response from host: affinity-clusterip-transition-l6hcj
  I1015 10:54:19.655786 22 service.go:242] Received response from host: affinity-clusterip-transition-q9nww
  I1015 10:54:19.655818 22 service.go:242] Received response from host: affinity-clusterip-transition-9mqpk
  I1015 10:54:19.655858 22 service.go:242] Received response from host: affinity-clusterip-transition-l6hcj
  I1015 10:54:19.655921 22 service.go:242] Received response from host: affinity-clusterip-transition-q9nww
  I1015 10:54:19.656106 22 service.go:242] Received response from host: affinity-clusterip-transition-9mqpk
  I1015 10:54:19.656154 22 service.go:242] Received response from host: affinity-clusterip-transition-l6hcj
  I1015 10:54:19.656199 22 service.go:242] Received response from host: affinity-clusterip-transition-q9nww
  I1015 10:54:19.656255 22 service.go:242] Received response from host: affinity-clusterip-transition-9mqpk
  I1015 10:54:19.656297 22 service.go:242] Received response from host: affinity-clusterip-transition-l6hcj
  I1015 10:54:19.656362 22 service.go:242] Received response from host: affinity-clusterip-transition-q9nww
  I1015 10:54:19.656416 22 service.go:242] Received response from host: affinity-clusterip-transition-9mqpk
  I1015 10:54:19.656449 22 service.go:242] Received response from host: affinity-clusterip-transition-l6hcj
  I1015 10:54:19.656500 22 service.go:242] Received response from host: affinity-clusterip-transition-q9nww
  I1015 10:54:19.684740 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=services-6994 exec execpod-affinityppsx4 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.63.143:80/ ; done'
  I1015 10:54:20.177728 22 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.143:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.143:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.143:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.143:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.143:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.143:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.143:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.143:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.143:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.143:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.143:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.143:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.143:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.143:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.143:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.63.143:80/\n"
  I1015 10:54:20.177855 22 builder.go:147] stdout: "\naffinity-clusterip-transition-l6hcj\naffinity-clusterip-transition-l6hcj\naffinity-clusterip-transition-l6hcj\naffinity-clusterip-transition-l6hcj\naffinity-clusterip-transition-l6hcj\naffinity-clusterip-transition-l6hcj\naffinity-clusterip-transition-l6hcj\naffinity-clusterip-transition-l6hcj\naffinity-clusterip-transition-l6hcj\naffinity-clusterip-transition-l6hcj\naffinity-clusterip-transition-l6hcj\naffinity-clusterip-transition-l6hcj\naffinity-clusterip-transition-l6hcj\naffinity-clusterip-transition-l6hcj\naffinity-clusterip-transition-l6hcj\naffinity-clusterip-transition-l6hcj"
  I1015 10:54:20.177890 22 service.go:242] Received response from host: affinity-clusterip-transition-l6hcj
  I1015 10:54:20.177920 22 service.go:242] Received response from host: affinity-clusterip-transition-l6hcj
  I1015 10:54:20.177944 22 service.go:242] Received response from host: affinity-clusterip-transition-l6hcj
  I1015 10:54:20.177962 22 service.go:242] Received response from host: affinity-clusterip-transition-l6hcj
  I1015 10:54:20.177982 22 service.go:242] Received response from host: affinity-clusterip-transition-l6hcj
  I1015 10:54:20.178086 22 service.go:242] Received response from host: affinity-clusterip-transition-l6hcj
  I1015 10:54:20.178101 22 service.go:242] Received response from host: affinity-clusterip-transition-l6hcj
  I1015 10:54:20.178115 22 service.go:242] Received response from host: affinity-clusterip-transition-l6hcj
  I1015 10:54:20.178132 22 service.go:242] Received response from host: affinity-clusterip-transition-l6hcj
  I1015 10:54:20.178145 22 service.go:242] Received response from host: affinity-clusterip-transition-l6hcj
  I1015 10:54:20.178158 22 service.go:242] Received response from host: affinity-clusterip-transition-l6hcj
  I1015 10:54:20.178171 22 service.go:242] Received response from host: affinity-clusterip-transition-l6hcj
  I1015 10:54:20.178184 22 service.go:242] Received response from host: affinity-clusterip-transition-l6hcj
  I1015 10:54:20.178197 22 service.go:242] Received response from host: affinity-clusterip-transition-l6hcj
  I1015 10:54:20.178209 22 service.go:242] Received response from host: affinity-clusterip-transition-l6hcj
  I1015 10:54:20.178225 22 service.go:242] Received response from host: affinity-clusterip-transition-l6hcj
  I1015 10:54:20.178395 22 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-6994, will wait for the garbage collector to delete the pods @ 10/15/24 10:54:20.208
  I1015 10:54:20.293457 22 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 14.06638ms
  I1015 10:54:20.394846 22 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 101.386541ms
  E1015 10:54:20.510041      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:54:21.510490      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:54:22.510801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:54:23.511406      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:54:23.742207 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6994" for this suite. @ 10/15/24 10:54:23.757
• [11.830 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 10/15/24 10:54:23.785
  I1015 10:54:23.785930 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename configmap @ 10/15/24 10:54:23.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:54:23.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:54:23.834
  STEP: Creating configMap with name configmap-test-upd-e5d32039-a5c2-4a5e-8c8a-65beb3d1fd0f @ 10/15/24 10:54:23.858
  STEP: Creating the pod @ 10/15/24 10:54:23.875
  E1015 10:54:24.511572      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:54:25.512541      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod with text data @ 10/15/24 10:54:25.917
  STEP: Waiting for pod with binary data @ 10/15/24 10:54:25.954
  I1015 10:54:25.973425 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1790" for this suite. @ 10/15/24 10:54:25.985
• [2.221 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 10/15/24 10:54:26.009
  I1015 10:54:26.009246 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename csiinlinevolumes @ 10/15/24 10:54:26.011
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:54:26.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:54:26.054
  STEP: Creating two CSIDrivers @ 10/15/24 10:54:26.062
  STEP: Getting "inline-driver-70ff2dfe-3dca-47db-8e09-9bb3901cd1f9" & "inline-driver-1808968c-d5f7-43d7-a0dc-c78dfed7b4a2" @ 10/15/24 10:54:26.104
  STEP: Patching the CSIDriver "inline-driver-1808968c-d5f7-43d7-a0dc-c78dfed7b4a2" @ 10/15/24 10:54:26.12
  STEP: Updating the CSIDriver "inline-driver-1808968c-d5f7-43d7-a0dc-c78dfed7b4a2" @ 10/15/24 10:54:26.146
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-7250" @ 10/15/24 10:54:26.169
  STEP: Deleting CSIDriver "inline-driver-70ff2dfe-3dca-47db-8e09-9bb3901cd1f9" @ 10/15/24 10:54:26.177
  STEP: Confirm deletion of CSIDriver "inline-driver-70ff2dfe-3dca-47db-8e09-9bb3901cd1f9" @ 10/15/24 10:54:26.197
  STEP: Deleting CSIDriver "inline-driver-1808968c-d5f7-43d7-a0dc-c78dfed7b4a2" via DeleteCollection @ 10/15/24 10:54:26.206
  STEP: Confirm deletion of CSIDriver "inline-driver-1808968c-d5f7-43d7-a0dc-c78dfed7b4a2" @ 10/15/24 10:54:26.223
  I1015 10:54:26.230643 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-7250" for this suite. @ 10/15/24 10:54:26.242
• [0.253 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 10/15/24 10:54:26.266
  I1015 10:54:26.266589 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename chunking @ 10/15/24 10:54:26.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:54:26.317
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:54:26.326
  STEP: creating a large number of resources @ 10/15/24 10:54:26.343
  E1015 10:54:26.513386      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:54:27.514369      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:54:28.515116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:54:29.515935      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:54:30.516751      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:54:31.518703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:54:32.519496      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:54:33.519637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:54:34.521135      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:54:35.520722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:54:36.520934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:54:37.521024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:54:38.521159      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:54:39.522166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:54:40.522379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:54:41.523101      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:54:42.523870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:54:43.524299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving those results in paged fashion several times @ 10/15/24 10:54:43.998
  I1015 10:54:44.030129 22 chunking.go:98] Retrieved 17/17 results with rv 53490686 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2ODYsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I1015 10:54:44.091201 22 chunking.go:98] Retrieved 17/17 results with rv 53490686 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2ODYsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I1015 10:54:44.133076 22 chunking.go:98] Retrieved 17/17 results with rv 53490686 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2ODYsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I1015 10:54:44.180277 22 chunking.go:98] Retrieved 17/17 results with rv 53490686 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2ODYsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I1015 10:54:44.232213 22 chunking.go:98] Retrieved 17/17 results with rv 53490686 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2ODYsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I1015 10:54:44.286132 22 chunking.go:98] Retrieved 17/17 results with rv 53490686 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2ODYsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I1015 10:54:44.331948 22 chunking.go:98] Retrieved 17/17 results with rv 53490686 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2ODYsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I1015 10:54:44.401435 22 chunking.go:98] Retrieved 17/17 results with rv 53490686 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2ODYsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I1015 10:54:44.435919 22 chunking.go:98] Retrieved 17/17 results with rv 53490686 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2ODYsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I1015 10:54:44.478401 22 chunking.go:98] Retrieved 17/17 results with rv 53490686 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2ODYsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  E1015 10:54:44.524724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:54:44.532216 22 chunking.go:98] Retrieved 17/17 results with rv 53490686 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2ODYsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I1015 10:54:44.579534 22 chunking.go:98] Retrieved 17/17 results with rv 53490686 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2ODYsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I1015 10:54:44.632456 22 chunking.go:98] Retrieved 17/17 results with rv 53490686 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2ODYsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I1015 10:54:44.681253 22 chunking.go:98] Retrieved 17/17 results with rv 53490686 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2ODYsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I1015 10:54:44.729040 22 chunking.go:98] Retrieved 17/17 results with rv 53490686 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2ODYsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I1015 10:54:44.778839 22 chunking.go:98] Retrieved 17/17 results with rv 53490686 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2ODYsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I1015 10:54:44.829777 22 chunking.go:98] Retrieved 17/17 results with rv 53490686 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2ODYsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I1015 10:54:44.881195 22 chunking.go:98] Retrieved 17/17 results with rv 53490686 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2ODYsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I1015 10:54:44.926730 22 chunking.go:98] Retrieved 17/17 results with rv 53490686 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2ODYsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I1015 10:54:44.979097 22 chunking.go:98] Retrieved 17/17 results with rv 53490686 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2ODYsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I1015 10:54:45.031590 22 chunking.go:98] Retrieved 17/17 results with rv 53490686 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2ODYsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I1015 10:54:45.079142 22 chunking.go:98] Retrieved 17/17 results with rv 53490686 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2ODYsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I1015 10:54:45.129434 22 chunking.go:98] Retrieved 17/17 results with rv 53490686 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2ODYsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I1015 10:54:45.198587 22 chunking.go:98] Retrieved 9/17 results with rv 53490686 and continue 
  I1015 10:54:45.233274 22 chunking.go:98] Retrieved 17/17 results with rv 53490692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I1015 10:54:45.286062 22 chunking.go:98] Retrieved 17/17 results with rv 53490692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I1015 10:54:45.342245 22 chunking.go:98] Retrieved 17/17 results with rv 53490692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I1015 10:54:45.379232 22 chunking.go:98] Retrieved 17/17 results with rv 53490692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I1015 10:54:45.431356 22 chunking.go:98] Retrieved 17/17 results with rv 53490692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I1015 10:54:45.481025 22 chunking.go:98] Retrieved 17/17 results with rv 53490692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  E1015 10:54:45.525502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:54:45.529138 22 chunking.go:98] Retrieved 17/17 results with rv 53490692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I1015 10:54:45.580663 22 chunking.go:98] Retrieved 17/17 results with rv 53490692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I1015 10:54:45.628966 22 chunking.go:98] Retrieved 17/17 results with rv 53490692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I1015 10:54:45.680957 22 chunking.go:98] Retrieved 17/17 results with rv 53490692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I1015 10:54:45.734080 22 chunking.go:98] Retrieved 17/17 results with rv 53490692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I1015 10:54:45.780890 22 chunking.go:98] Retrieved 17/17 results with rv 53490692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I1015 10:54:45.835178 22 chunking.go:98] Retrieved 17/17 results with rv 53490692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I1015 10:54:45.885139 22 chunking.go:98] Retrieved 17/17 results with rv 53490692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I1015 10:54:45.933983 22 chunking.go:98] Retrieved 17/17 results with rv 53490692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I1015 10:54:45.979902 22 chunking.go:98] Retrieved 17/17 results with rv 53490692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I1015 10:54:46.032878 22 chunking.go:98] Retrieved 17/17 results with rv 53490692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I1015 10:54:46.083147 22 chunking.go:98] Retrieved 17/17 results with rv 53490692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I1015 10:54:46.136203 22 chunking.go:98] Retrieved 17/17 results with rv 53490692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I1015 10:54:46.182928 22 chunking.go:98] Retrieved 17/17 results with rv 53490692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I1015 10:54:46.238018 22 chunking.go:98] Retrieved 17/17 results with rv 53490692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I1015 10:54:46.283759 22 chunking.go:98] Retrieved 17/17 results with rv 53490692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I1015 10:54:46.334576 22 chunking.go:98] Retrieved 17/17 results with rv 53490692 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTIsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I1015 10:54:46.378994 22 chunking.go:98] Retrieved 9/17 results with rv 53490692 and continue 
  I1015 10:54:46.432665 22 chunking.go:98] Retrieved 17/17 results with rv 53490695 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTUsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I1015 10:54:46.491594 22 chunking.go:98] Retrieved 17/17 results with rv 53490695 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTUsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  E1015 10:54:46.525894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:54:46.565640 22 chunking.go:98] Retrieved 17/17 results with rv 53490695 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTUsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I1015 10:54:46.580054 22 chunking.go:98] Retrieved 17/17 results with rv 53490695 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTUsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I1015 10:54:46.644218 22 chunking.go:98] Retrieved 17/17 results with rv 53490695 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTUsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I1015 10:54:46.694429 22 chunking.go:98] Retrieved 17/17 results with rv 53490695 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTUsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I1015 10:54:46.730958 22 chunking.go:98] Retrieved 17/17 results with rv 53490695 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTUsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I1015 10:54:46.787051 22 chunking.go:98] Retrieved 17/17 results with rv 53490695 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTUsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I1015 10:54:46.864344 22 chunking.go:98] Retrieved 17/17 results with rv 53490695 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTUsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I1015 10:54:46.880289 22 chunking.go:98] Retrieved 17/17 results with rv 53490695 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTUsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I1015 10:54:46.938040 22 chunking.go:98] Retrieved 17/17 results with rv 53490695 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTUsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I1015 10:54:46.980067 22 chunking.go:98] Retrieved 17/17 results with rv 53490695 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTUsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I1015 10:54:47.029674 22 chunking.go:98] Retrieved 17/17 results with rv 53490695 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTUsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I1015 10:54:47.089756 22 chunking.go:98] Retrieved 17/17 results with rv 53490695 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTUsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I1015 10:54:47.134669 22 chunking.go:98] Retrieved 17/17 results with rv 53490695 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTUsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I1015 10:54:47.178870 22 chunking.go:98] Retrieved 17/17 results with rv 53490695 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTUsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I1015 10:54:47.231313 22 chunking.go:98] Retrieved 17/17 results with rv 53490695 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTUsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I1015 10:54:47.287872 22 chunking.go:98] Retrieved 17/17 results with rv 53490695 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTUsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I1015 10:54:47.330513 22 chunking.go:98] Retrieved 17/17 results with rv 53490695 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTUsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I1015 10:54:47.379864 22 chunking.go:98] Retrieved 17/17 results with rv 53490695 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTUsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I1015 10:54:47.431682 22 chunking.go:98] Retrieved 17/17 results with rv 53490695 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTUsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I1015 10:54:47.482517 22 chunking.go:98] Retrieved 17/17 results with rv 53490695 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTUsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  E1015 10:54:47.526827      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:54:47.529599 22 chunking.go:98] Retrieved 17/17 results with rv 53490695 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTM0OTA2OTUsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I1015 10:54:47.578660 22 chunking.go:98] Retrieved 9/17 results with rv 53490695 and continue 
  STEP: retrieving those results all at once @ 10/15/24 10:54:47.578
  I1015 10:54:47.662225 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-8068" for this suite. @ 10/15/24 10:54:47.686
• [21.479 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1858
  STEP: Creating a kubernetes client @ 10/15/24 10:54:47.746
  I1015 10:54:47.746541 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename kubectl @ 10/15/24 10:54:47.751
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:54:47.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:54:47.834
  STEP: Starting the proxy @ 10/15/24 10:54:47.843
  I1015 10:54:47.844255 22 util.go:592] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-2409 proxy --unix-socket=/tmp/kubectl-proxy-unix4013900399/test'
  STEP: retrieving proxy /api/ output @ 10/15/24 10:54:47.98
  I1015 10:54:47.986350 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2409" for this suite. @ 10/15/24 10:54:47.997
• [0.270 seconds]
------------------------------
S
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 10/15/24 10:54:48.017
  I1015 10:54:48.017120 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename taint-single-pod @ 10/15/24 10:54:48.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:54:48.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:54:48.071
  I1015 10:54:48.078583 22 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1015 10:54:48.527189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:54:49.528372      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:54:50.528114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:54:51.529072      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:54:52.529391      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:54:53.530147      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:54:54.531039      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:54:55.531083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:54:56.531298      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:54:57.531801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:54:58.532279      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:54:59.539333      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:00.534995      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:01.534426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:02.534662      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:03.535490      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:04.535950      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:05.536592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:06.537657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:07.538625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:08.539767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:09.539944      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:10.540373      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:11.540828      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:12.542036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:13.542195      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:14.542956      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:15.543251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:16.543753      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:17.543817      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:18.544611      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:19.544894      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:20.545795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:21.546274      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:22.547162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:23.547822      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:24.548902      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:25.549323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:26.549558      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:27.550245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:28.550768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:29.551758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:30.552865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:31.553587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:32.553708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:33.553771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:34.554066      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:35.554189      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:36.554629      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:37.554874      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:38.555863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:39.556148      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:40.557139      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:41.558240      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:42.558685      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:43.559799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:44.560085      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:45.560475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:46.561492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:47.561716      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:55:48.079279 22 util.go:400] Waiting for terminating namespaces to be deleted...
  I1015 10:55:48.089197 22 taints.go:150] Starting informer...
  STEP: Starting pod... @ 10/15/24 10:55:48.091
  I1015 10:55:48.347619 22 taints.go:300] Pod is running on env1-test-worker-0. Tainting Node
  STEP: Trying to apply a taint on the Node @ 10/15/24 10:55:48.348
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 10/15/24 10:55:48.409
  STEP: Waiting short time to make sure Pod is queued for deletion @ 10/15/24 10:55:48.421
  I1015 10:55:48.421740 22 taints.go:319] Pod wasn't evicted. Proceeding
  I1015 10:55:48.421776 22 taints.go:326] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 10/15/24 10:55:48.527
  STEP: Waiting some time to make sure that toleration time passed. @ 10/15/24 10:55:48.55
  E1015 10:55:48.562332      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:49.562555      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:50.562752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:51.562979      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:52.563213      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:53.563646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:54.564100      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:55.565024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:56.565469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:57.566033      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:58.566313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:55:59.566998      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:00.567203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:01.567925      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:02.568561      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:03.568625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:04.568852      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:05.569134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:06.570076      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:07.570435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:08.571358      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:09.571554      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:10.572024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:11.572308      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:12.572724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:13.572787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:14.572945      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:15.573337      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:16.574239      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:17.574703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:18.575744      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:19.576036      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:20.576651      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:21.576919      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:22.577964      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:23.578754      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:24.578987      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:25.580059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:26.580943      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:27.582117      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:28.582193      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:29.582592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:30.582940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:31.583511      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:32.583802      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:33.584074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:34.584738      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:35.585653      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:36.586626      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:37.587356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:38.587661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:39.588059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:40.588462      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:41.588789      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:42.589237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:43.589253      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:44.589705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:45.589933      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:46.590092      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:47.590669      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:48.591610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:49.591952      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:50.593032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:51.593400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:52.594146      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:53.594425      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:54.594969      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:55.595327      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:56.596315      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:57.596711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:58.597850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:56:59.598074      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:00.598494      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:01.598855      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:02.599711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:57:03.551474 22 taints.go:335] Pod wasn't evicted. Test successful
  I1015 10:57:03.552652 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-672" for this suite. @ 10/15/24 10:57:03.565
• [135.564 seconds]
------------------------------
SS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 10/15/24 10:57:03.58
  I1015 10:57:03.580956 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename var-expansion @ 10/15/24 10:57:03.582
  E1015 10:57:03.600030      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:57:03.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:57:03.637
  STEP: Creating a pod to test substitution in volume subpath @ 10/15/24 10:57:03.644
  E1015 10:57:04.600864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:05.601130      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:06.601564      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:07.601642      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 10:57:07.721
  I1015 10:57:07.732184 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod var-expansion-8c843087-95a3-4f39-b263-2dc3aa34038c container dapi-container: <nil>
  STEP: delete the pod @ 10/15/24 10:57:07.773
  I1015 10:57:07.824228 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6550" for this suite. @ 10/15/24 10:57:07.84
• [4.288 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 10/15/24 10:57:07.869
  I1015 10:57:07.869541 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename configmap @ 10/15/24 10:57:07.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:57:07.912
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:57:07.921
  I1015 10:57:08.036936 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-716" for this suite. @ 10/15/24 10:57:08.048
• [0.196 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 10/15/24 10:57:08.068
  I1015 10:57:08.068635 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename certificates @ 10/15/24 10:57:08.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:57:08.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:57:08.129
  E1015 10:57:08.602426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:09.605441      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: getting /apis @ 10/15/24 10:57:10.176
  STEP: getting /apis/certificates.k8s.io @ 10/15/24 10:57:10.185
  STEP: getting /apis/certificates.k8s.io/v1 @ 10/15/24 10:57:10.187
  STEP: creating @ 10/15/24 10:57:10.189
  STEP: getting @ 10/15/24 10:57:10.216
  STEP: listing @ 10/15/24 10:57:10.222
  STEP: watching @ 10/15/24 10:57:10.228
  I1015 10:57:10.228922 22 certificates.go:316] starting watch
  STEP: patching @ 10/15/24 10:57:10.232
  STEP: updating @ 10/15/24 10:57:10.242
  I1015 10:57:10.255795 22 certificates.go:332] waiting for watch events with expected annotations
  I1015 10:57:10.256148 22 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 10/15/24 10:57:10.256
  STEP: patching /approval @ 10/15/24 10:57:10.265
  STEP: updating /approval @ 10/15/24 10:57:10.279
  STEP: getting /status @ 10/15/24 10:57:10.29
  STEP: patching /status @ 10/15/24 10:57:10.305
  STEP: updating /status @ 10/15/24 10:57:10.323
  STEP: deleting @ 10/15/24 10:57:10.34
  STEP: deleting a collection @ 10/15/24 10:57:10.416
  I1015 10:57:10.468690 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-2008" for this suite. @ 10/15/24 10:57:10.482
• [2.434 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 10/15/24 10:57:10.503
  I1015 10:57:10.503234 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename dns @ 10/15/24 10:57:10.504
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:57:10.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:57:10.561
  STEP: Creating a test headless service @ 10/15/24 10:57:10.569
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3557.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-3557.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3557.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3557.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-3557.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-3557.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-3557.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-3557.svc.cluster.local;sleep 1; done
   @ 10/15/24 10:57:10.584
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3557.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-3557.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-3557.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-3557.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-3557.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-3557.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-3557.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-3557.svc.cluster.local;sleep 1; done
   @ 10/15/24 10:57:10.585
  STEP: creating a pod to probe DNS @ 10/15/24 10:57:10.585
  STEP: submitting the pod to kubernetes @ 10/15/24 10:57:10.585
  E1015 10:57:10.606618      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:11.607208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:12.608026      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:13.608784      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:14.609474      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 10/15/24 10:57:14.67
  STEP: looking for the results for each expected name from probers @ 10/15/24 10:57:14.682
  I1015 10:57:14.701599 22 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-3557.svc.cluster.local from pod dns-3557/dns-test-15baa973-37c0-49f9-bdd3-0fcffb1a77e0: the server could not find the requested resource (get pods dns-test-15baa973-37c0-49f9-bdd3-0fcffb1a77e0)
  I1015 10:57:14.723020 22 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3557.svc.cluster.local from pod dns-3557/dns-test-15baa973-37c0-49f9-bdd3-0fcffb1a77e0: the server could not find the requested resource (get pods dns-test-15baa973-37c0-49f9-bdd3-0fcffb1a77e0)
  I1015 10:57:14.736608 22 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-3557.svc.cluster.local from pod dns-3557/dns-test-15baa973-37c0-49f9-bdd3-0fcffb1a77e0: the server could not find the requested resource (get pods dns-test-15baa973-37c0-49f9-bdd3-0fcffb1a77e0)
  I1015 10:57:14.751389 22 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-3557.svc.cluster.local from pod dns-3557/dns-test-15baa973-37c0-49f9-bdd3-0fcffb1a77e0: the server could not find the requested resource (get pods dns-test-15baa973-37c0-49f9-bdd3-0fcffb1a77e0)
  I1015 10:57:14.761714 22 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-3557.svc.cluster.local from pod dns-3557/dns-test-15baa973-37c0-49f9-bdd3-0fcffb1a77e0: the server could not find the requested resource (get pods dns-test-15baa973-37c0-49f9-bdd3-0fcffb1a77e0)
  I1015 10:57:14.775402 22 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-3557.svc.cluster.local from pod dns-3557/dns-test-15baa973-37c0-49f9-bdd3-0fcffb1a77e0: the server could not find the requested resource (get pods dns-test-15baa973-37c0-49f9-bdd3-0fcffb1a77e0)
  I1015 10:57:14.792132 22 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-3557.svc.cluster.local from pod dns-3557/dns-test-15baa973-37c0-49f9-bdd3-0fcffb1a77e0: the server could not find the requested resource (get pods dns-test-15baa973-37c0-49f9-bdd3-0fcffb1a77e0)
  I1015 10:57:14.821589 22 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-3557.svc.cluster.local from pod dns-3557/dns-test-15baa973-37c0-49f9-bdd3-0fcffb1a77e0: the server could not find the requested resource (get pods dns-test-15baa973-37c0-49f9-bdd3-0fcffb1a77e0)
  I1015 10:57:14.821723 22 dns_common.go:489] Lookups using dns-3557/dns-test-15baa973-37c0-49f9-bdd3-0fcffb1a77e0 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-3557.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-3557.svc.cluster.local wheezy_udp@dns-test-service-2.dns-3557.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-3557.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-3557.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-3557.svc.cluster.local jessie_udp@dns-test-service-2.dns-3557.svc.cluster.local jessie_tcp@dns-test-service-2.dns-3557.svc.cluster.local]

  I1015 10:57:14.860025 22 dns_common.go:495] Pod client logs for webserver: 
  I1015 10:57:14.874605 22 dns_common.go:495] Pod client logs for querier: 
  I1015 10:57:14.890977 22 dns_common.go:495] Pod client logs for jessie-querier: 
  E1015 10:57:15.610058      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:16.610628      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:17.611684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:18.611808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:19.612327      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:57:19.758818 22 dns_common.go:527] DNS probes using dns-3557/dns-test-15baa973-37c0-49f9-bdd3-0fcffb1a77e0 succeeded

  STEP: deleting the pod @ 10/15/24 10:57:19.759
  STEP: deleting the test headless service @ 10/15/24 10:57:19.796
  I1015 10:57:19.860342 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3557" for this suite. @ 10/15/24 10:57:19.88
• [9.404 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 10/15/24 10:57:19.91
  I1015 10:57:19.911283 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename controllerrevisions @ 10/15/24 10:57:19.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:57:19.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:57:19.975
  STEP: Creating DaemonSet "e2e-2c2g5-daemon-set" @ 10/15/24 10:57:20.069
  STEP: Check that daemon pods launch on every node of the cluster. @ 10/15/24 10:57:20.082
  I1015 10:57:20.111660 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:57:20.111888 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:57:20.112182 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:57:20.134140 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-2c2g5-daemon-set: 0
  I1015 10:57:20.136172 22 fixtures.go:130] Node env1-test-worker-0 is running 0 daemon pod, expected 1
  E1015 10:57:20.612430      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:57:21.100412 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:57:21.118184 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:57:21.118345 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:57:21.131585 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-2c2g5-daemon-set: 0
  I1015 10:57:21.133326 22 fixtures.go:130] Node env1-test-worker-0 is running 0 daemon pod, expected 1
  E1015 10:57:21.613536      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:57:22.094765 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:57:22.095117 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:57:22.095373 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:57:22.104046 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-2c2g5-daemon-set: 0
  I1015 10:57:22.104206 22 fixtures.go:130] Node env1-test-worker-0 is running 0 daemon pod, expected 1
  E1015 10:57:22.614827      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:57:23.097329 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-0 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:57:23.097492 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-1 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:57:23.097679 22 fixtures.go:89] DaemonSet pods can't tolerate node env1-test-master-2 with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I1015 10:57:23.106696 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-2c2g5-daemon-set: 3
  I1015 10:57:23.107481 22 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset e2e-2c2g5-daemon-set
  STEP: Confirm DaemonSet "e2e-2c2g5-daemon-set" successfully created with "daemonset-name=e2e-2c2g5-daemon-set" label @ 10/15/24 10:57:23.115
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-2c2g5-daemon-set" @ 10/15/24 10:57:23.135
  I1015 10:57:23.147070 22 controller_revision.go:162] Located ControllerRevision: "e2e-2c2g5-daemon-set-75f4647844"
  STEP: Patching ControllerRevision "e2e-2c2g5-daemon-set-75f4647844" @ 10/15/24 10:57:23.155
  I1015 10:57:23.173611 22 controller_revision.go:173] e2e-2c2g5-daemon-set-75f4647844 has been patched
  STEP: Create a new ControllerRevision @ 10/15/24 10:57:23.174
  I1015 10:57:23.188643 22 controller_revision.go:191] Created ControllerRevision: e2e-2c2g5-daemon-set-76469b9588
  STEP: Confirm that there are two ControllerRevisions @ 10/15/24 10:57:23.188
  I1015 10:57:23.188940 22 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1015 10:57:23.196789 22 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-2c2g5-daemon-set-75f4647844" @ 10/15/24 10:57:23.197
  STEP: Confirm that there is only one ControllerRevision @ 10/15/24 10:57:23.209
  I1015 10:57:23.209994 22 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1015 10:57:23.217176 22 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-2c2g5-daemon-set-76469b9588" @ 10/15/24 10:57:23.223
  I1015 10:57:23.247934 22 controller_revision.go:220] e2e-2c2g5-daemon-set-76469b9588 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 10/15/24 10:57:23.248
  W1015 10:57:23.276152      22 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 10/15/24 10:57:23.276
  I1015 10:57:23.277083 22 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  E1015 10:57:23.615225      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:57:24.277399 22 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1015 10:57:24.287345 22 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-2c2g5-daemon-set-76469b9588=updated" @ 10/15/24 10:57:24.287
  STEP: Confirm that there is only one ControllerRevision @ 10/15/24 10:57:24.307
  I1015 10:57:24.307718 22 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1015 10:57:24.322511 22 controller_revision.go:265] Found 1 ControllerRevisions
  I1015 10:57:24.350040 22 controller_revision.go:246] ControllerRevision "e2e-2c2g5-daemon-set-799c86dcf7" has revision 3
  STEP: Deleting DaemonSet "e2e-2c2g5-daemon-set" @ 10/15/24 10:57:24.366
  STEP: deleting DaemonSet.extensions e2e-2c2g5-daemon-set in namespace controllerrevisions-2735, will wait for the garbage collector to delete the pods @ 10/15/24 10:57:24.366
  I1015 10:57:24.454379 22 resources.go:139] Deleting DaemonSet.extensions e2e-2c2g5-daemon-set took: 17.189936ms
  I1015 10:57:24.555343 22 resources.go:163] Terminating DaemonSet.extensions e2e-2c2g5-daemon-set pods took: 100.915342ms
  E1015 10:57:24.616137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:25.617091      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:57:26.366663 22 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-2c2g5-daemon-set: 0
  I1015 10:57:26.366754 22 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-2c2g5-daemon-set
  I1015 10:57:26.376113 22 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"53491965"},"items":null}

  I1015 10:57:26.385441 22 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"53491965"},"items":null}

  I1015 10:57:26.428937 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-2735" for this suite. @ 10/15/24 10:57:26.448
• [6.560 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 10/15/24 10:57:26.482
  I1015 10:57:26.482600 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename secrets @ 10/15/24 10:57:26.484
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:57:26.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:57:26.54
  STEP: Creating secret with name secret-test-bff3bed7-28d2-4851-9215-c0bd5fe765c7 @ 10/15/24 10:57:26.549
  STEP: Creating a pod to test consume secrets @ 10/15/24 10:57:26.563
  E1015 10:57:26.617760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:27.618719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:28.619071      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:29.619447      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:30.620068      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 10:57:30.623
  I1015 10:57:30.637708 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-secrets-7750e17d-35a4-4e69-bbfb-7dc880edf4ca container secret-volume-test: <nil>
  STEP: delete the pod @ 10/15/24 10:57:30.665
  I1015 10:57:30.744378 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8531" for this suite. @ 10/15/24 10:57:30.773
• [4.316 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 10/15/24 10:57:30.798
  I1015 10:57:30.798639 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename configmap @ 10/15/24 10:57:30.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:57:30.896
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:57:30.905
  STEP: Creating configMap with name configmap-test-volume-map-f9093f4e-9067-4ce0-abc3-5f574118c402 @ 10/15/24 10:57:30.916
  STEP: Creating a pod to test consume configMaps @ 10/15/24 10:57:30.928
  E1015 10:57:31.620190      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:32.620617      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:33.620792      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:34.621938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:35.622996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:36.623186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 10:57:37.042
  I1015 10:57:37.060092 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-configmaps-ba2d066b-2ba6-44ca-b085-b4d518bc3f4e container agnhost-container: <nil>
  STEP: delete the pod @ 10/15/24 10:57:37.093
  I1015 10:57:37.153912 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9997" for this suite. @ 10/15/24 10:57:37.168
• [6.383 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 10/15/24 10:57:37.181
  I1015 10:57:37.181920 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename projected @ 10/15/24 10:57:37.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:57:37.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:57:37.255
  STEP: Creating a pod to test downward API volume plugin @ 10/15/24 10:57:37.269
  E1015 10:57:37.623687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:38.627103      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:39.627312      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:40.628053      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 10:57:41.331
  I1015 10:57:41.341428 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod downwardapi-volume-057d0595-2f3c-43c8-b2cc-6ef4d139f2b9 container client-container: <nil>
  STEP: delete the pod @ 10/15/24 10:57:41.36
  I1015 10:57:41.436129 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8091" for this suite. @ 10/15/24 10:57:41.45
• [4.297 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 10/15/24 10:57:41.481
  I1015 10:57:41.481236 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename cronjob @ 10/15/24 10:57:41.483
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:57:41.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:57:41.534
  STEP: Creating a cronjob @ 10/15/24 10:57:41.547
  STEP: Ensuring more than one job is running at a time @ 10/15/24 10:57:41.566
  E1015 10:57:41.628724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:42.629324      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:43.629835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:44.630703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:45.631273      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:46.631344      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:47.631708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:48.631794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:49.632311      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:50.632538      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:51.633367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:52.633715      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:53.634031      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:54.634280      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:55.635353      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:56.635785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:57.636421      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:58.636776      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:57:59.637515      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:00.637988      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:01.638977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:02.639179      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:03.639209      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:04.639699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:05.640816      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:06.641423      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:07.642004      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:08.642752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:09.643231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:10.643487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:11.643869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:12.644165      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:13.644752      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:14.645081      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:15.645235      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:16.646592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:17.647274      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:18.648459      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:19.648506      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:20.649201      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:21.649877      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:22.650703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:23.651703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:24.652299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:25.652860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:26.653148      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:27.654146      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:28.655194      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:29.655670      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:30.656348      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:31.656543      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:32.657664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:33.657741      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:34.658271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:35.659265      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:36.660186      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:37.661309      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:38.662085      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:39.662690      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:40.663287      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:41.663799      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:42.664155      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:43.665137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:44.665674      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:45.666053      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:46.666800      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:47.667576      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:48.667513      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:49.667936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:50.668364      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:51.670379      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:52.670470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:53.671138      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:54.671500      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:55.672137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:56.673136      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:57.673791      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:58.673961      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:58:59.674452      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:59:00.675003      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 10/15/24 10:59:01.574
  STEP: Removing cronjob @ 10/15/24 10:59:01.582
  I1015 10:59:01.601643 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1337" for this suite. @ 10/15/24 10:59:01.635
• [80.175 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:342
  STEP: Creating a kubernetes client @ 10/15/24 10:59:01.657
  I1015 10:59:01.657772 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename kubectl @ 10/15/24 10:59:01.66
  E1015 10:59:01.679470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:59:01.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:59:01.749
  STEP: creating a replication controller @ 10/15/24 10:59:01.76
  I1015 10:59:01.761092 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-8822 create -f -'
  I1015 10:59:02.112887 22 builder.go:146] stderr: ""
  I1015 10:59:02.112988 22 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 10/15/24 10:59:02.113
  I1015 10:59:02.113205 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-8822 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1015 10:59:02.328396 22 builder.go:146] stderr: ""
  I1015 10:59:02.328480 22 builder.go:147] stdout: "update-demo-nautilus-97vr7 update-demo-nautilus-cghht "
  I1015 10:59:02.328584 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-8822 get pods update-demo-nautilus-97vr7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1015 10:59:02.527615 22 builder.go:146] stderr: ""
  I1015 10:59:02.527728 22 builder.go:147] stdout: ""
  I1015 10:59:02.527756 22 kubectl.go:2501] update-demo-nautilus-97vr7 is created but not running
  E1015 10:59:02.679428      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:59:03.679835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:59:04.680400      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:59:05.680574      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:59:06.681630      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:59:07.529112 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-8822 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E1015 10:59:07.682469      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:59:07.739932 22 builder.go:146] stderr: ""
  I1015 10:59:07.739996 22 builder.go:147] stdout: "update-demo-nautilus-97vr7 update-demo-nautilus-cghht "
  I1015 10:59:07.740437 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-8822 get pods update-demo-nautilus-97vr7 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1015 10:59:07.923354 22 builder.go:146] stderr: ""
  I1015 10:59:07.923541 22 builder.go:147] stdout: "true"
  I1015 10:59:07.924188 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-8822 get pods update-demo-nautilus-97vr7 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1015 10:59:08.110209 22 builder.go:146] stderr: ""
  I1015 10:59:08.110354 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1015 10:59:08.110417 22 kubectl.go:2392] validating pod update-demo-nautilus-97vr7
  I1015 10:59:08.126447 22 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I1015 10:59:08.126571 22 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1015 10:59:08.126597 22 kubectl.go:2519] update-demo-nautilus-97vr7 is verified up and running
  I1015 10:59:08.126670 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-8822 get pods update-demo-nautilus-cghht -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1015 10:59:08.339652 22 builder.go:146] stderr: ""
  I1015 10:59:08.339735 22 builder.go:147] stdout: "true"
  I1015 10:59:08.340769 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-8822 get pods update-demo-nautilus-cghht -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1015 10:59:08.516979 22 builder.go:146] stderr: ""
  I1015 10:59:08.517049 22 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1015 10:59:08.517077 22 kubectl.go:2392] validating pod update-demo-nautilus-cghht
  I1015 10:59:08.528679 22 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I1015 10:59:08.529145 22 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1015 10:59:08.529213 22 kubectl.go:2519] update-demo-nautilus-cghht is verified up and running
  STEP: using delete to clean up resources @ 10/15/24 10:59:08.529
  I1015 10:59:08.529626 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-8822 delete --grace-period=0 --force -f -'
  E1015 10:59:08.683377      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:59:08.715242 22 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1015 10:59:08.715311 22 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I1015 10:59:08.715590 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-8822 get rc,svc -l name=update-demo --no-headers'
  I1015 10:59:08.974278 22 builder.go:146] stderr: "No resources found in kubectl-8822 namespace.\n"
  I1015 10:59:08.974355 22 builder.go:147] stdout: ""
  I1015 10:59:08.974554 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-8822 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1015 10:59:09.167261 22 builder.go:146] stderr: ""
  I1015 10:59:09.167342 22 builder.go:147] stdout: ""
  I1015 10:59:09.167595 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8822" for this suite. @ 10/15/24 10:59:09.186
• [7.548 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 10/15/24 10:59:09.205
  I1015 10:59:09.205869 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename svcaccounts @ 10/15/24 10:59:09.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:59:09.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:59:09.266
  STEP: creating a ServiceAccount @ 10/15/24 10:59:09.28
  STEP: watching for the ServiceAccount to be added @ 10/15/24 10:59:09.301
  STEP: patching the ServiceAccount @ 10/15/24 10:59:09.307
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 10/15/24 10:59:09.317
  STEP: deleting the ServiceAccount @ 10/15/24 10:59:09.345
  I1015 10:59:09.435745 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6894" for this suite. @ 10/15/24 10:59:09.455
• [0.284 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 10/15/24 10:59:09.494
  I1015 10:59:09.494225 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename watch @ 10/15/24 10:59:09.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:59:09.56
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:59:09.576
  STEP: creating a new configmap @ 10/15/24 10:59:09.589
  STEP: modifying the configmap once @ 10/15/24 10:59:09.61
  STEP: modifying the configmap a second time @ 10/15/24 10:59:09.653
  STEP: deleting the configmap @ 10/15/24 10:59:09.678
  E1015 10:59:09.683810      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 10/15/24 10:59:09.693
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 10/15/24 10:59:09.699
  I1015 10:59:09.700213 22 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9565  73023324-35ce-46e9-9063-fa0e965e8a0c 53492576 0 2024-10-15 10:59:09 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-10-15 10:59:09 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1015 10:59:09.700858 22 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-9565  73023324-35ce-46e9-9063-fa0e965e8a0c 53492577 0 2024-10-15 10:59:09 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-10-15 10:59:09 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1015 10:59:09.701008 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9565" for this suite. @ 10/15/24 10:59:09.721
• [0.248 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1034
  STEP: Creating a kubernetes client @ 10/15/24 10:59:09.743
  I1015 10:59:09.743238 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename statefulset @ 10/15/24 10:59:09.745
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:59:09.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:59:09.794
  STEP: Creating service test in namespace statefulset-2941 @ 10/15/24 10:59:09.805
  STEP: Creating statefulset ss in namespace statefulset-2941 @ 10/15/24 10:59:09.844
  I1015 10:59:09.892019 22 wait.go:40] Found 0 stateful pods, waiting for 1
  E1015 10:59:10.684631      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:59:11.684634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:59:12.685428      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:59:13.755736      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:59:14.756549      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:59:15.757688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:59:16.758287      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:59:17.758699      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:59:18.759514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:59:19.760035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:59:19.887570 22 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 10/15/24 10:59:19.903
  STEP: Getting /status @ 10/15/24 10:59:19.942
  I1015 10:59:19.957381 22 statefulset.go:1070] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 10/15/24 10:59:19.957
  I1015 10:59:19.987121 22 statefulset.go:1090] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 10/15/24 10:59:19.987
  I1015 10:59:19.993230 22 statefulset.go:1118] Observed &StatefulSet event: ADDED
  I1015 10:59:19.993338 22 statefulset.go:1111] Found Statefulset ss in namespace statefulset-2941 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1015 10:59:19.993387 22 statefulset.go:1122] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 10/15/24 10:59:19.993
  I1015 10:59:19.993508 22 statefulset.go:1126] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1015 10:59:20.010410 22 statefulset.go:1130] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 10/15/24 10:59:20.01
  I1015 10:59:20.014609 22 statefulset.go:1155] Observed &StatefulSet event: ADDED
  I1015 10:59:20.014691 22 statefulset.go:1151] Observed Statefulset ss in namespace statefulset-2941 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1015 10:59:20.014903 22 statefulset.go:1155] Observed &StatefulSet event: MODIFIED
  I1015 10:59:20.015041 22 statefulset.go:138] Deleting all statefulset in ns statefulset-2941
  I1015 10:59:20.025617 22 rest.go:150] Scaling statefulset ss to 0
  E1015 10:59:20.760426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:59:21.760453      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:59:22.760831      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:59:23.761004      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:59:24.761096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:59:25.761428      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:59:26.762623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:59:27.762719      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:59:28.762967      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:59:29.764592      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:59:30.101616 22 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1015 10:59:30.108515 22 rest.go:88] Deleting statefulset ss
  I1015 10:59:30.142854 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2941" for this suite. @ 10/15/24 10:59:30.157
• [20.438 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 10/15/24 10:59:30.181
  I1015 10:59:30.181337 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename pods @ 10/15/24 10:59:30.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:59:30.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:59:30.227
  I1015 10:59:30.232403 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: creating the pod @ 10/15/24 10:59:30.233
  STEP: submitting the pod to kubernetes @ 10/15/24 10:59:30.233
  E1015 10:59:30.763437      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:59:31.764553      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:59:32.343928 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-756" for this suite. @ 10/15/24 10:59:32.354
• [2.195 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:796
  STEP: Creating a kubernetes client @ 10/15/24 10:59:32.376
  I1015 10:59:32.376029 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename statefulset @ 10/15/24 10:59:32.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:59:32.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:59:32.435
  STEP: Creating service test in namespace statefulset-7695 @ 10/15/24 10:59:32.447
  STEP: Looking for a node to schedule stateful set and pod @ 10/15/24 10:59:32.458
  STEP: Creating pod with conflicting port in namespace statefulset-7695 @ 10/15/24 10:59:32.476
  STEP: Waiting until pod test-pod will start running in namespace statefulset-7695 @ 10/15/24 10:59:32.499
  E1015 10:59:32.765645      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:59:33.765682      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:59:34.766207      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:59:35.766191      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating statefulset with conflicting port in namespace statefulset-7695 @ 10/15/24 10:59:36.54
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-7695 @ 10/15/24 10:59:36.566
  I1015 10:59:36.600321 22 statefulset.go:869] Observed stateful pod in namespace: statefulset-7695, name: ss-0, uid: a497372d-3437-481a-ad0d-c119559996fe, status phase: Pending. Waiting for statefulset controller to delete.
  I1015 10:59:36.644440 22 statefulset.go:869] Observed stateful pod in namespace: statefulset-7695, name: ss-0, uid: a497372d-3437-481a-ad0d-c119559996fe, status phase: Failed. Waiting for statefulset controller to delete.
  I1015 10:59:36.721422 22 statefulset.go:869] Observed stateful pod in namespace: statefulset-7695, name: ss-0, uid: a497372d-3437-481a-ad0d-c119559996fe, status phase: Failed. Waiting for statefulset controller to delete.
  I1015 10:59:36.737587 22 statefulset.go:863] Observed delete event for stateful pod ss-0 in namespace statefulset-7695
  STEP: Removing pod with conflicting port in namespace statefulset-7695 @ 10/15/24 10:59:36.737
  E1015 10:59:36.766847      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-7695 and will be in running state @ 10/15/24 10:59:36.794
  E1015 10:59:37.767705      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:59:38.767796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:59:39.767972      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:59:40.768222      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:59:40.845622 22 statefulset.go:138] Deleting all statefulset in ns statefulset-7695
  I1015 10:59:40.852429 22 rest.go:150] Scaling statefulset ss to 0
  E1015 10:59:41.768524      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:59:42.769118      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:59:43.770184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:59:44.771353      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:59:45.772487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:59:46.773410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:59:47.774293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:59:48.774480      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:59:49.774900      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:59:50.775022      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 10:59:50.879830 22 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1015 10:59:50.887374 22 rest.go:88] Deleting statefulset ss
  I1015 10:59:50.929344 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7695" for this suite. @ 10/15/24 10:59:50.944
• [18.582 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 10/15/24 10:59:50.962
  I1015 10:59:50.962263 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename secrets @ 10/15/24 10:59:50.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:59:51.038
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:59:51.045
  STEP: creating a secret @ 10/15/24 10:59:51.048
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 10/15/24 10:59:51.058
  STEP: patching the secret @ 10/15/24 10:59:51.194
  STEP: deleting the secret using a LabelSelector @ 10/15/24 10:59:51.216
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 10/15/24 10:59:51.238
  I1015 10:59:51.381029 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-81" for this suite. @ 10/15/24 10:59:51.41
• [0.475 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 10/15/24 10:59:51.437
  I1015 10:59:51.437948 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename secrets @ 10/15/24 10:59:51.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:59:51.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:59:51.529
  I1015 10:59:51.725469 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8980" for this suite. @ 10/15/24 10:59:51.762
  E1015 10:59:51.775837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
• [0.349 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 10/15/24 10:59:51.788
  I1015 10:59:51.788843 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename svcaccounts @ 10/15/24 10:59:51.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 10:59:51.853
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 10:59:51.857
  I1015 10:59:51.931579 22 service_accounts.go:618] created pod
  E1015 10:59:52.776911      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:59:53.776913      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:59:54.777556      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:59:55.778302      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 10:59:55.982
  E1015 10:59:56.778471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:59:57.778895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:59:58.779674      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 10:59:59.780543      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:00.780621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:01.781259      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:02.781342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:03.781451      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:04.781725      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:05.781803      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:06.781908      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:07.782123      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:08.782281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:09.782949      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:10.783392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:11.783737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:12.783805      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:13.784218      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:14.784505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:15.784863      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:16.785537      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:17.786005      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:18.786857      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:19.787313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:20.787721      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:21.789012      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:22.789576      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:23.789772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:24.790088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:25.790281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:00:25.983219 22 service_accounts.go:624] polling logs
  I1015 11:00:25.999007 22 service_accounts.go:634] Pod logs: 
  I1015 10:59:53.287680       1 log.go:245] OK: Got token
  I1015 10:59:53.287860       1 log.go:245] validating with in-cluster discovery
  I1015 10:59:53.288868       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I1015 10:59:53.288957       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-5409:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00013b180), NotBefore:(*jwt.NumericDate)(0xc00013b270), IssuedAt:(*jwt.NumericDate)(0xc00013b190), ID:"1ae780d8-fe68-446f-b1e7-a439b55121d7"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-5409", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"b6004a6f-1a3e-4c0b-88f2-3be9d4b24fc0"}}}
  I1015 10:59:53.325779       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I1015 10:59:53.341715       1 log.go:245] OK: Validated signature on JWT
  I1015 10:59:53.342063       1 log.go:245] OK: Got valid claims from token!
  I1015 10:59:53.342630       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-5409:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0000131e0), NotBefore:(*jwt.NumericDate)(0xc000013208), IssuedAt:(*jwt.NumericDate)(0xc0000131e8), ID:"1ae780d8-fe68-446f-b1e7-a439b55121d7"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-5409", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"b6004a6f-1a3e-4c0b-88f2-3be9d4b24fc0"}}}

  I1015 11:00:25.999143 22 service_accounts.go:638] completed pod
  I1015 11:00:26.014027 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5409" for this suite. @ 10/15/24 11:00:26.027
• [34.255 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 10/15/24 11:00:26.044
  I1015 11:00:26.044900 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename webhook @ 10/15/24 11:00:26.046
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 11:00:26.085
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 11:00:26.092
  STEP: Setting up server cert @ 10/15/24 11:00:26.16
  E1015 11:00:26.790476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/15/24 11:00:27.442
  STEP: Deploying the webhook pod @ 10/15/24 11:00:27.462
  STEP: Wait for the deployment to be ready @ 10/15/24 11:00:27.495
  I1015 11:00:27.524309 22 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1015 11:00:27.791460      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:28.791670      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/15/24 11:00:29.559
  STEP: Verifying the service has paired with the endpoint @ 10/15/24 11:00:29.582
  E1015 11:00:29.792281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:00:30.582925 22 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 10/15/24 11:00:30.6
  STEP: create a pod @ 10/15/24 11:00:30.642
  E1015 11:00:30.793181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:31.793553      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 10/15/24 11:00:32.685
  I1015 11:00:32.685783 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=webhook-8269 attach --namespace=webhook-8269 to-be-attached-pod -i -c=container1'
  E1015 11:00:32.794202      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:00:32.904168 22 builder.go:135] rc: 1
  I1015 11:00:33.055396 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8269" for this suite. @ 10/15/24 11:00:33.074
  STEP: Destroying namespace "webhook-markers-9999" for this suite. @ 10/15/24 11:00:33.115
• [7.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 10/15/24 11:00:33.157
  I1015 11:00:33.157569 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename security-context-test @ 10/15/24 11:00:33.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 11:00:33.22
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 11:00:33.232
  E1015 11:00:33.795185      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:34.795313      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:35.795891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:36.795936      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:00:37.335542 22 security_context.go:538] Got logs for pod "busybox-privileged-false-0c82bcb6-e655-4df7-9a41-23706d5e550e": "ip: RTNETLINK answers: Operation not permitted\n"
  I1015 11:00:37.335684 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-5010" for this suite. @ 10/15/24 11:00:37.348
• [4.209 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:335
  STEP: Creating a kubernetes client @ 10/15/24 11:00:37.366
  I1015 11:00:37.366770 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename statefulset @ 10/15/24 11:00:37.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 11:00:37.441
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 11:00:37.446
  STEP: Creating service test in namespace statefulset-819 @ 10/15/24 11:00:37.451
  STEP: Creating a new StatefulSet @ 10/15/24 11:00:37.473
  I1015 11:00:37.506611 22 wait.go:40] Found 0 stateful pods, waiting for 3
  E1015 11:00:37.795823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:38.796795      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:39.796992      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:40.797492      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:41.798273      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:42.798708      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:43.798878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:44.799837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:45.800069      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:46.800704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:00:47.511518 22 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1015 11:00:47.511785 22 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1015 11:00:47.512199 22 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 10/15/24 11:00:47.536
  I1015 11:00:47.562323 22 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 10/15/24 11:00:47.562
  E1015 11:00:47.801660      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:48.802588      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:49.803288      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:50.804122      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:51.804330      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:52.804409      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:53.805342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:54.806090      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:55.806356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:56.807126      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 10/15/24 11:00:57.584
  STEP: Performing a canary update @ 10/15/24 11:00:57.585
  I1015 11:00:57.611489 22 statefulset.go:2507] Updating stateful set ss2
  I1015 11:00:57.631026 22 wait.go:74] Waiting for Pod statefulset-819/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1015 11:00:57.807248      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:58.807514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:00:59.807956      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:00.808963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:01.809098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:02.809536      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:03.810664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:04.810990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:05.811661      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:06.812760      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 10/15/24 11:01:07.63
  I1015 11:01:07.725308 22 wait.go:40] Found 1 stateful pods, waiting for 3
  E1015 11:01:07.813395      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:08.815392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:09.815654      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:10.815714      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:11.816085      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:12.816280      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:13.816491      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:14.816737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:15.816984      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:16.817296      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:01:17.741849 22 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1015 11:01:17.742021 22 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1015 11:01:17.742218 22 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 10/15/24 11:01:17.769
  I1015 11:01:17.810175 22 statefulset.go:2507] Updating stateful set ss2
  E1015 11:01:17.817384      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:01:17.850474 22 wait.go:74] Waiting for Pod statefulset-819/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1015 11:01:18.817545      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:19.818361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:20.819197      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:21.819664      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:22.819724      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:23.819892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:24.820125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:25.820536      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:26.821002      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:27.821584      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:01:27.867951 22 statefulset.go:2507] Updating stateful set ss2
  I1015 11:01:27.908337 22 wait.go:56] Waiting for StatefulSet statefulset-819/ss2 to complete update
  I1015 11:01:27.908418 22 wait.go:63] Waiting for Pod statefulset-819/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E1015 11:01:28.822554      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:29.822548      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:30.822919      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:31.823318      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:32.823845      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:33.825097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:34.825143      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:35.825309      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:36.825563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:37.825702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:01:37.891280 22 statefulset.go:138] Deleting all statefulset in ns statefulset-819
  I1015 11:01:37.903363 22 rest.go:150] Scaling statefulset ss2 to 0
  E1015 11:01:38.826488      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:39.826999      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:40.828285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:41.828547      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:42.829726      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:43.830370      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:44.831276      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:45.831770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:46.832688      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:47.833050      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:01:47.940532 22 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1015 11:01:47.956166 22 rest.go:88] Deleting statefulset ss2
  I1015 11:01:48.024191 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-819" for this suite. @ 10/15/24 11:01:48.041
• [70.705 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 10/15/24 11:01:48.072
  I1015 11:01:48.072298 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename deployment @ 10/15/24 11:01:48.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 11:01:48.115
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 11:01:48.124
  I1015 11:01:48.130453 22 deployment.go:1196] Creating deployment "webserver-deployment"
  I1015 11:01:48.142522 22 deployment.go:1200] Waiting for observed generation 1
  E1015 11:01:48.833975      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:49.835598      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:01:50.176726 22 deployment.go:1205] Waiting for all required pods to come up
  I1015 11:01:50.186481 22 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 10/15/24 11:01:50.186
  E1015 11:01:50.835632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:51.835888      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:01:52.237857 22 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I1015 11:01:52.256527 22 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I1015 11:01:52.292747 22 deployment.go:313] Updating deployment webserver-deployment
  I1015 11:01:52.292864 22 deployment.go:1224] Waiting for observed generation 2
  E1015 11:01:52.836051      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:53.836981      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:01:54.318412 22 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I1015 11:01:54.323728 22 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I1015 11:01:54.329656 22 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I1015 11:01:54.348925 22 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I1015 11:01:54.349144 22 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I1015 11:01:54.354668 22 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I1015 11:01:54.365055 22 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I1015 11:01:54.365240 22 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I1015 11:01:54.381728 22 deployment.go:313] Updating deployment webserver-deployment
  I1015 11:01:54.381948 22 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I1015 11:01:54.400343 22 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I1015 11:01:54.412062 22 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  I1015 11:01:54.500620 22 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=13) "deployment-23",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "454cdca5-5a28-4b29-b7be-5e691c3bf78c",
      ResourceVersion: (string) (len=8) "53494183",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586908,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 25,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-67c89d485c\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1015 11:01:54.585812 22 deployment.go:39] New ReplicaSet "webserver-deployment-67c89d485c" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-67c89d485c",
      GenerateName: (string) "",
      Namespace: (string) (len=13) "deployment-23",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "118f1d6e-631e-49a4-8e18-2b1a43b9a8e0",
      ResourceVersion: (string) (len=8) "53494173",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586912,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "454cdca5-5a28-4b29-b7be-5e691c3bf78c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 35 34 63 64 63  61 35 2d 35 61 32 38 2d  |\"454cdca5-5a28-|
              00000120  34 62 32 39 2d 62 37 62  65 2d 35 65 36 39 31 63  |4b29-b7be-5e691c|
              00000130  33 62 66 37 38 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |3bf78c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1015 11:01:54.596191 22 deployment.go:44] All old ReplicaSets of Deployment "webserver-deployment":
  I1015 11:01:54.597503 22 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-77db57d8df",
      GenerateName: (string) "",
      Namespace: (string) (len=13) "deployment-23",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "40581dad-4820-40bc-b6d2-bdc61b2834eb",
      ResourceVersion: (string) (len=8) "53494172",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586908,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "454cdca5-5a28-4b29-b7be-5e691c3bf78c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 34 35 34 63 64 63  61 35 2d 35 61 32 38 2d  |\"454cdca5-5a28-|
              00000120  34 62 32 39 2d 62 37 62  65 2d 35 65 36 39 31 63  |4b29-b7be-5e691c|
              00000130  33 62 66 37 38 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |3bf78c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1015 11:01:54.688935 22 deployment.go:67] Pod "webserver-deployment-67c89d485c-49g6v" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-49g6v",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=13) "deployment-23",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "81756a94-f2fc-42e2-b0a2-5e0945477b14",
      ResourceVersion: (string) (len=8) "53494119",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586912,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "0d31fc1415d6d841b894fea22226efe0fe8c2419dfc81e80e1138af3e4ffb99f",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.233.76.154/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.233.76.154/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "118f1d6e-631e-49a4-8e18-2b1a43b9a8e0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 31  38 66 31 64 36 65 2d 36  |d\":\"118f1d6e-6|
              00000090  33 31 65 2d 34 39 61 34  2d 38 65 31 38 2d 32 62  |31e-49a4-8e18-2b|
              000000a0  31 61 34 33 62 39 61 38  65 30 5c 22 7d 22 3a 7b  |1a43b9a8e0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586913,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-74czw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-74czw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.202"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586912,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1015 11:01:54.702821 22 deployment.go:67] Pod "webserver-deployment-67c89d485c-6tt7d" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-6tt7d",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=13) "deployment-23",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a15ee1c1-992a-477a-9c06-ad8f8dcb3821",
      ResourceVersion: (string) (len=8) "53494218",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586914,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "118f1d6e-631e-49a4-8e18-2b1a43b9a8e0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 31  38 66 31 64 36 65 2d 36  |d\":\"118f1d6e-6|
              00000090  33 31 65 2d 34 39 61 34  2d 38 65 31 38 2d 32 62  |31e-49a4-8e18-2b|
              000000a0  31 61 34 33 62 39 61 38  65 30 5c 22 7d 22 3a 7b  |1a43b9a8e0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-l2bs6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-l2bs6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.201",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.201"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586914,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1015 11:01:54.721191 22 deployment.go:67] Pod "webserver-deployment-67c89d485c-8gknx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-8gknx",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=13) "deployment-23",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "49799a63-51b1-485c-929a-f2bda55f80c0",
      ResourceVersion: (string) (len=8) "53494220",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586914,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "118f1d6e-631e-49a4-8e18-2b1a43b9a8e0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 31  38 66 31 64 36 65 2d 36  |d\":\"118f1d6e-6|
              00000090  33 31 65 2d 34 39 61 34  2d 38 65 31 38 2d 32 62  |31e-49a4-8e18-2b|
              000000a0  31 61 34 33 62 39 61 38  65 30 5c 22 7d 22 3a 7b  |1a43b9a8e0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tdwwx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tdwwx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1015 11:01:54.732617 22 deployment.go:67] Pod "webserver-deployment-67c89d485c-ctmr6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-ctmr6",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=13) "deployment-23",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2732c4bd-155c-4cf6-a9cf-3299dc417746",
      ResourceVersion: (string) (len=8) "53494204",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586914,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "118f1d6e-631e-49a4-8e18-2b1a43b9a8e0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 31  38 66 31 64 36 65 2d 36  |d\":\"118f1d6e-6|
              00000090  33 31 65 2d 34 39 61 34  2d 38 65 31 38 2d 32 62  |31e-49a4-8e18-2b|
              000000a0  31 61 34 33 62 39 61 38  65 30 5c 22 7d 22 3a 7b  |1a43b9a8e0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b9pd6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b9pd6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1015 11:01:54.738366 22 deployment.go:67] Pod "webserver-deployment-67c89d485c-g6mrd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-g6mrd",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=13) "deployment-23",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "38ac4556-9713-463a-b716-54e1c64f671d",
      ResourceVersion: (string) (len=8) "53494205",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586914,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "118f1d6e-631e-49a4-8e18-2b1a43b9a8e0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 31  38 66 31 64 36 65 2d 36  |d\":\"118f1d6e-6|
              00000090  33 31 65 2d 34 39 61 34  2d 38 65 31 38 2d 32 62  |31e-49a4-8e18-2b|
              000000a0  31 61 34 33 62 39 61 38  65 30 5c 22 7d 22 3a 7b  |1a43b9a8e0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wpfxz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wpfxz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1015 11:01:54.745975 22 deployment.go:67] Pod "webserver-deployment-67c89d485c-ljbg6" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-ljbg6",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=13) "deployment-23",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "73d7a123-ae62-41e7-84bd-b757e7f88d3b",
      ResourceVersion: (string) (len=8) "53494206",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586914,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "118f1d6e-631e-49a4-8e18-2b1a43b9a8e0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 31  38 66 31 64 36 65 2d 36  |d\":\"118f1d6e-6|
              00000090  33 31 65 2d 34 39 61 34  2d 38 65 31 38 2d 32 62  |31e-49a4-8e18-2b|
              000000a0  31 61 34 33 62 39 61 38  65 30 5c 22 7d 22 3a 7b  |1a43b9a8e0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r5z9d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r5z9d",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1015 11:01:54.757701 22 deployment.go:67] Pod "webserver-deployment-67c89d485c-mndgp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-mndgp",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=13) "deployment-23",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d241b708-7ccd-4dae-96d2-88438de2d309",
      ResourceVersion: (string) (len=8) "53494203",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586914,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "118f1d6e-631e-49a4-8e18-2b1a43b9a8e0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 31  38 66 31 64 36 65 2d 36  |d\":\"118f1d6e-6|
              00000090  33 31 65 2d 34 39 61 34  2d 38 65 31 38 2d 32 62  |31e-49a4-8e18-2b|
              000000a0  31 61 34 33 62 39 61 38  65 30 5c 22 7d 22 3a 7b  |1a43b9a8e0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8xhtj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8xhtj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1015 11:01:54.769011 22 deployment.go:67] Pod "webserver-deployment-67c89d485c-pz6zx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-pz6zx",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=13) "deployment-23",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a131e7c0-6320-4fe0-bd60-aaffb1e44e8d",
      ResourceVersion: (string) (len=8) "53494104",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586912,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "cd033df1b24dad0317c035a3e6cd352f4be4cb523580c92cee46c583d7668d9b",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=15) "10.233.87.65/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=15) "10.233.87.65/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "118f1d6e-631e-49a4-8e18-2b1a43b9a8e0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 31  38 66 31 64 36 65 2d 36  |d\":\"118f1d6e-6|
              00000090  33 31 65 2d 34 39 61 34  2d 38 65 31 38 2d 32 62  |31e-49a4-8e18-2b|
              000000a0  31 61 34 33 62 39 61 38  65 30 5c 22 7d 22 3a 7b  |1a43b9a8e0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586913,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tqdfj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tqdfj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.201",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.201"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586912,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1015 11:01:54.773544 22 deployment.go:67] Pod "webserver-deployment-67c89d485c-qtz4b" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-qtz4b",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=13) "deployment-23",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "10f10178-806d-4a61-be9f-89a589fd7b08",
      ResourceVersion: (string) (len=8) "53494129",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586912,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "a981fd74f8be25b26181ecc5528afd9b9e3027c7ddda5acd6da33e820fc33d76",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.233.118.45/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.233.118.45/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "118f1d6e-631e-49a4-8e18-2b1a43b9a8e0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 31  38 66 31 64 36 65 2d 36  |d\":\"118f1d6e-6|
              00000090  33 31 65 2d 34 39 61 34  2d 38 65 31 38 2d 32 62  |31e-49a4-8e18-2b|
              000000a0  31 61 34 33 62 39 61 38  65 30 5c 22 7d 22 3a 7b  |1a43b9a8e0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586913,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-g9x25",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-g9x25",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.200",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.200"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586912,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1015 11:01:54.777179 22 deployment.go:67] Pod "webserver-deployment-67c89d485c-vmbxz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-vmbxz",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=13) "deployment-23",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "48d59c9f-2065-4835-ac66-6a6a813edcf3",
      ResourceVersion: (string) (len=8) "53494197",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586914,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "118f1d6e-631e-49a4-8e18-2b1a43b9a8e0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 31  38 66 31 64 36 65 2d 36  |d\":\"118f1d6e-6|
              00000090  33 31 65 2d 34 39 61 34  2d 38 65 31 38 2d 32 62  |31e-49a4-8e18-2b|
              000000a0  31 61 34 33 62 39 61 38  65 30 5c 22 7d 22 3a 7b  |1a43b9a8e0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bd9w4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bd9w4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1015 11:01:54.781215 22 deployment.go:67] Pod "webserver-deployment-67c89d485c-wlljs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-wlljs",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=13) "deployment-23",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bfa16b33-0c34-4a82-a9fe-addd256f678c",
      ResourceVersion: (string) (len=8) "53494103",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586912,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "1e072a0e4015765b25c83fd8db8a610cfcda0fb611d6703eb985c01864389696",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.233.118.29/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.233.118.29/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "118f1d6e-631e-49a4-8e18-2b1a43b9a8e0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 31  38 66 31 64 36 65 2d 36  |d\":\"118f1d6e-6|
              00000090  33 31 65 2d 34 39 61 34  2d 38 65 31 38 2d 32 62  |31e-49a4-8e18-2b|
              000000a0  31 61 34 33 62 39 61 38  65 30 5c 22 7d 22 3a 7b  |1a43b9a8e0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586913,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jmsbs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jmsbs",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.200",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.200"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586912,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1015 11:01:54.785342 22 deployment.go:67] Pod "webserver-deployment-67c89d485c-xlpnr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-xlpnr",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=13) "deployment-23",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "90d2b90d-b578-4b07-914d-bc515d3346d6",
      ResourceVersion: (string) (len=8) "53494221",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586914,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "118f1d6e-631e-49a4-8e18-2b1a43b9a8e0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 31  38 66 31 64 36 65 2d 36  |d\":\"118f1d6e-6|
              00000090  33 31 65 2d 34 39 61 34  2d 38 65 31 38 2d 32 62  |31e-49a4-8e18-2b|
              000000a0  31 61 34 33 62 39 61 38  65 30 5c 22 7d 22 3a 7b  |1a43b9a8e0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qrjnm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qrjnm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.202"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586914,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1015 11:01:54.788851 22 deployment.go:67] Pod "webserver-deployment-67c89d485c-xvlkl" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-xvlkl",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=13) "deployment-23",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "382583f7-1cff-4561-8987-10d8bad3a867",
      ResourceVersion: (string) (len=8) "53494107",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586912,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f7cc30c3fc2d99f30dfb8bd37183c0db98db645b2da05cc58a6b274725318c70",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.233.76.178/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.233.76.178/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "118f1d6e-631e-49a4-8e18-2b1a43b9a8e0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 31 31  38 66 31 64 36 65 2d 36  |d\":\"118f1d6e-6|
              00000090  33 31 65 2d 34 39 61 34  2d 38 65 31 38 2d 32 62  |31e-49a4-8e18-2b|
              000000a0  31 61 34 33 62 39 61 38  65 30 5c 22 7d 22 3a 7b  |1a43b9a8e0\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586913,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-s2wn6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-s2wn6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586912,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.202"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586912,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1015 11:01:54.793586 22 deployment.go:67] Pod "webserver-deployment-77db57d8df-59hlq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-59hlq",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=13) "deployment-23",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0b12377d-df37-42fd-9c01-6952f9fb206b",
      ResourceVersion: (string) (len=8) "53494021",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586908,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "1db1759be8b9474f5b5dd11b5e79aed788e9b8c900ad62a5ecd4146fcf85b624",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.233.118.50/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.233.118.50/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "40581dad-4820-40bc-b6d2-bdc61b2834eb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  35 38 31 64 61 64 2d 34  |d\":\"40581dad-4|
              00000090  38 32 30 2d 34 30 62 63  2d 62 36 64 32 2d 62 64  |820-40bc-b6d2-bd|
              000000a0  63 36 31 62 32 38 33 34  65 62 5c 22 7d 22 3a 7b  |c61b2834eb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 31 31 38  2e 35 30 5c 22 7d 22 3a  |.233.118.50\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2npc7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2npc7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.200",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.200"
        }
      },
      PodIP: (string) (len=13) "10.233.118.50",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.118.50"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586908,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864586910,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://09b656bce93ae73882fc111963023ebc34eeca8bb419495f2203f97ea02e9246",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1015 11:01:54.798247 22 deployment.go:67] Pod "webserver-deployment-77db57d8df-7w2nn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-7w2nn",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=13) "deployment-23",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8d4651ac-ebcd-4351-83be-ae26a11ea2a0",
      ResourceVersion: (string) (len=8) "53494004",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586908,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "51ec4d36a207e663dc47400afd3a7979341faec6b55d9452aee6af26b8a7e472",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.233.76.130/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.233.76.130/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "40581dad-4820-40bc-b6d2-bdc61b2834eb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  35 38 31 64 61 64 2d 34  |d\":\"40581dad-4|
              00000090  38 32 30 2d 34 30 62 63  2d 62 36 64 32 2d 62 64  |820-40bc-b6d2-bd|
              000000a0  63 36 31 62 32 38 33 34  65 62 5c 22 7d 22 3a 7b  |c61b2834eb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 37 36 2e  31 33 30 5c 22 7d 22 3a  |.233.76.130\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6hdgd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6hdgd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.202"
        }
      },
      PodIP: (string) (len=13) "10.233.76.130",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.76.130"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586908,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864586910,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://b0496fc0470feaf4f34930d47f0dd6df08c5a34ec79eeefe404d01a3dc5aaeb1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1015 11:01:54.804384 22 deployment.go:67] Pod "webserver-deployment-77db57d8df-c5scm" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-c5scm",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=13) "deployment-23",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "00c5fd23-9038-4682-b931-2be6d4621801",
      ResourceVersion: (string) (len=8) "53494008",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586908,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "00dad1d2c781c88b82595e560b2d8a89659e7438165d307d28816cea6ce36628",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.233.87.108/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.233.87.108/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "40581dad-4820-40bc-b6d2-bdc61b2834eb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  35 38 31 64 61 64 2d 34  |d\":\"40581dad-4|
              00000090  38 32 30 2d 34 30 62 63  2d 62 36 64 32 2d 62 64  |820-40bc-b6d2-bd|
              000000a0  63 36 31 62 32 38 33 34  65 62 5c 22 7d 22 3a 7b  |c61b2834eb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 38 37 2e  31 30 38 5c 22 7d 22 3a  |.233.87.108\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-74xmk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-74xmk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.201",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.201"
        }
      },
      PodIP: (string) (len=13) "10.233.87.108",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.87.108"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586908,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864586910,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://72a48bb4aab80270a6ef3a0361927781a62e75ac9e0cc96f2d6c9dc2cfdf8726",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1015 11:01:54.808631 22 deployment.go:67] Pod "webserver-deployment-77db57d8df-dxqsg" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-dxqsg",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=13) "deployment-23",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3bd29da4-74fc-4cea-9222-a00eb204b0d5",
      ResourceVersion: (string) (len=8) "53494002",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586908,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "dbea4aba9a0df29ec2d4e82920d39d424b1d59f724517915cb87d9e399ffffe6",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.233.76.158/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.233.76.158/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "40581dad-4820-40bc-b6d2-bdc61b2834eb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  35 38 31 64 61 64 2d 34  |d\":\"40581dad-4|
              00000090  38 32 30 2d 34 30 62 63  2d 62 36 64 32 2d 62 64  |820-40bc-b6d2-bd|
              000000a0  63 36 31 62 32 38 33 34  65 62 5c 22 7d 22 3a 7b  |c61b2834eb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 37 36 2e  31 35 38 5c 22 7d 22 3a  |.233.76.158\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5sv28",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5sv28",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.202"
        }
      },
      PodIP: (string) (len=13) "10.233.76.158",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.76.158"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586908,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864586910,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://8ef881aefcaae2171e064c3639506dd08fa15d2408f539de7cd6433f4dfb6c64",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1015 11:01:54.814256 22 deployment.go:67] Pod "webserver-deployment-77db57d8df-gjk2c" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-gjk2c",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=13) "deployment-23",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "69528f55-0711-4cc2-ae97-16d071d334d6",
      ResourceVersion: (string) (len=8) "53494216",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586914,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "40581dad-4820-40bc-b6d2-bdc61b2834eb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  35 38 31 64 61 64 2d 34  |d\":\"40581dad-4|
              00000090  38 32 30 2d 34 30 62 63  2d 62 36 64 32 2d 62 64  |820-40bc-b6d2-bd|
              000000a0  63 36 31 62 32 38 33 34  65 62 5c 22 7d 22 3a 7b  |c61b2834eb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r2j66",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r2j66",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.202"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586914,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1015 11:01:54.824481 22 deployment.go:67] Pod "webserver-deployment-77db57d8df-htgdf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-htgdf",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=13) "deployment-23",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "379dd54e-1610-48fd-901e-ea2d2bf7c0fb",
      ResourceVersion: (string) (len=8) "53494214",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586914,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "40581dad-4820-40bc-b6d2-bdc61b2834eb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  35 38 31 64 61 64 2d 34  |d\":\"40581dad-4|
              00000090  38 32 30 2d 34 30 62 63  2d 62 36 64 32 2d 62 64  |820-40bc-b6d2-bd|
              000000a0  63 36 31 62 32 38 33 34  65 62 5c 22 7d 22 3a 7b  |c61b2834eb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7tssx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7tssx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.200",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.200"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586914,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1015 11:01:54.831269 22 deployment.go:67] Pod "webserver-deployment-77db57d8df-jwxx5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-jwxx5",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=13) "deployment-23",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "00c7caed-658e-475d-b450-36acbe2db537",
      ResourceVersion: (string) (len=8) "53494212",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586914,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "40581dad-4820-40bc-b6d2-bdc61b2834eb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  35 38 31 64 61 64 2d 34  |d\":\"40581dad-4|
              00000090  38 32 30 2d 34 30 62 63  2d 62 36 64 32 2d 62 64  |820-40bc-b6d2-bd|
              000000a0  63 36 31 62 32 38 33 34  65 62 5c 22 7d 22 3a 7b  |c61b2834eb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qv2r4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qv2r4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  E1015 11:01:54.837445      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:01:54.850689 22 deployment.go:67] Pod "webserver-deployment-77db57d8df-lhqlc" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-lhqlc",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=13) "deployment-23",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6a0f35f6-a472-4593-997f-462595bec80a",
      ResourceVersion: (string) (len=8) "53493998",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586908,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "5e2ea7178b458b551e871b788af449f6013ae231a13170f9fd851fde6badddad",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.233.76.169/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.233.76.169/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "40581dad-4820-40bc-b6d2-bdc61b2834eb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  35 38 31 64 61 64 2d 34  |d\":\"40581dad-4|
              00000090  38 32 30 2d 34 30 62 63  2d 62 36 64 32 2d 62 64  |820-40bc-b6d2-bd|
              000000a0  63 36 31 62 32 38 33 34  65 62 5c 22 7d 22 3a 7b  |c61b2834eb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 37 36 2e  31 36 39 5c 22 7d 22 3a  |.233.76.169\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vvn7d",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vvn7d",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.202",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.202"
        }
      },
      PodIP: (string) (len=13) "10.233.76.169",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.76.169"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586908,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864586909,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://390e11276bc3a126f52929167aeaa76d9783a4a6317e3d764906876907cbaa8e",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1015 11:01:54.857518 22 deployment.go:67] Pod "webserver-deployment-77db57d8df-nvhv4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-nvhv4",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=13) "deployment-23",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "364c30ce-508e-4917-b430-7a5fa2606c07",
      ResourceVersion: (string) (len=8) "53494210",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586914,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "40581dad-4820-40bc-b6d2-bdc61b2834eb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  35 38 31 64 61 64 2d 34  |d\":\"40581dad-4|
              00000090  38 32 30 2d 34 30 62 63  2d 62 36 64 32 2d 62 64  |820-40bc-b6d2-bd|
              000000a0  63 36 31 62 32 38 33 34  65 62 5c 22 7d 22 3a 7b  |c61b2834eb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wp98h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wp98h",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1015 11:01:54.861861 22 deployment.go:67] Pod "webserver-deployment-77db57d8df-s92ll" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-s92ll",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=13) "deployment-23",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cc2034c6-48bc-4538-b25c-f2d95948e4c8",
      ResourceVersion: (string) (len=8) "53494208",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586914,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "40581dad-4820-40bc-b6d2-bdc61b2834eb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  35 38 31 64 61 64 2d 34  |d\":\"40581dad-4|
              00000090  38 32 30 2d 34 30 62 63  2d 62 36 64 32 2d 62 64  |820-40bc-b6d2-bd|
              000000a0  63 36 31 62 32 38 33 34  65 62 5c 22 7d 22 3a 7b  |c61b2834eb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kdkc2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kdkc2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1015 11:01:54.867187 22 deployment.go:67] Pod "webserver-deployment-77db57d8df-sdvr8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-sdvr8",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=13) "deployment-23",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2af6c4a1-043f-4c65-adc8-9e604093ff3e",
      ResourceVersion: (string) (len=8) "53494024",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586908,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "b9d15aab554dd5a3fc01df47852cdabcb930b51860c2370677d5f947964ca412",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.233.118.62/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.233.118.62/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "40581dad-4820-40bc-b6d2-bdc61b2834eb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  35 38 31 64 61 64 2d 34  |d\":\"40581dad-4|
              00000090  38 32 30 2d 34 30 62 63  2d 62 36 64 32 2d 62 64  |820-40bc-b6d2-bd|
              000000a0  63 36 31 62 32 38 33 34  65 62 5c 22 7d 22 3a 7b  |c61b2834eb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 31 31 38  2e 36 32 5c 22 7d 22 3a  |.233.118.62\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n7wcw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n7wcw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.200",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.200"
        }
      },
      PodIP: (string) (len=13) "10.233.118.62",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.118.62"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586908,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864586910,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2ac097d8817bdaaf593ee41941fddbff0b905ae62e6e8de13effecb1efd15f14",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1015 11:01:54.877375 22 deployment.go:67] Pod "webserver-deployment-77db57d8df-sfq5h" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-sfq5h",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=13) "deployment-23",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0f29d91b-072d-4229-84ba-b929031e54dc",
      ResourceVersion: (string) (len=8) "53494199",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586914,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "40581dad-4820-40bc-b6d2-bdc61b2834eb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  35 38 31 64 61 64 2d 34  |d\":\"40581dad-4|
              00000090  38 32 30 2d 34 30 62 63  2d 62 36 64 32 2d 62 64  |820-40bc-b6d2-bd|
              000000a0  63 36 31 62 32 38 33 34  65 62 5c 22 7d 22 3a 7b  |c61b2834eb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-246gx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-246gx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1015 11:01:54.881644 22 deployment.go:67] Pod "webserver-deployment-77db57d8df-tb5b5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-tb5b5",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=13) "deployment-23",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1774f532-5008-4906-9b0d-e0230a5935b7",
      ResourceVersion: (string) (len=8) "53494194",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586914,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "40581dad-4820-40bc-b6d2-bdc61b2834eb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  35 38 31 64 61 64 2d 34  |d\":\"40581dad-4|
              00000090  38 32 30 2d 34 30 62 63  2d 62 36 64 32 2d 62 64  |820-40bc-b6d2-bd|
              000000a0  63 36 31 62 32 38 33 34  65 62 5c 22 7d 22 3a 7b  |c61b2834eb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t4s42",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t4s42",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-0",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.200",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.200"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586914,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1015 11:01:54.887382 22 deployment.go:67] Pod "webserver-deployment-77db57d8df-tc5qb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-tc5qb",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=13) "deployment-23",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "12ef5b72-9b07-480a-b79c-ba8b3eea50e5",
      ResourceVersion: (string) (len=8) "53494200",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586914,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "40581dad-4820-40bc-b6d2-bdc61b2834eb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  35 38 31 64 61 64 2d 34  |d\":\"40581dad-4|
              00000090  38 32 30 2d 34 30 62 63  2d 62 36 64 32 2d 62 64  |820-40bc-b6d2-bd|
              000000a0  63 36 31 62 32 38 33 34  65 62 5c 22 7d 22 3a 7b  |c61b2834eb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ct7w5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ct7w5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1015 11:01:54.892181 22 deployment.go:67] Pod "webserver-deployment-77db57d8df-v8jmr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-v8jmr",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=13) "deployment-23",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "915f4b0f-e5fb-4111-80a8-fac355717df3",
      ResourceVersion: (string) (len=8) "53494011",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586908,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "5a0f640992a4161e24961aeae10df4305849150a7688eba921c59e2bf3c90c6d",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.233.87.119/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.233.87.119/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "40581dad-4820-40bc-b6d2-bdc61b2834eb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  35 38 31 64 61 64 2d 34  |d\":\"40581dad-4|
              00000090  38 32 30 2d 34 30 62 63  2d 62 36 64 32 2d 62 64  |820-40bc-b6d2-bd|
              000000a0  63 36 31 62 32 38 33 34  65 62 5c 22 7d 22 3a 7b  |c61b2834eb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 38 37 2e  31 31 39 5c 22 7d 22 3a  |.233.87.119\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lp7br",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lp7br",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.201",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.201"
        }
      },
      PodIP: (string) (len=13) "10.233.87.119",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.87.119"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586908,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864586909,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://649f26cc718f81e014724358801c7010881e59cf13bf7eb1b74a1eb574522af3",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1015 11:01:54.902646 22 deployment.go:67] Pod "webserver-deployment-77db57d8df-w52r9" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-w52r9",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=13) "deployment-23",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c174e93a-2c7e-4854-82c8-f358541abcde",
      ResourceVersion: (string) (len=8) "53494213",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586914,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "40581dad-4820-40bc-b6d2-bdc61b2834eb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  35 38 31 64 61 64 2d 34  |d\":\"40581dad-4|
              00000090  38 32 30 2d 34 30 62 63  2d 62 36 64 32 2d 62 64  |820-40bc-b6d2-bd|
              000000a0  63 36 31 62 32 38 33 34  65 62 5c 22 7d 22 3a 7b  |c61b2834eb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2nh52",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2nh52",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1015 11:01:54.908345 22 deployment.go:67] Pod "webserver-deployment-77db57d8df-w6krp" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-w6krp",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=13) "deployment-23",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "74ceee14-9754-4b03-9abf-ffed0a2061a0",
      ResourceVersion: (string) (len=8) "53494014",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586908,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "0ba0912c7e687d6026e5a757c13b5618bae419ff0031f61a93aa6e9ae2df97aa",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "10.233.87.121/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "10.233.87.121/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "40581dad-4820-40bc-b6d2-bdc61b2834eb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  35 38 31 64 61 64 2d 34  |d\":\"40581dad-4|
              00000090  38 32 30 2d 34 30 62 63  2d 62 36 64 32 2d 62 64  |820-40bc-b6d2-bd|
              000000a0  63 36 31 62 32 38 33 34  65 62 5c 22 7d 22 3a 7b  |c61b2834eb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586909,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 32 33 33 2e 38 37 2e  31 32 31 5c 22 7d 22 3a  |.233.87.121\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fpgs2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fpgs2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586910,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586908,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=11) "10.61.1.201",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=11) "10.61.1.201"
        }
      },
      PodIP: (string) (len=13) "10.233.87.121",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "10.233.87.121"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586908,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63864586910,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://2738f288af39e098199bcab3baf9351e1baa7b256a0719c5fab0f7e16e331e30",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1015 11:01:54.915195 22 deployment.go:67] Pod "webserver-deployment-77db57d8df-wmjk8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-wmjk8",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=13) "deployment-23",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "78349649-2eb3-4cd9-8809-42717e1bd718",
      ResourceVersion: (string) (len=8) "53494209",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586914,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "40581dad-4820-40bc-b6d2-bdc61b2834eb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  35 38 31 64 61 64 2d 34  |d\":\"40581dad-4|
              00000090  38 32 30 2d 34 30 62 63  2d 62 36 64 32 2d 62 64  |820-40bc-b6d2-bd|
              000000a0  63 36 31 62 32 38 33 34  65 62 5c 22 7d 22 3a 7b  |c61b2834eb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tdb7m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tdb7m",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1015 11:01:54.924007 22 deployment.go:67] Pod "webserver-deployment-77db57d8df-wzshg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-wzshg",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=13) "deployment-23",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d27854cd-1cd2-4b01-8818-b8d4574712ab",
      ResourceVersion: (string) (len=8) "53494211",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586914,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "40581dad-4820-40bc-b6d2-bdc61b2834eb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  35 38 31 64 61 64 2d 34  |d\":\"40581dad-4|
              00000090  38 32 30 2d 34 30 62 63  2d 62 36 64 32 2d 62 64  |820-40bc-b6d2-bd|
              000000a0  63 36 31 62 32 38 33 34  65 62 5c 22 7d 22 3a 7b  |c61b2834eb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5b84q",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5b84q",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1015 11:01:54.927989 22 deployment.go:67] Pod "webserver-deployment-77db57d8df-wztj8" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-wztj8",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=13) "deployment-23",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "049d16c2-9a8a-4ca8-adfc-ef28a6ff9f3d",
      ResourceVersion: (string) (len=8) "53494215",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63864586914,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "40581dad-4820-40bc-b6d2-bdc61b2834eb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 30  35 38 31 64 61 64 2d 34  |d\":\"40581dad-4|
              00000090  38 32 30 2d 34 30 62 63  2d 62 36 64 32 2d 62 64  |820-40bc-b6d2-bd|
              000000a0  63 36 31 62 32 38 33 34  65 62 5c 22 7d 22 3a 7b  |c61b2834eb\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w2rpz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w2rpz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=18) "env1-test-worker-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63864586914,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1015 11:01:54.931196 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-23" for this suite. @ 10/15/24 11:01:54.976
• [6.939 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 10/15/24 11:01:55.017
  I1015 11:01:55.017067 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename downward-api @ 10/15/24 11:01:55.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 11:01:55.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 11:01:55.087
  STEP: Creating the pod @ 10/15/24 11:01:55.104
  E1015 11:01:55.838497      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:56.839572      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:57.840515      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:01:58.841256      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:01:59.744381 22 pod_client.go:141] Successfully updated pod "labelsupdate8c940389-3ff4-49ce-b579-f9a0dbb7b7f2"
  E1015 11:01:59.841896      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:02:00.843323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:02:01.789368 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9730" for this suite. @ 10/15/24 11:02:01.82
• [6.830 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 10/15/24 11:02:01.847
  I1015 11:02:01.847596 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename secrets @ 10/15/24 11:02:01.849
  E1015 11:02:01.851992      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 11:02:01.893
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 11:02:01.901
  STEP: Creating projection with secret that has name secret-emptykey-test-b0e526fd-8c67-45dc-86ea-de8aaada3be8 @ 10/15/24 11:02:01.905
  I1015 11:02:01.908626 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3789" for this suite. @ 10/15/24 11:02:01.921
• [0.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1394
  STEP: Creating a kubernetes client @ 10/15/24 11:02:01.971
  I1015 11:02:01.972119 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename kubectl @ 10/15/24 11:02:01.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 11:02:02.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 11:02:02.085
  I1015 11:02:02.089070 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-819 create -f -'
  I1015 11:02:02.539561 22 builder.go:146] stderr: ""
  I1015 11:02:02.539899 22 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I1015 11:02:02.540001 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-819 create -f -'
  E1015 11:02:02.853823      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:02:03.011473 22 builder.go:146] stderr: ""
  I1015 11:02:03.011863 22 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 10/15/24 11:02:03.011
  E1015 11:02:03.854017      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:02:04.032926 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1015 11:02:04.032992 22 framework.go:733] Found 0 / 1
  E1015 11:02:04.854097      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:02:05.021824 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1015 11:02:05.022235 22 framework.go:733] Found 0 / 1
  E1015 11:02:05.854142      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:02:06.022104 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1015 11:02:06.022166 22 framework.go:733] Found 1 / 1
  I1015 11:02:06.022204 22 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I1015 11:02:06.029670 22 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1015 11:02:06.029737 22 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1015 11:02:06.029878 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-819 describe pod agnhost-primary-vzvxp'
  I1015 11:02:06.182914 22 builder.go:146] stderr: ""
  I1015 11:02:06.183135 22 builder.go:147] stdout: "Name:             agnhost-primary-vzvxp\nNamespace:        kubectl-819\nPriority:         0\nService Account:  default\nNode:             env1-test-worker-0/10.61.1.200\nStart Time:       Tue, 15 Oct 2024 11:02:02 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      cni.projectcalico.org/containerID: 59e4e4d9e41777d25b55d9465ec0089fc2a643b7afd5fcb5c9947c6b1b5700a3\n                  cni.projectcalico.org/podIP: 10.233.118.55/32\n                  cni.projectcalico.org/podIPs: 10.233.118.55/32\nStatus:           Running\nIP:               10.233.118.55\nIPs:\n  IP:           10.233.118.55\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://aff554fb96ea70e07f6a266f276ba01bd2922af3a17045ecd91c51467b05f8b4\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Tue, 15 Oct 2024 11:02:04 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-8pvfq (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-8pvfq:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  3s    default-scheduler  Successfully assigned kubectl-819/agnhost-primary-vzvxp to env1-test-worker-0\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    2s    kubelet            Created container agnhost-primary\n  Normal  Started    2s    kubelet            Started container agnhost-primary\n"
  I1015 11:02:06.183280 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-819 describe rc agnhost-primary'
  I1015 11:02:06.371100 22 builder.go:146] stderr: ""
  I1015 11:02:06.371184 22 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-819\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.47\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  4s    replication-controller  Created pod: agnhost-primary-vzvxp\n"
  I1015 11:02:06.371282 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-819 describe service agnhost-primary'
  I1015 11:02:06.574448 22 builder.go:146] stderr: ""
  I1015 11:02:06.574527 22 builder.go:147] stdout: "Name:              agnhost-primary\nNamespace:         kubectl-819\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.233.47.7\nIPs:               10.233.47.7\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.233.118.55:6379\nSession Affinity:  None\nEvents:            <none>\n"
  I1015 11:02:06.587529 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-819 describe node env1-test-master-0'
  I1015 11:02:06.854633 22 builder.go:146] stderr: ""
  E1015 11:02:06.855004      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:02:06.855347 22 builder.go:147] stdout: "Name:               env1-test-master-0\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/instance-type=vsphere-vm.cpu-2.mem-7gb.os-ubuntu\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=env1-test-master-0\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\n                    node.kubernetes.io/instance-type=vsphere-vm.cpu-2.mem-7gb.os-ubuntu\nAnnotations:        alpha.kubernetes.io/provided-node-ip: 10.61.1.197\n                    csi.volume.kubernetes.io/nodeid: {\"csi.vsphere.vmware.com\":\"422692ca-c6ee-f8d8-dc62-5ca0ff24de6d\"}\n                    kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/containerd/containerd.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    projectcalico.org/IPv4Address: 10.61.1.197/26\n                    projectcalico.org/IPv4VXLANTunnelAddr: 10.233.93.128\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Mon, 22 Apr 2024 13:09:59 +0000\nTaints:             node-role.kubernetes.io/control-plane:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  env1-test-master-0\n  AcquireTime:     <unset>\n  RenewTime:       Tue, 15 Oct 2024 11:02:00 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Mon, 14 Oct 2024 21:55:30 +0000   Mon, 14 Oct 2024 21:55:30 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Tue, 15 Oct 2024 11:02:06 +0000   Mon, 14 Oct 2024 20:09:38 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Tue, 15 Oct 2024 11:02:06 +0000   Mon, 14 Oct 2024 20:09:38 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Tue, 15 Oct 2024 11:02:06 +0000   Mon, 14 Oct 2024 20:09:38 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Tue, 15 Oct 2024 11:02:06 +0000   Mon, 14 Oct 2024 21:36:46 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  10.61.1.197\n  ExternalIP:  10.61.1.197\n  Hostname:    env1-test-master-0\nCapacity:\n  cpu:                2\n  ephemeral-storage:  60795672Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             8054876Ki\n  pods:               110\nAllocatable:\n  cpu:                1800m\n  ephemeral-storage:  56029291223\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             7428188Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 4284f3e04f9c47a4b59e54ce697ed9a6\n  System UUID:                422692ca-c6ee-f8d8-dc62-5ca0ff24de6d\n  Boot ID:                    dbe28a5e-a4ac-46b9-b3c5-d18fab072b8f\n  Kernel Version:             5.4.0-67-generic\n  OS Image:                   Ubuntu 20.04.2 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.7.21\n  Kubelet Version:            v1.30.4\n  Kube-Proxy Version:         v1.30.4\nPodCIDR:                      10.233.64.0/24\nPodCIDRs:                     10.233.64.0/24\nProviderID:                   vsphere://422692ca-c6ee-f8d8-dc62-5ca0ff24de6d\nNon-terminated Pods:          (13 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  filebeat                    filebeat-filebeat-r46fs                                    200m (11%)    1 (55%)     200Mi (2%)       1000Mi (13%)   12h\n  kube-system                 calico-node-cvrw2                                          150m (8%)     300m (16%)  64M (0%)         500M (6%)      13h\n  kube-system                 coredns-858d55c6db-4blwj                                   100m (5%)     0 (0%)      70Mi (0%)        300Mi (4%)     12h\n  kube-system                 kube-apiserver-env1-test-master-0                          250m (13%)    0 (0%)      0 (0%)           0 (0%)         14h\n  kube-system                 kube-controller-manager-env1-test-master-0                 200m (11%)    0 (0%)      0 (0%)           0 (0%)         14h\n  kube-system                 kube-proxy-tgg65                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         12h\n  kube-system                 kube-scheduler-env1-test-master-0                          100m (5%)     0 (0%)      0 (0%)           0 (0%)         14h\n  kube-system                 nodelocaldns-7dctx                                         100m (5%)     0 (0%)      70Mi (0%)        200Mi (2%)     109d\n  kube-system                 vsphere-cloud-controller-manager-j6lhn                     200m (11%)    0 (0%)      0 (0%)           0 (0%)         12h\n  kube-system                 vsphere-csi-controller-766bc9cdf8-6g72h                    0 (0%)        0 (0%)      0 (0%)           0 (0%)         12h\n  kube-system                 vsphere-csi-node-tlzhn                                     0 (0%)        0 (0%)      0 (0%)           0 (0%)         12h\n  prometheus                  prometheus-prometheus-node-exporter-lgt6d                  0 (0%)        0 (0%)      0 (0%)           0 (0%)         175d\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-b8230e29d699455d-z7hll    0 (0%)        0 (0%)      0 (0%)           0 (0%)         110m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests       Limits\n  --------           --------       ------\n  cpu                1300m (72%)    1300m (72%)\n  memory             410660Ki (5%)  2072864000 (27%)\n  ephemeral-storage  0 (0%)         0 (0%)\n  hugepages-1Gi      0 (0%)         0 (0%)\n  hugepages-2Mi      0 (0%)         0 (0%)\nEvents:              <none>\n"
  I1015 11:02:06.856088 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-819 describe namespace kubectl-819'
  I1015 11:02:07.081732 22 builder.go:146] stderr: ""
  I1015 11:02:07.081850 22 builder.go:147] stdout: "Name:         kubectl-819\nLabels:       e2e-framework=kubectl\n              e2e-run=a8786c21-5c35-4e4c-95a4-da91475f5e43\n              kubernetes.io/metadata.name=kubectl-819\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I1015 11:02:07.082046 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-819" for this suite. @ 10/15/24 11:02:07.112
• [5.160 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 10/15/24 11:02:07.132
  I1015 11:02:07.132476 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename projected @ 10/15/24 11:02:07.134
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 11:02:07.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 11:02:07.202
  STEP: Creating configMap with name projected-configmap-test-volume-5300c938-92b8-4414-a9c2-11379389d019 @ 10/15/24 11:02:07.209
  STEP: Creating a pod to test consume configMaps @ 10/15/24 11:02:07.218
  E1015 11:02:07.854695      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:02:08.855153      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:02:09.856022      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:02:10.856771      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 11:02:11.279
  I1015 11:02:11.286970 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-projected-configmaps-669e66bc-03ef-4e58-a597-f50000631872 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 10/15/24 11:02:11.3
  I1015 11:02:11.338627 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4025" for this suite. @ 10/15/24 11:02:11.351
• [4.241 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1015
  STEP: Creating a kubernetes client @ 10/15/24 11:02:11.374
  I1015 11:02:11.375014 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename resourcequota @ 10/15/24 11:02:11.377
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 11:02:11.416
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 11:02:11.422
  STEP: Creating resourceQuota "e2e-rq-status-bf567" @ 10/15/24 11:02:11.44
  I1015 11:02:11.462455 22 resource_quota.go:1051] Resource quota "e2e-rq-status-bf567" reports spec: hard cpu limit of 500m
  I1015 11:02:11.462579 22 resource_quota.go:1053] Resource quota "e2e-rq-status-bf567" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-bf567" /status @ 10/15/24 11:02:11.462
  STEP: Confirm /status for "e2e-rq-status-bf567" resourceQuota via watch @ 10/15/24 11:02:11.48
  I1015 11:02:11.483044 22 resource_quota.go:1080] observed resourceQuota "e2e-rq-status-bf567" in namespace "resourcequota-836" with hard status: v1.ResourceList(nil)
  I1015 11:02:11.483537 22 resource_quota.go:1083] Found resourceQuota "e2e-rq-status-bf567" in namespace "resourcequota-836" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I1015 11:02:11.483642 22 resource_quota.go:1090] ResourceQuota "e2e-rq-status-bf567" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 10/15/24 11:02:11.5
  I1015 11:02:11.522164 22 resource_quota.go:1101] Resource quota "e2e-rq-status-bf567" reports spec: hard cpu limit of 1
  I1015 11:02:11.522268 22 resource_quota.go:1102] Resource quota "e2e-rq-status-bf567" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-bf567" /status @ 10/15/24 11:02:11.522
  STEP: Confirm /status for "e2e-rq-status-bf567" resourceQuota via watch @ 10/15/24 11:02:11.536
  I1015 11:02:11.550820 22 resource_quota.go:1124] observed resourceQuota "e2e-rq-status-bf567" in namespace "resourcequota-836" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I1015 11:02:11.551012 22 resource_quota.go:1127] Found resourceQuota "e2e-rq-status-bf567" in namespace "resourcequota-836" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I1015 11:02:11.551091 22 resource_quota.go:1134] ResourceQuota "e2e-rq-status-bf567" /status was patched
  STEP: Get "e2e-rq-status-bf567" /status @ 10/15/24 11:02:11.551
  I1015 11:02:11.576389 22 resource_quota.go:1145] Resourcequota "e2e-rq-status-bf567" reports status: hard cpu of 1
  I1015 11:02:11.577164 22 resource_quota.go:1147] Resourcequota "e2e-rq-status-bf567" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-bf567" /status before checking Spec is unchanged @ 10/15/24 11:02:11.586
  I1015 11:02:11.606681 22 resource_quota.go:1167] Resourcequota "e2e-rq-status-bf567" reports status: hard cpu of 2
  I1015 11:02:11.607281 22 resource_quota.go:1169] Resourcequota "e2e-rq-status-bf567" reports status: hard memory of 2Gi
  I1015 11:02:11.614331 22 resource_quota.go:1181] Found resourceQuota "e2e-rq-status-bf567" in namespace "resourcequota-836" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I1015 11:02:11.626451 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-bf567" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bf567", GenerateName:"", Namespace:"resourcequota-836", SelfLink:"", UID:"7f8c62ab-f617-4597-8f02-4acc098adca1", ResourceVersion:"53494796", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bf567"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0051403c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0051403f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005140450), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1015 11:02:11.857951      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:02:12.858844      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:02:13.859938      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:02:14.860963      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:02:15.861137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:02:16.635669 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-bf567" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bf567", GenerateName:"", Namespace:"resourcequota-836", SelfLink:"", UID:"7f8c62ab-f617-4597-8f02-4acc098adca1", ResourceVersion:"53494796", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bf567"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0051405b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0051405e8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005140618), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1015 11:02:16.861711      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:02:17.862334      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:02:18.862920      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:02:19.863560      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:02:20.863881      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:02:21.625050 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-bf567" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bf567", GenerateName:"", Namespace:"resourcequota-836", SelfLink:"", UID:"7f8c62ab-f617-4597-8f02-4acc098adca1", ResourceVersion:"53494796", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bf567"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e4a000), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e4a060), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e4a0f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1015 11:02:21.864181      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:02:22.864583      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:02:23.865302      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:02:24.865487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:02:25.865747      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:02:26.623664 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-bf567" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bf567", GenerateName:"", Namespace:"resourcequota-836", SelfLink:"", UID:"7f8c62ab-f617-4597-8f02-4acc098adca1", ResourceVersion:"53494796", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bf567"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e4a3c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e4a408), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e4a450), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1015 11:02:26.865966      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:02:27.866164      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:02:28.866965      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:02:29.867108      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:02:30.867657      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:02:31.624413 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-bf567" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bf567", GenerateName:"", Namespace:"resourcequota-836", SelfLink:"", UID:"7f8c62ab-f617-4597-8f02-4acc098adca1", ResourceVersion:"53494796", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bf567"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0054d6dc8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0054d6df8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0054d6e28), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1015 11:02:31.867691      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:02:32.868569      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:02:33.868887      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:02:34.868885      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:02:35.869129      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:02:36.623516 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-bf567" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bf567", GenerateName:"", Namespace:"resourcequota-836", SelfLink:"", UID:"7f8c62ab-f617-4597-8f02-4acc098adca1", ResourceVersion:"53494796", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bf567"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e4a7b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e4a7e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e4a858), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1015 11:02:36.869916      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:02:37.870461      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:02:38.870710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:02:39.871112      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:02:40.871668      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:02:41.625157 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-bf567" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bf567", GenerateName:"", Namespace:"resourcequota-836", SelfLink:"", UID:"7f8c62ab-f617-4597-8f02-4acc098adca1", ResourceVersion:"53494796", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bf567"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0051407e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005140828), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005140858), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1015 11:02:41.872532      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:02:42.872833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:02:43.873008      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:02:44.873350      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:02:45.873696      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:02:46.624635 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-bf567" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bf567", GenerateName:"", Namespace:"resourcequota-836", SelfLink:"", UID:"7f8c62ab-f617-4597-8f02-4acc098adca1", ResourceVersion:"53494796", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bf567"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e4abd0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e4ac48), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e4ac78), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1015 11:02:46.873770      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:02:47.874087      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:02:48.874426      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:02:49.875166      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:02:50.875487      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:02:51.625561 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-bf567" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bf567", GenerateName:"", Namespace:"resourcequota-836", SelfLink:"", UID:"7f8c62ab-f617-4597-8f02-4acc098adca1", ResourceVersion:"53494796", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bf567"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e4af30), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e4afa8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e4afd8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1015 11:02:51.876119      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:02:52.876892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:02:53.877915      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:02:54.878921      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:02:55.879131      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:02:56.624002 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-bf567" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bf567", GenerateName:"", Namespace:"resourcequota-836", SelfLink:"", UID:"7f8c62ab-f617-4597-8f02-4acc098adca1", ResourceVersion:"53494796", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bf567"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0051409f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005140a20), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005140a50), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1015 11:02:56.879917      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:02:57.880476      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:02:58.881226      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:02:59.881670      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:00.882098      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:03:01.622922 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-bf567" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bf567", GenerateName:"", Namespace:"resourcequota-836", SelfLink:"", UID:"7f8c62ab-f617-4597-8f02-4acc098adca1", ResourceVersion:"53494796", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bf567"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e4b4d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e4b638), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e4b728), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1015 11:03:01.882759      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:02.883104      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:03.883291      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:04.883613      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:05.885187      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:03:06.630901 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-bf567" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bf567", GenerateName:"", Namespace:"resourcequota-836", SelfLink:"", UID:"7f8c62ab-f617-4597-8f02-4acc098adca1", ResourceVersion:"53494796", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bf567"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0054d7098), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0054d70c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0054d70f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1015 11:03:06.885367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:07.885820      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:08.886088      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:09.886231      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:10.886456      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:03:11.622894 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-bf567" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bf567", GenerateName:"", Namespace:"resourcequota-836", SelfLink:"", UID:"7f8c62ab-f617-4597-8f02-4acc098adca1", ResourceVersion:"53494796", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bf567"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e4b9b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e4b9e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e4ba70), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1015 11:03:11.887490      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:12.887789      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:13.888813      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:14.889517      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:15.890694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:03:16.625907 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-bf567" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bf567", GenerateName:"", Namespace:"resourcequota-836", SelfLink:"", UID:"7f8c62ab-f617-4597-8f02-4acc098adca1", ResourceVersion:"53494796", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bf567"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e4bc80), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e4bcc8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003e4bd28), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1015 11:03:16.891034      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:17.891904      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:18.892100      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:19.892596      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:20.893332      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:03:21.624941 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-bf567" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bf567", GenerateName:"", Namespace:"resourcequota-836", SelfLink:"", UID:"7f8c62ab-f617-4597-8f02-4acc098adca1", ResourceVersion:"53494796", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bf567"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005140d08), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005140dc8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005140e10), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1015 11:03:21.894000      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:22.894977      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:23.896056      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:24.896271      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:25.896520      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:03:26.624694 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-bf567" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bf567", GenerateName:"", Namespace:"resourcequota-836", SelfLink:"", UID:"7f8c62ab-f617-4597-8f02-4acc098adca1", ResourceVersion:"53494796", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bf567"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0051410f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005141140), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0051411d0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1015 11:03:26.896703      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:27.897412      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:28.897544      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:29.897885      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:30.898024      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:03:31.626729 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-bf567" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bf567", GenerateName:"", Namespace:"resourcequota-836", SelfLink:"", UID:"7f8c62ab-f617-4597-8f02-4acc098adca1", ResourceVersion:"53494796", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bf567"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0054d73e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0054d7410), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0054d7440), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1015 11:03:31.898203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:32.898441      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:33.899570      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:34.899704      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:35.899889      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:03:36.626273 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-bf567" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bf567", GenerateName:"", Namespace:"resourcequota-836", SelfLink:"", UID:"7f8c62ab-f617-4597-8f02-4acc098adca1", ResourceVersion:"53494796", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bf567"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005141620), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005141668), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0051416b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1015 11:03:36.900343      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:37.900373      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:38.901199      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:39.901919      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:40.901969      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:03:41.627300 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-bf567" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bf567", GenerateName:"", Namespace:"resourcequota-836", SelfLink:"", UID:"7f8c62ab-f617-4597-8f02-4acc098adca1", ResourceVersion:"53494796", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bf567"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0054d7650), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0054d7680), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0054d76c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1015 11:03:41.902746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:42.903232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:43.904107      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:44.904294      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:45.904742      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:03:46.623190 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-bf567" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bf567", GenerateName:"", Namespace:"resourcequota-836", SelfLink:"", UID:"7f8c62ab-f617-4597-8f02-4acc098adca1", ResourceVersion:"53494796", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bf567"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0054d7830), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0054d7860), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0054d7890), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1015 11:03:46.905544      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:47.906016      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:48.907032      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:49.907768      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:50.908626      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:03:51.624917 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-bf567" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bf567", GenerateName:"", Namespace:"resourcequota-836", SelfLink:"", UID:"7f8c62ab-f617-4597-8f02-4acc098adca1", ResourceVersion:"53494796", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bf567"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0054d6078), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0054d60c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0054d6108), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1015 11:03:51.908745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:52.908939      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:53.909208      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:54.909410      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:55.909595      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:03:56.624655 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-bf567" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bf567", GenerateName:"", Namespace:"resourcequota-836", SelfLink:"", UID:"7f8c62ab-f617-4597-8f02-4acc098adca1", ResourceVersion:"53494796", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bf567"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00517a090), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00517a0d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00517a108), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1015 11:03:56.910582      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:57.910675      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:58.911870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:03:59.912241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:00.912870      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:04:01.623003 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-bf567" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bf567", GenerateName:"", Namespace:"resourcequota-836", SelfLink:"", UID:"7f8c62ab-f617-4597-8f02-4acc098adca1", ResourceVersion:"53494796", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bf567"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00517a300), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00517a360), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00517a390), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1015 11:04:01.913349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:02.913392      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:03.914210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:04.914722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:05.915319      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:04:06.622907 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-bf567" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bf567", GenerateName:"", Namespace:"resourcequota-836", SelfLink:"", UID:"7f8c62ab-f617-4597-8f02-4acc098adca1", ResourceVersion:"53494796", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bf567"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0051400c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0051400f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005140138), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1015 11:04:06.916388      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:07.917046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:08.917953      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:09.918361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:10.918905      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:04:11.627863 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-bf567" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bf567", GenerateName:"", Namespace:"resourcequota-836", SelfLink:"", UID:"7f8c62ab-f617-4597-8f02-4acc098adca1", ResourceVersion:"53494796", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bf567"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00517a750), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00517a798), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00517a7c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1015 11:04:11.919737      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:12.920383      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:13.920718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:14.921232      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:15.921796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:04:16.625151 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-bf567" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bf567", GenerateName:"", Namespace:"resourcequota-836", SelfLink:"", UID:"7f8c62ab-f617-4597-8f02-4acc098adca1", ResourceVersion:"53494796", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bf567"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0054d6378), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0054d63a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0054d63d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1015 11:04:16.922801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:17.923646      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:18.924420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:19.925150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:20.925299      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:04:21.627052 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-bf567" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bf567", GenerateName:"", Namespace:"resourcequota-836", SelfLink:"", UID:"7f8c62ab-f617-4597-8f02-4acc098adca1", ResourceVersion:"53494796", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bf567"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00517aaf8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00517ab58), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00517abb8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1015 11:04:21.925404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:22.926083      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:23.926381      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:24.926689      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:25.926610      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:04:26.624295 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-bf567" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bf567", GenerateName:"", Namespace:"resourcequota-836", SelfLink:"", UID:"7f8c62ab-f617-4597-8f02-4acc098adca1", ResourceVersion:"53494796", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bf567"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0054d65b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0054d6600), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0054d6630), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1015 11:04:26.926878      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:27.927367      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:28.928521      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:29.928864      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:30.929211      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:04:31.623808 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-bf567" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bf567", GenerateName:"", Namespace:"resourcequota-836", SelfLink:"", UID:"7f8c62ab-f617-4597-8f02-4acc098adca1", ResourceVersion:"53494796", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bf567"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00517adf8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00517ae28), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00517ae70), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1015 11:04:31.930252      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:32.931114      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:33.931507      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:34.931729      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:35.931829      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:04:36.624550 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-bf567" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bf567", GenerateName:"", Namespace:"resourcequota-836", SelfLink:"", UID:"7f8c62ab-f617-4597-8f02-4acc098adca1", ResourceVersion:"53494796", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bf567"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005140540), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005140570), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0051405b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1015 11:04:36.932694      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:37.932951      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:38.933253      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:39.933359      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:40.933535      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:04:41.631495 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-bf567" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bf567", GenerateName:"", Namespace:"resourcequota-836", SelfLink:"", UID:"7f8c62ab-f617-4597-8f02-4acc098adca1", ResourceVersion:"53494796", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bf567"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005140750), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005140780), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0051407c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1015 11:04:41.934059      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:42.934481      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:43.935267      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:44.935625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:45.936180      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:04:46.639957 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-bf567" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bf567", GenerateName:"", Namespace:"resourcequota-836", SelfLink:"", UID:"7f8c62ab-f617-4597-8f02-4acc098adca1", ResourceVersion:"53494796", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bf567"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005140930), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005140960), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005140990), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1015 11:04:46.937241      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:47.937464      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:48.938455      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:49.939235      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:50.939785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:04:51.624941 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-bf567" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bf567", GenerateName:"", Namespace:"resourcequota-836", SelfLink:"", UID:"7f8c62ab-f617-4597-8f02-4acc098adca1", ResourceVersion:"53494796", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bf567"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00517b2f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00517b320), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00517b368), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1015 11:04:51.942435      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:52.942475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:53.943614      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:54.943794      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:55.944356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:04:56.624518 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-bf567" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bf567", GenerateName:"", Namespace:"resourcequota-836", SelfLink:"", UID:"7f8c62ab-f617-4597-8f02-4acc098adca1", ResourceVersion:"53494796", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bf567"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00517b530), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00517b5a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00517b5d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1015 11:04:56.944850      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:57.945398      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:58.945649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:04:59.946193      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:00.946625      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:05:01.622641 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-bf567" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bf567", GenerateName:"", Namespace:"resourcequota-836", SelfLink:"", UID:"7f8c62ab-f617-4597-8f02-4acc098adca1", ResourceVersion:"53494796", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bf567"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0054d68e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0054d6918), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0054d6948), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1015 11:05:01.947515      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:02.947655      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:03.947834      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:04.948230      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:05.948881      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:05:06.620912 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-bf567" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bf567", GenerateName:"", Namespace:"resourcequota-836", SelfLink:"", UID:"7f8c62ab-f617-4597-8f02-4acc098adca1", ResourceVersion:"53494796", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bf567"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0054d6ae0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0054d6b10), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0054d6b40), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1015 11:05:06.949096      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:07.949297      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:08.949459      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:09.949619      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:10.949909      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:05:11.624827 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-bf567" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bf567", GenerateName:"", Namespace:"resourcequota-836", SelfLink:"", UID:"7f8c62ab-f617-4597-8f02-4acc098adca1", ResourceVersion:"53494796", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bf567"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00517b9f8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00517ba28), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00517ba70), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1015 11:05:11.950634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:12.950821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:13.951009      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:14.951373      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:15.951323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:05:16.625294 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-bf567" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bf567", GenerateName:"", Namespace:"resourcequota-836", SelfLink:"", UID:"7f8c62ab-f617-4597-8f02-4acc098adca1", ResourceVersion:"53494796", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bf567"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00517bc38), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00517bc68), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00517bc98), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1015 11:05:16.952212      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:17.952632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:18.953498      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:19.953602      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:20.953787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:05:21.620865 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-bf567" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bf567", GenerateName:"", Namespace:"resourcequota-836", SelfLink:"", UID:"7f8c62ab-f617-4597-8f02-4acc098adca1", ResourceVersion:"53494796", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bf567"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00517be60), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00517bea8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00517bf20), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1015 11:05:21.954821      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:22.955116      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:23.955502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:24.955552      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:25.955718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:05:26.623332 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-bf567" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bf567", GenerateName:"", Namespace:"resourcequota-836", SelfLink:"", UID:"7f8c62ab-f617-4597-8f02-4acc098adca1", ResourceVersion:"53494796", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bf567"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e92270), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e92300), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e923c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1015 11:05:26.955837      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:27.956251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:28.956475      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:29.956573      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:30.956898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:05:31.621162 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-bf567" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bf567", GenerateName:"", Namespace:"resourcequota-836", SelfLink:"", UID:"7f8c62ab-f617-4597-8f02-4acc098adca1", ResourceVersion:"53494796", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bf567"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005140b70), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005140ba0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005140bd0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1015 11:05:31.957319      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:32.957457      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:33.957718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:34.957860      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:35.958291      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:05:36.628274 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-bf567" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bf567", GenerateName:"", Namespace:"resourcequota-836", SelfLink:"", UID:"7f8c62ab-f617-4597-8f02-4acc098adca1", ResourceVersion:"53494796", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bf567"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e92a20), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e92a98), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e92ae0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1015 11:05:36.958396      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:37.959273      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:38.959812      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:39.959806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:40.960383      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:05:41.623237 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-bf567" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bf567", GenerateName:"", Namespace:"resourcequota-836", SelfLink:"", UID:"7f8c62ab-f617-4597-8f02-4acc098adca1", ResourceVersion:"53494796", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bf567"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005140de0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005140e28), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005140ea0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1015 11:05:41.960649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:42.961505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:43.962065      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:44.962739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:45.963200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:05:46.632298 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-bf567" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bf567", GenerateName:"", Namespace:"resourcequota-836", SelfLink:"", UID:"7f8c62ab-f617-4597-8f02-4acc098adca1", ResourceVersion:"53494796", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bf567"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005141140), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0051411d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005141260), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1015 11:05:46.964388      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:47.964527      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:48.965113      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:49.965869      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:50.966322      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:05:51.626257 22 resource_quota.go:1212] ResourceQuota "e2e-rq-status-bf567" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-bf567", GenerateName:"", Namespace:"resourcequota-836", SelfLink:"", UID:"7f8c62ab-f617-4597-8f02-4acc098adca1", ResourceVersion:"53494796", Generation:0, CreationTimestamp:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-bf567"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005141668), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0051416b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.October, 15, 11, 2, 11, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0051416f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E1015 11:05:51.967229      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:52.967314      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:53.967761      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:54.968176      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:55.968486      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:05:56.622868 22 resource_quota.go:1209] ResourceQuota "e2e-rq-status-bf567" Spec was unchanged and /status reset
  I1015 11:05:56.623206 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-836" for this suite. @ 10/15/24 11:05:56.637
• [225.281 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 10/15/24 11:05:56.656
  I1015 11:05:56.656566 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename security-context-test @ 10/15/24 11:05:56.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 11:05:56.694
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 11:05:56.703
  E1015 11:05:56.968892      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:57.969772      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:58.970788      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:05:59.970967      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:06:00.760321 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2291" for this suite. @ 10/15/24 11:06:00.773
• [4.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 10/15/24 11:06:00.792
  I1015 11:06:00.792377 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename sched-preemption @ 10/15/24 11:06:00.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 11:06:00.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 11:06:00.834
  I1015 11:06:00.878301 22 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E1015 11:06:00.971035      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:01.971914      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:02.972928      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:03.973373      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:04.974284      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:05.974895      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:06.975692      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:07.975785      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:08.975874      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:09.976356      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:10.976674      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:11.976891      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:12.977432      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:13.977806      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:14.977898      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:15.978328      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:16.978477      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:17.979568      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:18.980568      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:19.981134      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:20.981796      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:21.982262      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:22.983057      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:23.983523      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:24.983573      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:25.983787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:26.984184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:27.984746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:28.985702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:29.985934      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:30.986281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:31.986408      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:32.987467      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:33.988146      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:34.989212      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:35.989623      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:36.990508      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:37.991563      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:38.992203      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:39.992463      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:40.992730      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:41.993283      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:42.994272      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:43.994382      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:44.995184      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:45.995830      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:46.996285      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:47.997380      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:48.998214      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:49.998942      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:50.999012      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:51.999808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:53.000722      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:54.001293      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:55.002055      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:56.002996      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:57.003245      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:58.004200      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:06:59.004972      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:07:00.014411      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:07:00.891663 22 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 10/15/24 11:07:00.899
  I1015 11:07:00.979198 22 preemption.go:269] Created pod: pod0-0-sched-preemption-low-priority
  I1015 11:07:01.008551 22 preemption.go:269] Created pod: pod0-1-sched-preemption-medium-priority
  E1015 11:07:01.015249      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:07:01.087857 22 preemption.go:269] Created pod: pod1-0-sched-preemption-medium-priority
  I1015 11:07:01.113993 22 preemption.go:269] Created pod: pod1-1-sched-preemption-medium-priority
  I1015 11:07:01.187300 22 preemption.go:269] Created pod: pod2-0-sched-preemption-medium-priority
  I1015 11:07:01.205777 22 preemption.go:269] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 10/15/24 11:07:01.206
  E1015 11:07:02.015884      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:07:03.016182      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:07:04.016990      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:07:05.017638      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 10/15/24 11:07:05.323
  E1015 11:07:06.018764      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:07:07.019255      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:07:08.019632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:07:09.020115      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:07:09.690538 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5678" for this suite. @ 10/15/24 11:07:09.714
• [68.947 seconds]
------------------------------
SSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 10/15/24 11:07:09.74
  I1015 11:07:09.740804 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename proxy @ 10/15/24 11:07:09.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 11:07:09.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 11:07:09.815
  STEP: starting an echo server on multiple ports @ 10/15/24 11:07:09.899
  STEP: creating replication controller proxy-service-hmdcj in namespace proxy-7516 @ 10/15/24 11:07:09.899
  I1015 11:07:09.964451      22 runners.go:198] Created replication controller with name: proxy-service-hmdcj, namespace: proxy-7516, replica count: 1
  E1015 11:07:10.021048      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:07:11.017159      22 runners.go:198] proxy-service-hmdcj Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E1015 11:07:11.021758      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:07:12.017739      22 runners.go:198] proxy-service-hmdcj Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  E1015 11:07:12.022519      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:07:13.019021      22 runners.go:198] proxy-service-hmdcj Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E1015 11:07:13.023156      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:07:13.027768 22 proxy.go:230] setup took 3.199960266s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 10/15/24 11:07:13.027
  I1015 11:07:13.050803 22 proxy.go:558] (0) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:1080/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:1080/proxy/rewriteme">test<... (200; 22.040822ms)
  I1015 11:07:13.051108 22 proxy.go:558] (0) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:160/proxy/: foo (200; 21.883904ms)
  I1015 11:07:13.051288 22 proxy.go:558] (0) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:1080/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:1080/proxy/rewriteme">... (200; 22.236116ms)
  I1015 11:07:13.056132 22 proxy.go:558] (0) /api/v1/namespaces/proxy-7516/services/http:proxy-service-hmdcj:portname1/proxy/: foo (200; 27.62155ms)
  I1015 11:07:13.058028 22 proxy.go:558] (0) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:160/proxy/: foo (200; 29.203709ms)
  I1015 11:07:13.058673 22 proxy.go:558] (0) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:443/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:443/proxy/tlsrewritem... (200; 30.402482ms)
  I1015 11:07:13.059532 22 proxy.go:558] (0) /api/v1/namespaces/proxy-7516/services/proxy-service-hmdcj:portname1/proxy/: foo (200; 30.347106ms)
  I1015 11:07:13.060353 22 proxy.go:558] (0) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:162/proxy/: bar (200; 32.267836ms)
  I1015 11:07:13.061112 22 proxy.go:558] (0) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:162/proxy/: bar (200; 31.766337ms)
  I1015 11:07:13.061591 22 proxy.go:558] (0) /api/v1/namespaces/proxy-7516/services/proxy-service-hmdcj:portname2/proxy/: bar (200; 33.032972ms)
  I1015 11:07:13.062568 22 proxy.go:558] (0) /api/v1/namespaces/proxy-7516/services/http:proxy-service-hmdcj:portname2/proxy/: bar (200; 34.260773ms)
  I1015 11:07:13.073012 22 proxy.go:558] (0) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:460/proxy/: tls baz (200; 44.563511ms)
  I1015 11:07:13.073366 22 proxy.go:558] (0) /api/v1/namespaces/proxy-7516/services/https:proxy-service-hmdcj:tlsportname1/proxy/: tls baz (200; 44.252855ms)
  I1015 11:07:13.078197 22 proxy.go:558] (0) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48/proxy/rewriteme">test</a> (200; 49.547599ms)
  I1015 11:07:13.078263 22 proxy.go:558] (0) /api/v1/namespaces/proxy-7516/services/https:proxy-service-hmdcj:tlsportname2/proxy/: tls qux (200; 49.607954ms)
  I1015 11:07:13.078190 22 proxy.go:558] (0) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:462/proxy/: tls qux (200; 49.200617ms)
  I1015 11:07:13.099663 22 proxy.go:558] (1) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:162/proxy/: bar (200; 20.039931ms)
  I1015 11:07:13.103228 22 proxy.go:558] (1) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:160/proxy/: foo (200; 21.830864ms)
  I1015 11:07:13.110512 22 proxy.go:558] (1) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:162/proxy/: bar (200; 28.860593ms)
  I1015 11:07:13.110504 22 proxy.go:558] (1) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:1080/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:1080/proxy/rewriteme">... (200; 29.431734ms)
  I1015 11:07:13.113843 22 proxy.go:558] (1) /api/v1/namespaces/proxy-7516/services/proxy-service-hmdcj:portname2/proxy/: bar (200; 31.722733ms)
  I1015 11:07:13.116999 22 proxy.go:558] (1) /api/v1/namespaces/proxy-7516/services/http:proxy-service-hmdcj:portname1/proxy/: foo (200; 35.1823ms)
  I1015 11:07:13.117010 22 proxy.go:558] (1) /api/v1/namespaces/proxy-7516/services/https:proxy-service-hmdcj:tlsportname2/proxy/: tls qux (200; 36.503954ms)
  I1015 11:07:13.118037 22 proxy.go:558] (1) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:1080/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:1080/proxy/rewriteme">test<... (200; 35.330114ms)
  I1015 11:07:13.121426 22 proxy.go:558] (1) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:460/proxy/: tls baz (200; 37.85966ms)
  I1015 11:07:13.124066 22 proxy.go:558] (1) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:462/proxy/: tls qux (200; 40.874522ms)
  I1015 11:07:13.125691 22 proxy.go:558] (1) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:160/proxy/: foo (200; 42.731794ms)
  I1015 11:07:13.126860 22 proxy.go:558] (1) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:443/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:443/proxy/tlsrewritem... (200; 43.182955ms)
  I1015 11:07:13.128768 22 proxy.go:558] (1) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48/proxy/rewriteme">test</a> (200; 44.939331ms)
  I1015 11:07:13.128805 22 proxy.go:558] (1) /api/v1/namespaces/proxy-7516/services/http:proxy-service-hmdcj:portname2/proxy/: bar (200; 46.407166ms)
  I1015 11:07:13.130778 22 proxy.go:558] (1) /api/v1/namespaces/proxy-7516/services/https:proxy-service-hmdcj:tlsportname1/proxy/: tls baz (200; 47.026815ms)
  I1015 11:07:13.133411 22 proxy.go:558] (1) /api/v1/namespaces/proxy-7516/services/proxy-service-hmdcj:portname1/proxy/: foo (200; 49.801442ms)
  I1015 11:07:13.153234 22 proxy.go:558] (2) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48/proxy/rewriteme">test</a> (200; 19.175367ms)
  I1015 11:07:13.154710 22 proxy.go:558] (2) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:162/proxy/: bar (200; 20.828558ms)
  I1015 11:07:13.159397 22 proxy.go:558] (2) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:443/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:443/proxy/tlsrewritem... (200; 25.546418ms)
  I1015 11:07:13.161887 22 proxy.go:558] (2) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:160/proxy/: foo (200; 27.545252ms)
  I1015 11:07:13.162324 22 proxy.go:558] (2) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:162/proxy/: bar (200; 27.777804ms)
  I1015 11:07:13.163210 22 proxy.go:558] (2) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:460/proxy/: tls baz (200; 28.754272ms)
  I1015 11:07:13.164156 22 proxy.go:558] (2) /api/v1/namespaces/proxy-7516/services/proxy-service-hmdcj:portname1/proxy/: foo (200; 29.781484ms)
  I1015 11:07:13.164273 22 proxy.go:558] (2) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:1080/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:1080/proxy/rewriteme">... (200; 29.999436ms)
  I1015 11:07:13.164263 22 proxy.go:558] (2) /api/v1/namespaces/proxy-7516/services/https:proxy-service-hmdcj:tlsportname2/proxy/: tls qux (200; 30.117603ms)
  I1015 11:07:13.165514 22 proxy.go:558] (2) /api/v1/namespaces/proxy-7516/services/http:proxy-service-hmdcj:portname2/proxy/: bar (200; 31.895036ms)
  I1015 11:07:13.165903 22 proxy.go:558] (2) /api/v1/namespaces/proxy-7516/services/proxy-service-hmdcj:portname2/proxy/: bar (200; 31.497616ms)
  I1015 11:07:13.166871 22 proxy.go:558] (2) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:1080/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:1080/proxy/rewriteme">test<... (200; 33.364785ms)
  I1015 11:07:13.168627 22 proxy.go:558] (2) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:160/proxy/: foo (200; 34.115864ms)
  I1015 11:07:13.168638 22 proxy.go:558] (2) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:462/proxy/: tls qux (200; 34.065351ms)
  I1015 11:07:13.171521 22 proxy.go:558] (2) /api/v1/namespaces/proxy-7516/services/http:proxy-service-hmdcj:portname1/proxy/: foo (200; 36.939613ms)
  I1015 11:07:13.173553 22 proxy.go:558] (2) /api/v1/namespaces/proxy-7516/services/https:proxy-service-hmdcj:tlsportname1/proxy/: tls baz (200; 39.462803ms)
  I1015 11:07:13.190792 22 proxy.go:558] (3) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:1080/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:1080/proxy/rewriteme">test<... (200; 16.9098ms)
  I1015 11:07:13.190781 22 proxy.go:558] (3) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48/proxy/rewriteme">test</a> (200; 16.43218ms)
  I1015 11:07:13.197954 22 proxy.go:558] (3) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:460/proxy/: tls baz (200; 24.287417ms)
  I1015 11:07:13.199140 22 proxy.go:558] (3) /api/v1/namespaces/proxy-7516/services/proxy-service-hmdcj:portname1/proxy/: foo (200; 24.996216ms)
  I1015 11:07:13.199352 22 proxy.go:558] (3) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:462/proxy/: tls qux (200; 25.180008ms)
  I1015 11:07:13.199451 22 proxy.go:558] (3) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:160/proxy/: foo (200; 24.62149ms)
  I1015 11:07:13.199541 22 proxy.go:558] (3) /api/v1/namespaces/proxy-7516/services/http:proxy-service-hmdcj:portname2/proxy/: bar (200; 24.089471ms)
  I1015 11:07:13.200003 22 proxy.go:558] (3) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:162/proxy/: bar (200; 25.547731ms)
  I1015 11:07:13.200714 22 proxy.go:558] (3) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:443/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:443/proxy/tlsrewritem... (200; 26.225208ms)
  I1015 11:07:13.202321 22 proxy.go:558] (3) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:1080/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:1080/proxy/rewriteme">... (200; 27.417758ms)
  I1015 11:07:13.202789 22 proxy.go:558] (3) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:160/proxy/: foo (200; 28.421479ms)
  I1015 11:07:13.203021 22 proxy.go:558] (3) /api/v1/namespaces/proxy-7516/services/https:proxy-service-hmdcj:tlsportname1/proxy/: tls baz (200; 28.411983ms)
  I1015 11:07:13.206214 22 proxy.go:558] (3) /api/v1/namespaces/proxy-7516/services/https:proxy-service-hmdcj:tlsportname2/proxy/: tls qux (200; 31.513566ms)
  I1015 11:07:13.209253 22 proxy.go:558] (3) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:162/proxy/: bar (200; 34.29493ms)
  I1015 11:07:13.212476 22 proxy.go:558] (3) /api/v1/namespaces/proxy-7516/services/http:proxy-service-hmdcj:portname1/proxy/: foo (200; 37.49105ms)
  I1015 11:07:13.217208 22 proxy.go:558] (3) /api/v1/namespaces/proxy-7516/services/proxy-service-hmdcj:portname2/proxy/: bar (200; 42.201658ms)
  I1015 11:07:13.238650 22 proxy.go:558] (4) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:162/proxy/: bar (200; 20.598655ms)
  I1015 11:07:13.247564 22 proxy.go:558] (4) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48/proxy/rewriteme">test</a> (200; 28.92576ms)
  I1015 11:07:13.248666 22 proxy.go:558] (4) /api/v1/namespaces/proxy-7516/services/proxy-service-hmdcj:portname2/proxy/: bar (200; 30.095937ms)
  I1015 11:07:13.249083 22 proxy.go:558] (4) /api/v1/namespaces/proxy-7516/services/https:proxy-service-hmdcj:tlsportname1/proxy/: tls baz (200; 31.136949ms)
  I1015 11:07:13.249130 22 proxy.go:558] (4) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:443/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:443/proxy/tlsrewritem... (200; 30.302306ms)
  I1015 11:07:13.249180 22 proxy.go:558] (4) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:460/proxy/: tls baz (200; 30.407176ms)
  I1015 11:07:13.249207 22 proxy.go:558] (4) /api/v1/namespaces/proxy-7516/services/http:proxy-service-hmdcj:portname2/proxy/: bar (200; 31.498319ms)
  I1015 11:07:13.249222 22 proxy.go:558] (4) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:160/proxy/: foo (200; 30.79255ms)
  I1015 11:07:13.249245 22 proxy.go:558] (4) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:1080/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:1080/proxy/rewriteme">test<... (200; 31.023865ms)
  I1015 11:07:13.249270 22 proxy.go:558] (4) /api/v1/namespaces/proxy-7516/services/https:proxy-service-hmdcj:tlsportname2/proxy/: tls qux (200; 30.974974ms)
  I1015 11:07:13.249468 22 proxy.go:558] (4) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:162/proxy/: bar (200; 30.993102ms)
  I1015 11:07:13.249590 22 proxy.go:558] (4) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:1080/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:1080/proxy/rewriteme">... (200; 31.216442ms)
  I1015 11:07:13.252424 22 proxy.go:558] (4) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:160/proxy/: foo (200; 33.740078ms)
  I1015 11:07:13.254647 22 proxy.go:558] (4) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:462/proxy/: tls qux (200; 35.917393ms)
  I1015 11:07:13.254695 22 proxy.go:558] (4) /api/v1/namespaces/proxy-7516/services/http:proxy-service-hmdcj:portname1/proxy/: foo (200; 36.164368ms)
  I1015 11:07:13.257552 22 proxy.go:558] (4) /api/v1/namespaces/proxy-7516/services/proxy-service-hmdcj:portname1/proxy/: foo (200; 38.673606ms)
  I1015 11:07:13.270673 22 proxy.go:558] (5) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:162/proxy/: bar (200; 12.403939ms)
  I1015 11:07:13.279078 22 proxy.go:558] (5) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48/proxy/rewriteme">test</a> (200; 20.874816ms)
  I1015 11:07:13.280633 22 proxy.go:558] (5) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:460/proxy/: tls baz (200; 22.205333ms)
  I1015 11:07:13.281425 22 proxy.go:558] (5) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:162/proxy/: bar (200; 23.423933ms)
  I1015 11:07:13.283484 22 proxy.go:558] (5) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:160/proxy/: foo (200; 24.950316ms)
  I1015 11:07:13.283607 22 proxy.go:558] (5) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:462/proxy/: tls qux (200; 25.738952ms)
  I1015 11:07:13.283614 22 proxy.go:558] (5) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:160/proxy/: foo (200; 24.646347ms)
  I1015 11:07:13.284191 22 proxy.go:558] (5) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:1080/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:1080/proxy/rewriteme">test<... (200; 25.728759ms)
  I1015 11:07:13.286910 22 proxy.go:558] (5) /api/v1/namespaces/proxy-7516/services/proxy-service-hmdcj:portname2/proxy/: bar (200; 28.989321ms)
  I1015 11:07:13.287014 22 proxy.go:558] (5) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:1080/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:1080/proxy/rewriteme">... (200; 28.139573ms)
  I1015 11:07:13.287072 22 proxy.go:558] (5) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:443/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:443/proxy/tlsrewritem... (200; 28.598178ms)
  I1015 11:07:13.287104 22 proxy.go:558] (5) /api/v1/namespaces/proxy-7516/services/https:proxy-service-hmdcj:tlsportname1/proxy/: tls baz (200; 28.734362ms)
  I1015 11:07:13.287149 22 proxy.go:558] (5) /api/v1/namespaces/proxy-7516/services/http:proxy-service-hmdcj:portname1/proxy/: foo (200; 28.392337ms)
  I1015 11:07:13.289166 22 proxy.go:558] (5) /api/v1/namespaces/proxy-7516/services/http:proxy-service-hmdcj:portname2/proxy/: bar (200; 30.443643ms)
  I1015 11:07:13.289937 22 proxy.go:558] (5) /api/v1/namespaces/proxy-7516/services/https:proxy-service-hmdcj:tlsportname2/proxy/: tls qux (200; 31.335414ms)
  I1015 11:07:13.290815 22 proxy.go:558] (5) /api/v1/namespaces/proxy-7516/services/proxy-service-hmdcj:portname1/proxy/: foo (200; 32.504428ms)
  I1015 11:07:13.310890 22 proxy.go:558] (6) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:162/proxy/: bar (200; 19.132803ms)
  I1015 11:07:13.311275 22 proxy.go:558] (6) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48/proxy/rewriteme">test</a> (200; 20.099858ms)
  I1015 11:07:13.313124 22 proxy.go:558] (6) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:462/proxy/: tls qux (200; 22.223266ms)
  I1015 11:07:13.314528 22 proxy.go:558] (6) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:162/proxy/: bar (200; 20.783354ms)
  I1015 11:07:13.314876 22 proxy.go:558] (6) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:1080/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:1080/proxy/rewriteme">... (200; 21.445136ms)
  I1015 11:07:13.314887 22 proxy.go:558] (6) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:460/proxy/: tls baz (200; 22.515172ms)
  I1015 11:07:13.314913 22 proxy.go:558] (6) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:443/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:443/proxy/tlsrewritem... (200; 22.833622ms)
  I1015 11:07:13.316015 22 proxy.go:558] (6) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:160/proxy/: foo (200; 22.425838ms)
  I1015 11:07:13.317382 22 proxy.go:558] (6) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:1080/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:1080/proxy/rewriteme">test<... (200; 23.495145ms)
  I1015 11:07:13.317572 22 proxy.go:558] (6) /api/v1/namespaces/proxy-7516/services/proxy-service-hmdcj:portname2/proxy/: bar (200; 24.828335ms)
  I1015 11:07:13.319068 22 proxy.go:558] (6) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:160/proxy/: foo (200; 24.771894ms)
  I1015 11:07:13.320013 22 proxy.go:558] (6) /api/v1/namespaces/proxy-7516/services/proxy-service-hmdcj:portname1/proxy/: foo (200; 28.658762ms)
  I1015 11:07:13.325252 22 proxy.go:558] (6) /api/v1/namespaces/proxy-7516/services/https:proxy-service-hmdcj:tlsportname1/proxy/: tls baz (200; 33.687604ms)
  I1015 11:07:13.328107 22 proxy.go:558] (6) /api/v1/namespaces/proxy-7516/services/http:proxy-service-hmdcj:portname2/proxy/: bar (200; 35.183936ms)
  I1015 11:07:13.329957 22 proxy.go:558] (6) /api/v1/namespaces/proxy-7516/services/http:proxy-service-hmdcj:portname1/proxy/: foo (200; 37.361332ms)
  I1015 11:07:13.330096 22 proxy.go:558] (6) /api/v1/namespaces/proxy-7516/services/https:proxy-service-hmdcj:tlsportname2/proxy/: tls qux (200; 36.939802ms)
  I1015 11:07:13.350669 22 proxy.go:558] (7) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:443/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:443/proxy/tlsrewritem... (200; 19.760842ms)
  I1015 11:07:13.351721 22 proxy.go:558] (7) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:1080/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:1080/proxy/rewriteme">test<... (200; 20.481332ms)
  I1015 11:07:13.355607 22 proxy.go:558] (7) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:460/proxy/: tls baz (200; 24.658085ms)
  I1015 11:07:13.356495 22 proxy.go:558] (7) /api/v1/namespaces/proxy-7516/services/proxy-service-hmdcj:portname2/proxy/: bar (200; 25.820233ms)
  I1015 11:07:13.356597 22 proxy.go:558] (7) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48/proxy/rewriteme">test</a> (200; 25.881818ms)
  I1015 11:07:13.356659 22 proxy.go:558] (7) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:160/proxy/: foo (200; 25.72503ms)
  I1015 11:07:13.356858 22 proxy.go:558] (7) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:462/proxy/: tls qux (200; 26.022046ms)
  I1015 11:07:13.356628 22 proxy.go:558] (7) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:162/proxy/: bar (200; 25.818281ms)
  I1015 11:07:13.358782 22 proxy.go:558] (7) /api/v1/namespaces/proxy-7516/services/http:proxy-service-hmdcj:portname1/proxy/: foo (200; 27.649083ms)
  I1015 11:07:13.359990 22 proxy.go:558] (7) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:160/proxy/: foo (200; 28.898813ms)
  I1015 11:07:13.360001 22 proxy.go:558] (7) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:1080/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:1080/proxy/rewriteme">... (200; 28.999027ms)
  I1015 11:07:13.361665 22 proxy.go:558] (7) /api/v1/namespaces/proxy-7516/services/proxy-service-hmdcj:portname1/proxy/: foo (200; 30.987762ms)
  I1015 11:07:13.372209 22 proxy.go:558] (7) /api/v1/namespaces/proxy-7516/services/https:proxy-service-hmdcj:tlsportname2/proxy/: tls qux (200; 41.159209ms)
  I1015 11:07:13.374843 22 proxy.go:558] (7) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:162/proxy/: bar (200; 43.755207ms)
  I1015 11:07:13.377840 22 proxy.go:558] (7) /api/v1/namespaces/proxy-7516/services/https:proxy-service-hmdcj:tlsportname1/proxy/: tls baz (200; 46.79796ms)
  I1015 11:07:13.400202 22 proxy.go:558] (7) /api/v1/namespaces/proxy-7516/services/http:proxy-service-hmdcj:portname2/proxy/: bar (200; 69.197765ms)
  I1015 11:07:13.424009 22 proxy.go:558] (8) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:462/proxy/: tls qux (200; 23.50457ms)
  I1015 11:07:13.427088 22 proxy.go:558] (8) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:460/proxy/: tls baz (200; 25.503568ms)
  I1015 11:07:13.429183 22 proxy.go:558] (8) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:162/proxy/: bar (200; 27.806683ms)
  I1015 11:07:13.429201 22 proxy.go:558] (8) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:160/proxy/: foo (200; 27.409591ms)
  I1015 11:07:13.429799 22 proxy.go:558] (8) /api/v1/namespaces/proxy-7516/services/proxy-service-hmdcj:portname2/proxy/: bar (200; 29.274943ms)
  I1015 11:07:13.433437 22 proxy.go:558] (8) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48/proxy/rewriteme">test</a> (200; 32.37422ms)
  I1015 11:07:13.434908 22 proxy.go:558] (8) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:1080/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:1080/proxy/rewriteme">... (200; 32.897191ms)
  I1015 11:07:13.439590 22 proxy.go:558] (8) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:162/proxy/: bar (200; 37.403495ms)
  I1015 11:07:13.442643 22 proxy.go:558] (8) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:443/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:443/proxy/tlsrewritem... (200; 41.148601ms)
  I1015 11:07:13.465909 22 proxy.go:558] (8) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:160/proxy/: foo (200; 63.615009ms)
  I1015 11:07:13.466467 22 proxy.go:558] (8) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:1080/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:1080/proxy/rewriteme">test<... (200; 64.35154ms)
  I1015 11:07:13.466892 22 proxy.go:558] (8) /api/v1/namespaces/proxy-7516/services/http:proxy-service-hmdcj:portname2/proxy/: bar (200; 66.136587ms)
  I1015 11:07:13.466925 22 proxy.go:558] (8) /api/v1/namespaces/proxy-7516/services/http:proxy-service-hmdcj:portname1/proxy/: foo (200; 65.224187ms)
  I1015 11:07:13.474464 22 proxy.go:558] (8) /api/v1/namespaces/proxy-7516/services/proxy-service-hmdcj:portname1/proxy/: foo (200; 73.287132ms)
  I1015 11:07:13.474470 22 proxy.go:558] (8) /api/v1/namespaces/proxy-7516/services/https:proxy-service-hmdcj:tlsportname2/proxy/: tls qux (200; 72.560796ms)
  I1015 11:07:13.478207 22 proxy.go:558] (8) /api/v1/namespaces/proxy-7516/services/https:proxy-service-hmdcj:tlsportname1/proxy/: tls baz (200; 76.904324ms)
  I1015 11:07:13.497711 22 proxy.go:558] (9) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:443/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:443/proxy/tlsrewritem... (200; 18.703379ms)
  I1015 11:07:13.500707 22 proxy.go:558] (9) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:460/proxy/: tls baz (200; 22.158949ms)
  I1015 11:07:13.503667 22 proxy.go:558] (9) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48/proxy/rewriteme">test</a> (200; 24.755691ms)
  I1015 11:07:13.503935 22 proxy.go:558] (9) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:162/proxy/: bar (200; 24.975ms)
  I1015 11:07:13.504065 22 proxy.go:558] (9) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:462/proxy/: tls qux (200; 25.310633ms)
  I1015 11:07:13.504073 22 proxy.go:558] (9) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:1080/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:1080/proxy/rewriteme">... (200; 25.2629ms)
  I1015 11:07:13.504109 22 proxy.go:558] (9) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:160/proxy/: foo (200; 25.476084ms)
  I1015 11:07:13.504152 22 proxy.go:558] (9) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:1080/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:1080/proxy/rewriteme">test<... (200; 25.412297ms)
  I1015 11:07:13.504256 22 proxy.go:558] (9) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:160/proxy/: foo (200; 25.249152ms)
  I1015 11:07:13.505112 22 proxy.go:558] (9) /api/v1/namespaces/proxy-7516/services/proxy-service-hmdcj:portname2/proxy/: bar (200; 26.062729ms)
  I1015 11:07:13.507311 22 proxy.go:558] (9) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:162/proxy/: bar (200; 28.269681ms)
  I1015 11:07:13.509298 22 proxy.go:558] (9) /api/v1/namespaces/proxy-7516/services/proxy-service-hmdcj:portname1/proxy/: foo (200; 30.437687ms)
  I1015 11:07:13.517048 22 proxy.go:558] (9) /api/v1/namespaces/proxy-7516/services/http:proxy-service-hmdcj:portname1/proxy/: foo (200; 38.077205ms)
  I1015 11:07:13.517128 22 proxy.go:558] (9) /api/v1/namespaces/proxy-7516/services/https:proxy-service-hmdcj:tlsportname2/proxy/: tls qux (200; 38.60004ms)
  I1015 11:07:13.519461 22 proxy.go:558] (9) /api/v1/namespaces/proxy-7516/services/https:proxy-service-hmdcj:tlsportname1/proxy/: tls baz (200; 40.538236ms)
  I1015 11:07:13.521786 22 proxy.go:558] (9) /api/v1/namespaces/proxy-7516/services/http:proxy-service-hmdcj:portname2/proxy/: bar (200; 42.697239ms)
  I1015 11:07:13.539594 22 proxy.go:558] (10) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:160/proxy/: foo (200; 17.659468ms)
  I1015 11:07:13.539808 22 proxy.go:558] (10) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:162/proxy/: bar (200; 17.58026ms)
  I1015 11:07:13.545387 22 proxy.go:558] (10) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:1080/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:1080/proxy/rewriteme">... (200; 22.976586ms)
  I1015 11:07:13.553101 22 proxy.go:558] (10) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:443/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:443/proxy/tlsrewritem... (200; 31.188279ms)
  I1015 11:07:13.553218 22 proxy.go:558] (10) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:160/proxy/: foo (200; 30.483014ms)
  I1015 11:07:13.554704 22 proxy.go:558] (10) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48/proxy/rewriteme">test</a> (200; 32.540828ms)
  I1015 11:07:13.554821 22 proxy.go:558] (10) /api/v1/namespaces/proxy-7516/services/https:proxy-service-hmdcj:tlsportname2/proxy/: tls qux (200; 31.835306ms)
  I1015 11:07:13.555100 22 proxy.go:558] (10) /api/v1/namespaces/proxy-7516/services/http:proxy-service-hmdcj:portname2/proxy/: bar (200; 32.1712ms)
  I1015 11:07:13.555017 22 proxy.go:558] (10) /api/v1/namespaces/proxy-7516/services/proxy-service-hmdcj:portname1/proxy/: foo (200; 32.301369ms)
  I1015 11:07:13.557732 22 proxy.go:558] (10) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:460/proxy/: tls baz (200; 35.211307ms)
  I1015 11:07:13.558641 22 proxy.go:558] (10) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:462/proxy/: tls qux (200; 35.337918ms)
  I1015 11:07:13.559008 22 proxy.go:558] (10) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:1080/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:1080/proxy/rewriteme">test<... (200; 35.598967ms)
  I1015 11:07:13.559308 22 proxy.go:558] (10) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:162/proxy/: bar (200; 36.206232ms)
  I1015 11:07:13.564801 22 proxy.go:558] (10) /api/v1/namespaces/proxy-7516/services/https:proxy-service-hmdcj:tlsportname1/proxy/: tls baz (200; 41.978536ms)
  I1015 11:07:13.565816 22 proxy.go:558] (10) /api/v1/namespaces/proxy-7516/services/proxy-service-hmdcj:portname2/proxy/: bar (200; 42.766026ms)
  I1015 11:07:13.566145 22 proxy.go:558] (10) /api/v1/namespaces/proxy-7516/services/http:proxy-service-hmdcj:portname1/proxy/: foo (200; 42.846135ms)
  I1015 11:07:13.588597 22 proxy.go:558] (11) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:160/proxy/: foo (200; 22.319451ms)
  I1015 11:07:13.588673 22 proxy.go:558] (11) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:162/proxy/: bar (200; 20.99725ms)
  I1015 11:07:13.588851 22 proxy.go:558] (11) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:1080/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:1080/proxy/rewriteme">test<... (200; 22.137386ms)
  I1015 11:07:13.592070 22 proxy.go:558] (11) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:443/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:443/proxy/tlsrewritem... (200; 25.089884ms)
  I1015 11:07:13.592122 22 proxy.go:558] (11) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:460/proxy/: tls baz (200; 25.101945ms)
  I1015 11:07:13.592677 22 proxy.go:558] (11) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:1080/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:1080/proxy/rewriteme">... (200; 25.143918ms)
  I1015 11:07:13.593319 22 proxy.go:558] (11) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:462/proxy/: tls qux (200; 25.69094ms)
  I1015 11:07:13.593326 22 proxy.go:558] (11) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48/proxy/rewriteme">test</a> (200; 25.785888ms)
  I1015 11:07:13.594218 22 proxy.go:558] (11) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:162/proxy/: bar (200; 27.035361ms)
  I1015 11:07:13.594688 22 proxy.go:558] (11) /api/v1/namespaces/proxy-7516/services/https:proxy-service-hmdcj:tlsportname1/proxy/: tls baz (200; 27.041908ms)
  I1015 11:07:13.599218 22 proxy.go:558] (11) /api/v1/namespaces/proxy-7516/services/https:proxy-service-hmdcj:tlsportname2/proxy/: tls qux (200; 31.735501ms)
  I1015 11:07:13.599586 22 proxy.go:558] (11) /api/v1/namespaces/proxy-7516/services/proxy-service-hmdcj:portname1/proxy/: foo (200; 31.826445ms)
  I1015 11:07:13.599245 22 proxy.go:558] (11) /api/v1/namespaces/proxy-7516/services/http:proxy-service-hmdcj:portname2/proxy/: bar (200; 31.857148ms)
  I1015 11:07:13.599293 22 proxy.go:558] (11) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:160/proxy/: foo (200; 31.699741ms)
  I1015 11:07:13.605432 22 proxy.go:558] (11) /api/v1/namespaces/proxy-7516/services/proxy-service-hmdcj:portname2/proxy/: bar (200; 38.101688ms)
  I1015 11:07:13.606163 22 proxy.go:558] (11) /api/v1/namespaces/proxy-7516/services/http:proxy-service-hmdcj:portname1/proxy/: foo (200; 38.896749ms)
  I1015 11:07:13.621226 22 proxy.go:558] (12) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:162/proxy/: bar (200; 14.515221ms)
  I1015 11:07:13.623193 22 proxy.go:558] (12) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:462/proxy/: tls qux (200; 16.733193ms)
  I1015 11:07:13.626703 22 proxy.go:558] (12) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48/proxy/rewriteme">test</a> (200; 19.50626ms)
  I1015 11:07:13.627320 22 proxy.go:558] (12) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:160/proxy/: foo (200; 20.485991ms)
  I1015 11:07:13.628296 22 proxy.go:558] (12) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:162/proxy/: bar (200; 21.35569ms)
  I1015 11:07:13.628306 22 proxy.go:558] (12) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:1080/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:1080/proxy/rewriteme">test<... (200; 21.308388ms)
  I1015 11:07:13.629999 22 proxy.go:558] (12) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:460/proxy/: tls baz (200; 22.830156ms)
  I1015 11:07:13.630128 22 proxy.go:558] (12) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:1080/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:1080/proxy/rewriteme">... (200; 23.515085ms)
  I1015 11:07:13.630349 22 proxy.go:558] (12) /api/v1/namespaces/proxy-7516/services/http:proxy-service-hmdcj:portname2/proxy/: bar (200; 23.382904ms)
  I1015 11:07:13.631137 22 proxy.go:558] (12) /api/v1/namespaces/proxy-7516/services/proxy-service-hmdcj:portname1/proxy/: foo (200; 23.834044ms)
  I1015 11:07:13.631143 22 proxy.go:558] (12) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:443/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:443/proxy/tlsrewritem... (200; 23.994978ms)
  I1015 11:07:13.640222 22 proxy.go:558] (12) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:160/proxy/: foo (200; 33.17088ms)
  I1015 11:07:13.642906 22 proxy.go:558] (12) /api/v1/namespaces/proxy-7516/services/https:proxy-service-hmdcj:tlsportname2/proxy/: tls qux (200; 36.00053ms)
  I1015 11:07:13.644400 22 proxy.go:558] (12) /api/v1/namespaces/proxy-7516/services/proxy-service-hmdcj:portname2/proxy/: bar (200; 37.344322ms)
  I1015 11:07:13.646943 22 proxy.go:558] (12) /api/v1/namespaces/proxy-7516/services/https:proxy-service-hmdcj:tlsportname1/proxy/: tls baz (200; 39.837854ms)
  I1015 11:07:13.651482 22 proxy.go:558] (12) /api/v1/namespaces/proxy-7516/services/http:proxy-service-hmdcj:portname1/proxy/: foo (200; 44.462672ms)
  I1015 11:07:13.664769 22 proxy.go:558] (13) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:160/proxy/: foo (200; 12.471667ms)
  I1015 11:07:13.667758 22 proxy.go:558] (13) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:1080/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:1080/proxy/rewriteme">... (200; 15.355938ms)
  I1015 11:07:13.672041 22 proxy.go:558] (13) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:462/proxy/: tls qux (200; 20.199687ms)
  I1015 11:07:13.672066 22 proxy.go:558] (13) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:162/proxy/: bar (200; 20.254093ms)
  I1015 11:07:13.673772 22 proxy.go:558] (13) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:443/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:443/proxy/tlsrewritem... (200; 21.705308ms)
  I1015 11:07:13.673768 22 proxy.go:558] (13) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48/proxy/rewriteme">test</a> (200; 21.607208ms)
  I1015 11:07:13.673814 22 proxy.go:558] (13) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:460/proxy/: tls baz (200; 21.696869ms)
  I1015 11:07:13.674137 22 proxy.go:558] (13) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:160/proxy/: foo (200; 21.684669ms)
  I1015 11:07:13.673870 22 proxy.go:558] (13) /api/v1/namespaces/proxy-7516/services/http:proxy-service-hmdcj:portname1/proxy/: foo (200; 21.916474ms)
  I1015 11:07:13.678105 22 proxy.go:558] (13) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:1080/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:1080/proxy/rewriteme">test<... (200; 25.694633ms)
  I1015 11:07:13.679033 22 proxy.go:558] (13) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:162/proxy/: bar (200; 27.078801ms)
  I1015 11:07:13.680479 22 proxy.go:558] (13) /api/v1/namespaces/proxy-7516/services/proxy-service-hmdcj:portname2/proxy/: bar (200; 28.4141ms)
  I1015 11:07:13.685155 22 proxy.go:558] (13) /api/v1/namespaces/proxy-7516/services/proxy-service-hmdcj:portname1/proxy/: foo (200; 32.912501ms)
  I1015 11:07:13.693148 22 proxy.go:558] (13) /api/v1/namespaces/proxy-7516/services/https:proxy-service-hmdcj:tlsportname1/proxy/: tls baz (200; 41.365547ms)
  I1015 11:07:13.696045 22 proxy.go:558] (13) /api/v1/namespaces/proxy-7516/services/https:proxy-service-hmdcj:tlsportname2/proxy/: tls qux (200; 43.689369ms)
  I1015 11:07:13.699900 22 proxy.go:558] (13) /api/v1/namespaces/proxy-7516/services/http:proxy-service-hmdcj:portname2/proxy/: bar (200; 47.731319ms)
  I1015 11:07:13.730368 22 proxy.go:558] (14) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:160/proxy/: foo (200; 29.602626ms)
  I1015 11:07:13.732683 22 proxy.go:558] (14) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:160/proxy/: foo (200; 32.563302ms)
  I1015 11:07:13.740281 22 proxy.go:558] (14) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:162/proxy/: bar (200; 39.604655ms)
  I1015 11:07:13.741039 22 proxy.go:558] (14) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:1080/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:1080/proxy/rewriteme">... (200; 40.331305ms)
  I1015 11:07:13.741957 22 proxy.go:558] (14) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:462/proxy/: tls qux (200; 41.214541ms)
  I1015 11:07:13.743519 22 proxy.go:558] (14) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:162/proxy/: bar (200; 42.717851ms)
  I1015 11:07:13.743555 22 proxy.go:558] (14) /api/v1/namespaces/proxy-7516/services/http:proxy-service-hmdcj:portname1/proxy/: foo (200; 42.7016ms)
  I1015 11:07:13.743623 22 proxy.go:558] (14) /api/v1/namespaces/proxy-7516/services/proxy-service-hmdcj:portname1/proxy/: foo (200; 43.615412ms)
  I1015 11:07:13.744936 22 proxy.go:558] (14) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:443/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:443/proxy/tlsrewritem... (200; 44.484767ms)
  I1015 11:07:13.745008 22 proxy.go:558] (14) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:460/proxy/: tls baz (200; 44.062543ms)
  I1015 11:07:13.745648 22 proxy.go:558] (14) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:1080/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:1080/proxy/rewriteme">test<... (200; 44.766606ms)
  I1015 11:07:13.746193 22 proxy.go:558] (14) /api/v1/namespaces/proxy-7516/services/proxy-service-hmdcj:portname2/proxy/: bar (200; 45.795555ms)
  I1015 11:07:13.746227 22 proxy.go:558] (14) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48/proxy/rewriteme">test</a> (200; 45.322017ms)
  I1015 11:07:13.749431 22 proxy.go:558] (14) /api/v1/namespaces/proxy-7516/services/https:proxy-service-hmdcj:tlsportname2/proxy/: tls qux (200; 48.802153ms)
  I1015 11:07:13.750367 22 proxy.go:558] (14) /api/v1/namespaces/proxy-7516/services/https:proxy-service-hmdcj:tlsportname1/proxy/: tls baz (200; 49.910972ms)
  I1015 11:07:13.752198 22 proxy.go:558] (14) /api/v1/namespaces/proxy-7516/services/http:proxy-service-hmdcj:portname2/proxy/: bar (200; 51.702997ms)
  I1015 11:07:13.770846 22 proxy.go:558] (15) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:1080/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:1080/proxy/rewriteme">... (200; 18.146679ms)
  I1015 11:07:13.770926 22 proxy.go:558] (15) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:162/proxy/: bar (200; 18.00425ms)
  I1015 11:07:13.771086 22 proxy.go:558] (15) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:160/proxy/: foo (200; 18.285143ms)
  I1015 11:07:13.777154 22 proxy.go:558] (15) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:460/proxy/: tls baz (200; 23.850184ms)
  I1015 11:07:13.777804 22 proxy.go:558] (15) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:162/proxy/: bar (200; 24.656481ms)
  I1015 11:07:13.777736 22 proxy.go:558] (15) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:1080/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:1080/proxy/rewriteme">test<... (200; 24.699978ms)
  I1015 11:07:13.778842 22 proxy.go:558] (15) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:443/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:443/proxy/tlsrewritem... (200; 25.534801ms)
  I1015 11:07:13.782570 22 proxy.go:558] (15) /api/v1/namespaces/proxy-7516/services/proxy-service-hmdcj:portname2/proxy/: bar (200; 30.127306ms)
  I1015 11:07:13.794879 22 proxy.go:558] (15) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:160/proxy/: foo (200; 41.662089ms)
  I1015 11:07:13.795767 22 proxy.go:558] (15) /api/v1/namespaces/proxy-7516/services/https:proxy-service-hmdcj:tlsportname1/proxy/: tls baz (200; 42.66651ms)
  I1015 11:07:13.796400 22 proxy.go:558] (15) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48/proxy/rewriteme">test</a> (200; 43.140319ms)
  I1015 11:07:13.796920 22 proxy.go:558] (15) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:462/proxy/: tls qux (200; 44.060329ms)
  I1015 11:07:13.797161 22 proxy.go:558] (15) /api/v1/namespaces/proxy-7516/services/http:proxy-service-hmdcj:portname2/proxy/: bar (200; 44.103179ms)
  I1015 11:07:13.798004 22 proxy.go:558] (15) /api/v1/namespaces/proxy-7516/services/http:proxy-service-hmdcj:portname1/proxy/: foo (200; 44.996387ms)
  I1015 11:07:13.798099 22 proxy.go:558] (15) /api/v1/namespaces/proxy-7516/services/https:proxy-service-hmdcj:tlsportname2/proxy/: tls qux (200; 44.759788ms)
  I1015 11:07:13.798592 22 proxy.go:558] (15) /api/v1/namespaces/proxy-7516/services/proxy-service-hmdcj:portname1/proxy/: foo (200; 45.994913ms)
  I1015 11:07:13.810577 22 proxy.go:558] (16) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:462/proxy/: tls qux (200; 11.335804ms)
  I1015 11:07:13.811673 22 proxy.go:558] (16) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:1080/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:1080/proxy/rewriteme">... (200; 12.981994ms)
  I1015 11:07:13.818745 22 proxy.go:558] (16) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48/proxy/rewriteme">test</a> (200; 19.351568ms)
  I1015 11:07:13.822487 22 proxy.go:558] (16) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:160/proxy/: foo (200; 23.396179ms)
  I1015 11:07:13.823524 22 proxy.go:558] (16) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:460/proxy/: tls baz (200; 22.7674ms)
  I1015 11:07:13.824688 22 proxy.go:558] (16) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:443/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:443/proxy/tlsrewritem... (200; 24.184096ms)
  I1015 11:07:13.827292 22 proxy.go:558] (16) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:1080/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:1080/proxy/rewriteme">test<... (200; 28.358629ms)
  I1015 11:07:13.827299 22 proxy.go:558] (16) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:162/proxy/: bar (200; 27.059214ms)
  I1015 11:07:13.828166 22 proxy.go:558] (16) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:162/proxy/: bar (200; 26.844925ms)
  I1015 11:07:13.829340 22 proxy.go:558] (16) /api/v1/namespaces/proxy-7516/services/https:proxy-service-hmdcj:tlsportname1/proxy/: tls baz (200; 29.389021ms)
  I1015 11:07:13.829534 22 proxy.go:558] (16) /api/v1/namespaces/proxy-7516/services/https:proxy-service-hmdcj:tlsportname2/proxy/: tls qux (200; 27.355144ms)
  I1015 11:07:13.830900 22 proxy.go:558] (16) /api/v1/namespaces/proxy-7516/services/proxy-service-hmdcj:portname2/proxy/: bar (200; 29.270426ms)
  I1015 11:07:13.832496 22 proxy.go:558] (16) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:160/proxy/: foo (200; 31.443813ms)
  I1015 11:07:13.834683 22 proxy.go:558] (16) /api/v1/namespaces/proxy-7516/services/http:proxy-service-hmdcj:portname1/proxy/: foo (200; 33.19012ms)
  I1015 11:07:13.845216 22 proxy.go:558] (16) /api/v1/namespaces/proxy-7516/services/http:proxy-service-hmdcj:portname2/proxy/: bar (200; 43.280302ms)
  I1015 11:07:13.845797 22 proxy.go:558] (16) /api/v1/namespaces/proxy-7516/services/proxy-service-hmdcj:portname1/proxy/: foo (200; 46.025012ms)
  I1015 11:07:13.872864 22 proxy.go:558] (17) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:160/proxy/: foo (200; 26.374291ms)
  I1015 11:07:13.879311 22 proxy.go:558] (17) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:462/proxy/: tls qux (200; 32.603574ms)
  I1015 11:07:13.879533 22 proxy.go:558] (17) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:443/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:443/proxy/tlsrewritem... (200; 32.226982ms)
  I1015 11:07:13.884412 22 proxy.go:558] (17) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:1080/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:1080/proxy/rewriteme">... (200; 37.324646ms)
  I1015 11:07:13.885033 22 proxy.go:558] (17) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:162/proxy/: bar (200; 37.683174ms)
  I1015 11:07:13.885482 22 proxy.go:558] (17) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48/proxy/rewriteme">test</a> (200; 38.626373ms)
  I1015 11:07:13.886171 22 proxy.go:558] (17) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:1080/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:1080/proxy/rewriteme">test<... (200; 39.867977ms)
  I1015 11:07:13.887233 22 proxy.go:558] (17) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:160/proxy/: foo (200; 39.921884ms)
  I1015 11:07:13.889124 22 proxy.go:558] (17) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:162/proxy/: bar (200; 41.856946ms)
  I1015 11:07:13.893114 22 proxy.go:558] (17) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:460/proxy/: tls baz (200; 46.12321ms)
  I1015 11:07:13.894933 22 proxy.go:558] (17) /api/v1/namespaces/proxy-7516/services/proxy-service-hmdcj:portname1/proxy/: foo (200; 47.699444ms)
  I1015 11:07:13.911868 22 proxy.go:558] (17) /api/v1/namespaces/proxy-7516/services/https:proxy-service-hmdcj:tlsportname2/proxy/: tls qux (200; 65.810719ms)
  I1015 11:07:13.927915 22 proxy.go:558] (17) /api/v1/namespaces/proxy-7516/services/proxy-service-hmdcj:portname2/proxy/: bar (200; 80.542324ms)
  I1015 11:07:13.931146 22 proxy.go:558] (17) /api/v1/namespaces/proxy-7516/services/http:proxy-service-hmdcj:portname1/proxy/: foo (200; 83.949457ms)
  I1015 11:07:13.931154 22 proxy.go:558] (17) /api/v1/namespaces/proxy-7516/services/http:proxy-service-hmdcj:portname2/proxy/: bar (200; 83.784278ms)
  I1015 11:07:13.931288 22 proxy.go:558] (17) /api/v1/namespaces/proxy-7516/services/https:proxy-service-hmdcj:tlsportname1/proxy/: tls baz (200; 84.126225ms)
  I1015 11:07:13.948958 22 proxy.go:558] (18) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:443/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:443/proxy/tlsrewritem... (200; 16.809387ms)
  I1015 11:07:13.949886 22 proxy.go:558] (18) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:160/proxy/: foo (200; 17.98659ms)
  I1015 11:07:13.952528 22 proxy.go:558] (18) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:462/proxy/: tls qux (200; 20.910225ms)
  I1015 11:07:13.953376 22 proxy.go:558] (18) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:162/proxy/: bar (200; 21.151578ms)
  I1015 11:07:13.953489 22 proxy.go:558] (18) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:1080/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:1080/proxy/rewriteme">test<... (200; 21.452934ms)
  I1015 11:07:13.953543 22 proxy.go:558] (18) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:460/proxy/: tls baz (200; 21.376795ms)
  I1015 11:07:13.955647 22 proxy.go:558] (18) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48/proxy/rewriteme">test</a> (200; 23.577354ms)
  I1015 11:07:13.960050 22 proxy.go:558] (18) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:162/proxy/: bar (200; 28.184927ms)
  I1015 11:07:13.960253 22 proxy.go:558] (18) /api/v1/namespaces/proxy-7516/services/https:proxy-service-hmdcj:tlsportname1/proxy/: tls baz (200; 28.298346ms)
  I1015 11:07:13.960509 22 proxy.go:558] (18) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:1080/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:1080/proxy/rewriteme">... (200; 28.782268ms)
  I1015 11:07:13.965443 22 proxy.go:558] (18) /api/v1/namespaces/proxy-7516/services/https:proxy-service-hmdcj:tlsportname2/proxy/: tls qux (200; 33.137516ms)
  I1015 11:07:13.965461 22 proxy.go:558] (18) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:160/proxy/: foo (200; 33.360255ms)
  I1015 11:07:13.969227 22 proxy.go:558] (18) /api/v1/namespaces/proxy-7516/services/http:proxy-service-hmdcj:portname1/proxy/: foo (200; 36.881018ms)
  I1015 11:07:13.970043 22 proxy.go:558] (18) /api/v1/namespaces/proxy-7516/services/proxy-service-hmdcj:portname1/proxy/: foo (200; 38.195236ms)
  I1015 11:07:13.983550 22 proxy.go:558] (18) /api/v1/namespaces/proxy-7516/services/proxy-service-hmdcj:portname2/proxy/: bar (200; 51.650944ms)
  I1015 11:07:13.987971 22 proxy.go:558] (18) /api/v1/namespaces/proxy-7516/services/http:proxy-service-hmdcj:portname2/proxy/: bar (200; 56.037012ms)
  I1015 11:07:14.016707 22 proxy.go:558] (19) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:1080/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:1080/proxy/rewriteme">... (200; 17.672858ms)
  I1015 11:07:14.021213 22 proxy.go:558] (19) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48/proxy/rewriteme">test</a> (200; 21.916445ms)
  I1015 11:07:14.021548 22 proxy.go:558] (19) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:460/proxy/: tls baz (200; 25.139468ms)
  I1015 11:07:14.022690 22 proxy.go:558] (19) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:162/proxy/: bar (200; 23.477354ms)
  E1015 11:07:14.024210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:07:14.026987 22 proxy.go:558] (19) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:1080/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:1080/proxy/rewriteme">test<... (200; 27.590006ms)
  I1015 11:07:14.027178 22 proxy.go:558] (19) /api/v1/namespaces/proxy-7516/services/http:proxy-service-hmdcj:portname1/proxy/: foo (200; 35.474707ms)
  I1015 11:07:14.027897 22 proxy.go:558] (19) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:462/proxy/: tls qux (200; 28.657859ms)
  I1015 11:07:14.028020 22 proxy.go:558] (19) /api/v1/namespaces/proxy-7516/pods/proxy-service-hmdcj-z7m48:160/proxy/: foo (200; 28.667148ms)
  I1015 11:07:14.029611 22 proxy.go:558] (19) /api/v1/namespaces/proxy-7516/services/proxy-service-hmdcj:portname1/proxy/: foo (200; 30.434814ms)
  I1015 11:07:14.031150 22 proxy.go:558] (19) /api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:443/proxy/: <a href="/api/v1/namespaces/proxy-7516/pods/https:proxy-service-hmdcj-z7m48:443/proxy/tlsrewritem... (200; 31.830912ms)
  I1015 11:07:14.031680 22 proxy.go:558] (19) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:160/proxy/: foo (200; 32.121638ms)
  I1015 11:07:14.033124 22 proxy.go:558] (19) /api/v1/namespaces/proxy-7516/pods/http:proxy-service-hmdcj-z7m48:162/proxy/: bar (200; 33.777732ms)
  I1015 11:07:14.033575 22 proxy.go:558] (19) /api/v1/namespaces/proxy-7516/services/http:proxy-service-hmdcj:portname2/proxy/: bar (200; 34.509395ms)
  I1015 11:07:14.034431 22 proxy.go:558] (19) /api/v1/namespaces/proxy-7516/services/https:proxy-service-hmdcj:tlsportname1/proxy/: tls baz (200; 35.169805ms)
  I1015 11:07:14.036071 22 proxy.go:558] (19) /api/v1/namespaces/proxy-7516/services/proxy-service-hmdcj:portname2/proxy/: bar (200; 44.338225ms)
  I1015 11:07:14.040197 22 proxy.go:558] (19) /api/v1/namespaces/proxy-7516/services/https:proxy-service-hmdcj:tlsportname2/proxy/: tls qux (200; 41.061718ms)
  STEP: deleting ReplicationController proxy-service-hmdcj in namespace proxy-7516, will wait for the garbage collector to delete the pods @ 10/15/24 11:07:14.04
  I1015 11:07:14.117827 22 resources.go:139] Deleting ReplicationController proxy-service-hmdcj took: 18.572812ms
  I1015 11:07:14.218904 22 resources.go:163] Terminating ReplicationController proxy-service-hmdcj pods took: 101.066682ms
  E1015 11:07:15.025021      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:07:15.920585 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-7516" for this suite. @ 10/15/24 11:07:15.968
  E1015 11:07:16.027090      22 retrywatcher.go:129] "Watch failed" err="context canceled"
• [6.288 seconds]
------------------------------
SS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 10/15/24 11:07:16.029
  I1015 11:07:16.029231 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename security-context-test @ 10/15/24 11:07:16.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 11:07:16.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 11:07:16.173
  E1015 11:07:17.027342      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:07:18.028150      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:07:19.028378      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:07:20.028663      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:07:20.330794 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9435" for this suite. @ 10/15/24 11:07:20.35
• [4.342 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 10/15/24 11:07:20.373
  I1015 11:07:20.373310 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename emptydir @ 10/15/24 11:07:20.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 11:07:20.415
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 11:07:20.423
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 10/15/24 11:07:20.43
  E1015 11:07:21.028935      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:07:22.029666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:07:23.030746      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:07:24.030954      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 11:07:24.496
  I1015 11:07:24.518289 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-eab986b0-5099-4a7f-9560-5132f1f37db0 container test-container: <nil>
  STEP: delete the pod @ 10/15/24 11:07:24.551
  I1015 11:07:24.613534 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6924" for this suite. @ 10/15/24 11:07:24.627
• [4.276 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:142
  STEP: Creating a kubernetes client @ 10/15/24 11:07:24.649
  I1015 11:07:24.649389 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename crd-webhook @ 10/15/24 11:07:24.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 11:07:24.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 11:07:24.727
  STEP: Setting up server cert @ 10/15/24 11:07:24.739
  E1015 11:07:25.031640      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 10/15/24 11:07:25.303
  STEP: Deploying the custom resource conversion webhook pod @ 10/15/24 11:07:25.316
  STEP: Wait for the deployment to be ready @ 10/15/24 11:07:25.35
  I1015 11:07:25.416373 22 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E1015 11:07:26.032499      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:07:27.032997      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:07:27.445635 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 15, 11, 7, 25, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 11, 7, 25, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 15, 11, 7, 25, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 11, 7, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-6c44f5d846\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1015 11:07:28.033361      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:07:29.033621      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/15/24 11:07:29.47
  STEP: Verifying the service has paired with the endpoint @ 10/15/24 11:07:29.516
  E1015 11:07:30.033720      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:07:30.517544 22 util.go:427] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I1015 11:07:30.543631 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  E1015 11:07:31.034471      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:07:32.034943      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:07:33.035702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:07:34.036883      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:07:35.036701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:07:36.037221      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:07:37.037896      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:07:38.038687      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 10/15/24 11:07:38.261
  STEP: v2 custom resource should be converted @ 10/15/24 11:07:38.277
  I1015 11:07:38.981068 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-2203" for this suite. @ 10/15/24 11:07:38.991
• [14.379 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 10/15/24 11:07:39.036
  I1015 11:07:39.036134 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  E1015 11:07:39.039514      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Building a namespace api object, basename namespaces @ 10/15/24 11:07:39.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 11:07:39.088
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 11:07:39.097
  STEP: Creating a test namespace @ 10/15/24 11:07:39.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 11:07:39.15
  STEP: Creating a service in the namespace @ 10/15/24 11:07:39.17
  STEP: Deleting the namespace @ 10/15/24 11:07:39.2
  STEP: Waiting for the namespace to be removed. @ 10/15/24 11:07:39.228
  E1015 11:07:40.040403      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:07:41.040673      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:07:42.040960      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:07:43.041228      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:07:44.041388      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:07:45.041641      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:07:46.041786      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Recreating the namespace @ 10/15/24 11:07:46.235
  STEP: Verifying there is no service in the namespace @ 10/15/24 11:07:46.26
  I1015 11:07:46.270305 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3015" for this suite. @ 10/15/24 11:07:46.279
  STEP: Destroying namespace "nsdeletetest-4908" for this suite. @ 10/15/24 11:07:46.294
  I1015 11:07:46.300456 22 framework.go:370] Namespace nsdeletetest-4908 was already deleted
  STEP: Destroying namespace "nsdeletetest-6290" for this suite. @ 10/15/24 11:07:46.3
• [7.277 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3161
  STEP: Creating a kubernetes client @ 10/15/24 11:07:46.315
  I1015 11:07:46.316080 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename services @ 10/15/24 11:07:46.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 11:07:46.351
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 11:07:46.356
  STEP: creating an Endpoint @ 10/15/24 11:07:46.373
  STEP: waiting for available Endpoint @ 10/15/24 11:07:46.387
  STEP: listing all Endpoints @ 10/15/24 11:07:46.392
  STEP: updating the Endpoint @ 10/15/24 11:07:46.404
  STEP: fetching the Endpoint @ 10/15/24 11:07:46.462
  STEP: patching the Endpoint @ 10/15/24 11:07:46.473
  STEP: fetching the Endpoint @ 10/15/24 11:07:46.54
  STEP: deleting the Endpoint by Collection @ 10/15/24 11:07:46.551
  STEP: waiting for Endpoint deletion @ 10/15/24 11:07:46.575
  STEP: fetching the Endpoint @ 10/15/24 11:07:46.583
  I1015 11:07:46.594879 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2304" for this suite. @ 10/15/24 11:07:46.609
• [0.320 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 10/15/24 11:07:46.636
  I1015 11:07:46.636510 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename kubectl-logs @ 10/15/24 11:07:46.638
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 11:07:46.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 11:07:46.757
  STEP: creating an pod @ 10/15/24 11:07:46.762
  I1015 11:07:46.762857 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-logs-6531 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.47 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I1015 11:07:46.961964 22 builder.go:146] stderr: ""
  I1015 11:07:46.962043 22 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 10/15/24 11:07:46.962
  I1015 11:07:46.962503 22 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  E1015 11:07:47.041808      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:07:48.042801      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:07:49.001398 22 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 10/15/24 11:07:49.001
  I1015 11:07:49.001683 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-logs-6531 logs logs-generator logs-generator'
  E1015 11:07:49.043677      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:07:49.211118 22 builder.go:146] stderr: ""
  I1015 11:07:49.211213 22 builder.go:147] stdout: "I1015 11:07:48.353456       1 logs_generator.go:76] 0 POST /api/v1/namespaces/default/pods/5k4h 389\nI1015 11:07:48.552541       1 logs_generator.go:76] 1 GET /api/v1/namespaces/kube-system/pods/fbw5 576\nI1015 11:07:48.752965       1 logs_generator.go:76] 2 GET /api/v1/namespaces/kube-system/pods/dqcd 501\nI1015 11:07:48.952280       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/wq7n 454\nI1015 11:07:49.152735       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/ws5 516\n"
  STEP: limiting log lines @ 10/15/24 11:07:49.211
  I1015 11:07:49.211450 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-logs-6531 logs logs-generator logs-generator --tail=1'
  I1015 11:07:49.417721 22 builder.go:146] stderr: ""
  I1015 11:07:49.417821 22 builder.go:147] stdout: "I1015 11:07:49.353259       1 logs_generator.go:76] 5 GET /api/v1/namespaces/kube-system/pods/ccb 350\n"
  I1015 11:07:49.417851 22 logs.go:127] got output "I1015 11:07:49.353259       1 logs_generator.go:76] 5 GET /api/v1/namespaces/kube-system/pods/ccb 350\n"
  STEP: limiting log bytes @ 10/15/24 11:07:49.417
  I1015 11:07:49.417995 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-logs-6531 logs logs-generator logs-generator --limit-bytes=1'
  I1015 11:07:49.644119 22 builder.go:146] stderr: ""
  I1015 11:07:49.644250 22 builder.go:147] stdout: "I"
  I1015 11:07:49.644360 22 logs.go:133] got output "I"
  STEP: exposing timestamps @ 10/15/24 11:07:49.644
  I1015 11:07:49.644539 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-logs-6531 logs logs-generator logs-generator --tail=1 --timestamps'
  I1015 11:07:49.867076 22 builder.go:146] stderr: ""
  I1015 11:07:49.867163 22 builder.go:147] stdout: "2024-10-15T11:07:49.752786109Z I1015 11:07:49.752456       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/hwjs 530\n"
  I1015 11:07:49.867194 22 logs.go:139] got output "2024-10-15T11:07:49.752786109Z I1015 11:07:49.752456       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/hwjs 530\n"
  STEP: restricting to a time range @ 10/15/24 11:07:49.867
  E1015 11:07:50.046376      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:07:51.046865      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:07:52.047137      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:07:52.367772 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-logs-6531 logs logs-generator logs-generator --since=1s'
  I1015 11:07:52.512698 22 builder.go:146] stderr: ""
  I1015 11:07:52.512856 22 builder.go:147] stdout: "I1015 11:07:51.552790       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/ns/pods/p2l 424\nI1015 11:07:51.753282       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/default/pods/ngp2 520\nI1015 11:07:51.952787       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/default/pods/qv5h 415\nI1015 11:07:52.153125       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/default/pods/blx4 496\nI1015 11:07:52.352765       1 logs_generator.go:76] 20 GET /api/v1/namespaces/kube-system/pods/95sn 265\n"
  I1015 11:07:52.513275 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-logs-6531 logs logs-generator logs-generator --since=24h'
  I1015 11:07:52.688862 22 builder.go:146] stderr: ""
  I1015 11:07:52.689023 22 builder.go:147] stdout: "I1015 11:07:48.353456       1 logs_generator.go:76] 0 POST /api/v1/namespaces/default/pods/5k4h 389\nI1015 11:07:48.552541       1 logs_generator.go:76] 1 GET /api/v1/namespaces/kube-system/pods/fbw5 576\nI1015 11:07:48.752965       1 logs_generator.go:76] 2 GET /api/v1/namespaces/kube-system/pods/dqcd 501\nI1015 11:07:48.952280       1 logs_generator.go:76] 3 GET /api/v1/namespaces/kube-system/pods/wq7n 454\nI1015 11:07:49.152735       1 logs_generator.go:76] 4 GET /api/v1/namespaces/default/pods/ws5 516\nI1015 11:07:49.353259       1 logs_generator.go:76] 5 GET /api/v1/namespaces/kube-system/pods/ccb 350\nI1015 11:07:49.552836       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/ns/pods/cs7 243\nI1015 11:07:49.752456       1 logs_generator.go:76] 7 PUT /api/v1/namespaces/ns/pods/hwjs 530\nI1015 11:07:49.952616       1 logs_generator.go:76] 8 POST /api/v1/namespaces/kube-system/pods/h6w8 583\nI1015 11:07:50.152161       1 logs_generator.go:76] 9 PUT /api/v1/namespaces/default/pods/gd7 403\nI1015 11:07:50.353216       1 logs_generator.go:76] 10 POST /api/v1/namespaces/ns/pods/wtsh 370\nI1015 11:07:50.552647       1 logs_generator.go:76] 11 GET /api/v1/namespaces/ns/pods/d46 402\nI1015 11:07:50.753096       1 logs_generator.go:76] 12 POST /api/v1/namespaces/kube-system/pods/b4z 541\nI1015 11:07:50.952528       1 logs_generator.go:76] 13 POST /api/v1/namespaces/kube-system/pods/dpf 390\nI1015 11:07:51.153250       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/ns/pods/bbn 491\nI1015 11:07:51.352824       1 logs_generator.go:76] 15 GET /api/v1/namespaces/ns/pods/b4p 246\nI1015 11:07:51.552790       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/ns/pods/p2l 424\nI1015 11:07:51.753282       1 logs_generator.go:76] 17 PUT /api/v1/namespaces/default/pods/ngp2 520\nI1015 11:07:51.952787       1 logs_generator.go:76] 18 PUT /api/v1/namespaces/default/pods/qv5h 415\nI1015 11:07:52.153125       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/default/pods/blx4 496\nI1015 11:07:52.352765       1 logs_generator.go:76] 20 GET /api/v1/namespaces/kube-system/pods/95sn 265\nI1015 11:07:52.553146       1 logs_generator.go:76] 21 GET /api/v1/namespaces/kube-system/pods/vx8n 257\n"
  I1015 11:07:52.689254 22 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2137507689 --namespace=kubectl-logs-6531 delete pod logs-generator'
  E1015 11:07:53.047389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:07:53.717865 22 builder.go:146] stderr: ""
  I1015 11:07:53.717933 22 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I1015 11:07:53.718094 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-6531" for this suite. @ 10/15/24 11:07:53.732
• [7.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 10/15/24 11:07:53.756
  I1015 11:07:53.756048 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename apf @ 10/15/24 11:07:53.758
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 11:07:53.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 11:07:53.822
  STEP: getting /apis @ 10/15/24 11:07:53.829
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 10/15/24 11:07:53.845
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 10/15/24 11:07:53.849
  STEP: creating @ 10/15/24 11:07:53.853
  STEP: getting @ 10/15/24 11:07:53.903
  STEP: listing @ 10/15/24 11:07:53.917
  STEP: watching @ 10/15/24 11:07:53.93
  I1015 11:07:53.930666 22 flowcontrol.go:620] starting watch
  STEP: patching @ 10/15/24 11:07:53.938
  STEP: updating @ 10/15/24 11:07:53.949
  I1015 11:07:53.987051 22 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 10/15/24 11:07:53.987
  STEP: patching /status @ 10/15/24 11:07:53.998
  STEP: updating /status @ 10/15/24 11:07:54.024
  STEP: deleting @ 10/15/24 11:07:54.044
  E1015 11:07:54.048323      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting a collection @ 10/15/24 11:07:54.085
  I1015 11:07:54.130290 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-5732" for this suite. @ 10/15/24 11:07:54.145
• [0.419 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 10/15/24 11:07:54.185
  I1015 11:07:54.185191 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename downward-api @ 10/15/24 11:07:54.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 11:07:54.221
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 11:07:54.24
  STEP: Creating a pod to test downward API volume plugin @ 10/15/24 11:07:54.248
  E1015 11:07:55.048604      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:07:56.049420      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:07:57.049666      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:07:58.050833      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 11:07:58.306
  I1015 11:07:58.314120 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod downwardapi-volume-872069a1-6195-4903-ab7a-7351bcbccdf3 container client-container: <nil>
  STEP: delete the pod @ 10/15/24 11:07:58.329
  I1015 11:07:58.368359 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9863" for this suite. @ 10/15/24 11:07:58.378
• [4.209 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 10/15/24 11:07:58.393
  I1015 11:07:58.393228 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename projected @ 10/15/24 11:07:58.395
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 11:07:58.433
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 11:07:58.444
  STEP: Creating configMap with name projected-configmap-test-volume-e7a83fb2-acec-4166-a80a-0218a749b888 @ 10/15/24 11:07:58.454
  STEP: Creating a pod to test consume configMaps @ 10/15/24 11:07:58.464
  E1015 11:07:59.051056      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:00.051196      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:01.052318      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:02.052634      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 10/15/24 11:08:02.514
  I1015 11:08:02.521523 22 output.go:196] Trying to get logs from node env1-test-worker-0 pod pod-projected-configmaps-41f53771-4c6c-46b9-aed7-579c9b421633 container agnhost-container: <nil>
  STEP: delete the pod @ 10/15/24 11:08:02.536
  I1015 11:08:02.562203 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8445" for this suite. @ 10/15/24 11:08:02.573
• [4.199 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 10/15/24 11:08:02.593
  I1015 11:08:02.594148 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename svcaccounts @ 10/15/24 11:08:02.595
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 11:08:02.626
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 11:08:02.633
  STEP: Creating ServiceAccount "e2e-sa-xfjrh"  @ 10/15/24 11:08:02.639
  I1015 11:08:02.649991 22 service_accounts.go:825] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-xfjrh"  @ 10/15/24 11:08:02.65
  I1015 11:08:02.686504 22 service_accounts.go:839] AutomountServiceAccountToken: true
  I1015 11:08:02.687048 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5340" for this suite. @ 10/15/24 11:08:02.702
• [0.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 10/15/24 11:08:02.731
  I1015 11:08:02.731182 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 10/15/24 11:08:02.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 11:08:02.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 11:08:02.782
  STEP: creating a target pod @ 10/15/24 11:08:02.785
  E1015 11:08:03.053172      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:04.054178      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 10/15/24 11:08:04.838
  E1015 11:08:05.054649      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:06.055237      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:07.055940      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:08.056533      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 10/15/24 11:08:08.928
  I1015 11:08:08.928423 22 exec_util.go:55] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-5886 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1015 11:08:08.928457 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  I1015 11:08:08.929481 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I1015 11:08:08.929583 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-5886/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  E1015 11:08:09.057632      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:08:09.095831 22 exec_util.go:106] Exec stderr: ""
  I1015 11:08:09.112998 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-5886" for this suite. @ 10/15/24 11:08:09.129
• [6.424 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 10/15/24 11:08:09.156
  I1015 11:08:09.156147 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename webhook @ 10/15/24 11:08:09.159
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 11:08:09.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 11:08:09.232
  STEP: Setting up server cert @ 10/15/24 11:08:09.318
  E1015 11:08:10.057505      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/15/24 11:08:10.505
  STEP: Deploying the webhook pod @ 10/15/24 11:08:10.537
  STEP: Wait for the deployment to be ready @ 10/15/24 11:08:10.587
  I1015 11:08:10.633345 22 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1015 11:08:11.058988      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:12.059818      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:08:12.660582 22 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.October, 15, 11, 8, 10, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 11, 8, 10, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.October, 15, 11, 8, 10, 0, time.Local), LastTransitionTime:time.Date(2024, time.October, 15, 11, 8, 10, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E1015 11:08:13.060142      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:14.060280      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/15/24 11:08:14.693
  STEP: Verifying the service has paired with the endpoint @ 10/15/24 11:08:14.739
  E1015 11:08:15.061145      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:08:15.739861 22 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1015 11:08:15.760399 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  E1015 11:08:16.062014      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:17.062624      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:18.063587      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:19.064745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:20.065702      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:21.066415      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-450-crds.webhook.example.com via the AdmissionRegistration API @ 10/15/24 11:08:21.296
  STEP: Creating a custom resource that should be mutated by the webhook @ 10/15/24 11:08:21.371
  E1015 11:08:22.066674      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:23.067006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:24.066995      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:08:24.366792 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1042" for this suite. @ 10/15/24 11:08:24.378
  STEP: Destroying namespace "webhook-markers-8844" for this suite. @ 10/15/24 11:08:24.405
• [15.282 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 10/15/24 11:08:24.438
  I1015 11:08:24.438296 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename crd-publish-openapi @ 10/15/24 11:08:24.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 11:08:24.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 11:08:24.498
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 10/15/24 11:08:24.503
  I1015 11:08:24.504882 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  E1015 11:08:25.068281      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:26.068325      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:27.069192      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:28.069566      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:29.069777      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:30.070046      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:31.070918      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:32.071787      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:33.071739      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:08:33.850217 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  E1015 11:08:34.072710      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:35.073389      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:36.074251      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:37.074238      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:38.075502      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:39.076358      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:40.077404      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:41.077855      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:42.079053      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:43.079146      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:44.079745      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:45.080701      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:46.081446      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:47.083006      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:48.083210      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:49.084038      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:50.085171      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:51.085718      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:52.086532      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:53.087349      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:54.088489      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:55.088517      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:08:55.153658 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1302" for this suite. @ 10/15/24 11:08:55.18
• [30.764 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 10/15/24 11:08:55.203
  I1015 11:08:55.203086 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 10/15/24 11:08:55.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 11:08:55.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 11:08:55.254
  STEP: creating a target pod @ 10/15/24 11:08:55.262
  E1015 11:08:56.089017      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:57.089399      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 10/15/24 11:08:57.315
  E1015 11:08:58.090162      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:08:59.090333      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:09:00.091125      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:09:01.091368      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 10/15/24 11:09:01.354
  I1015 11:09:01.355091 22 exec_util.go:55] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-7013 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1015 11:09:01.355126 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  I1015 11:09:01.356425 22 exec_util.go:62] ExecWithOptions: Clientset creation
  I1015 11:09:01.356743 22 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-7013/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I1015 11:09:01.507099 22 exec_util.go:106] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 10/15/24 11:09:01.523
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 10/15/24 11:09:01.531
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 10/15/24 11:09:01.552
  I1015 11:09:01.588454 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-7013" for this suite. @ 10/15/24 11:09:01.6
• [6.413 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 10/15/24 11:09:01.617
  I1015 11:09:01.617601 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename webhook @ 10/15/24 11:09:01.619
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 11:09:01.707
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 11:09:01.715
  STEP: Setting up server cert @ 10/15/24 11:09:01.78
  E1015 11:09:02.091767      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:09:03.092022      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 10/15/24 11:09:03.463
  STEP: Deploying the webhook pod @ 10/15/24 11:09:03.481
  STEP: Wait for the deployment to be ready @ 10/15/24 11:09:03.507
  I1015 11:09:03.562409 22 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1015 11:09:04.092262      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:09:05.092470      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 10/15/24 11:09:05.586
  STEP: Verifying the service has paired with the endpoint @ 10/15/24 11:09:05.606
  E1015 11:09:06.092637      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:09:06.606802 22 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1015 11:09:06.622933 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  E1015 11:09:07.092684      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:09:08.093286      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:09:09.093763      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:09:10.094730      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:09:11.095133      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:09:12.095835      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-8496-crds.webhook.example.com via the AdmissionRegistration API @ 10/15/24 11:09:12.151
  STEP: Creating a custom resource that should be mutated by the webhook @ 10/15/24 11:09:12.197
  E1015 11:09:13.096700      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:09:14.097472      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:09:14.975801 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2314" for this suite. @ 10/15/24 11:09:14.994
  STEP: Destroying namespace "webhook-markers-1483" for this suite. @ 10/15/24 11:09:15.029
• [13.430 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 10/15/24 11:09:15.049
  I1015 11:09:15.049438 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename replicaset @ 10/15/24 11:09:15.051
  E1015 11:09:15.097985      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 11:09:15.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 11:09:15.113
  STEP: Create a Replicaset @ 10/15/24 11:09:15.139
  STEP: Verify that the required pods have come up. @ 10/15/24 11:09:15.149
  I1015 11:09:15.155954 22 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E1015 11:09:16.099335      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:09:17.099920      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:09:18.100905      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:09:19.101164      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1015 11:09:20.102264      22 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1015 11:09:20.171998 22 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 10/15/24 11:09:20.172
  STEP: Getting /status @ 10/15/24 11:09:20.173
  I1015 11:09:20.186459 22 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 10/15/24 11:09:20.186
  I1015 11:09:20.226080 22 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 10/15/24 11:09:20.226
  I1015 11:09:20.231663 22 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I1015 11:09:20.232388 22 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I1015 11:09:20.233056 22 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I1015 11:09:20.233709 22 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I1015 11:09:20.233971 22 replica_set.go:682] Found replicaset test-rs in namespace replicaset-9037 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1015 11:09:20.234031 22 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 10/15/24 11:09:20.234
  I1015 11:09:20.234275 22 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1015 11:09:20.256736 22 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 10/15/24 11:09:20.257
  I1015 11:09:20.263028 22 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I1015 11:09:20.264044 22 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1015 11:09:20.264491 22 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1015 11:09:20.265327 22 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1015 11:09:20.265473 22 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-9037 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1015 11:09:20.266317 22 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1015 11:09:20.266422 22 replica_set.go:718] Found replicaset test-rs in namespace replicaset-9037 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I1015 11:09:20.266453 22 replica_set.go:729] Replicaset test-rs has a patched status
  I1015 11:09:20.266767 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9037" for this suite. @ 10/15/24 11:09:20.287
• [5.265 seconds]
------------------------------
S
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 10/15/24 11:09:20.314
  I1015 11:09:20.315541 22 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2137507689
  STEP: Building a namespace api object, basename configmap @ 10/15/24 11:09:20.318
  STEP: Waiting for a default service account to be provisioned in namespace @ 10/15/24 11:09:20.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 10/15/24 11:09:20.392
  STEP: creating a ConfigMap @ 10/15/24 11:09:20.403
  STEP: fetching the ConfigMap @ 10/15/24 11:09:20.428
  STEP: patching the ConfigMap @ 10/15/24 11:09:20.441
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 10/15/24 11:09:20.458
  STEP: deleting the ConfigMap by collection with a label selector @ 10/15/24 11:09:20.474
  STEP: listing all ConfigMaps in test namespace @ 10/15/24 11:09:20.496
  I1015 11:09:20.502907 22 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5473" for this suite. @ 10/15/24 11:09:20.517
• [0.214 seconds]
------------------------------
S
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I1015 11:09:20.534359 22 suites.go:34] Running AfterSuite actions on node 1
  I1015 11:09:20.534811 22 util.go:614] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.002 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:161
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:612
[ReportAfterSuite] PASSED [0.146 seconds]
------------------------------

Ran 402 of 7199 Specs in 7012.019 seconds
SUCCESS! -- 402 Passed | 0 Failed | 0 Pending | 6797 Skipped
PASS

Ginkgo ran 1 suite in 1h56m54.637618538s
Test Suite Passed
